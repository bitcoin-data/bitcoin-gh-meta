{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "This PR fixes https://github.com/bitcoin/bitcoin/issues/18483. On the master branch, there is currently _always_ a BIP37 filter set for every peer: if not a specific filter is set through a `filterload` message, a default match-everything filter is instanciated and pointed to via the `CBloomFilter` default constructor; that happens both initially, when the containing structure `TxRelay` is constructed: \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/c0b389b33516fb3eaaad7c30bd11dba768882a7e/src/net.h#L812\r\n\r\nand after a loaded filter is removed again through a `filterclear` message:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/c0b389b33516fb3eaaad7c30bd11dba768882a7e/src/net_processing.cpp#L3201\r\n\r\nThe behaviour was introduced by commit https://github.com/bitcoin/bitcoin/commit/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07 (an intentional covert fix for [CVE-2013-5700](https://github.com/bitcoin/bitcoin/pull/18515), according to gmaxwell).\r\n\r\nThis default match-everything filter leads to some unintended side-effects:\r\n1. `getdata` request for filtered blocks (i.e. type `MSG_FILTERED_BLOCK`) are always responded to with `merkleblock`s, even if no filter was set by the peer, see issue #18483 (strictly speaking, this is a violation of BIP37) https://github.com/bitcoin/bitcoin/blob/c0b389b33516fb3eaaad7c30bd11dba768882a7e/src/net_processing.cpp#L1504-L1507\r\n2. if a peer sends a `filteradd` message without having loaded a filter via `filterload` before, the intended increasing of the banscore never happens (triggered if `bad` is set to true, a few lines below) https://github.com/bitcoin/bitcoin/blob/c0b389b33516fb3eaaad7c30bd11dba768882a7e/src/net_processing.cpp#L3182-L3186\r\n\r\nThis PR basically activates the `else`-branch code paths for all checks of `pfilter` again (on the master branch, they are dead code) by limiting the pointer's lifespan: instead of always having a filter set, the `pfilter` is only pointing to a `CBloomFilter`-instance after receiving a `filterload` message and the instance is destroyed again (and the pointer nullified) after receiving a `filterclear` message.\r\n\r\nHere is a before/after comparison in behaviour:\r\n| code part / scenario                          |    master branch                   |   PR branch                                          |\r\n| --------------------------------------------- | ---------------------------------- | ---------------------------------------------------- |\r\n| `getdata` processing for `MSG_FILTERED_BLOCK` | always responds with `merkleblock` | only responds if filter was set via `filterload`     |\r\n| `filteradd` processing, no filter was loaded  | nothing                            | peer's banscore increases by 100 (i.e. disconnect)   |\r\n\r\nOn the other code parts where `pfilter` is checked there is no change in the logic behaviour (except that `CBloomFilter::IsRelevantAndUpdate()` is unnecessarily called and immediately returned in the master branch).\r\nNote that the default constructor of `CBloomFilter` is only used for deserializing the received `filterload` message and nowhere else. The PR also contains a functional test checking that sending `getdata` for filtered blocks is ignored by the node if no bloom filter is set. \r\n",
   "closed_at" : "2020-04-20T11:02:32Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18544/comments",
   "created_at" : "2020-04-06T17:58:57Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18544/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18544",
   "id" : 595313654,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18544/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : null,
      "closed_issues" : 10,
      "created_at" : "2019-12-09T08:39:58Z",
      "creator" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      },
      "description" : "",
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/45",
      "id" : 4914019,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
      "node_id" : "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
      "number" : 45,
      "open_issues" : 19,
      "state" : "open",
      "title" : "0.21.0",
      "updated_at" : "2020-04-20T11:02:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/45"
   },
   "node_id" : "MDExOlB1bGxSZXF1ZXN0Mzk5ODEwNDgw",
   "number" : 18544,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18544.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18544",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18544.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18544"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "net: limit BIP37 filter lifespan (active between 'filterload'..'filterclear')",
   "updated_at" : "2020-04-20T11:02:32Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18544",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
      "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
      "followers_url" : "https://api.github.com/users/theStack/followers",
      "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/theStack",
      "id" : 91535,
      "login" : "theStack",
      "node_id" : "MDQ6VXNlcjkxNTM1",
      "organizations_url" : "https://api.github.com/users/theStack/orgs",
      "received_events_url" : "https://api.github.com/users/theStack/received_events",
      "repos_url" : "https://api.github.com/users/theStack/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/theStack"
   }
}
