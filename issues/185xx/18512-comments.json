[
   {
      "author_association" : "MEMBER",
      "body" : "cc @naumenkogs.",
      "created_at" : "2020-04-03T02:23:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-608193711",
      "id" : 608193711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODE5MzcxMQ==",
      "updated_at" : "2020-04-03T02:23:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608193711",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~~@practicalswift There may be opportunity to fuzz here: if SanityCheckASMap succeeds, then no input to Interpret should return 0.~~\r\n\r\nEDIT: Oh no, 0 can mean no match or error; it's still possible to reach no match.",
      "created_at" : "2020-04-03T03:27:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-608209420",
      "id" : 608209420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODIwOTQyMA==",
      "updated_at" : "2020-04-03T04:24:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608209420",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18573 ([RFC] bitcoin-asmap utility by sipa)\n* #18216 (test, build: Enable -Werror=sign-compare by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-04-03T08:48:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-608314551",
      "id" : 608314551,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODMxNDU1MQ==",
      "updated_at" : "2020-04-10T08:33:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608314551",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would be nice to have the new code covered by some tests. Maybe the fuzzers?\r\n\r\n\r\n```diff\r\ndiff --git a/src/test/fuzz/asmap.cpp b/src/test/fuzz/asmap.cpp\r\nindex 7f3eef79a1..1ab5459b12 100644\r\n--- a/src/test/fuzz/asmap.cpp\r\n+++ b/src/test/fuzz/asmap.cpp\r\n@@ -25,4 +25,5 @@ void test_one_input(const std::vector<uint8_t>& buffer)\r\n         }\r\n     }\r\n     (void)net_addr.GetMappedAS(asmap);\r\n+    (void)SanityCheckASMap(asmap);\r\n }\r\n",
      "created_at" : "2020-04-03T13:30:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-608434486",
      "id" : 608434486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODQzNDQ4Ng==",
      "updated_at" : "2020-04-03T13:30:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608434486",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK 47192230486e9305abb7c1ce882a515cdfb0a8b5\r\nTested: did some bit-flipping and saw that sanity check does not pass anymore.\r\n\r\nThank you for working on this.",
      "created_at" : "2020-04-03T14:52:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-608482116",
      "id" : 608482116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODQ4MjExNg==",
      "updated_at" : "2020-04-03T14:52:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608482116",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A few changes:\r\n* I've split out the changes into more commits\r\n* Made it an error to reach EOF without a RETURN instruction\r\n* Made the sanity checker slightly more tolerant (it now supports multiple jumps to the same location, a potential optimization that buildmap.py doesn't currently use).\r\n* Added a commit that makes failures in the Interpreter assertion failures, and adds a fuzz tester that verifies this does not happen with asmaps that pass SanityCheckASMap.\r\n\r\nI've verified that the fuzzer actually finds asmaps that pass the sanity check, and the Interpreter is run on it (by adding an early assertion failure in Interpreter). I'll try to share my corpus.",
      "created_at" : "2020-04-03T20:40:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-608648071",
      "id" : 608648071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODY0ODA3MQ==",
      "updated_at" : "2020-04-03T20:40:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608648071",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Using gcc 9.2.1, AFL 2.5.2, got this at compilation for fuzzing:\r\n```\r\nlibbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): In function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::~UniqueLock()':\r\n/home/gleb/bitcoin/src/./sync.h:169: undefined reference to `LeaveCritical()'\r\nlibbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): In function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::TryEnter(char const*, char const*, int)':\r\n/home/gleb/bitcoin/src/./sync.h:139: undefined reference to `EnterCritical(char const*, char const*, int, void*, bool)'\r\n/home/gleb/bitcoin/src/./sync.h:142: undefined reference to `LeaveCritical()'\r\nlibbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): In function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::Enter(char const*, char const*, int)':\r\n/home/gleb/bitcoin/src/./sync.h:126: undefined reference to `EnterCritical(char const*, char const*, int, void*, bool)'\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:7281: recipe for target 'test/fuzz/addrman_deserialize' failed\r\nmake[2]: *** [test/fuzz/addrman_deserialize] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nlibbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): In function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::~UniqueLock()':\r\n/home/gleb/bitcoin/src/./sync.h:169: undefined reference to `LeaveCritical()'\r\nlibbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): In function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::TryEnter(char const*, char const*, int)':\r\n/home/gleb/bitcoin/src/./sync.h:139: undefined reference to `EnterCritical(char const*, char const*, int, void*, bool)'\r\n/home/gleb/bitcoin/src/./sync.h:142: undefined reference to `LeaveCritical()'\r\nlibbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): In function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::Enter(char const*, char const*, int)':\r\n/home/gleb/bitcoin/src/./sync.h:126: undefined reference to `EnterCritical(char const*, char const*, int, void*, bool)'\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:7329: recipe for target 'test/fuzz/block' failed\r\nmake[2]: *** [test/fuzz/block] Error 1\r\nlibbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): In function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::~UniqueLock()':\r\n/home/gleb/bitcoin/src/./sync.h:169: undefined reference to `LeaveCritical()'\r\nlibbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): In function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::TryEnter(char const*, char const*, int)':\r\n/home/gleb/bitcoin/src/./sync.h:139: undefined reference to `EnterCritical(char const*, char const*, int, void*, bool)'\r\n/home/gleb/bitcoin/src/./sync.h:142: undefined reference to `LeaveCritical()'\r\nlibbitcoin_util.a(libbitcoin_util_a-threadinterrupt.o): In function `UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::Enter(char const*, char const*, int)':\r\n/home/gleb/bitcoin/src/./sync.h:126: undefined reference to `EnterCritical(char const*, char const*, int, void*, bool)'\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:7369: recipe for target 'test/fuzz/block_header_and_short_txids_deserialize' failed\r\nmake[2]: *** [test/fuzz/block_header_and_short_txids_deserialize] Error 1\r\nmake[2]: Leaving directory '/home/gleb/bitcoin/src'\r\nMakefile:18893: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/gleb/bitcoin/src'\r\nMakefile:783: recipe for target 'all-recursive' failed\r\nmake: *** [all-recursive] Error 1\r\n```\r\n\r\ncc: @practicalswift ",
      "created_at" : "2020-04-04T13:16:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-609026916",
      "id" : 609026916,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwOTAyNjkxNg==",
      "updated_at" : "2020-04-04T13:16:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609026916",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs have you run `make distclean`?",
      "created_at" : "2020-04-04T13:24:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-609027949",
      "id" : 609027949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwOTAyNzk0OQ==",
      "updated_at" : "2020-04-04T13:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609027949",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThanks a lot for adding a fuzzing harness!",
      "created_at" : "2020-04-04T13:47:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-609031214",
      "id" : 609031214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwOTAzMTIxNA==",
      "updated_at" : "2020-04-04T13:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609031214",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke\r\nThis helped.\r\n\r\n@sipa \r\nWith the latest code, the map I generated with ``truncate -s 1M wrong_asmap`` seems to be valid. I don't think that's correct behavior?",
      "created_at" : "2020-04-04T13:50:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-609031585",
      "id" : 609031585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwOTAzMTU4NQ==",
      "updated_at" : "2020-04-04T13:50:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609031585",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs Nice catch. `DecodeBits` wasn't returning failure when EOF occurred in the mantissa bits. Should be fixed now. I believe it should be impossible to take a valid asmap and truncate it, and having it still be acceptable.",
      "created_at" : "2020-04-04T18:11:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-609068168",
      "id" : 609068168,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwOTA2ODE2OA==",
      "updated_at" : "2020-04-04T18:11:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609068168",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 906e031",
      "created_at" : "2020-04-04T23:04:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-609101491",
      "id" : 609101491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwOTEwMTQ5MQ==",
      "updated_at" : "2020-04-04T23:04:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609101491",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Now added an extra check that verifies that no truncation of a valid asmap remains valid.",
      "created_at" : "2020-04-06T22:14:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-610064825",
      "id" : 610064825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMDA2NDgyNQ==",
      "updated_at" : "2020-04-06T22:14:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/610064825",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa\r\nMind addressing a compiler warning issue on ARM 32-bit platforms: d0b10ed97a37c18a1750c776d6930378b64a5db9 from #18686 ?",
      "created_at" : "2020-04-17T17:25:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-615369421",
      "id" : 615369421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNTM2OTQyMQ==",
      "updated_at" : "2020-04-17T17:25:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/615369421",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 748977690e0519110cda9628162a7ccf73a5934b modulo feedback below.\r\n\r\n@sipa, would it be possible to make it so that the existing coverage-increasing inputs to `src/test/fuzz/asmap` are not invalidated by the merge of this PR? The [qa-assets inputs](https://github.com/bitcoin-core/qa-assets) achieve very comprehensive coverage for `asmap` thanks to previous fuzzing efforts. It would be nice to keep those inputs. Perhaps your `src/test/fuzz/asmap.cpp` changes can be moved to a separate new fuzzing harness file? :)",
      "created_at" : "2020-04-25T05:59:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#issuecomment-619327372",
      "id" : 619327372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18512",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxOTMyNzM3Mg==",
      "updated_at" : "2020-04-25T05:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619327372",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r415306573"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415306573"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Perhaps use a switch statement for the opcode conditionals, here and in `SanityCheckASMap`, to make explicit the nature of the operation (testing a single value against a set of scoped enumerations) and possibly generate better code with a jump table instead of repeatedly checking individual values.",
      "commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "created_at" : "2020-04-26T13:05:45Z",
      "diff_hunk" : "@@ -70,34 +81,105 @@ uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n     const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n     uint32_t default_asn = 0;\n-    uint32_t opcode, jump, match, matchlen;\n+    uint32_t jump, match, matchlen;\n+    Instruction opcode;\n     while (pos != endpos) {\n         opcode = DecodeType(pos, endpos);\n-        if (opcode == 0) {\n-            return DecodeASN(pos, endpos);\n-        } else if (opcode == 1) {\n+        if (opcode == Instruction::RETURN) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r415306573",
      "id" : 415306573,
      "line" : 88,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwNjU3Mw==",
      "original_commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "original_line" : 88,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/util/asmap.cpp",
      "position" : 62,
      "pull_request_review_id" : 400502423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-26T13:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415306573",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r415307013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415307013"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit suggestion:\r\n```diff\r\n+    size_t bits = buffer.size() - sep_pos - 1;\r\n-    if (buffer.size() - sep_pos - 1 > 128) return; // At most 128 bits in IP address\r\n+    if (bits > 128) return; // At most 128 bits in IP address\r\n \r\n     // Checks on asmap\r\n     std::vector<bool> asmap(buffer.begin(), buffer.begin() + sep_pos);\r\n-    if (SanityCheckASMap(asmap, buffer.size() - 1 - sep_pos)) {\r\n+    if (SanityCheckASMap(asmap, bits)) {\r\n         // Verify that for valid asmaps, no prefix (except up to 7 zero padding bits) is valid.\r\n         std::vector<bool> asmap_prefix = asmap;\r\n         while (!asmap_prefix.empty() && asmap_prefix.size() + 7 > asmap.size() && asmap_prefix.back() == false) asmap_prefix.pop_back();\r\n         while (!asmap_prefix.empty()) {\r\n             asmap_prefix.pop_back();\r\n-            assert(!SanityCheckASMap(asmap_prefix, buffer.size() - 1 - sep_pos));\r\n+            assert(!SanityCheckASMap(asmap_prefix, bits));\r\n```\r\n",
      "commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "created_at" : "2020-04-26T13:08:05Z",
      "diff_hunk" : "@@ -0,0 +1,46 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/asmap.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+#include <assert.h>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    // Encoding: [asmap using 1 bit / byte] 0xFF [addr using 1 bit / byte]\n+    bool have_sep = false;\n+    size_t sep_pos;\n+    for (size_t pos = 0; pos < buffer.size(); ++pos) {\n+        uint8_t x = buffer[pos];\n+        if ((x & 0xFE) == 0) continue;\n+        if (x == 0xFF) {\n+            if (have_sep) return;\n+            have_sep = true;\n+            sep_pos = pos;\n+        } else {\n+            return;\n+        }\n+    }\n+    if (!have_sep) return; // Needs exactly 1 separator\n+    if (buffer.size() - sep_pos - 1 > 128) return; // At most 128 bits in IP address\n+\n+    // Checks on asmap\n+    std::vector<bool> asmap(buffer.begin(), buffer.begin() + sep_pos);\n+    if (SanityCheckASMap(asmap, buffer.size() - 1 - sep_pos)) {\n+        // Verify that for valid asmaps, no prefix (except up to 7 zero padding bits) is valid.\n+        std::vector<bool> asmap_prefix = asmap;\n+        while (!asmap_prefix.empty() && asmap_prefix.size() + 7 > asmap.size() && asmap_prefix.back() == false) asmap_prefix.pop_back();\n+        while (!asmap_prefix.empty()) {\n+            asmap_prefix.pop_back();\n+            assert(!SanityCheckASMap(asmap_prefix, buffer.size() - 1 - sep_pos));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r415307013",
      "id" : 415307013,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwNzAxMw==",
      "original_commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "original_line" : 40,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap_direct.cpp",
      "position" : 40,
      "pull_request_review_id" : 400502423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-26T13:25:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415307013",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r415308168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415308168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit suggestion:\r\n```diff\r\n-    bool have_sep = false;\r\n+    int separators{0};\r\n     size_t sep_pos;\r\n     for (size_t pos = 0; pos < buffer.size(); ++pos) {\r\n         uint8_t x = buffer[pos];\r\n         if ((x & 0xFE) == 0) continue;\r\n         if (x == 0xFF) {\r\n-            if (have_sep) return;\r\n-            have_sep = true;\r\n+            if (separators != 0) return;\r\n+            separators += 1;\r\n             sep_pos = pos;\r\n         } else {\r\n             return;\r\n         }\r\n     }\r\n-    if (!have_sep) return; // Needs exactly 1 separator\r\n+    if (separators != 1) return; // Needs exactly 1 separator\r\n```",
      "commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "created_at" : "2020-04-26T13:14:09Z",
      "diff_hunk" : "@@ -0,0 +1,46 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/asmap.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+#include <assert.h>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    // Encoding: [asmap using 1 bit / byte] 0xFF [addr using 1 bit / byte]\n+    bool have_sep = false;\n+    size_t sep_pos;\n+    for (size_t pos = 0; pos < buffer.size(); ++pos) {\n+        uint8_t x = buffer[pos];\n+        if ((x & 0xFE) == 0) continue;\n+        if (x == 0xFF) {\n+            if (have_sep) return;\n+            have_sep = true;\n+            sep_pos = pos;\n+        } else {\n+            return;\n+        }\n+    }\n+    if (!have_sep) return; // Needs exactly 1 separator",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r415308168",
      "id" : 415308168,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwODE2OA==",
      "original_commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap_direct.cpp",
      "position" : 29,
      "pull_request_review_id" : 400502423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-26T13:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415308168",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r418664572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418664572"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonatack Even in your code the only values the variable can have is 0 and 1. Why would you want to use an int instead of a bool then?",
      "commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "created_at" : "2020-05-01T18:07:43Z",
      "diff_hunk" : "@@ -0,0 +1,46 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/asmap.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+#include <assert.h>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    // Encoding: [asmap using 1 bit / byte] 0xFF [addr using 1 bit / byte]\n+    bool have_sep = false;\n+    size_t sep_pos;\n+    for (size_t pos = 0; pos < buffer.size(); ++pos) {\n+        uint8_t x = buffer[pos];\n+        if ((x & 0xFE) == 0) continue;\n+        if (x == 0xFF) {\n+            if (have_sep) return;\n+            have_sep = true;\n+            sep_pos = pos;\n+        } else {\n+            return;\n+        }\n+    }\n+    if (!have_sep) return; // Needs exactly 1 separator",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r418664572",
      "id" : 418664572,
      "in_reply_to_id" : 415308168,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY2NDU3Mg==",
      "original_commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap_direct.cpp",
      "position" : 29,
      "pull_request_review_id" : 404310864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-01T18:07:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418664572",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r418671458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418671458"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My thoughts were (a) a sanity check is better than just eyeballing code, not only for now but also future changes, and (b) a check for exactly one is more strongly verified when a state of more than one is also tested.\r\n",
      "commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "created_at" : "2020-05-01T18:23:27Z",
      "diff_hunk" : "@@ -0,0 +1,46 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/asmap.h>\n+#include <test/fuzz/fuzz.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+#include <assert.h>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    // Encoding: [asmap using 1 bit / byte] 0xFF [addr using 1 bit / byte]\n+    bool have_sep = false;\n+    size_t sep_pos;\n+    for (size_t pos = 0; pos < buffer.size(); ++pos) {\n+        uint8_t x = buffer[pos];\n+        if ((x & 0xFE) == 0) continue;\n+        if (x == 0xFF) {\n+            if (have_sep) return;\n+            have_sep = true;\n+            sep_pos = pos;\n+        } else {\n+            return;\n+        }\n+    }\n+    if (!have_sep) return; // Needs exactly 1 separator",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18512#discussion_r418671458",
      "id" : 418671458,
      "in_reply_to_id" : 415308168,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3MTQ1OA==",
      "original_commit_id" : "748977690e0519110cda9628162a7ccf73a5934b",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap_direct.cpp",
      "position" : 29,
      "pull_request_review_id" : 404319534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18512",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-01T18:23:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418671458",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
