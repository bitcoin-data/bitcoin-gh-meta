[
   {
      "author_association" : "MEMBER",
      "body" : "@kazcw Very nice find! How did you find this issue?",
      "created_at" : "2018-11-07T22:22:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#issuecomment-436799664",
      "id" : 436799664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjc5OTY2NA==",
      "updated_at" : "2018-11-07T22:22:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436799664",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r231702641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231702641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Move `{` one line up to make consistent with opening `try {`",
      "commit_id" : "b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-07T22:28:42Z",
      "diff_hunk" : "@@ -344,4 +344,35 @@ BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BOOST_CHECK_EQUAL(req1.indexes[3], req2.indexes[3]);\n }\n \n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationTest) {\n+    // Any set of index deltas that starts with N values that sum to (0x10000 - N)\n+    // causes the edge-case overflow that was originally not checked for. Such\n+    // a request cannot be created by serializing a real BlockTransactionsRequest\n+    // due to the overflow, so here we'll serialize from raw deltas.\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(2);\n+    req0.indexes[0] = 0x7000;\n+    req0.indexes[1] = 0x10000 - 0x7000 - 2;\n+    req0.indexes[2] = 0;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0.blockhash;\n+    WriteCompactSize(stream, req0.indexes.size());\n+    WriteCompactSize(stream, req0.indexes[0]);\n+    WriteCompactSize(stream, req0.indexes[1]);\n+    WriteCompactSize(stream, req0.indexes[2]);\n+\n+    BlockTransactionsRequest req1;\n+    try {\n+        stream >> req1;\n+        // before patch: deserialize above succeeds and this check fails, demonstrating the overflow\n+        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\n+        // this shouldn't be reachable before or after patch\n+        BOOST_CHECK(0);\n+    } catch(std::ios_base::failure &)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r231702641",
      "id" : 231702641,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTcwMjY0MQ==",
      "original_commit_id" : "2c9e12e6f5b092e18e6fc93623e49b7452b1ea8a",
      "original_position" : 30,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 172730525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685",
      "updated_at" : "2018-11-13T20:47:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231702641",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift well, back in 2016 I used to skim some of the diffs I didn't review. I made a mental note that this looked off but not exploitable. I have a serious backlog of mental notes and finally got around to this :laughing:.",
      "created_at" : "2018-11-08T00:12:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#issuecomment-436825117",
      "id" : 436825117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjgyNTExNw==",
      "updated_at" : "2018-11-08T00:12:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436825117",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1047859?v=4",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "node_id" : "MDQ6VXNlcjEwNDc4NTk=",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#10785](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10785.html) (Serialization improvements by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-11-08T00:38:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#issuecomment-436830398",
      "id" : 436830398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjgzMDM5OA==",
      "updated_at" : "2018-11-15T21:58:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436830398",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't believe this change is the most correct change.   The existing code upcasts a and b and then checks if a+b is greater than std::numeric_limits<uint16_t>::max which is the maximum value that can be represented in a uint16_t, if it is it rejects the encoding.\r\n\r\nThe change switches to >= which will reject a perfectly valid index of 0xFFFF in the last position, thus reducing the maximum size of a block (though irrelevantly since any block with 2^16 transactions would be over the weight limit).\r\n\r\nA more correct change would be increasing the size of offset.  There is no reason for offset to be small, it should have been chosen to be whatever is fastest that can represent all the maximum index +1.  (The Indexes[] table is small to reduce the memory/cache footprint for it).\r\n\r\n@TheBlueMatt \r\n",
      "created_at" : "2018-11-13T18:02:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#issuecomment-438375018",
      "id" : 438375018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODM3NTAxOA==",
      "updated_at" : "2018-11-13T18:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438375018",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "That is a cleaner solution. I redid it that way and added a test for the 0xffff case.\r\n\r\nAlso, I noticed if a peer sends a bogus CBlockHeaderAndShortTxIDs that has a BlockTxCount() > 0xffff, it looks like that isn't rejected upfront and we may respond with a bogus BlockTransactionsRequest containing illegal index deltas--so I added a check for that condition at compactblock deserialization time. Garbage In, Reject Messages Out!",
      "created_at" : "2018-11-13T20:47:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#issuecomment-438430862",
      "id" : 438430862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODQzMDg2Mg==",
      "updated_at" : "2018-11-13T20:47:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438430862",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1047859?v=4",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "node_id" : "MDQ6VXNlcjEwNDc4NTk=",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Seems reasonable. Concept ACK.   Check out the similar code in blockencodings.cpp uint16_t index_offset = 0;",
      "created_at" : "2018-11-14T21:24:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#issuecomment-438823997",
      "id" : 438823997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzODgyMzk5Nw==",
      "updated_at" : "2018-11-14T21:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438823997",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233831531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233831531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, space after `catch`, remove space before `&`.",
      "commit_id" : "b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-15T13:00:01Z",
      "diff_hunk" : "@@ -344,4 +344,49 @@ BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BOOST_CHECK_EQUAL(req1.indexes[3], req2.indexes[3]);\n }\n \n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationMaxTest) {\n+    // Check that the highest legal index is decoded correctly\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(1);\n+    req0.indexes[0] = 0xffff;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0;\n+\n+    BlockTransactionsRequest req1;\n+    stream >> req1;\n+    BOOST_CHECK_EQUAL(req0.indexes.size(), req1.indexes.size());\n+    BOOST_CHECK_EQUAL(req0.indexes[0], req1.indexes[0]);\n+}\n+\n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationOverflowTest) {\n+    // Any set of index deltas that starts with N values that sum to (0x10000 - N)\n+    // causes the edge-case overflow that was originally not checked for. Such\n+    // a request cannot be created by serializing a real BlockTransactionsRequest\n+    // due to the overflow, so here we'll serialize from raw deltas.\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(3);\n+    req0.indexes[0] = 0x7000;\n+    req0.indexes[1] = 0x10000 - 0x7000 - 2;\n+    req0.indexes[2] = 0;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0.blockhash;\n+    WriteCompactSize(stream, req0.indexes.size());\n+    WriteCompactSize(stream, req0.indexes[0]);\n+    WriteCompactSize(stream, req0.indexes[1]);\n+    WriteCompactSize(stream, req0.indexes[2]);\n+\n+    BlockTransactionsRequest req1;\n+    try {\n+        stream >> req1;\n+        // before patch: deserialize above succeeds and this check fails, demonstrating the overflow\n+        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\n+        // this shouldn't be reachable before or after patch\n+        BOOST_CHECK(0);\n+    } catch(std::ios_base::failure &) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233831531",
      "id" : 233831531,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzgzMTUzMQ==",
      "original_commit_id" : "051faf7e9d4e32142f95f7adb31d2f53f656cb66",
      "original_position" : 44,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 44,
      "pull_request_review_id" : 175335804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685",
      "updated_at" : "2018-11-15T13:05:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233831531",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233831737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233831737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In one commit you could add the test like:\r\n```\r\n        stream >> req1;\r\n        // deserialize above succeeds and this check fails, demonstrating the overflow\r\n        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\r\n        BOOST_CHECK(0);\r\n```\r\nAnd then in the commit that fixes deserialization it could change the test to:\r\n```\r\n        stream >> req1;\r\n        BOOST_CHECK(0);\r\n```\r\nsince the check is not reachable with the fix.",
      "commit_id" : "b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-15T13:00:44Z",
      "diff_hunk" : "@@ -344,4 +344,49 @@ BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BOOST_CHECK_EQUAL(req1.indexes[3], req2.indexes[3]);\n }\n \n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationMaxTest) {\n+    // Check that the highest legal index is decoded correctly\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(1);\n+    req0.indexes[0] = 0xffff;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0;\n+\n+    BlockTransactionsRequest req1;\n+    stream >> req1;\n+    BOOST_CHECK_EQUAL(req0.indexes.size(), req1.indexes.size());\n+    BOOST_CHECK_EQUAL(req0.indexes[0], req1.indexes[0]);\n+}\n+\n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationOverflowTest) {\n+    // Any set of index deltas that starts with N values that sum to (0x10000 - N)\n+    // causes the edge-case overflow that was originally not checked for. Such\n+    // a request cannot be created by serializing a real BlockTransactionsRequest\n+    // due to the overflow, so here we'll serialize from raw deltas.\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(3);\n+    req0.indexes[0] = 0x7000;\n+    req0.indexes[1] = 0x10000 - 0x7000 - 2;\n+    req0.indexes[2] = 0;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0.blockhash;\n+    WriteCompactSize(stream, req0.indexes.size());\n+    WriteCompactSize(stream, req0.indexes[0]);\n+    WriteCompactSize(stream, req0.indexes[1]);\n+    WriteCompactSize(stream, req0.indexes[2]);\n+\n+    BlockTransactionsRequest req1;\n+    try {\n+        stream >> req1;\n+        // before patch: deserialize above succeeds and this check fails, demonstrating the overflow\n+        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\n+        // this shouldn't be reachable before or after patch\n+        BOOST_CHECK(0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233831737",
      "id" : 233831737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzgzMTczNw==",
      "original_commit_id" : "051faf7e9d4e32142f95f7adb31d2f53f656cb66",
      "original_position" : 43,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 43,
      "pull_request_review_id" : 175335804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685",
      "updated_at" : "2018-11-15T13:05:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233831737",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233946683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233946683"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it not useful for the test to distinguish between a regression to the original failure mode and other possible failures?",
      "commit_id" : "b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-15T17:52:26Z",
      "diff_hunk" : "@@ -344,4 +344,49 @@ BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BOOST_CHECK_EQUAL(req1.indexes[3], req2.indexes[3]);\n }\n \n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationMaxTest) {\n+    // Check that the highest legal index is decoded correctly\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(1);\n+    req0.indexes[0] = 0xffff;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0;\n+\n+    BlockTransactionsRequest req1;\n+    stream >> req1;\n+    BOOST_CHECK_EQUAL(req0.indexes.size(), req1.indexes.size());\n+    BOOST_CHECK_EQUAL(req0.indexes[0], req1.indexes[0]);\n+}\n+\n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationOverflowTest) {\n+    // Any set of index deltas that starts with N values that sum to (0x10000 - N)\n+    // causes the edge-case overflow that was originally not checked for. Such\n+    // a request cannot be created by serializing a real BlockTransactionsRequest\n+    // due to the overflow, so here we'll serialize from raw deltas.\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(3);\n+    req0.indexes[0] = 0x7000;\n+    req0.indexes[1] = 0x10000 - 0x7000 - 2;\n+    req0.indexes[2] = 0;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0.blockhash;\n+    WriteCompactSize(stream, req0.indexes.size());\n+    WriteCompactSize(stream, req0.indexes[0]);\n+    WriteCompactSize(stream, req0.indexes[1]);\n+    WriteCompactSize(stream, req0.indexes[2]);\n+\n+    BlockTransactionsRequest req1;\n+    try {\n+        stream >> req1;\n+        // before patch: deserialize above succeeds and this check fails, demonstrating the overflow\n+        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\n+        // this shouldn't be reachable before or after patch\n+        BOOST_CHECK(0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233946683",
      "id" : 233946683,
      "in_reply_to_id" : 233831737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzk0NjY4Mw==",
      "original_commit_id" : "051faf7e9d4e32142f95f7adb31d2f53f656cb66",
      "original_position" : 43,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 43,
      "pull_request_review_id" : 175478927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685",
      "updated_at" : "2018-11-15T17:52:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233946683",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1047859?v=4",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "node_id" : "MDQ6VXNlcjEwNDc4NTk=",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233951330"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233951330"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO if that really matters you can distinguish by blaming. Furthermore, if the fix is wrongly reverted the test doesn't fail?",
      "commit_id" : "b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-15T18:06:46Z",
      "diff_hunk" : "@@ -344,4 +344,49 @@ BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BOOST_CHECK_EQUAL(req1.indexes[3], req2.indexes[3]);\n }\n \n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationMaxTest) {\n+    // Check that the highest legal index is decoded correctly\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(1);\n+    req0.indexes[0] = 0xffff;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0;\n+\n+    BlockTransactionsRequest req1;\n+    stream >> req1;\n+    BOOST_CHECK_EQUAL(req0.indexes.size(), req1.indexes.size());\n+    BOOST_CHECK_EQUAL(req0.indexes[0], req1.indexes[0]);\n+}\n+\n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationOverflowTest) {\n+    // Any set of index deltas that starts with N values that sum to (0x10000 - N)\n+    // causes the edge-case overflow that was originally not checked for. Such\n+    // a request cannot be created by serializing a real BlockTransactionsRequest\n+    // due to the overflow, so here we'll serialize from raw deltas.\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(3);\n+    req0.indexes[0] = 0x7000;\n+    req0.indexes[1] = 0x10000 - 0x7000 - 2;\n+    req0.indexes[2] = 0;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0.blockhash;\n+    WriteCompactSize(stream, req0.indexes.size());\n+    WriteCompactSize(stream, req0.indexes[0]);\n+    WriteCompactSize(stream, req0.indexes[1]);\n+    WriteCompactSize(stream, req0.indexes[2]);\n+\n+    BlockTransactionsRequest req1;\n+    try {\n+        stream >> req1;\n+        // before patch: deserialize above succeeds and this check fails, demonstrating the overflow\n+        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\n+        // this shouldn't be reachable before or after patch\n+        BOOST_CHECK(0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233951330",
      "id" : 233951330,
      "in_reply_to_id" : 233831737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzk1MTMzMA==",
      "original_commit_id" : "051faf7e9d4e32142f95f7adb31d2f53f656cb66",
      "original_position" : 43,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 43,
      "pull_request_review_id" : 175484791,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685",
      "updated_at" : "2018-11-15T18:06:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233951330",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233956178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233956178"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok. I did not know BOOST_CHECK minimization was a goal.",
      "commit_id" : "b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-15T18:21:50Z",
      "diff_hunk" : "@@ -344,4 +344,49 @@ BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BOOST_CHECK_EQUAL(req1.indexes[3], req2.indexes[3]);\n }\n \n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationMaxTest) {\n+    // Check that the highest legal index is decoded correctly\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(1);\n+    req0.indexes[0] = 0xffff;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0;\n+\n+    BlockTransactionsRequest req1;\n+    stream >> req1;\n+    BOOST_CHECK_EQUAL(req0.indexes.size(), req1.indexes.size());\n+    BOOST_CHECK_EQUAL(req0.indexes[0], req1.indexes[0]);\n+}\n+\n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationOverflowTest) {\n+    // Any set of index deltas that starts with N values that sum to (0x10000 - N)\n+    // causes the edge-case overflow that was originally not checked for. Such\n+    // a request cannot be created by serializing a real BlockTransactionsRequest\n+    // due to the overflow, so here we'll serialize from raw deltas.\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(3);\n+    req0.indexes[0] = 0x7000;\n+    req0.indexes[1] = 0x10000 - 0x7000 - 2;\n+    req0.indexes[2] = 0;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0.blockhash;\n+    WriteCompactSize(stream, req0.indexes.size());\n+    WriteCompactSize(stream, req0.indexes[0]);\n+    WriteCompactSize(stream, req0.indexes[1]);\n+    WriteCompactSize(stream, req0.indexes[2]);\n+\n+    BlockTransactionsRequest req1;\n+    try {\n+        stream >> req1;\n+        // before patch: deserialize above succeeds and this check fails, demonstrating the overflow\n+        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\n+        // this shouldn't be reachable before or after patch\n+        BOOST_CHECK(0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r233956178",
      "id" : 233956178,
      "in_reply_to_id" : 233831737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzk1NjE3OA==",
      "original_commit_id" : "051faf7e9d4e32142f95f7adb31d2f53f656cb66",
      "original_position" : 43,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 43,
      "pull_request_review_id" : 175490834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685",
      "updated_at" : "2018-11-15T18:21:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233956178",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1047859?v=4",
         "events_url" : "https://api.github.com/users/kazcw/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kazcw/followers",
         "following_url" : "https://api.github.com/users/kazcw/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kazcw/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kazcw",
         "id" : 1047859,
         "login" : "kazcw",
         "node_id" : "MDQ6VXNlcjEwNDc4NTk=",
         "organizations_url" : "https://api.github.com/users/kazcw/orgs",
         "received_events_url" : "https://api.github.com/users/kazcw/received_events",
         "repos_url" : "https://api.github.com/users/kazcw/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kazcw/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kazcw"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r234031920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234031920"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note that it's my opinion, wait until others weight in.",
      "commit_id" : "b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-15T22:27:40Z",
      "diff_hunk" : "@@ -344,4 +344,49 @@ BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BOOST_CHECK_EQUAL(req1.indexes[3], req2.indexes[3]);\n }\n \n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationMaxTest) {\n+    // Check that the highest legal index is decoded correctly\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(1);\n+    req0.indexes[0] = 0xffff;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0;\n+\n+    BlockTransactionsRequest req1;\n+    stream >> req1;\n+    BOOST_CHECK_EQUAL(req0.indexes.size(), req1.indexes.size());\n+    BOOST_CHECK_EQUAL(req0.indexes[0], req1.indexes[0]);\n+}\n+\n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationOverflowTest) {\n+    // Any set of index deltas that starts with N values that sum to (0x10000 - N)\n+    // causes the edge-case overflow that was originally not checked for. Such\n+    // a request cannot be created by serializing a real BlockTransactionsRequest\n+    // due to the overflow, so here we'll serialize from raw deltas.\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(3);\n+    req0.indexes[0] = 0x7000;\n+    req0.indexes[1] = 0x10000 - 0x7000 - 2;\n+    req0.indexes[2] = 0;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0.blockhash;\n+    WriteCompactSize(stream, req0.indexes.size());\n+    WriteCompactSize(stream, req0.indexes[0]);\n+    WriteCompactSize(stream, req0.indexes[1]);\n+    WriteCompactSize(stream, req0.indexes[2]);\n+\n+    BlockTransactionsRequest req1;\n+    try {\n+        stream >> req1;\n+        // before patch: deserialize above succeeds and this check fails, demonstrating the overflow\n+        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\n+        // this shouldn't be reachable before or after patch\n+        BOOST_CHECK(0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r234031920",
      "id" : 234031920,
      "in_reply_to_id" : 233831737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDAzMTkyMA==",
      "original_commit_id" : "051faf7e9d4e32142f95f7adb31d2f53f656cb66",
      "original_position" : 43,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 43,
      "pull_request_review_id" : 175586071,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685",
      "updated_at" : "2018-11-15T22:27:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234031920",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK.",
      "created_at" : "2018-11-15T23:11:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#issuecomment-439224004",
      "id" : 439224004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTIyNDAwNA==",
      "updated_at" : "2018-11-15T23:11:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439224004",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r234068739"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234068739"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's fine.",
      "commit_id" : "b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-16T01:51:13Z",
      "diff_hunk" : "@@ -344,4 +344,49 @@ BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BOOST_CHECK_EQUAL(req1.indexes[3], req2.indexes[3]);\n }\n \n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationMaxTest) {\n+    // Check that the highest legal index is decoded correctly\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(1);\n+    req0.indexes[0] = 0xffff;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0;\n+\n+    BlockTransactionsRequest req1;\n+    stream >> req1;\n+    BOOST_CHECK_EQUAL(req0.indexes.size(), req1.indexes.size());\n+    BOOST_CHECK_EQUAL(req0.indexes[0], req1.indexes[0]);\n+}\n+\n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationOverflowTest) {\n+    // Any set of index deltas that starts with N values that sum to (0x10000 - N)\n+    // causes the edge-case overflow that was originally not checked for. Such\n+    // a request cannot be created by serializing a real BlockTransactionsRequest\n+    // due to the overflow, so here we'll serialize from raw deltas.\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(3);\n+    req0.indexes[0] = 0x7000;\n+    req0.indexes[1] = 0x10000 - 0x7000 - 2;\n+    req0.indexes[2] = 0;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0.blockhash;\n+    WriteCompactSize(stream, req0.indexes.size());\n+    WriteCompactSize(stream, req0.indexes[0]);\n+    WriteCompactSize(stream, req0.indexes[1]);\n+    WriteCompactSize(stream, req0.indexes[2]);\n+\n+    BlockTransactionsRequest req1;\n+    try {\n+        stream >> req1;\n+        // before patch: deserialize above succeeds and this check fails, demonstrating the overflow\n+        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\n+        // this shouldn't be reachable before or after patch\n+        BOOST_CHECK(0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r234068739",
      "id" : 234068739,
      "in_reply_to_id" : 233831737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDA2ODczOQ==",
      "original_commit_id" : "051faf7e9d4e32142f95f7adb31d2f53f656cb66",
      "original_position" : 43,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 43,
      "pull_request_review_id" : 175631988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685",
      "updated_at" : "2018-11-16T01:51:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234068739",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-16T01:51:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#issuecomment-439254356",
      "id" : 439254356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTI1NDM1Ng==",
      "updated_at" : "2018-11-16T01:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439254356",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r234434601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234434601"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Ok. I did not know BOOST_CHECK minimization was a goal.\r\n\r\nIt's not *unless* it's used extremely frequenly in inner loops, in which case it is quite a slow operation Ã¢ÂÂ and for some reason, much slower on some platforms than others. I think it's fine here.",
      "commit_id" : "b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-18T09:12:42Z",
      "diff_hunk" : "@@ -344,4 +344,49 @@ BOOST_AUTO_TEST_CASE(TransactionsRequestSerializationTest) {\n     BOOST_CHECK_EQUAL(req1.indexes[3], req2.indexes[3]);\n }\n \n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationMaxTest) {\n+    // Check that the highest legal index is decoded correctly\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(1);\n+    req0.indexes[0] = 0xffff;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0;\n+\n+    BlockTransactionsRequest req1;\n+    stream >> req1;\n+    BOOST_CHECK_EQUAL(req0.indexes.size(), req1.indexes.size());\n+    BOOST_CHECK_EQUAL(req0.indexes[0], req1.indexes[0]);\n+}\n+\n+BOOST_AUTO_TEST_CASE(TransactionsRequestDeserializationOverflowTest) {\n+    // Any set of index deltas that starts with N values that sum to (0x10000 - N)\n+    // causes the edge-case overflow that was originally not checked for. Such\n+    // a request cannot be created by serializing a real BlockTransactionsRequest\n+    // due to the overflow, so here we'll serialize from raw deltas.\n+    BlockTransactionsRequest req0;\n+    req0.blockhash = InsecureRand256();\n+    req0.indexes.resize(3);\n+    req0.indexes[0] = 0x7000;\n+    req0.indexes[1] = 0x10000 - 0x7000 - 2;\n+    req0.indexes[2] = 0;\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << req0.blockhash;\n+    WriteCompactSize(stream, req0.indexes.size());\n+    WriteCompactSize(stream, req0.indexes[0]);\n+    WriteCompactSize(stream, req0.indexes[1]);\n+    WriteCompactSize(stream, req0.indexes[2]);\n+\n+    BlockTransactionsRequest req1;\n+    try {\n+        stream >> req1;\n+        // before patch: deserialize above succeeds and this check fails, demonstrating the overflow\n+        BOOST_CHECK(req1.indexes[1] < req1.indexes[2]);\n+        // this shouldn't be reachable before or after patch\n+        BOOST_CHECK(0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#discussion_r234434601",
      "id" : 234434601,
      "in_reply_to_id" : 233831737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDQzNDYwMQ==",
      "original_commit_id" : "051faf7e9d4e32142f95f7adb31d2f53f656cb66",
      "original_position" : 43,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 43,
      "pull_request_review_id" : 176081186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14685",
      "updated_at" : "2018-11-18T09:12:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234434601",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK b08af10fb299dc3fdcd1f022619fb112c72e5d8e",
      "created_at" : "2018-11-18T09:15:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14685#issuecomment-439678449",
      "id" : 439678449,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzOTY3ODQ0OQ==",
      "updated_at" : "2018-11-18T09:15:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439678449",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
