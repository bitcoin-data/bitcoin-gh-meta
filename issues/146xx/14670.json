{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Fixes #11777. Reverts #11006. Replaces #13501.\r\n\r\nWith this change the HTTP server will exit gracefully, meaning that all requests will finish processing and sending the response, even if this means to wait more than 2 seconds (current time allowed to exit the event loop).\r\n\r\nAnother small change is that connections are accepted even when the server is stopping, but HTTP requests are rejected. This can be improved later, especially if chunked replies are implemented.\r\n\r\nBriefly, before this PR, this is the order or events when a request arrives (RPC `stop`):\r\n 1. `bufferevent_disable(..., EV_READ)`\r\n 2. `StartShutdown()`\r\n 3. `evhttp_del_accept_socket(...)`\r\n 4. `ThreadHTTP` terminates (event loop exits) because there are no active or pending events thanks to 1. and 3.\r\n 5. client doesn't get the response thanks to 4.\r\n\r\nThis can be verified by applying\r\n```diff\r\n     // Event loop will exit after current HTTP requests have been handled, so\r\n     // this reply will get back to the client.\r\n     StartShutdown();\r\n+    MilliSleep(2000);\r\n     return \"Bitcoin server stopping\";\r\n }\r\n```\r\nand checking the log output:\r\n```\r\n    Received a POST request for / from 127.0.0.1:62443\r\n    ThreadRPCServer method=stop user=__cookie__\r\n    Interrupting HTTP server\r\n**  Exited http event loop\r\n    Interrupting HTTP RPC server\r\n    Interrupting RPC\r\n    tor: Thread interrupt\r\n    Shutdown: In progress...\r\n    torcontrol thread exit\r\n    Stopping HTTP RPC server\r\n    addcon thread exit\r\n    opencon thread exit\r\n    Unregistering HTTP handler for / (exactmatch 1)\r\n    Unregistering HTTP handler for /wallet/ (exactmatch 0)\r\n    Stopping RPC\r\n    RPC stopped.\r\n    Stopping HTTP server\r\n    Waiting for HTTP worker threads to exit\r\n    msghand thread exit\r\n    net thread exit\r\n\r\n    ... sleep 2 seconds ...\r\n\r\n    Waiting for HTTP event thread to exit\r\n    Stopped HTTP server\r\n```\r\n\r\nFor this reason point 3. is moved right after all HTTP workers quit. In that moment HTTP replies are queued in the event loop which keeps spinning util all connections are closed. In order to trigger the server side close with keep alive connections (implicit in HTTP/1.1) the header `Connection: close` is sent if shutdown was requested. This can be tested by\r\n```\r\nbitcoind -regtest\r\nnc localhost 18443\r\nPOST / HTTP/1.1\r\nAuthorization: Basic ...\r\nContent-Type: application/json\r\nContent-Length: 44\r\n\r\n{\"jsonrpc\": \"2.0\",\"method\":\"stop\",\"id\":123}\r\n```\r\n\r\nSumming up, this PR:\r\n - removes explicit event loop exit â event loop exits once there are no active or pending events\r\n - changes the moment the listening sockets are removed â explained above\r\n - sends header `Connection: close` on active requests when shutdown was requested which is relevant when it's a persistent connection (default in HTTP 1.1) â libevent is aware of this header and closes the connection gracefully\r\n - removes event loop explicit break after 2 seconds timeout",
   "closed_at" : "2018-12-06T16:45:54Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 23,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14670/comments",
   "created_at" : "2018-11-06T15:04:48Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14670/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/14670",
   "id" : 377887367,
   "labels" : [
      {
         "color" : "0052cc",
         "default" : false,
         "id" : 98279177,
         "name" : "RPC/REST/ZMQ",
         "node_id" : "MDU6TGFiZWw5ODI3OTE3Nw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14670/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MjI4NzIyNzYz",
   "number" : 14670,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/14670.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14670",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/14670.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14670"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "http: Fix HTTP server shutdown",
   "updated_at" : "2018-12-15T14:57:47Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14670",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
      "events_url" : "https://api.github.com/users/promag/events{/privacy}",
      "followers_url" : "https://api.github.com/users/promag/followers",
      "following_url" : "https://api.github.com/users/promag/following{/other_user}",
      "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/promag",
      "id" : 3534524,
      "login" : "promag",
      "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
      "organizations_url" : "https://api.github.com/users/promag/orgs",
      "received_events_url" : "https://api.github.com/users/promag/received_events",
      "repos_url" : "https://api.github.com/users/promag/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/promag"
   }
}
