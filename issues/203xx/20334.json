{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "https://bitcoinbuilds.org/?job=daf150bb-1252-4603-9f0a-d424583294f0:\r\n```\r\nRun decode_tx with args ['/home/ubuntu/src/src/test/fuzz/decode_tx', '-runs=1', '/home/ubuntu/src/QA/fuzz_seed_corpus/decode_tx']INFO: Seed: 2836361558\r\nINFO: Loaded 1 modules   (20561 inline 8-bit counters): 20561 [0x55e5baadc3f0, 0x55e5baae1441), \r\nINFO: Loaded 1 PC tables (20561 PCs): 20561 [0x55e5baae1448,0x55e5bab31958), \r\nINFO:      630 files found in /home/ubuntu/src/QA/fuzz_seed_corpus/decode_tx\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes\r\nINFO: seed corpus: files: 630 min: 1b max: 3984182b total: 4969882b rss: 31Mb\r\ndecode_tx: test/fuzz/decode_tx.cpp:29: void test_one_input(const std::vector<uint8_t> &): Assertion `result_try_witness_and_maybe_no_witness' failed.\r\n==25419== ERROR: libFuzzer: deadly signal\r\n    #0 0x55e5ba4d8f17 in __sanitizer_print_stack_trace (/home/ubuntu/src/src/test/fuzz/decode_tx+0x2e3f17)\r\n    #1 0x55e5ba42422b in fuzzer::PrintStackTrace() (/home/ubuntu/src/src/test/fuzz/decode_tx+0x22f22b)\r\n    #2 0x55e5ba407488 in fuzzer::Fuzzer::CrashCallback() (/home/ubuntu/src/src/test/fuzz/decode_tx+0x212488)\r\n    #3 0x55e5ba40744f in fuzzer::Fuzzer::StaticCrashSignalCallback() (/home/ubuntu/src/src/test/fuzz/decode_tx+0x21244f)\r\n    #4 0x7f36b3cbc88f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1288f)\r\n    #5 0x7f36b249de96 in gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ee96)\r\n    #6 0x7f36b249f800 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x40800)\r\n    #7 0x7f36b248f399  (/lib/x86_64-linux-gnu/libc.so.6+0x30399)\r\n    #8 0x7f36b248f411 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x30411)\r\n    #9 0x55e5ba502ac6 in test_one_input(std::vector<unsigned char, std::allocator<unsigned char> > const&) /home/ubuntu/src/src/test/fuzz/decode_tx.cpp:29:9\r\n    #10 0x55e5ba58ff42 in LLVMFuzzerTestOneInput /home/ubuntu/src/src/test/fuzz/fuzz.cpp:36:5\r\n    #11 0x55e5ba4087aa in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x2137aa)\r\n    #12 0x55e5ba407fa5 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x212fa5)\r\n    #13 0x55e5ba40aa6e in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, fuzzer::fuzzer_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x215a6e)\r\n    #14 0x55e5ba40b005 in fuzzer::Fuzzer::Loop(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, fuzzer::fuzzer_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x216005)\r\n    #15 0x55e5ba3fdac0 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x208ac0)\r\n    #16 0x55e5ba4249e2 in main (/home/ubuntu/src/src/test/fuzz/decode_tx+0x22f9e2)\r\n    #17 0x7f36b2480b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)\r\n    #18 0x55e5ba3f64c9 in _start (/home/ubuntu/src/src/test/fuzz/decode_tx+0x2014c9)\r\n\r\nNOTE: libFuzzer has rudimentary signal handlers.\r\n      Combine libFuzzer with AddressSanitizer or similar for better crash reports.\r\nSUMMARY: libFuzzer: deadly signal\r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\n0x0,0x11,0x0,0x0,0x0,0x1,0x1,0xe8,0x60,0x0,0x0,0x0,0x0,0x0,0x0,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x0,0x5,0x5,0x5,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,\r\n\\x00\\x11\\x00\\x00\\x00\\x01\\x01\\xe8`\\x00\\x00\\x00\\x00\\x00\\x00\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x00\\x05\\x05\\x05\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\r\nartifact_prefix='./'; Test unit written to ./crash-bb7f920f5c05dd1f8d0a4b4daa4d1e880f775e04\r\nBase64: ABEAAAABAehgAAAAAAAABQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUABQUFAAAABgAAAAAAAAAA\r\n\r\nINFO: Seed: 2836361558\r\nINFO: Loaded 1 modules   (20561 inline 8-bit counters): 20561 [0x55e5baadc3f0, 0x55e5baae1441), \r\nINFO: Loaded 1 PC tables (20561 PCs): 20561 [0x55e5baae1448,0x55e5bab31958), \r\nINFO:      630 files found in /home/ubuntu/src/QA/fuzz_seed_corpus/decode_tx\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes\r\nINFO: seed corpus: files: 630 min: 1b max: 3984182b total: 4969882b rss: 31Mb\r\ndecode_tx: test/fuzz/decode_tx.cpp:29: void test_one_input(const std::vector<uint8_t> &): Assertion `result_try_witness_and_maybe_no_witness' failed.\r\n==25419== ERROR: libFuzzer: deadly signal\r\n    #0 0x55e5ba4d8f17 in __sanitizer_print_stack_trace (/home/ubuntu/src/src/test/fuzz/decode_tx+0x2e3f17)\r\n    #1 0x55e5ba42422b in fuzzer::PrintStackTrace() (/home/ubuntu/src/src/test/fuzz/decode_tx+0x22f22b)\r\n    #2 0x55e5ba407488 in fuzzer::Fuzzer::CrashCallback() (/home/ubuntu/src/src/test/fuzz/decode_tx+0x212488)\r\n    #3 0x55e5ba40744f in fuzzer::Fuzzer::StaticCrashSignalCallback() (/home/ubuntu/src/src/test/fuzz/decode_tx+0x21244f)\r\n    #4 0x7f36b3cbc88f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1288f)\r\n    #5 0x7f36b249de96 in gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ee96)\r\n    #6 0x7f36b249f800 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x40800)\r\n    #7 0x7f36b248f399  (/lib/x86_64-linux-gnu/libc.so.6+0x30399)\r\n    #8 0x7f36b248f411 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x30411)\r\n    #9 0x55e5ba502ac6 in test_one_input(std::vector<unsigned char, std::allocator<unsigned char> > const&) /home/ubuntu/src/src/test/fuzz/decode_tx.cpp:29:9\r\n    #10 0x55e5ba58ff42 in LLVMFuzzerTestOneInput /home/ubuntu/src/src/test/fuzz/fuzz.cpp:36:5\r\n    #11 0x55e5ba4087aa in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x2137aa)\r\n    #12 0x55e5ba407fa5 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x212fa5)\r\n    #13 0x55e5ba40aa6e in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, fuzzer::fuzzer_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x215a6e)\r\n    #14 0x55e5ba40b005 in fuzzer::Fuzzer::Loop(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, fuzzer::fuzzer_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x216005)\r\n    #15 0x55e5ba3fdac0 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/ubuntu/src/src/test/fuzz/decode_tx+0x208ac0)\r\n    #16 0x55e5ba4249e2 in main (/home/ubuntu/src/src/test/fuzz/decode_tx+0x22f9e2)\r\n    #17 0x7f36b2480b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)\r\n    #18 0x55e5ba3f64c9 in _start (/home/ubuntu/src/src/test/fuzz/decode_tx+0x2014c9)\r\n\r\nNOTE: libFuzzer has rudimentary signal handlers.\r\n      Combine libFuzzer with AddressSanitizer or similar for better crash reports.\r\nSUMMARY: libFuzzer: deadly signal\r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\n0x0,0x11,0x0,0x0,0x0,0x1,0x1,0xe8,0x60,0x0,0x0,0x0,0x0,0x0,0x0,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x0,0x5,0x5,0x5,0x0,0x0,0x0,0x6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,\r\n\\x00\\x11\\x00\\x00\\x00\\x01\\x01\\xe8`\\x00\\x00\\x00\\x00\\x00\\x00\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x05\\x00\\x05\\x05\\x05\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\r\nartifact_prefix='./'; Test unit written to ./crash-bb7f920f5c05dd1f8d0a4b4daa4d1e880f775e04\r\nBase64: ABEAAAABAehgAAAAAAAABQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUABQUFAAAABgAAAAAAAAAA\r\n\r\nTarget \"/home/ubuntu/src/src/test/fuzz/decode_tx -runs=1 /home/ubuntu/src/QA/fuzz_seed_corpus/decode_tx\" failed with exit code 77\r\n```",
   "closed_at" : "2021-03-12T19:25:03Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 3,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20334/comments",
   "created_at" : "2020-11-07T19:48:15Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20334/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/20334",
   "id" : 738307037,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20334/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU3MzgzMDcwMzc=",
   "number" : 20334,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "ci: fuzz/decode_tx fails",
   "updated_at" : "2021-03-12T19:25:03Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20334",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
      "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
      "followers_url" : "https://api.github.com/users/hebasto/followers",
      "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/hebasto",
      "id" : 32963518,
      "login" : "hebasto",
      "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
      "organizations_url" : "https://api.github.com/users/hebasto/orgs",
      "received_events_url" : "https://api.github.com/users/hebasto/received_events",
      "repos_url" : "https://api.github.com/users/hebasto/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/hebasto"
   }
}
