[
   {
      "author_association" : "MEMBER",
      "body" : "Thanks to @Xekyo for suggesting this in https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520234818.",
      "created_at" : "2020-11-14T22:24:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727273591",
      "id" : 727273591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzI3MzU5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-14T22:24:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727273591",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Idea: since this is per-wallet, return the name of the wallet in the responses.",
      "created_at" : "2020-11-14T22:35:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727274760",
      "id" : 727274760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzI3NDc2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-14T22:35:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727274760",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20874 (test: Run mempool_limit.py even with wallet disabled by stackman27)\n* #20546 (wallet: check for non-representable CFeeRates by jonatack)\n* #20406 (util: Avoid invalid integer negation in FormatMoney and ValueFromAmount by practicalswift)\n* #19602 (wallet: Migrate legacy wallets to descriptor wallets by achow101)\n* #16795 (rpc: have raw transaction decoding infer output descriptors by instagibbs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-11-15T00:07:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727284177",
      "id" : 727284177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzI4NDE3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-25T22:42:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727284177",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "In the 'Successful responses' and 'Error responses' above shouldn't it be `sat/vB` instead of `sat/B`?",
      "created_at" : "2020-11-15T03:28:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727363191",
      "id" : 727363191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzM2MzE5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-15T03:28:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727363191",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@prayank23 thanks for looking. Those will be automatically updated from sat/B to sat/vB by #20305, which updates the ToString() helper in `CFeeRate`. I updated the PR descpription to clarify that (thanks!)",
      "created_at" : "2020-11-15T07:21:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-727527712",
      "id" : 727527712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNzUyNzcxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-15T15:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727527712",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-11-17T14:02:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-728947930",
      "id" : 728947930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyODk0NzkzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-17T14:02:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728947930",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r530037069"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530037069"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO we should add a `ValueFromFeeRate`",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-25T00:48:04Z",
      "diff_hunk" : "@@ -2347,6 +2347,74 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_B)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_B)};\n+            CFeeRate relay_min_feerate(wallet.chain().relayMinFee().GetFeePerK());\n+            CFeeRate wallet_min_feerate(wallet.m_min_fee.GetFeePerK());\n+            CFeeRate wallet_max_feerate(wallet.m_default_max_tx_fee, 1000);\n+            std::string result, error;\n+\n+            if (amount == CFeeRate(0)) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+\n+            UniValue obj(UniValue::VOBJ);\n+            obj.pushKV(\"wallet_name\", wallet.GetName());\n+            obj.pushKV(\"fee_rate\", UniValue(UniValue::VNUM, wallet.m_pay_tx_fee.SatsToString()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r530037069",
      "id" : 530037069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAzNzA2OQ==",
      "original_commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "original_line" : 2410,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 538077112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530037069",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r530044646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530044646"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe rebase this on top of 8798383475f4e1db44f734cdd94885e5527761fe",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-25T01:13:14Z",
      "diff_hunk" : "@@ -2347,6 +2347,74 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_B)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_B)};\n+            CFeeRate relay_min_feerate(wallet.chain().relayMinFee().GetFeePerK());\n+            CFeeRate wallet_min_feerate(wallet.m_min_fee.GetFeePerK());\n+            CFeeRate wallet_max_feerate(wallet.m_default_max_tx_fee, 1000);\n+            std::string result, error;\n+\n+            if (amount == CFeeRate(0)) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+\n+            UniValue obj(UniValue::VOBJ);\n+            obj.pushKV(\"wallet_name\", wallet.GetName());\n+            obj.pushKV(\"fee_rate\", UniValue(UniValue::VNUM, wallet.m_pay_tx_fee.SatsToString()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r530044646",
      "id" : 530044646,
      "in_reply_to_id" : 530037069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA0NDY0Ng==",
      "original_commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "original_line" : 2410,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 538085656,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/530044646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r531175708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531175708"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Maybe rebase this on top of [8798383](https://github.com/bitcoin/bitcoin/commit/8798383475f4e1db44f734cdd94885e5527761fe)\r\n\r\nSGTM",
      "commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "created_at" : "2020-11-26T18:07:09Z",
      "diff_hunk" : "@@ -2347,6 +2347,74 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_B)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_B)};\n+            CFeeRate relay_min_feerate(wallet.chain().relayMinFee().GetFeePerK());\n+            CFeeRate wallet_min_feerate(wallet.m_min_fee.GetFeePerK());\n+            CFeeRate wallet_max_feerate(wallet.m_default_max_tx_fee, 1000);\n+            std::string result, error;\n+\n+            if (amount == CFeeRate(0)) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+\n+            UniValue obj(UniValue::VOBJ);\n+            obj.pushKV(\"wallet_name\", wallet.GetName());\n+            obj.pushKV(\"fee_rate\", UniValue(UniValue::VNUM, wallet.m_pay_tx_fee.SatsToString()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r531175708",
      "id" : 531175708,
      "in_reply_to_id" : 530037069,
      "line" : 2410,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NTcwOA==",
      "original_commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "original_line" : 2410,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 78,
      "pull_request_review_id" : 539496909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-26T18:07:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531175708",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r531709471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531709471"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Maybe rebase this on top of [8798383](https://github.com/bitcoin/bitcoin/commit/8798383475f4e1db44f734cdd94885e5527761fe)\r\n\r\nPulled 8798383 in as commit 0e2c3ace86b8aa",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-27T17:27:50Z",
      "diff_hunk" : "@@ -2347,6 +2347,74 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_B)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_B)};\n+            CFeeRate relay_min_feerate(wallet.chain().relayMinFee().GetFeePerK());\n+            CFeeRate wallet_min_feerate(wallet.m_min_fee.GetFeePerK());\n+            CFeeRate wallet_max_feerate(wallet.m_default_max_tx_fee, 1000);\n+            std::string result, error;\n+\n+            if (amount == CFeeRate(0)) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_B), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+\n+            UniValue obj(UniValue::VOBJ);\n+            obj.pushKV(\"wallet_name\", wallet.GetName());\n+            obj.pushKV(\"fee_rate\", UniValue(UniValue::VNUM, wallet.m_pay_tx_fee.SatsToString()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r531709471",
      "id" : 531709471,
      "in_reply_to_id" : 530037069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcwOTQ3MQ==",
      "original_commit_id" : "a96417d85ae3f3667455706c54828b7a9e55d825",
      "original_line" : 2410,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540114340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531709471",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and updated per the plan outlined in https://github.com/bitcoin/bitcoin/pull/20484#issuecomment-734786305.",
      "created_at" : "2020-11-27T17:36:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-734933069",
      "id" : 734933069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDkzMzA2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T17:36:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734933069",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532010092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532010092"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: might use f-string? ",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-28T09:25:34Z",
      "diff_hunk" : "@@ -107,7 +107,7 @@ def run_test(self):\n         assert_equal(stats[self.max_stat_pos]['height'], self.start_height + self.max_stat_pos)\n \n         for i in range(self.max_stat_pos+1):\n-            self.log.info('Checking block %d\\n' % (i))\n+            self.log.info('Checking block %d' % (i))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532010092",
      "id" : 532010092,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAxMDA5Mg==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 110,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/rpc_getblockstats.py",
      "position" : null,
      "pull_request_review_id" : 540354468,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532010092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532010352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532010352"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The second argument of the cfeerate constructor is size_t (number of bytes), not CAmount (number of satoshis). Instead of adding more calls to the confusing constructor, I'd prefer to add a new constructor that takes in a univalue feerate as sat/b. I think this has also been provided as feedback when this code template was initially introduced.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-28T09:28:51Z",
      "diff_hunk" : "@@ -2350,6 +2350,78 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532010352",
      "id" : 532010352,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAxMDM1Mg==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 2389,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540354468,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532010352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532094624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532094624"
         }
      },
      "author_association" : "MEMBER",
      "body" : "good idea; done",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-28T19:01:03Z",
      "diff_hunk" : "@@ -107,7 +107,7 @@ def run_test(self):\n         assert_equal(stats[self.max_stat_pos]['height'], self.start_height + self.max_stat_pos)\n \n         for i in range(self.max_stat_pos+1):\n-            self.log.info('Checking block %d\\n' % (i))\n+            self.log.info('Checking block %d' % (i))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532094624",
      "id" : 532094624,
      "in_reply_to_id" : 532010092,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5NDYyNA==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 110,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/rpc_getblockstats.py",
      "position" : null,
      "pull_request_review_id" : 540411033,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532094624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532094834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532094834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea, done in 9c479bfc293fec906 and proposed a refactoring in 392495bc4d9648fe0c28d that can be dropped",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-28T19:03:44Z",
      "diff_hunk" : "@@ -2350,6 +2350,78 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532094834",
      "id" : 532094834,
      "in_reply_to_id" : 532010352,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5NDgzNA==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 2389,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540411161,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532094834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oops, adding the CFeeRate UniValue ctor caused a circular dependency. ",
      "created_at" : "2020-11-28T19:28:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-735280367",
      "id" : 735280367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNTI4MDM2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-28T19:28:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735280367",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532099670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532099670"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hm, bringing the RPC utilities and UniValue into CFeeRate seems like a layer violation (and caused a circular dependency). Maybe a CFeeRate ctor that takes a CAmount + FeeEstimateMode instead of UniValue.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-28T19:52:48Z",
      "diff_hunk" : "@@ -2350,6 +2350,78 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532099670",
      "id" : 532099670,
      "in_reply_to_id" : 532010352,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5OTY3MA==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 2389,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540413842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532099670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532263170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532263170"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated the new CFeeRate ctor to take `(CAmount fee_rate, FeeEstimateMode mode)` and added unit tests.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-29T20:40:06Z",
      "diff_hunk" : "@@ -2350,6 +2350,78 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet. Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=7.75\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{AmountFromValue(request.params[0]), COIN};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532263170",
      "id" : 532263170,
      "in_reply_to_id" : 532010352,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI2MzE3MA==",
      "original_commit_id" : "e915a2a2c87dad5beb68a175b21a07136bcc21ca",
      "original_line" : 2389,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 540514624,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532263170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added more unit test coverage per `git diff 14c5e50 2176a3`.",
      "created_at" : "2020-11-30T10:22:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-735695224",
      "id" : 735695224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNTY5NTIyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-30T10:27:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735695224",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532515768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532515768"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit d6643ef609bf442fe38dd8a1335dd7c580f1fdd7:\r\n\r\ncould clang-format?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T11:06:38Z",
      "diff_hunk" : "@@ -42,3 +42,7 @@ std::string CFeeRate::ToString(const FeeEstimateMode& fee_estimate_mode) const\n     default:                      return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n     }\n }\n+\n+std::string CFeeRate::SatsToString() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532515768",
      "id" : 532515768,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxNTc2OA==",
      "original_commit_id" : "d6643ef609bf442fe38dd8a1335dd7c580f1fdd7",
      "original_line" : 46,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : null,
      "pull_request_review_id" : 540805717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532515768",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532520613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532520613"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit in 4cccf2d88377a9f813ab6d63889cbb5136c31aad\r\n\r\nMight be good to make this impossible to compile instead of a runtime-just-return-0. Can be achieved via `constexpr if` (and some template magic) or by having a `CFeeRate::FromSatB(amount)` and `FromBtcKb(amount)` helper.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T11:15:14Z",
      "diff_hunk" : "@@ -86,6 +90,31 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateConstructorWithUnitsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate) ctor\n+    BOOST_CHECK(CFeeRate(CAmount(-1), FeeEstimateMode::BTC_KVB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::BTC_KVB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(1), FeeEstimateMode::BTC_KVB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(26), FeeEstimateMode::BTC_KVB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123), FeeEstimateMode::BTC_KVB) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate(CAmount(-100000), FeeEstimateMode::SAT_VB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(-99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(100000), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(100001), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(2690000), FeeEstimateMode::SAT_VB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123456789), FeeEstimateMode::SAT_VB) == CFeeRate(1234));\n+    // ...with invalid unit values returns CFeeRate(0)\n+    BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, std::numeric_limits<size_t>::max()) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, 0) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, -1) == CFeeRate{0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532520613",
      "id" : 532520613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUyMDYxMw==",
      "original_commit_id" : "9d41bb8c7b9c8650e0a79c3026d9bba355908e71",
      "original_line" : 115,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 540805717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532520613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532537444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532537444"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 3c92185b95764f5c3536637e5923316cd9c2d8b0:\r\n\r\nMight be good if the method name included the unit (sat/b) to avoid calling this in a btc/kb context",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T11:45:57Z",
      "diff_hunk" : "@@ -40,6 +41,7 @@ int ParseSighashString(const UniValue& sighash);\n \n // core_write.cpp\n UniValue ValueFromAmount(const CAmount& amount);\n+UniValue ValueFromFeeRate(const CFeeRate& fee_rate);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532537444",
      "id" : 532537444,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzNzQ0NA==",
      "original_commit_id" : "3c92185b95764f5c3536637e5923316cd9c2d8b0",
      "original_line" : 44,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : null,
      "pull_request_review_id" : 540805717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532537444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532539956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532539956"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why are the refactors in 7289e559eb720d972e3e31c0ca81dd8091775b07 needed? They break asan, it seems.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T11:50:21Z",
      "diff_hunk" : "@@ -7,35 +7,31 @@\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532539956",
      "id" : 532539956,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzOTk1Ng==",
      "original_commit_id" : "7289e559eb720d972e3e31c0ca81dd8091775b07",
      "original_line" : 7,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : null,
      "pull_request_review_id" : 540835728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532539956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532681447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532681447"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The CI was green with the refactors yesterday; the change was the added unit tests. It may be better to propose the refactors in their own PR. I'll drop the refactoring commit to test what the CI says.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T15:28:00Z",
      "diff_hunk" : "@@ -7,35 +7,31 @@\n ",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532681447",
      "id" : 532681447,
      "in_reply_to_id" : 532539956,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4MTQ0Nw==",
      "original_commit_id" : "7289e559eb720d972e3e31c0ca81dd8091775b07",
      "original_line" : 7,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : null,
      "pull_request_review_id" : 541017683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532681447",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532701499"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532701499"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh oops hm, these lines 113-115 aren't testing the new constructor, but the `CFeeRate(CAmount, size_t)` one, so it was mistake to add them here. Will move them into the tests for that constructor and see if anything needs to be done there; normally the ctor should just set `nSatoshisPerK` to 0 in that case.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T15:54:04Z",
      "diff_hunk" : "@@ -86,6 +90,31 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateConstructorWithUnitsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate) ctor\n+    BOOST_CHECK(CFeeRate(CAmount(-1), FeeEstimateMode::BTC_KVB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::BTC_KVB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(1), FeeEstimateMode::BTC_KVB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(26), FeeEstimateMode::BTC_KVB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123), FeeEstimateMode::BTC_KVB) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate(CAmount(-100000), FeeEstimateMode::SAT_VB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(-99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(100000), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(100001), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(2690000), FeeEstimateMode::SAT_VB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123456789), FeeEstimateMode::SAT_VB) == CFeeRate(1234));\n+    // ...with invalid unit values returns CFeeRate(0)\n+    BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, std::numeric_limits<size_t>::max()) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, 0) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, -1) == CFeeRate{0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532701499",
      "id" : 532701499,
      "in_reply_to_id" : 532520613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwMTQ5OQ==",
      "original_commit_id" : "9d41bb8c7b9c8650e0a79c3026d9bba355908e71",
      "original_line" : 115,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 541043362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532701499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532704803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532704803"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(my comment should be on the `BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0})` line)",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T15:58:16Z",
      "diff_hunk" : "@@ -86,6 +90,31 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateConstructorWithUnitsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate) ctor\n+    BOOST_CHECK(CFeeRate(CAmount(-1), FeeEstimateMode::BTC_KVB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::BTC_KVB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(1), FeeEstimateMode::BTC_KVB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(26), FeeEstimateMode::BTC_KVB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123), FeeEstimateMode::BTC_KVB) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate(CAmount(-100000), FeeEstimateMode::SAT_VB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(-99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(100000), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(100001), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(2690000), FeeEstimateMode::SAT_VB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123456789), FeeEstimateMode::SAT_VB) == CFeeRate(1234));\n+    // ...with invalid unit values returns CFeeRate(0)\n+    BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, std::numeric_limits<size_t>::max()) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, 0) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, -1) == CFeeRate{0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532704803",
      "id" : 532704803,
      "in_reply_to_id" : 532520613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwNDgwMw==",
      "original_commit_id" : "9d41bb8c7b9c8650e0a79c3026d9bba355908e71",
      "original_line" : 115,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 541047630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532704803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532948939"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532948939"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea, much better...switching to named constructors.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T22:37:20Z",
      "diff_hunk" : "@@ -86,6 +90,31 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateConstructorWithUnitsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate) ctor\n+    BOOST_CHECK(CFeeRate(CAmount(-1), FeeEstimateMode::BTC_KVB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::BTC_KVB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(1), FeeEstimateMode::BTC_KVB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(26), FeeEstimateMode::BTC_KVB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123), FeeEstimateMode::BTC_KVB) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate(CAmount(-100000), FeeEstimateMode::SAT_VB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(-99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(100000), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(100001), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(2690000), FeeEstimateMode::SAT_VB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123456789), FeeEstimateMode::SAT_VB) == CFeeRate(1234));\n+    // ...with invalid unit values returns CFeeRate(0)\n+    BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, std::numeric_limits<size_t>::max()) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, 0) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, -1) == CFeeRate{0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532948939",
      "id" : 532948939,
      "in_reply_to_id" : 532520613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk0ODkzOQ==",
      "original_commit_id" : "9d41bb8c7b9c8650e0a79c3026d9bba355908e71",
      "original_line" : 115,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 541351236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532948939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532973483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532973483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "no longer adding this `SatsToString()` function in favor of making the existing `ToString()` more flexible",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T23:35:15Z",
      "diff_hunk" : "@@ -42,3 +42,7 @@ std::string CFeeRate::ToString(const FeeEstimateMode& fee_estimate_mode) const\n     default:                      return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n     }\n }\n+\n+std::string CFeeRate::SatsToString() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532973483",
      "id" : 532973483,
      "in_reply_to_id" : 532515768,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk3MzQ4Mw==",
      "original_commit_id" : "d6643ef609bf442fe38dd8a1335dd7c580f1fdd7",
      "original_line" : 46,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : null,
      "pull_request_review_id" : 541379507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532973483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532973622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532973622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done, and a leaner implementation, thanks",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T23:35:32Z",
      "diff_hunk" : "@@ -86,6 +90,31 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateConstructorWithUnitsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate) ctor\n+    BOOST_CHECK(CFeeRate(CAmount(-1), FeeEstimateMode::BTC_KVB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::BTC_KVB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(1), FeeEstimateMode::BTC_KVB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(26), FeeEstimateMode::BTC_KVB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123), FeeEstimateMode::BTC_KVB) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate(CAmount(-100000), FeeEstimateMode::SAT_VB) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate(CAmount(-99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(0), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(99999), FeeEstimateMode::SAT_VB) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate(CAmount(100000), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(100001), FeeEstimateMode::SAT_VB) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate(CAmount(2690000), FeeEstimateMode::SAT_VB) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate(CAmount(123456789), FeeEstimateMode::SAT_VB) == CFeeRate(1234));\n+    // ...with invalid unit values returns CFeeRate(0)\n+    BOOST_CHECK(CFeeRate(CAmount{123}, FeeEstimateMode::UNSET) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, std::numeric_limits<size_t>::max()) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, 0) == CFeeRate{0});\n+    BOOST_CHECK(CFeeRate(CAmount{123}, -1) == CFeeRate{0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532973622",
      "id" : 532973622,
      "in_reply_to_id" : 532520613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk3MzYyMg==",
      "original_commit_id" : "9d41bb8c7b9c8650e0a79c3026d9bba355908e71",
      "original_line" : 115,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 541379645,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532973622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532973650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532973650"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated to allow passing in the fee mode to work with both sat/vB and BTC/kvB",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-11-30T23:35:38Z",
      "diff_hunk" : "@@ -40,6 +41,7 @@ int ParseSighashString(const UniValue& sighash);\n \n // core_write.cpp\n UniValue ValueFromAmount(const CAmount& amount);\n+UniValue ValueFromFeeRate(const CFeeRate& fee_rate);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r532973650",
      "id" : 532973650,
      "in_reply_to_id" : 532537444,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk3MzY1MA==",
      "original_commit_id" : "3c92185b95764f5c3536637e5923316cd9c2d8b0",
      "original_line" : 44,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/core_io.h",
      "position" : null,
      "pull_request_review_id" : 541379682,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532973650",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @MarcoFalke. Dropped the policy/feerate refactoring commit and the FeeModeToBytes commit, changed the new CFeeRate delegating constructor to named constructors, dropped SatsToString in favor of making the existing ToString more flexible, and made ValueFromFeeRate able to work with both sat/b and btc/kb.",
      "created_at" : "2020-11-30T23:43:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-736122119",
      "id" : 736122119,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNjEyMjExOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-30T23:43:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736122119",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r535180868"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535180868"
         }
      },
      "author_association" : "MEMBER",
      "body" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d\r\n\r\nWorth noting that the new settings is not persisted?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-03T12:17:56Z",
      "diff_hunk" : "@@ -2350,6 +2350,79 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r535180868",
      "id" : 535180868,
      "line" : 2360,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE4MDg2OA==",
      "original_commit_id" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d",
      "original_line" : 2360,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 46,
      "pull_request_review_id" : 543895756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535180868",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r535181606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535181606"
         }
      },
      "author_association" : "MEMBER",
      "body" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d\r\n\r\nWhy return wallet name? What about returning previous effective value?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-03T12:19:10Z",
      "diff_hunk" : "@@ -2350,6 +2350,79 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB)};\n+            CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            std::string result, error;\n+\n+            if (amount == CFeeRate{0}) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+            CHECK_NONFATAL(result.empty() != error.empty());\n+\n+            UniValue obj{UniValue::VOBJ};\n+            obj.pushKV(\"wallet_name\", wallet.GetName());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r535181606",
      "id" : 535181606,
      "line" : 2417,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE4MTYwNg==",
      "original_commit_id" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d",
      "original_line" : 2417,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 103,
      "pull_request_review_id" : 543895756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535181606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r535197819"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535197819"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why would the user care about the previous value? If they did, they could call getwalletinfo",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-03T12:45:12Z",
      "diff_hunk" : "@@ -2350,6 +2350,79 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB)};\n+            CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            std::string result, error;\n+\n+            if (amount == CFeeRate{0}) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+            CHECK_NONFATAL(result.empty() != error.empty());\n+\n+            UniValue obj{UniValue::VOBJ};\n+            obj.pushKV(\"wallet_name\", wallet.GetName());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r535197819",
      "id" : 535197819,
      "in_reply_to_id" : 535181606,
      "line" : 2417,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE5NzgxOQ==",
      "original_commit_id" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d",
      "original_line" : 2417,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 103,
      "pull_request_review_id" : 543916122,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535197819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r535202326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535202326"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, the same goes for the wallet name.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-03T12:52:11Z",
      "diff_hunk" : "@@ -2350,6 +2350,79 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB)};\n+            CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            std::string result, error;\n+\n+            if (amount == CFeeRate{0}) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+            CHECK_NONFATAL(result.empty() != error.empty());\n+\n+            UniValue obj{UniValue::VOBJ};\n+            obj.pushKV(\"wallet_name\", wallet.GetName());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r535202326",
      "id" : 535202326,
      "in_reply_to_id" : 535181606,
      "line" : 2417,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIwMjMyNg==",
      "original_commit_id" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d",
      "original_line" : 2417,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 103,
      "pull_request_review_id" : 543921436,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535202326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r536313815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536313815"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, added to settxfee and setfeerate helps",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-04T19:01:45Z",
      "diff_hunk" : "@@ -2350,6 +2350,79 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r536313815",
      "id" : 536313815,
      "in_reply_to_id" : 535180868,
      "line" : 2360,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMxMzgxNQ==",
      "original_commit_id" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d",
      "original_line" : 2360,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 46,
      "pull_request_review_id" : 545221268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536313815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r536327333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536327333"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd prefer to keep wallet name.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-04T19:23:23Z",
      "diff_hunk" : "@@ -2350,6 +2350,79 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB)};\n+            CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            std::string result, error;\n+\n+            if (amount == CFeeRate{0}) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+            CHECK_NONFATAL(result.empty() != error.empty());\n+\n+            UniValue obj{UniValue::VOBJ};\n+            obj.pushKV(\"wallet_name\", wallet.GetName());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r536327333",
      "id" : 536327333,
      "in_reply_to_id" : 535181606,
      "line" : 2417,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMyNzMzMw==",
      "original_commit_id" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d",
      "original_line" : 2417,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 103,
      "pull_request_review_id" : 545235643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536327333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @promag and @MarcoFalke for the review feedback. Updates in latest push:\r\n\r\n- Check for and raise \"Invalid amount\" if the passed value is non-representable by CFeeRate (lesson learned from #20546)\r\n\r\n- Fix the error messages if the current value is unset, to indicate a current value of \"0 (unset)\" instead of \"0.000 sat/vB\"\r\n\r\n- Make sure the tests check passing amounts with a string as well as a number, and update the coverage for the first two items\r\n\r\n- Update the settxfee and setfeerate helps with @promag's suggestion\r\n",
      "created_at" : "2020-12-04T19:39:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-738978601",
      "id" : 738978601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczODk3ODYwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-04T19:39:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738978601",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'll re-push with a release note in f4195d2a94b",
      "created_at" : "2020-12-04T19:40:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-738979284",
      "id" : 738979284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczODk3OTI4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-04T19:40:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738979284",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r536520301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536520301"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should be thrown in the amountfromvalue function. Doing it here with the zero-not-zero hack smells a bit like a layer violation",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-05T05:42:49Z",
      "diff_hunk" : "@@ -2350,6 +2352,81 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option. Like -paytxfee, it is not persisted after bitcoind shutdown/restart.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            const CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            const CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            const CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            const CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            const CFeeRate zero{CFeeRate{0}};\n+            const std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            const std::string current_setting{strprintf(\"The current setting of %s for this wallet remains unchanged.\", wallet.m_pay_tx_fee == zero ? \"0 (unset)\" : wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB))};\n+            std::string result, error;\n+\n+            if (amount == zero) {\n+                if (request.params[0].get_real() != 0) throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r536520301",
      "id" : 536520301,
      "line" : 2401,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUyMDMwMQ==",
      "original_commit_id" : "43b0d996b2b1f7f9dc2dc1510f2ad0ded0454d46",
      "original_line" : 2401,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 545413735,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536520301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r536553427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536553427"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This should be thrown in the amountfromvalue function.\n\nthanks -- was thinking the same",
      "commit_id" : "43b0d996b2b1f7f9dc2dc1510f2ad0ded0454d46",
      "created_at" : "2020-12-05T08:24:43Z",
      "diff_hunk" : "@@ -2350,6 +2352,81 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option. Like -paytxfee, it is not persisted after bitcoind shutdown/restart.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            const CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            const CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            const CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            const CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            const CFeeRate zero{CFeeRate{0}};\n+            const std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            const std::string current_setting{strprintf(\"The current setting of %s for this wallet remains unchanged.\", wallet.m_pay_tx_fee == zero ? \"0 (unset)\" : wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB))};\n+            std::string result, error;\n+\n+            if (amount == zero) {\n+                if (request.params[0].get_real() != 0) throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r536553427",
      "id" : 536553427,
      "in_reply_to_id" : 536520301,
      "line" : 2402,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjU1MzQyNw==",
      "original_commit_id" : "43b0d996b2b1f7f9dc2dc1510f2ad0ded0454d46",
      "original_line" : 2402,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 545495601,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-05T08:24:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/536553427",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537320950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537320950"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wouldn't `deprecated` instead of `superseded` be more consistent with previous RPC API \"changes\"?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-07T08:38:23Z",
      "diff_hunk" : "@@ -2311,10 +2311,12 @@ static RPCHelpMan listlockunspent()\n static RPCHelpMan settxfee()\n {\n     return RPCHelpMan{\"settxfee\",\n-                \"\\nSet the transaction fee per kB for this wallet. Overrides the global -paytxfee command line parameter.\\n\"\n-                \"Can be deactivated by passing 0 as the fee. In that case automatic fee selection will be used by default.\\n\",\n+                \"\\n(Superseded by the setfeerate RPC in sat/vB, which it is recommended to use instead.)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537320950",
      "id" : 537320950,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyMDk1MA==",
      "original_commit_id" : "43b0d996b2b1f7f9dc2dc1510f2ad0ded0454d46",
      "original_line" : 2314,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 545927434,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537320950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537322225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537322225"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No strong opinion about the wallet name in the response. I think it does not hurt and in asynchronous environments it might simplify the client code.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-07T08:40:24Z",
      "diff_hunk" : "@@ -2350,6 +2350,79 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB)};\n+            CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            std::string result, error;\n+\n+            if (amount == CFeeRate{0}) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+            CHECK_NONFATAL(result.empty() != error.empty());\n+\n+            UniValue obj{UniValue::VOBJ};\n+            obj.pushKV(\"wallet_name\", wallet.GetName());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537322225",
      "id" : 537322225,
      "in_reply_to_id" : 535181606,
      "line" : 2417,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyMjIyNQ==",
      "original_commit_id" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d",
      "original_line" : 2417,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 103,
      "pull_request_review_id" : 545927434,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537322225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537331663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537331663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we should establish a guideline first on what input parameters to return. I don't think we've done this in the past and this could lead to user confusion: \"What am I supposed to do with the return parameter that is equal to the input parameter? Assert that they are the same? Ignore?\"\r\n\r\nIf this is something useful to return for every wallet RPC, then all wallet RPCs should be updated.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-07T08:55:30Z",
      "diff_hunk" : "@@ -2350,6 +2350,79 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB)};\n+            CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            std::string result, error;\n+\n+            if (amount == CFeeRate{0}) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+            CHECK_NONFATAL(result.empty() != error.empty());\n+\n+            UniValue obj{UniValue::VOBJ};\n+            obj.pushKV(\"wallet_name\", wallet.GetName());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537331663",
      "id" : 537331663,
      "in_reply_to_id" : 535181606,
      "line" : 2417,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMzMTY2Mw==",
      "original_commit_id" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d",
      "original_line" : 2417,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 103,
      "pull_request_review_id" : 545940184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537331663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537459363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537459363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "After #20546 this will go away:\r\n```diff\r\n-            const CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\r\n+            const CFeeRate amount{FeeRateFromValueInSatB(request.params[0])};\r\n@@ -2399,7 +2399,6 @@ static RPCHelpMan setfeerate()\r\n \r\n             if (amount == zero) {\r\n-                if (request.params[0].get_real() != 0) throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount\");\r\n                 wallet.m_pay_tx_fee = amount;\r\n```\r\n\r\n",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-07T12:12:50Z",
      "diff_hunk" : "@@ -2350,6 +2352,81 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option. Like -paytxfee, it is not persisted after bitcoind shutdown/restart.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            const CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            const CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            const CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            const CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            const CFeeRate zero{CFeeRate{0}};\n+            const std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            const std::string current_setting{strprintf(\"The current setting of %s for this wallet remains unchanged.\", wallet.m_pay_tx_fee == zero ? \"0 (unset)\" : wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB))};\n+            std::string result, error;\n+\n+            if (amount == zero) {\n+                if (request.params[0].get_real() != 0) throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537459363",
      "id" : 537459363,
      "in_reply_to_id" : 536520301,
      "line" : 2401,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1OTM2Mw==",
      "original_commit_id" : "43b0d996b2b1f7f9dc2dc1510f2ad0ded0454d46",
      "original_line" : 2401,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 546090909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537459363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537460090"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537460090"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, will do on next update.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-07T12:14:20Z",
      "diff_hunk" : "@@ -2311,10 +2311,12 @@ static RPCHelpMan listlockunspent()\n static RPCHelpMan settxfee()\n {\n     return RPCHelpMan{\"settxfee\",\n-                \"\\nSet the transaction fee per kB for this wallet. Overrides the global -paytxfee command line parameter.\\n\"\n-                \"Can be deactivated by passing 0 as the fee. In that case automatic fee selection will be used by default.\\n\",\n+                \"\\n(Superseded by the setfeerate RPC in sat/vB, which it is recommended to use instead.)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537460090",
      "id" : 537460090,
      "in_reply_to_id" : 537320950,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ2MDA5MA==",
      "original_commit_id" : "43b0d996b2b1f7f9dc2dc1510f2ad0ded0454d46",
      "original_line" : 2314,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 546091821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537460090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537466440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537466440"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I see it as good for rpcs that make per-wallet changes, like here and upgradewallet as a recent example (see upgradewallet help). It would also be good in rpc/cli options that return info on a per-wallet basis, like getwalletinfo but also -rpcwallet= -getinfo, for example.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2020-12-07T12:25:38Z",
      "diff_hunk" : "@@ -2350,6 +2350,79 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            std::string current_amount_str{wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB)};\n+            CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            std::string result, error;\n+\n+            if (amount == CFeeRate{0}) {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. The current setting of %s for this wallet remains unchanged.\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_VB), current_amount_str);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+            CHECK_NONFATAL(result.empty() != error.empty());\n+\n+            UniValue obj{UniValue::VOBJ};\n+            obj.pushKV(\"wallet_name\", wallet.GetName());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r537466440",
      "id" : 537466440,
      "in_reply_to_id" : 535181606,
      "line" : 2417,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ2NjQ0MA==",
      "original_commit_id" : "c6e9bfd1bd9d6a65673fbe1c278a7c7ada35273d",
      "original_line" : 2417,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 103,
      "pull_request_review_id" : 546099376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537466440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-12-10T08:19:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-742361387",
      "id" : 742361387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjM2MTM4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T08:19:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742361387",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r551037047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551037047"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This PR has been gated since a month on the changes in #20546 to handle this properly, but that PR didn't go anywhere, so I'll drop this check for now.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-01-03T18:09:14Z",
      "diff_hunk" : "@@ -2350,6 +2352,81 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option. Like -paytxfee, it is not persisted after bitcoind shutdown/restart.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            const CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            const CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            const CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            const CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            const CFeeRate zero{CFeeRate{0}};\n+            const std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            const std::string current_setting{strprintf(\"The current setting of %s for this wallet remains unchanged.\", wallet.m_pay_tx_fee == zero ? \"0 (unset)\" : wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB))};\n+            std::string result, error;\n+\n+            if (amount == zero) {\n+                if (request.params[0].get_real() != 0) throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r551037047",
      "id" : 551037047,
      "in_reply_to_id" : 536520301,
      "line" : 2401,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAzNzA0Nw==",
      "original_commit_id" : "43b0d996b2b1f7f9dc2dc1510f2ad0ded0454d46",
      "original_line" : 2401,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 560715658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551037047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r551067979"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551067979"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hm, realized I need to leave this check or else will have to drop a bunch of tests, which would be a shame and a regression. A lot of work went into this and it was waiting for #20546. I guess  leaving it as-is for now.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-01-03T23:24:12Z",
      "diff_hunk" : "@@ -2350,6 +2352,81 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option. Like -paytxfee, it is not persisted after bitcoind shutdown/restart.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            const CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            const CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            const CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            const CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            const CFeeRate zero{CFeeRate{0}};\n+            const std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            const std::string current_setting{strprintf(\"The current setting of %s for this wallet remains unchanged.\", wallet.m_pay_tx_fee == zero ? \"0 (unset)\" : wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB))};\n+            std::string result, error;\n+\n+            if (amount == zero) {\n+                if (request.params[0].get_real() != 0) throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r551067979",
      "id" : 551067979,
      "in_reply_to_id" : 536520301,
      "line" : 2401,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA2Nzk3OQ==",
      "original_commit_id" : "43b0d996b2b1f7f9dc2dc1510f2ad0ded0454d46",
      "original_line" : 2401,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 560733367,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551067979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r551233059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551233059"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-01-04T10:29:50Z",
      "diff_hunk" : "@@ -2311,10 +2311,12 @@ static RPCHelpMan listlockunspent()\n static RPCHelpMan settxfee()\n {\n     return RPCHelpMan{\"settxfee\",\n-                \"\\nSet the transaction fee per kB for this wallet. Overrides the global -paytxfee command line parameter.\\n\"\n-                \"Can be deactivated by passing 0 as the fee. In that case automatic fee selection will be used by default.\\n\",\n+                \"\\n(Superseded by the setfeerate RPC in sat/vB, which it is recommended to use instead.)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r551233059",
      "id" : 551233059,
      "in_reply_to_id" : 537320950,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIzMzA1OQ==",
      "original_commit_id" : "43b0d996b2b1f7f9dc2dc1510f2ad0ded0454d46",
      "original_line" : 2314,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 560924214,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-28T21:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551233059",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Code review ACK [73a0f02](https://github.com/bitcoin/bitcoin/commit/73a0f0276392e4432774807f2e4b8a3f4dfc69ab), needs to squash some commits. Also add release notes?\r\n\r\nRebased, updated settxfee help with @jonasschnelli's suggestion, added release notes per @promag's suggestion. Sorry for the delay in updating, this was waiting since a month on the improvements and fixes in #20546 but I've had to move forward without them. I think this is done. Please re-ACK if you can.",
      "created_at" : "2021-01-04T10:37:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-753897808",
      "id" : 753897808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Mzg5NzgwOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-04T14:28:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753897808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-01-28T18:58:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-769302489",
      "id" : 769302489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2OTMwMjQ4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-28T18:58:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769302489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I start reviewing this one.",
      "created_at" : "2021-02-11T20:16:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-777761310",
      "id" : 777761310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3Nzc2MTMxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-11T20:16:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777761310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r574818565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574818565"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "On line 47 I believe it should be `(nFeePaid * 1e3 / 1e8) == (nFeePaid / 1e5)`\r\nand not `(nFeePaid * 1e8 / 1e3) == (nFeePaid / 1e5)`",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-11T20:51:59Z",
      "diff_hunk" : "@@ -39,6 +39,8 @@ class CFeeRate\n         // We've previously had bugs creep in from silent double->int conversion...\n         static_assert(std::is_integral<I>::value, \"CFeeRate should be used without floats\");\n     }\n+    static CFeeRate FromSatB(CAmount fee_rate);\n+    static CFeeRate FromBtcKb(CAmount fee_rate);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r574818565",
      "id" : 574818565,
      "line" : 43,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDgxODU2NQ==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 43,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/policy/feerate.h",
      "position" : 5,
      "pull_request_review_id" : 588974368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T09:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574818565",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r574822083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574822083"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do we want to assert some other `FeeEstimateMode` isn't passed by mistake?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-11T20:58:09Z",
      "diff_hunk" : "@@ -35,10 +35,21 @@ CAmount CFeeRate::GetFee(size_t nBytes_) const\n     return nFee;\n }\n \n-std::string CFeeRate::ToString(const FeeEstimateMode& fee_estimate_mode) const\n+std::string CFeeRate::ToString(FeeEstimateMode mode, bool with_units) const\n {\n-    switch (fee_estimate_mode) {\n-    case FeeEstimateMode::SAT_VB: return strprintf(\"%d.%03d %s/vB\", nSatoshisPerK / 1000, nSatoshisPerK % 1000, CURRENCY_ATOM);\n-    default:                      return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n+    if (with_units) {\n+        switch (mode) {\n+        case FeeEstimateMode::SAT_VB:\n+            return strprintf(\"%d.%03d %s/vB\", nSatoshisPerK / 1000, nSatoshisPerK % 1000, CURRENCY_ATOM);\n+        default:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r574822083",
      "id" : 574822083,
      "line" : 44,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDgyMjA4Mw==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 44,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : 14,
      "pull_request_review_id" : 588974368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T09:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574822083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r574829284"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574829284"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "what happens if we pass an absurdly big number?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-11T21:11:24Z",
      "diff_hunk" : "@@ -105,11 +129,20 @@ BOOST_AUTO_TEST_CASE(BinaryOperatorTest)\n \n BOOST_AUTO_TEST_CASE(ToStringTest)\n {\n-    CFeeRate feeRate;\n-    feeRate = CFeeRate(1);\n-    BOOST_CHECK_EQUAL(feeRate.ToString(), \"0.00000001 BTC/kvB\");\n-    BOOST_CHECK_EQUAL(feeRate.ToString(FeeEstimateMode::BTC_KVB), \"0.00000001 BTC/kvB\");\n-    BOOST_CHECK_EQUAL(feeRate.ToString(FeeEstimateMode::SAT_VB), \"0.001 sat/vB\");\n+    CFeeRate fee_rate{CFeeRate(1)};\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(), \"0.00000001 BTC/kvB\");\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(FeeEstimateMode::BTC_KVB), \"0.00000001 BTC/kvB\");\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(FeeEstimateMode::SAT_VB), \"0.001 sat/vB\");\n+\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(FeeEstimateMode::BTC_KVB, /* with_units */ true), \"0.00000001 BTC/kvB\");\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(FeeEstimateMode::SAT_VB, /* with_units */ true), \"0.001 sat/vB\");\n+\n+    BOOST_CHECK_EQUAL(CFeeRate(1).ToString(FeeEstimateMode::SAT_VB, /* with_units */ false), \"0.001\");\n+    BOOST_CHECK_EQUAL(CFeeRate(70).ToString(FeeEstimateMode::SAT_VB, /* with_units */ false), \"0.070\");\n+    BOOST_CHECK_EQUAL(CFeeRate(3141).ToString(FeeEstimateMode::SAT_VB, /* with_units */ false), \"3.141\");\n+    BOOST_CHECK_EQUAL(CFeeRate(10002).ToString(FeeEstimateMode::SAT_VB, /* with_units */ false), \"10.002\");\n+    BOOST_CHECK_EQUAL(CFeeRate(3141).ToString(FeeEstimateMode::BTC_KVB, /* with_units */ false), \"0.00003141\");\n+    BOOST_CHECK_EQUAL(CFeeRate(10002).ToString(FeeEstimateMode::BTC_KVB, /* with_units */ false), \"0.00010002\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r574829284",
      "id" : 574829284,
      "line" : 145,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDgyOTI4NA==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 145,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : 63,
      "pull_request_review_id" : 588974368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T09:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574829284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575054081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575054081"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Aren't `CFeeRate` various constructors and `ToString()` already covered by other unit tests? Unit tests have a non-zero maintenance cost and I'm missing the point of such duplication.  The `ValueFromFeeRate` fn is pretty trivial and I believe the test should be trivial as well.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-12T08:23:35Z",
      "diff_hunk" : "@@ -216,6 +216,29 @@ BOOST_AUTO_TEST_CASE(rpc_parse_monetary_values)\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"93e+9\")), UniValue); //overflow error\n }\n \n+BOOST_AUTO_TEST_CASE(rpc_parse_fee_rate_values)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575054081",
      "id" : 575054081,
      "line" : 219,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTA1NDA4MQ==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 219,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/rpc_tests.cpp",
      "position" : 4,
      "pull_request_review_id" : 588974368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T09:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575054081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575057976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575057976"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm confused why do we put fee estimate mode and fee units, which are different things, into the same enum. I understand this is a bit out of scope for this PR, but I'd appreciate if you could provide some historical context for educational purposes.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-12T08:31:20Z",
      "diff_hunk" : "@@ -35,10 +35,21 @@ CAmount CFeeRate::GetFee(size_t nBytes_) const\n     return nFee;\n }\n \n-std::string CFeeRate::ToString(const FeeEstimateMode& fee_estimate_mode) const\n+std::string CFeeRate::ToString(FeeEstimateMode mode, bool with_units) const\n {\n-    switch (fee_estimate_mode) {\n-    case FeeEstimateMode::SAT_VB: return strprintf(\"%d.%03d %s/vB\", nSatoshisPerK / 1000, nSatoshisPerK % 1000, CURRENCY_ATOM);\n-    default:                      return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n+    if (with_units) {\n+        switch (mode) {\n+        case FeeEstimateMode::SAT_VB:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575057976",
      "id" : 575057976,
      "line" : 42,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTA1Nzk3Ng==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 42,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : 12,
      "pull_request_review_id" : 588974368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T09:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575057976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575068701"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575068701"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do we need `GetFeePerK()` call here and below?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-12T08:51:41Z",
      "diff_hunk" : "@@ -2349,6 +2351,81 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option. Like -paytxfee, it is not persisted after bitcoind shutdown/restart.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            const CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            const CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575068701",
      "id" : 575068701,
      "line" : 2392,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTA2ODcwMQ==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 2392,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 78,
      "pull_request_review_id" : 588974368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T09:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575068701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575083741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575083741"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "what happens if we pass an absurdly big number?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-12T09:18:23Z",
      "diff_hunk" : "@@ -86,6 +90,26 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateNamedConstructorsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate)\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(-1)) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(0)) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(1)) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(26)) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(123)) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(-100000)) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(-99999)) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(0)) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(99999)) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(100000)) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(100001)) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(2690000)) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(123456789)) == CFeeRate(1234));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575083741",
      "id" : 575083741,
      "line" : 110,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTA4Mzc0MQ==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 110,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/test/amount_tests.cpp",
      "position" : 35,
      "pull_request_review_id" : 588974368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T09:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575083741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575326397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575326397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIRC that was done in https://github.com/bitcoin/bitcoin/pull/11413, but good point. I'll look at fixing that.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-12T15:59:32Z",
      "diff_hunk" : "@@ -35,10 +35,21 @@ CAmount CFeeRate::GetFee(size_t nBytes_) const\n     return nFee;\n }\n \n-std::string CFeeRate::ToString(const FeeEstimateMode& fee_estimate_mode) const\n+std::string CFeeRate::ToString(FeeEstimateMode mode, bool with_units) const\n {\n-    switch (fee_estimate_mode) {\n-    case FeeEstimateMode::SAT_VB: return strprintf(\"%d.%03d %s/vB\", nSatoshisPerK / 1000, nSatoshisPerK % 1000, CURRENCY_ATOM);\n-    default:                      return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n+    if (with_units) {\n+        switch (mode) {\n+        case FeeEstimateMode::SAT_VB:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575326397",
      "id" : 575326397,
      "in_reply_to_id" : 575057976,
      "line" : 42,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTMyNjM5Nw==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 42,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : 12,
      "pull_request_review_id" : 589598480,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T15:59:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575326397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575328223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575328223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, just remembered that I wrote a patch in November 2020 that does that but I have not opened it yet to not have too many PRs open.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-12T16:02:15Z",
      "diff_hunk" : "@@ -35,10 +35,21 @@ CAmount CFeeRate::GetFee(size_t nBytes_) const\n     return nFee;\n }\n \n-std::string CFeeRate::ToString(const FeeEstimateMode& fee_estimate_mode) const\n+std::string CFeeRate::ToString(FeeEstimateMode mode, bool with_units) const\n {\n-    switch (fee_estimate_mode) {\n-    case FeeEstimateMode::SAT_VB: return strprintf(\"%d.%03d %s/vB\", nSatoshisPerK / 1000, nSatoshisPerK % 1000, CURRENCY_ATOM);\n-    default:                      return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n+    if (with_units) {\n+        switch (mode) {\n+        case FeeEstimateMode::SAT_VB:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r575328223",
      "id" : 575328223,
      "in_reply_to_id" : 575057976,
      "line" : 42,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTMyODIyMw==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 42,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/policy/feerate.cpp",
      "position" : 12,
      "pull_request_review_id" : 589600912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-12T16:02:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575328223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thank you @S3RK for your feedback, much appreciated. I'll reply soon.",
      "created_at" : "2021-02-12T16:04:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-778283513",
      "id" : 778283513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3ODI4MzUxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-12T16:04:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778283513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r577425133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577425133"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is already defined earlier",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-17T08:48:34Z",
      "diff_hunk" : "@@ -717,7 +719,7 @@ def test_option_feerate(self):\n \n         result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n         btc_kvb_to_sat_vb = 100000  # (1e5)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r577425133",
      "id" : 577425133,
      "line" : 721,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzQyNTEzMw==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 721,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : 15,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577425133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r577433229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577433229"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        fee_sat_per_byte = 100\r\n        self.nodes[2].setfeerate(fee_sat_per_byte)\r\n````",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-17T09:00:13Z",
      "diff_hunk" : "@@ -197,7 +198,7 @@ def run_test(self):\n         # Send 10 BTC normal\n         address = self.nodes[0].getnewaddress(\"test\")\n         fee_per_byte = Decimal('0.001') / 1000\n-        self.nodes[2].settxfee(fee_per_byte * 1000)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r577433229",
      "id" : 577433229,
      "line" : 200,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzQzMzIyOQ==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 200,
      "original_position" : 12,
      "original_start_line" : 200,
      "path" : "test/functional/wallet_basic.py",
      "position" : 12,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "LEFT",
      "start_line" : 200,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577433229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r577435827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577435827"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by setfeerate)\r\n```",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-17T09:04:19Z",
      "diff_hunk" : "@@ -717,7 +719,7 @@ def test_option_feerate(self):\n \n         result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r577435827",
      "id" : 577435827,
      "line" : 720,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzQzNTgyNw==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 720,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : 14,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577435827",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r577436322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577436322"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There are couple more comments to fix below",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-17T09:05:07Z",
      "diff_hunk" : "@@ -817,9 +819,9 @@ def test_option_subtract_fee_from_outputs(self):\n         rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n \n         # Test subtract fee from outputs with feeRate (BTC/kvB)\n-        result = [self.nodes[3].fundrawtransaction(rawtx),  # uses self.min_relay_tx_fee (set by settxfee)\n+        result = [self.nodes[3].fundrawtransaction(rawtx),  # uses self.min_relay_tx_fee (set by setfeerate)\n             self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": []}),  # empty subtraction list\n-            self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}),  # uses self.min_relay_tx_fee (set by settxfee)\n+            self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}),  # uses self.min_relay_tx_fee (set by setfeerate)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r577436322",
      "id" : 577436322,
      "line" : 824,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzQzNjMyMg==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 824,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "test/functional/rpc_fundrawtransaction.py",
      "position" : 42,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/577436322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578214456"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578214456"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why this specific value of `0.01`? In the test case with `settxfee` we have a different value of `0.00001000`. Should we have a testcase-wise constant?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-18T08:20:05Z",
      "diff_hunk" : "@@ -315,6 +317,42 @@ def test_dust_to_fee(self, rbf_node, dest_address):\n     self.clear_mempool()\n \n \n+def test_setfeerate(self, rbf_node, dest_address):\n+    self.log.info(\"Test setfeerate\")\n+\n+    def test_response(*, wallet=\"RBF wallet\", requested=0, expected=0, error=None, msg):\n+        assert_equal(rbf_node.setfeerate(requested), {\"wallet_name\": wallet, \"fee_rate\": expected, (\"error\" if error else \"result\"): msg})\n+\n+    # Test setfeerate with too high/low values returns expected errors\n+    new = Decimal(\"10000.001\")\n+    test_response(requested=new, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be greater than the wallet max fee rate of 10000.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+    new = Decimal(\"0.999\")\n+    test_response(requested=new, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be less than the minimum relay fee rate of 1.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+    fee_rate = Decimal(\"2.001\")\n+    test_response(requested=fee_rate, expected=fee_rate, msg=f\"Fee rate for transactions with this wallet successfully set to {fee_rate} sat/vB\")\n+    new = Decimal(\"1.999\")\n+    test_response(requested=new, expected=fee_rate, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be less than the wallet min fee rate of 2.000 sat/vB. The current setting of {fee_rate} sat/vB for this wallet remains unchanged.\")\n+\n+    # Test setfeerate with valid values returns expected results\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    fee_rate = 25\n+    test_response(requested=fee_rate, expected=fee_rate, msg=\"Fee rate for transactions with this wallet successfully set to 25.000 sat/vB\")\n+    bumped_tx = rbf_node.bumpfee(rbfid)\n+    actual_feerate = bumped_tx[\"fee\"] * COIN / rbf_node.getrawtransaction(bumped_tx[\"txid\"], True)[\"vsize\"]\n+    assert_greater_than(Decimal(\"0.01\"), abs(fee_rate - actual_feerate))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578214456",
      "id" : 578214456,
      "line" : 342,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODIxNDQ1Ng==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 342,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : 51,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578214456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578216166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578216166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This test has nothing to do with `bumpfee` RPC. I believe it's better to have it in a separate test. `wallet_bumpfee.py` is already huge",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-18T08:22:54Z",
      "diff_hunk" : "@@ -315,6 +317,42 @@ def test_dust_to_fee(self, rbf_node, dest_address):\n     self.clear_mempool()\n \n \n+def test_setfeerate(self, rbf_node, dest_address):\n+    self.log.info(\"Test setfeerate\")\n+\n+    def test_response(*, wallet=\"RBF wallet\", requested=0, expected=0, error=None, msg):\n+        assert_equal(rbf_node.setfeerate(requested), {\"wallet_name\": wallet, \"fee_rate\": expected, (\"error\" if error else \"result\"): msg})\n+\n+    # Test setfeerate with too high/low values returns expected errors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578216166",
      "id" : 578216166,
      "line" : 326,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODIxNjE2Ng==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 326,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : 35,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578216166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578217369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578217369"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same as above. This belongs to `setfeerate` test, not `bumpfee` test",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-18T08:24:51Z",
      "diff_hunk" : "@@ -315,6 +317,42 @@ def test_dust_to_fee(self, rbf_node, dest_address):\n     self.clear_mempool()\n \n \n+def test_setfeerate(self, rbf_node, dest_address):\n+    self.log.info(\"Test setfeerate\")\n+\n+    def test_response(*, wallet=\"RBF wallet\", requested=0, expected=0, error=None, msg):\n+        assert_equal(rbf_node.setfeerate(requested), {\"wallet_name\": wallet, \"fee_rate\": expected, (\"error\" if error else \"result\"): msg})\n+\n+    # Test setfeerate with too high/low values returns expected errors\n+    new = Decimal(\"10000.001\")\n+    test_response(requested=new, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be greater than the wallet max fee rate of 10000.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+    new = Decimal(\"0.999\")\n+    test_response(requested=new, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be less than the minimum relay fee rate of 1.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+    fee_rate = Decimal(\"2.001\")\n+    test_response(requested=fee_rate, expected=fee_rate, msg=f\"Fee rate for transactions with this wallet successfully set to {fee_rate} sat/vB\")\n+    new = Decimal(\"1.999\")\n+    test_response(requested=new, expected=fee_rate, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be less than the wallet min fee rate of 2.000 sat/vB. The current setting of {fee_rate} sat/vB for this wallet remains unchanged.\")\n+\n+    # Test setfeerate with valid values returns expected results\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    fee_rate = 25\n+    test_response(requested=fee_rate, expected=fee_rate, msg=\"Fee rate for transactions with this wallet successfully set to 25.000 sat/vB\")\n+    bumped_tx = rbf_node.bumpfee(rbfid)\n+    actual_feerate = bumped_tx[\"fee\"] * COIN / rbf_node.getrawtransaction(bumped_tx[\"txid\"], True)[\"vsize\"]\n+    assert_greater_than(Decimal(\"0.01\"), abs(fee_rate - actual_feerate))\n+    test_response(msg=\"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\")\n+\n+    # Test setfeerate with a different -maxtxfee",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578217369",
      "id" : 578217369,
      "line" : 345,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODIxNzM2OQ==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 345,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : 54,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578217369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578237490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578237490"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "While I think it's a great idea to have this function, I'm a bit concerned that it'll be not used and forgotten. Do you have plans to do a follow up and put it to use by replacing `ValuefromAmount`  in appropriate places ?",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-18T08:55:35Z",
      "diff_hunk" : "@@ -27,6 +28,11 @@ UniValue ValueFromAmount(const CAmount& amount)\n             strprintf(\"%s%d.%08d\", sign ? \"-\" : \"\", quotient, remainder));\n }\n \n+UniValue ValueFromFeeRate(const CFeeRate& fee_rate, FeeEstimateMode mode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578237490",
      "id" : 578237490,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODIzNzQ5MA==",
      "original_commit_id" : "aee3571392d095412ac6bda132ec6b1db6c42774",
      "original_line" : 31,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/core_write.cpp",
      "position" : 12,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578237490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578247858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578247858"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I love the idea of named constructors. Should we strive for consistency and use them in more places? ",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-18T09:10:49Z",
      "diff_hunk" : "@@ -216,7 +216,7 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        cc.m_feerate = CFeeRate::FromSatB(AmountFromValue(fee_rate));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578247858",
      "id" : 578247858,
      "line" : 219,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODI0Nzg1OA==",
      "original_commit_id" : "c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
      "original_line" : 219,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578247858",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578248762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578248762"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Again I believe those check would be better places in a separate `setfeerate` test",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-02-18T09:12:13Z",
      "diff_hunk" : "@@ -77,6 +79,51 @@ def test_tx_size_too_large(self):\n         )\n         self.nodes[0].settxfee(0)\n \n+    def test_setfeerate(self):\n+        self.log.info(\"Test setfeerate\")\n+        self.restart_node(0, extra_args=[\"-mintxfee=0.00003141\"])  # 3.141 sat/vB\n+        node = self.nodes[0]\n+\n+        def test_response(*, requested=0, expected=0, error=None, msg):\n+            assert_equal(node.setfeerate(requested), {\"wallet_name\": \"test_wallet\", \"fee_rate\": expected, (\"error\" if error else \"result\"): msg})\n+\n+        # Test setfeerate with 10.0001 (CFeeRate rounding), \"10.001\" and \"4\" sat/vB",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r578248762",
      "id" : 578248762,
      "line" : 81,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODI0ODc2Mg==",
      "original_commit_id" : "529bfc16ffb35c5356e27f61d59395fae6707bcd",
      "original_line" : 90,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "test/functional/wallet_create_tx.py",
      "position" : 88,
      "pull_request_review_id" : 591955344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-18T09:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578248762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-03-03T19:25:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-789994671",
      "id" : 789994671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4OTk5NDY3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-03T19:25:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789994671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r661067971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661067971"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Even 0.01 is too small for this. Signatures can be 71-73 bytes long, but even 72 bytes throws this off.\r\n\r\n```suggestion\r\n    bumped_txdetails = rbf_node.getrawtransaction(bumped_tx[\"txid\"], True)\r\n    allow_for_bytes_offset = len(bumped_txdetails['vout']) * 2  # potentially up to 2 bytes per output\r\n    actual_fee = bumped_tx[\"fee\"] * COIN\r\n    assert_approx(actual_fee, fee_rate * bumped_txdetails['vsize'], fee_rate * allow_for_bytes_offset)\r\n```",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-06-30T01:33:18Z",
      "diff_hunk" : "@@ -315,6 +317,42 @@ def test_dust_to_fee(self, rbf_node, dest_address):\n     self.clear_mempool()\n \n \n+def test_setfeerate(self, rbf_node, dest_address):\n+    self.log.info(\"Test setfeerate\")\n+\n+    def test_response(*, wallet=\"RBF wallet\", requested=0, expected=0, error=None, msg):\n+        assert_equal(rbf_node.setfeerate(requested), {\"wallet_name\": wallet, \"fee_rate\": expected, (\"error\" if error else \"result\"): msg})\n+\n+    # Test setfeerate with too high/low values returns expected errors\n+    new = Decimal(\"10000.001\")\n+    test_response(requested=new, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be greater than the wallet max fee rate of 10000.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+    new = Decimal(\"0.999\")\n+    test_response(requested=new, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be less than the minimum relay fee rate of 1.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+    fee_rate = Decimal(\"2.001\")\n+    test_response(requested=fee_rate, expected=fee_rate, msg=f\"Fee rate for transactions with this wallet successfully set to {fee_rate} sat/vB\")\n+    new = Decimal(\"1.999\")\n+    test_response(requested=new, expected=fee_rate, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be less than the wallet min fee rate of 2.000 sat/vB. The current setting of {fee_rate} sat/vB for this wallet remains unchanged.\")\n+\n+    # Test setfeerate with valid values returns expected results\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    fee_rate = 25\n+    test_response(requested=fee_rate, expected=fee_rate, msg=\"Fee rate for transactions with this wallet successfully set to 25.000 sat/vB\")\n+    bumped_tx = rbf_node.bumpfee(rbfid)\n+    actual_feerate = bumped_tx[\"fee\"] * COIN / rbf_node.getrawtransaction(bumped_tx[\"txid\"], True)[\"vsize\"]\n+    assert_greater_than(Decimal(\"0.01\"), abs(fee_rate - actual_feerate))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r661067971",
      "id" : 661067971,
      "in_reply_to_id" : 578214456,
      "line" : 342,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTA2Nzk3MQ==",
      "original_commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "original_line" : 342,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "test/functional/wallet_bumpfee.py",
      "position" : 51,
      "pull_request_review_id" : 695624387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-30T01:33:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661067971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r668992659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668992659"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet: update rpcwallet to CFeeRate named constructors\" (c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57)\r\n\r\nWow wow. I see that this is doing the right thing, but these constructor names seem absurdly misleading! The `AmountFromValue` function converts a floating point number to a fixed-point representation of that number multiplied by `10e8`. So even though the `fee_rate` univalue argument has units of sat/B, the `AmountFromValue` integer return value is no longer in the same units, because it has been multiplied by 100000000. So `FromSatB` should really be called `CFeeRate::FromSatB_Fixed_Point_e8` or something like that because it is taking sat/B values with a very specific, atypical number representation.\r\n\r\nAn analogous thing is happening with `FromBtcKb` below. It doesn't really take a BTC/Kb argument. That's basically false advertising. What it really takes is a BTC/Kb*10e8 argument which is the same as a sat/Kb argument, so this constructor would be more accurately called `CFeeRate::FromSatKb`\r\n\r\nI guess I'm having a negative reaction to these constructor names, but I do think this could be cleaned up pretty easily. I think it would be better if `CFeeRate` class had no involvement with univalue parsing or fixed point representations, and if it didn't (mis)use the CAmount type as a way to represent rates when `CAmount` is used almost everywhere else only to represent quantities.\r\n\r\nMy suggestion to be less confusing / misleading would be to drop the two new `CFeeRate` constructors, and just add standalone RPC util functions:\r\n\r\n```c+++\r\nCFeeRate FeeRateFromSatB(const UniValue& value);\r\nCFeeRate FeeRateFromBtcKb(const UniValue& value);\r\n```\r\n\r\nThen call these to simplify `CFeeRate::FromSatB(AmountFromValue(feerate))` as `FeeRateFromSatB(feerate)` here and in `setfeerate` and to simplify `CFeeRate::FromBtcKb(AmountFromValue(feerate))` as `FeeRateFromBtcKb(feerate)` in `settxfee`",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-07-13T17:59:11Z",
      "diff_hunk" : "@@ -216,7 +216,7 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        cc.m_feerate = CFeeRate::FromSatB(AmountFromValue(fee_rate));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r668992659",
      "id" : 668992659,
      "line" : 219,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODk5MjY1OQ==",
      "original_commit_id" : "c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
      "original_line" : 219,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 705491866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-13T17:59:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668992659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks! Huge apologies, since the merge of https://github.com/bitcoin/bitcoin/pull/21786 that resolved some of these things differently (at a lower level), the approach of the initial refactoring commits is obsolete and being changed. I need to push an update and have been intending to do so for some time. ð",
      "created_at" : "2021-07-13T18:08:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#issuecomment-879294418",
      "id" : 879294418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20391",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3OTI5NDQxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-13T18:08:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/879294418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r717384933"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717384933"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Wow wow. I see that this is doing the right thing, but these constructor names seem absurdly misleading!\r\n\r\nThe current code in master isn't exactly clear right now either:\r\n\r\n```cpp\r\n    /** Constructor for a fee rate in satoshis per kvB (sat/kvB).\r\n     *\r\n     *  Passing a num_bytes value of COIN (1e8) returns a fee rate in satoshis per vB (sat/vB),\r\n     *  e.g. (nFeePaid * 1e8 / 1e3) == (nFeePaid / 1e5),\r\n     *  where 1e5 is the ratio to convert from BTC/kvB to sat/vB.\r\n     */\r\n    CFeeRate(const CAmount& nFeePaid, uint32_t num_bytes);\r\n```\r\n\r\nI think it would be good to figure out how to clear this up before introducing further features that depend on this.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-09-28T09:15:27Z",
      "diff_hunk" : "@@ -216,7 +216,7 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        cc.m_feerate = CFeeRate::FromSatB(AmountFromValue(fee_rate));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r717384933",
      "id" : 717384933,
      "in_reply_to_id" : 668992659,
      "line" : 219,
      "node_id" : "PRRC_kwDOABII584qwmzl",
      "original_commit_id" : "c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
      "original_line" : 219,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 765182502,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-28T09:15:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717384933",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r717386735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717386735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Original discussion for reference: https://github.com/bitcoin/bitcoin/pull/20305#discussion_r522371491",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-09-28T09:17:48Z",
      "diff_hunk" : "@@ -216,7 +216,7 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        cc.m_feerate = CFeeRate::FromSatB(AmountFromValue(fee_rate));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r717386735",
      "id" : 717386735,
      "in_reply_to_id" : 668992659,
      "line" : 219,
      "node_id" : "PRRC_kwDOABII584qwnPv",
      "original_commit_id" : "c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
      "original_line" : 219,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 765185036,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-28T09:17:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717386735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r718439850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/718439850"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> > Wow wow. I see that this is doing the right thing, but these constructor names seem absurdly misleading!\r\n> \r\n> The current code in master isn't exactly clear right now either:\r\n> \r\n> ```c++\r\n>     /** Constructor for a fee rate in satoshis per kvB (sat/kvB).\r\n>      *\r\n>      *  Passing a num_bytes value of COIN (1e8) returns a fee rate in satoshis per vB (sat/vB),\r\n>      *  e.g. (nFeePaid * 1e8 / 1e3) == (nFeePaid / 1e5),\r\n>      *  where 1e5 is the ratio to convert from BTC/kvB to sat/vB.\r\n>      */\r\n>     CFeeRate(const CAmount& nFeePaid, uint32_t num_bytes);\r\n> ```\r\n> \r\n> I think it would be good to figure out how to clear this up before introducing further features that depend on this.\r\n\r\nOk, seems best to close this then. It's almost a year old and needs to be done differently.  I think using sat/vB is still a popular request from users and plan to try again a bit later.",
      "commit_id" : "1002e2d0d7f10221a3542391a429978cdcf0d426",
      "created_at" : "2021-09-29T12:04:49Z",
      "diff_hunk" : "@@ -216,7 +216,7 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        cc.m_feerate = CFeeRate::FromSatB(AmountFromValue(fee_rate));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20391#discussion_r718439850",
      "id" : 718439850,
      "in_reply_to_id" : 668992659,
      "line" : 219,
      "node_id" : "PRRC_kwDOABII584q0oWq",
      "original_commit_id" : "c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
      "original_line" : 219,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 766583708,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20391",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-29T12:04:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/718439850",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
