[
   {
      "author_association" : "MEMBER",
      "body" : "TIL. \r\n\r\nConcept ACK.\r\n\r\nSomething could be said for also passing it in the non-debug case. After all, even without explicit debug information enabled, gcc adds some level of basic debug information like symbols, and yes this includes file paths:\r\n\r\n```\r\n$ strings -a src/bitcoind | grep /home/$USER|wc -l\r\n1524\r\n```\r\nNot all of these come from debug information though! They may also be from `__FILE__` macro. Is there a flag for that? E.g.:\r\n```\r\n$ objdump --dwarf=info src/bitcoind|grep DW_AT_comp_dir\r\n    <1a>   DW_AT_comp_dir    : (indirect string, offset: 0x9f): /home/â¦/projects/bitcoin/bitcoin/build/src\r\n    <282c9>   DW_AT_comp_dir    : (indirect string, offset: 0x9f): /home/â¦/projects/bitcoin/bitcoin/build/src\r\n    <1f2597>   DW_AT_comp_dir    : (indirect string, offset: 0x9f): /home/â¦/projects/bitcoin/bitcoin/build/src\r\n    <263930>   DW_AT_comp_dir    : (indirect string, offset: 0x9f): /home/â¦/projects/bitcoin/bitcoin/build/src\r\n    <399a44>   DW_AT_comp_dir    : (indirect string, offset: 0x9f): /home/â¦/projects/bitcoin/bitcoin/build/src\r\n$ strip src/bitcoind\r\n$ objdump --dwarf=info src/bitcoind|grep DW_AT_comp_dir\r\n$ strings -a src/bitcoind | grep /home/$USER|wc -l\r\n134\r\n```\r\n\r\n>  allow ccache to share objects between worktrees (provided the source and compile options are the same).\r\n\r\nThis sound sensible on first glance but does make me wonder how ccache \"knows\" this? When can it assume objects are portable between build directories. Does it explicitly pay attention to this flag?\r\n\r\nEdit: also mind that if you're doing depends builds (I didn't in my examples above), things become even more complicated because the depends are also compiled from specific directories inside the specific work tree.",
      "created_at" : "2020-11-09T08:43:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723861213",
      "id" : 723861213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzg2MTIxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-09T08:51:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723861213",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> They may also be from __FILE__ macro. Is there a flag for that? E.g.:\r\n\r\nFWIW there's, starting with GCC 8, also `-fmacro-prefix-map=old=new`. Go wild :slightly_smiling_face: \r\n",
      "created_at" : "2020-11-09T08:54:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723867871",
      "id" : 723867871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzg2Nzg3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-09T08:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723867871",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "And also a `-ffile-prefix-map=old=new`, apparently.",
      "created_at" : "2020-11-09T08:58:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723869819",
      "id" : 723869819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzg2OTgxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-09T08:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723869819",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This sound sensible on first glance but does make me wonder how ccache \"knows\" this? When can it assume objects are portable between build directories. Does it explicitly pay attention to this flag?\r\n\r\nYeah:\r\n\r\n```sh\r\n$ strings /usr/bin/ccache | grep .-map\r\n-fdebug-prefix-map=\r\n-ffile-prefix-map=\r\n-fmacro-prefix-map=\r\n```\r\n\r\n> Not all of these come from debug information though! They may also be from `__FILE__` macro.\r\n\r\nAh, gcc and clang are both giving me relative paths for `__FILE__` even without any special options.\r\n\r\n> also mind that if you're doing depends builds (I didn't in my examples above), things become even more complicated ..\r\n\r\nThis doesn't pass the options through to even the in-tree submodules, so univalue and secp will continue getting the absolute path encoded; they don't take much time/space to compile though, so I figure that's okay.\r\n\r\n> And also a `-ffile-prefix-map=old=new`, apparently.\r\n\r\nI think clang supports `-fdebug-prefix-map` but not `macro` or `file` so I think it makes sense to just do `debug` and `macro` independently.\r\n\r\n",
      "created_at" : "2020-11-09T09:58:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723904643",
      "id" : 723904643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzkwNDY0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-09T09:58:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723904643",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added `-fmacro-prefix-map` and made them conditional on ccache being enabled.",
      "created_at" : "2020-11-09T10:13:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723913822",
      "id" : 723913822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzkxMzgyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-09T10:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723913822",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Yeah:\r\n> $ strings /usr/bin/ccache | grep .-map\r\n> -fdebug-prefix-map=\r\n> -ffile-prefix-map=\r\n> -fmacro-prefix-map=\r\n\r\nThanks, good to know.\r\n\r\n> Ah, gcc and clang are both giving me relative paths for __FILE__ even without any special options.\r\n\r\nIt depends on what is passed to the compiler. I think for the macros they embed those paths literally. For the DWARF information, the absolute path is used (and there's also *header paths*, not just compilation unit paths). In any case there seems variance between systems and compilers here. As alwaysâ¦\r\n\r\n> Added -fmacro-prefix-map and made them conditional on ccache being enabled\r\n\r\nConcept ACK on making it depend on --enable-ccache.\r\n",
      "created_at" : "2020-11-09T10:36:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723926652",
      "id" : 723926652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzkyNjY1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-09T10:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723926652",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: path name leaking should be avoided",
      "created_at" : "2020-11-09T12:02:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723970516",
      "id" : 723970516,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzk3MDUxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-09T12:02:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723970516",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Anyone want to bump their acks from concept to reality?",
      "created_at" : "2021-01-10T06:21:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-757424816",
      "id" : 757424816,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NzQyNDgxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-10T06:21:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757424816",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cr ACK 7abac98d3e3c1bc8ad66cb5c05184b9c5cc674d5: patch looks correct",
      "created_at" : "2021-01-10T15:55:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-757498544",
      "id" : 757498544,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NzQ5ODU0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-10T15:55:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757498544",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Wouldn't it be easier to set `CCACHE_NOHASHDIR=1`? Sure, the paths in the debug information might be wrong, but does it matter?",
      "created_at" : "2021-04-20T12:02:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-823217203",
      "id" : 823217203,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzIxNzIwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T12:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823217203",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Wouldn't it be easier to set `CCACHE_NOHASHDIR=1`? Sure, the paths in the debug information might be wrong, but does it matter?\r\n\r\nAIUI, if the `__FILE__` macro doesn't match (ie what macro-prefix-map fixes), the preprocessed input to ccache will be different, causing ccache misses. debug-prefix-map fixes the deug info paths, and then triggers ccache to automatically set `CCACHE_NOHASHDIR=1`. So these seems like the \"proper\" way to do it and it's not a big patch, so setting `CCACHE_NOHASHDIR=1` doesn't seem that much easier?",
      "created_at" : "2021-04-20T12:37:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-823238543",
      "id" : 823238543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzIzODU0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T12:37:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823238543",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sure, just wanted to ask because the discussion didn't mention `CCACHE_NOHASHDIR` at all.",
      "created_at" : "2021-04-20T19:02:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-823527711",
      "id" : 823527711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20353",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMzUyNzcxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-20T19:02:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823527711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
