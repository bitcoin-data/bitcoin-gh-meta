{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "DNS seed node lookup ambiguous in some (rare) scenarios.\r\n\r\nTo reproduce run:\r\n\r\n```\r\n$ RES_OPTIONS=\"options ndots:15\" LOCALDOMAIN=\"localtest.me\" src/bitcoind\r\n```\r\n\r\nContext from https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890227550:\r\n\r\n> It is outside of the scope of this PR but I think it would make sense to err on the safe side and specify all seed domain names with an ending dot to make them unambiguous.\r\n> \r\n> In other words â¦\r\n> \r\n> ```c++\r\n>     vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\r\n> ```\r\n>\r\n> â¦ instead of the current â¦\r\n> \r\n> ```c++\r\n>     vSeeds.emplace_back(\"seed.bitcoin.sipa.be\"); // Pieter Wuille, only supports x1, x5, x9, and xd\r\n> ```\r\n> \r\n> The former is guaranteed to be interpreted as `seed.bitcoin.sipa.be.` whereas the latter may be interpreted as say`seed.bitcoin.sipa.be.megacorp.com.` depending on the content of the user's `/etc/resolv.conf`.\r\n> \r\n> The case I'm thinking about is if `search megacorp.com` is specified in `/etc/resolv.conf` and say `options ndots:5` is used.\r\n> \r\n> Looking up `seed.bitcoin.sipa.be` would then result in the following DNS traffic:\r\n> \r\n> ```\r\n> IP <src> > <resolver>.53: A? seed.bitcoin.sipa.be.megacorp.com.\r\n> IP <resolver>.53 > <src>: NXDomain\r\n> IP <src> > <resolver>.53: A? seed.bitcoin.sipa.be.\r\n> IP <resolver>.53 > <src>: Some valid response.\r\n> ```\r\n> \r\n> In other words `seed.bitcoin.sipa.be.megacorp.com.` would be tried before `seed.bitcoin.sipa.be.` :(\r\n\r\nI can think of three different approaches to fixing this:\r\n* Add a `bool allow_non_fqdn` argument to `Lookup*` functions, and automatically add a trailing `.` before passing the hostname string to `getaddrinfo` if `!allow_non_fqdn`. This approach would make the choice between FQDN vs \"potentially non-FQDN\" explicit. I think this is my preferred approach since the caller would explicitly signal his/her intent.\r\n* Specify seed node strings as FQDNs by appending `.` to the seed hostname strings in `src/chainparams.cpp`'s `vSeed`.\r\n* Change from `strprintf(\"x%x.%s\", requiredServiceBits, seed)` to `strprintf(\"x%x.%s.\", requiredServiceBits, seed)` when building the seed hostname in `CConnman::ThreadDNSAddressSeed()`.\r\n\r\nBackground: https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890227550 https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890582857 https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890763573",
   "closed_at" : "2021-10-16T00:19:05Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 24,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23193/comments",
   "created_at" : "2021-10-05T16:01:53Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23193/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/23193",
   "id" : 1016504550,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23193/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII5848lqDm",
   "number" : 23193,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23193/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23193/timeline",
   "title" : "DNS seed node lookup is ambiguous in some (rare) scenarios",
   "updated_at" : "2021-10-16T00:19:05Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23193",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
