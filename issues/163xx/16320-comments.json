[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15134](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15134.html) (tests: Switch one of the Travis jobs to an unsigned char environment (-funsigned-char) by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-07-01T09:17:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-507185778",
      "id" : 507185778,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzE4NTc3OA==",
      "updated_at" : "2019-07-01T09:17:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/507185778",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think there is a value to non-deterministic tests, as long as their seed is known (e.g printed to stdout at the beginning of the test, or written to a file on failure, ...)",
      "created_at" : "2019-07-01T13:35:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-507267041",
      "id" : 507267041,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzI2NzA0MQ==",
      "updated_at" : "2019-07-01T13:35:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/507267041",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I also think that non-deterministic tests can be valuable; as an example, a non-deterministic functional test (`feature_dbcrash.py`) found a bug in the non-atomic utxo writes PR (#10148).  I doubt I would have found that bug without it.\r\n\r\nSo if this PR's intention is to move towards eliminating non-determinism as a tool in our testing, then I tend to concept NACK.",
      "created_at" : "2019-07-01T18:42:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-507379190",
      "id" : 507379190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzM3OTE5MA==",
      "updated_at" : "2019-07-01T18:42:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/507379190",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke @sdaftuar \r\n\r\nIt seems like I didn't properly communicate the goal of this PR :-)  Sorry about that.\r\n\r\nThe goal of this PR is to make sure line coverage-reports are deterministic.\r\n\r\nThis PR addresses #14343: \"coverage reports non-deterministic\" (opened by you @MarcoFalke :-))\r\n\r\nThe problem is described in MarcoFalke's issue:\r\n\r\n> Our unit tests and functional tests are non-deterministic in the overall execution, but the coverage should not be affected by that. I.e. some functions might be executed in a different order or sometimes skipped, but every line, function and branch should be executed at least once.\r\n> \r\n> This is currently not true, even for serialization errors that should be hit exactly once.\r\n> \r\n> Beside the obvious issue of missing test coverage on some runs, this also makes it impossible to see how test coverage changes between two commits.\r\n\r\nMore specifically this PR makes sure line coverage is stable between unit test runs - from the OP of this PR:\r\n\r\n> A necessary condition for meaningful line coverage measuring is that the test suite is deterministic in the sense that the set of lines executed at least once is identical between test suite runs.\r\n\r\nI've now updated the PR title to better reflect the goal of this PR.\r\n\r\n@MarcoFalke @sdaftuar Just to make sure we share the same goal: we all want line coverage unit tests reports to be deterministic, right? :-)",
      "created_at" : "2019-07-02T07:58:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-507565847",
      "id" : 507565847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzU2NTg0Nw==",
      "updated_at" : "2019-07-02T08:04:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/507565847",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not familiar with the line coverage reports at all and don't really have a view there.  If we merged this PR, then in the future if someone wanted to write a unit test that was non-deterministic, what should they do if this linter fails?",
      "created_at" : "2019-07-03T18:34:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-508208915",
      "id" : 508208915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwODIwODkxNQ==",
      "updated_at" : "2019-07-03T18:34:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508208915",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar If line coverage fluctuation in a test is *intentional* then one would simply add a suppression to `test_deterministic_coverage.sh` :-)\r\n\r\nThis PR is only meant to guard against _accidental_ introduction of _new_  tests which turns the line coverage number into a random process.\r\n\r\nMore concretely the situation I want to guard against is the following: line coverage is reported as 80,5% on first run, 80,6% on second run, 80,4% on third run, etc :-)\r\n\r\nSome context:\r\n* #15296 (\"tests: Add script checking for deterministic line coverage in unit tests\")\r\n* #15324 (\"test: Make bloom tests deterministic\")\r\n* #15327 (\"tests: Make test updatecoins_simulation_test deterministic\")\r\n* #14343 (\"coverage reports non-deterministic\")\r\n",
      "created_at" : "2019-07-03T21:06:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-508255011",
      "id" : 508255011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwODI1NTAxMQ==",
      "updated_at" : "2019-07-03T21:06:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508255011",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift Thanks for clarifying that.\r\n\r\nI tend to think that test writers face too many hurdles and knowledge requirements about the repo (and figuring out how to deal with linters that provide unclear benefits when applied as a hard-and-fast rule, like this one would).  It's demoralizing to include a test for something and then have some unrelated script break for spurious reasons that requires learning and investigating something new in order to make travis pass.\r\n\r\nSo I think I'm still a Concept NACK.  I think our concerns about line-coverage, which reflect a goal about the whole project's test suite, should not provide too much inconvenience for contributors working on a smaller piece.",
      "created_at" : "2019-07-04T15:33:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-508520861",
      "id" : 508520861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwODUyMDg2MQ==",
      "updated_at" : "2019-07-04T15:33:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508520861",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke As the person who filed issue #14343 (\"coverage reports non-deterministic\") which this PR tries to address: can you clarify your position?\r\n\r\nPersonally I kind of took it for granted that we want to know how suggested PR:s changes unit test line coverage. Assumptions are dangerous :-)\r\n\r\nIf the consensus opinion is that we are okay with the unit test line coverage sometimes being a random process (80,5% on first run, 80,6% on second run, 80,4% on third run, etc.) then this PR is clearly not needed and I'll close :-)",
      "created_at" : "2019-07-04T15:49:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-508524855",
      "id" : 508524855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwODUyNDg1NQ==",
      "updated_at" : "2019-07-04T15:56:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508524855",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Assumptions are dangerous :-)\r\n\r\nI'm more concerned about the potential for reduced input from high-quality, long term contributors due to the overhead of new scripts, lints, tools etc than I am about occasionally seeing a small variation in coverage output. So I'm in agreement with @sdaftuar here.",
      "created_at" : "2019-07-05T02:30:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-508609509",
      "id" : 508609509,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwODYwOTUwOQ==",
      "updated_at" : "2019-07-05T02:30:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508609509",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think it is nice to know whether a new test has stable line coverage, but it non-stable coverage shouldn't be blocking a merge. Especially, since it might not be trivial to make them stable (c.f. https://github.com/bitcoin/bitcoin/issues/14343#issuecomment-426940085)\r\n\r\nI guess I wouldn't mind if some of the linter were put behind the `allow_failures` travis flag.",
      "created_at" : "2019-07-08T21:13:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-509394406",
      "id" : 509394406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTM5NDQwNg==",
      "updated_at" : "2019-07-08T21:13:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/509394406",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Using `allow_failures` sounds like a very good idea. I'll investigate! :-)",
      "created_at" : "2019-07-09T16:50:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320#issuecomment-509720659",
      "id" : 509720659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTcyMDY1OQ==",
      "updated_at" : "2019-07-09T16:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/509720659",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
