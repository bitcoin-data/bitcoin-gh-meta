{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Add Travis check to make sure unit test coverage reports stay deterministic.\r\n\r\nRationale:\r\n\r\nA necessary condition for meaningful line coverage measuring is that the test suite\r\nis deterministic in the sense that the set of lines executed at least once is identical between test suite runs.\r\n\r\nThis PR addresses issue #14343 (MarcoFalke): \"coverage reports non-deterministic\":\r\n\r\n> Our unit tests and functional tests are non-deterministic in the overall execution, but the coverage should not be affected by that. I.e. some functions might be executed in a different order or sometimes skipped, but every line, function and branch should be executed at least once.\r\n> \r\n> This is currently not true, even for serialization errors that should be hit exactly once.\r\n> \r\n> Beside the obvious issue of missing test coverage on some runs, this also makes it impossible to see how test coverage changes between two commits.\r\n\r\nExample output in case of line coverage deterministic unit tests:\r\n\r\n```\r\n[2019-06-30 08:32:59] Measuring coverage, run #1 of 3\r\n[2019-06-30 08:36:38] Measuring coverage, run #2 of 3\r\n[2019-06-30 08:40:15] Measuring coverage, run #3 of 3\r\n\r\nCoverage test passed: Deterministic coverage across 3 runs.\r\n```\r\n\r\nExample output in case of line coverage non-deterministic unit tests:\r\n\r\n```\r\n[2019-06-30 08:32:59] Measuring coverage, run #1 of 3\r\n[2019-06-30 08:36:38] Measuring coverage, run #2 of 3\r\n\r\nThe line coverage is non-deterministic between runs.\r\n\r\nThe test suite must be deterministic in the sense that the set of lines executed at least\r\nonce must be identical between runs. This is a necessary condition for meaningful coverage\r\nmeasuring.\r\n\r\n--- gcovr.run-1.txt   2019-01-30 23:14:07.419418694 +0100\r\n+++ gcovr.run-2.txt   2019-01-30 23:15:57.998811282 +0100\r\n@@ -471,7 +471,7 @@\r\n test/crypto_tests.cpp                        270     270   100%\r\n test/cuckoocache_tests.cpp                   142     142   100%\r\n test/dbwrapper_tests.cpp                     148     148   100%\r\n-test/denialofservice_tests.cpp               225     225   100%\r\n+test/denialofservice_tests.cpp               225     224    99%   363\r\n test/descriptor_tests.cpp                    116     116   100%\r\n test/fs_tests.cpp                             24       3    12%   14,16-17,19-20,23,25-26,29,31-32,35-36,39,41-42,45-46,49,51-52\r\n test/getarg_tests.cpp                        111     111   100%\r\n@@ -585,5 +585,5 @@\r\n zmq/zmqpublishnotifier.h                       5       0     0%   12,31,37,43,49\r\n zmq/zmqrpc.cpp                                21       0     0%   16,18,20,22,33-35,38-45,49,52,56,60,62-63\r\n ------------------------------------------------------------------------------\r\n-TOTAL                                      61561   27606    44%\r\n+TOTAL                                      61561   27605    44%\r\n ------------------------------------------------------------------------------\r\n```\r\n\r\nThis Travis check uses `test_deterministic_coverage.sh` which was introduced in #15296.\r\n\r\nTo make sure `test_deterministic_coverage.sh` won't trigger any line coverage non-determinism alarms with the current test suite I've performed 8 000 test runs (against 98958c81f5065a5de13699d46995d278ecb6709e) which all gave identical line coverage results.\r\n\r\nNote to reviewers: Which would be the most appropriate Travis job to put this on? I'm currently using `x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout]`, but I'm afraid the total run-time of that job is a bit on the high end with this check included. Would it be preferable to add a new job instead of adding to an existing job? Please advice :-)",
   "closed_at" : "2019-08-10T06:35:02Z",
   "closed_by" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   },
   "comments" : 11,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320/comments",
   "created_at" : "2019-07-01T08:56:30Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320",
   "id" : 462594395,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MjkzMjQzNjcy",
   "number" : 16320,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/16320.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16320",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/16320.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16320"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "ci: Add Travis check to make sure unit test coverage reports stay deterministic",
   "updated_at" : "2019-08-10T06:35:02Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16320",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
