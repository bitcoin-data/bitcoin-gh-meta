{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "In dbwrapper_tests/existing_data_no_obfuscate:\r\n\r\n```\r\nStarting program: /home/instagibbs/elements-dev/bitcoin/src/test/test_bitcoin --run_test=dbwrapper_tests/existing_data_no_obfuscate\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\nRunning 1 test case...\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n__GI___libc_free (mem=0x824448b48184389) at malloc.c:2951\r\n2951\tmalloc.c: No such file or directory.\r\n(gdb) bt\r\n#0  __GI___libc_free (mem=0x824448b48184389) at malloc.c:2951\r\n#1  0x0000555555e84fa4 in leveldb::(anonymous namespace)::PosixEnv::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__debug::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) ()\r\n#2  0x0000555555e67018 in leveldb::DBImpl::Recover (this=this@entry=0x55555698ef60, \r\n    edit=edit@entry=0x7fffffffa350, save_manifest=save_manifest@entry=0x7fffffffa30f)\r\n    at leveldb/db/db_impl.cc:320\r\n#3  0x0000555555e676e1 in leveldb::DB::Open (options=..., \r\n    dbname=\"/tmp/test_bitcoin/1537983863_1022840678/existing_data_no_obfuscate\", \r\n    dbptr=0x555556985f50) at leveldb/db/db_impl.cc:1499\r\n#4  0x0000555555aeb2c7 in CDBWrapper::CDBWrapper(boost::filesystem::path const&, unsigned long, bool, bool, bool) ()\r\n#5  0x0000555555737872 in dbwrapper_tests::existing_data_no_obfuscate::test_method() ()\r\n#6  0x0000555555738785 in dbwrapper_tests::existing_data_no_obfuscate_invoker() ()\r\n#7  0x0000555555630bde in boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) ()\r\n#8  0x0000555555f709bb in boost::function0<void>::operator() (this=0x555556822ec8)\r\n    at ./boost/function/function_template.hpp:760\r\n#9  0x0000555555f700a1 in boost::detail::forward::operator() (this=0x7fffffffc6a8)\r\n    at ./boost/test/impl/execution_monitor.ipp:1300\r\n#10 0x0000555555f70dc6 in boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke (function_obj_ptr=...) at ./boost/function/function_template.hpp:138\r\n#11 0x0000555555f70ba1 in boost::function0<int>::operator() (this=0x7fffffffc6a0)\r\n    at ./boost/function/function_template.hpp:760\r\n#12 0x0000555555f7034b in boost::detail::do_invoke<boost::shared_ptr<boost::detail::translator_holder_base>, boost::function<int ()> >(boost::shared_ptr<boost::detail::translator_holder_base> const&, boost::function<int ()> const&) (tr=..., F=...) at ./boost/test/impl/execution_monitor.ipp:281\r\n#13 0x0000555555f6ec93 in boost::execution_monitor::catch_signals(boost::function<int ()> const&) (\r\n    this=0x5555567f2180 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...) at ./boost/test/impl/execution_monitor.ipp:864\r\n#14 0x0000555555f6ee1c in boost::execution_monitor::execute(boost::function<int ()> const&) (\r\n    this=0x5555567f2180 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...) at ./boost/test/impl/execution_monitor.ipp:1203\r\n#15 0x0000555555f6faa2 in boost::execution_monitor::vexecute(boost::function<void ()> const&) (\r\n    this=0x5555567f2180 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, F=...) at ./boost/test/impl/execution_monitor.ipp:1309\r\n#16 0x0000555555f0be16 in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned int) (\r\n    this=0x5555567f2180 <boost::unit_test::singleton<boost::unit_test::unit_test_monitor_t>::instance()::the_inst>, func=..., timeout=0) at ./boost/test/impl/unit_test_monitor.ipp:46\r\n#17 0x0000555555ec113b in boost::unit_test::framework::state::execute_test_tree (\r\n    this=0x5555567f1fa0 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=65661, timeout=0, p_random_generator=0x0) at ./boost/test/impl/framework.ipp:717\r\n#18 0x0000555555ec0a8e in boost::unit_test::framework::state::execute_test_tree (\r\n    this=0x5555567f1fa0 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=28, timeout=0, p_random_generator=0x0) at ./boost/test/impl/framework.ipp:666\r\n#19 0x0000555555ec0a8e in boost::unit_test::framework::state::execute_test_tree (\r\n    this=0x5555567f1fa0 <boost::unit_test::framework::impl::(anonymous namespace)::s_frk_state()::the_inst>, tu_id=1, timeout=0, p_random_generator=0x0) at ./boost/test/impl/framework.ipp:666\r\n#20 0x0000555555eb9d8d in boost::unit_test::framework::run (id=1, continue_test=true)\r\n    at ./boost/test/impl/framework.ipp:1442\r\n#21 0x0000555555f081aa in boost::unit_test::unit_test_main (\r\n    init_func=0x5555555eb69a <init_unit_test_suite(int, char**)>, argc=2, argv=0x7fffffffdd38)\r\n    at ./boost/test/impl/unit_test_main.ipp:231\r\n#22 0x0000555555f084ab in main (argc=2, argv=0x7fffffffdd38)\r\n    at ./boost/test/impl/unit_test_main.ipp:286\r\n```\r\n",
   "closed_at" : "2019-08-09T16:02:54Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
      "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
      "followers_url" : "https://api.github.com/users/instagibbs/followers",
      "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/instagibbs",
      "id" : 5767891,
      "login" : "instagibbs",
      "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
      "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
      "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
      "repos_url" : "https://api.github.com/users/instagibbs/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/instagibbs"
   },
   "comments" : 7,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14330/comments",
   "created_at" : "2018-09-26T17:47:00Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14330/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/14330",
   "id" : 364140650,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14330/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWUzNjQxNDA2NTA=",
   "number" : 14330,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "[tests] segfault during`DEBUG=1` run of existing_data_no_obfuscate locally",
   "updated_at" : "2019-08-09T16:02:54Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14330",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
      "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
      "followers_url" : "https://api.github.com/users/instagibbs/followers",
      "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/instagibbs",
      "id" : 5767891,
      "login" : "instagibbs",
      "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
      "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
      "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
      "repos_url" : "https://api.github.com/users/instagibbs/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/instagibbs"
   }
}
