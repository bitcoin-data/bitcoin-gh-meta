[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This is rather reaching. An astonishingly few amount of nodes are used for rpc purposes, and even fewer of those are going to be in a position where they can't easily upgrade. Their contribution to the amount of vulnerable nodes is negligible at best.\r\n\r\nA much directer way of supporting the goal of having users patch their nodes quickly would be to have had the patch back-ported for previous releases much faster.\r\n\r\nAlthough I do think core is a bit aggressive in how they deprecate stuff (and require using a deprecated flag) which makes upgrading a bit more painful than it should be.  And I have been bitten really badly by some instability before (namely changes in the edge-cases of ListSinceBlock which broke my application about 3 times) to the point I had to stop even using it.  However, I would argue a lot of that pain is caused by poor documentation  (some stuff literally has no documentation of what it should do so it's anyones guess what is correct behavior) and a lack of tests (to catch changes/regressions) and ultimately a lack of developers.\r\n\r\nI think increasing the maintenance burden by imposing a \"never break user space\" will just strictly make things worse.",
      "created_at" : "2018-10-02T16:51:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426348445",
      "id" : 426348445,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjM0ODQ0NQ==",
      "updated_at" : "2018-10-02T16:51:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426348445",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9326759?v=4",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "node_id" : "MDQ6VXNlcjkzMjY3NTk=",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't think you can ascribe the reason for users not upgrading to breaking RPC changes. This is the reason why backports exists, and we maintain old versions for critical vulnerabilities.\n\nI think it is far more likely that a large portion of non-upgraded nodes are in fact not being used for anything, and their operators don't care about what chain they accept.",
      "created_at" : "2018-10-03T03:14:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426498640",
      "id" : 426498640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjQ5ODY0MA==",
      "updated_at" : "2018-10-03T03:14:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426498640",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Link to related material: https://bitcoincore.org/en/lifecycle/",
      "created_at" : "2018-10-03T03:58:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426504245",
      "id" : 426504245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjUwNDI0NQ==",
      "updated_at" : "2018-10-03T03:58:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426504245",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree with @sipa. @nopara73 - you make an argument for backporting critical fixes to previous versions, which in fact we already do.\r\n\r\n> Although I do think core is a bit aggressive in how they deprecate stuff (and require using a deprecated flag) which makes upgrading a bit more painful than it should be.\r\n\r\n@RHavar - I'm a bit surprised by this sentence. I introduced the `deprecatedrpc` flag in https://github.com/bitcoin/bitcoin/pull/11031. The idea is that downstream users have at least one release where both the old API and new API are valid. To use the old API, the user *must* take action (enable the flag). That means they can't not be aware that the old API is being deprecated in the next version. The alternative would be just to have a written warning, which could easily be missed by users.\r\n\r\nIs the `deprecatedrpc` burdensome for users? If so, do you have a suggestion for a better way to deprecate old APIs?",
      "created_at" : "2018-10-03T06:54:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426530906",
      "id" : 426530906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjUzMDkwNg==",
      "updated_at" : "2018-10-03T06:54:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426530906",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jnewbery I understand the theory, it's just that in practice it's kind of painful\r\n\r\nTaking a recent example, I just [published a little program](https://github.com/rhavar/bustapay) which uses `signrawtransaction`. But that's been deprecated and effectively renamed to `signrawtransactionwithwallet` in 0.17.\r\n\r\nOk, cool, I'm aware of that. So what should I do? Use the `signrawtransactionwithwallet` but now it has a hard dependency on 0.17. Or should I continue to use `signrawtransaction` but require running with `-deprecatedrpc=signrawtransaction` in 0.17 ?  This is a problem that all the bindings need to deal with too now, and there's no good solution (unless you expect them to do \"feature detection\" and dynamically switch between the two, but at that point it raises that question of was is _really_ worth creating all that complexity for applications, just so you're sure they're aware of your deprecation schedule?) .\r\n\r\nThe fact is this sort of deprecation stops allowing smooth upgrades, and honestly -- I don't think you can justify it the aggressiveness of it. It's my experience that a WARN_ONCE style deprecation system is vastly superior and smoother. Yes, it's easier to ignore -- but those people will end up hurting themselves -- for everyone else, everything just goes smoother.\r\n\r\nAnd probably more importantly: if the system uses deprecation warnings I can just do the upgrade, and then migrate away from the deprecated methods at my leisure. While with the deprecated-method-hidden-behind-a-flag system, I need to *upfront* know exactly which rpc methods my application is using (which might not be obvious or easy to find, especially so if I'm using libraries/code I didn't write myself) and most likely pressured into doing a more complex simultaneous release of my code + bitcoin-core as no one likes turning on deprecated flags :P\r\n\r\nI also think deprecation schedule can be slower unless there's some tangible benefit for it (e.g. cleaning up the code to make it easier to work with). An aggressive schedule for renaming `signrawtransaction` to `signrawtransactionwithwallet` seems a bit overzealous.\r\n\r\n(And I do think this stuff benefits by a more case-by-case analysis, some stuff can't go fast enough for sure)",
      "created_at" : "2018-10-03T07:20:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426536451",
      "id" : 426536451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjUzNjQ1MQ==",
      "updated_at" : "2018-10-03T07:39:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426536451",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9326759?v=4",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "node_id" : "MDQ6VXNlcjkzMjY3NTk=",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There's been a long time it's been overly cautious with RPC API changes, in some cases for yearsÃ¢ÂÂlike with `getinfo`.\r\n\r\nMaybe it's going too fast now, but I expect this to be a moment of temporary breakage, as there is a lot going onÃ¢ÂÂsuch as the change to multi-wallet, which necessitates some RPC changes to keep sanity.\r\n\r\nIt will slow down again.\r\n\r\n> I think increasing the maintenance burden by imposing a \"never break user space\" will just strictly make things worse.\r\n\r\nYes, this is just not realistic with the current state of things. Everyone involved is over-worked already, I somehow don't see that changing. These kind of compromises have to be made.\r\n\r\nBut also: this project is open source; if you really want longer backwards compatibility, you could get involved, build backwards compatibility wrappers, make test cases for them, maintain them in the long run.",
      "created_at" : "2018-10-03T09:36:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426572542",
      "id" : 426572542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjU3MjU0Mg==",
      "updated_at" : "2018-10-03T10:09:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426572542",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The OP is nonsense, by the way. We didn't spend time rolling backport releases for two different historical branches (`0.14.3`, `0.15.2`) which are **all the affected major releases** just to get bullshit complaints like this, sorry. These versions have no breaking RPC changes.",
      "created_at" : "2018-10-03T09:38:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426572961",
      "id" : 426572961,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjU3Mjk2MQ==",
      "updated_at" : "2018-10-03T09:39:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426572961",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Taking a recent example, I just published a little program which uses signrawtransaction. But that's been deprecated and effectively renamed to signrawtransactionwithwallet in 0.17.\r\n>\r\n> Ok, cool, I'm aware of that. So what should I do? Use the signrawtransactionwithwallet but now it has a hard dependency on 0.17. Or should I continue to use signrawtransaction but require running with -deprecatedrpc=signrawtransaction in 0.17 ?\r\n\r\nI solve these by trying the new RPC call and, if it fails, fallbacking to old one.",
      "created_at" : "2018-10-03T09:45:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426574900",
      "id" : 426574900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjU3NDkwMA==",
      "updated_at" : "2018-10-03T09:45:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426574900",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I solve these by trying the new RPC call and, if it fails, fallbacking to old one.\r\n\r\nThough doing that every time might result in twice the number of RPC calls, which can be a serious overhead for frequent calls or when the arguments are large. Other ways would be:\r\n\r\n- call both the methods without argumentsÃ¢ÂÂthen look at the error code. You get the help response (`-1`) when it is available, or else a method deprecated (`-32`), or a missing method (`-32601`) error, store this result in your wrapper or application logic and call the method that is available (I thought about calling `help` instead but I don't think this will give the deprecation information, as the deprecation check if after the `help` check!)\r\n- get `getnetworkinfo().version`, store it, and compare it against a threshold value to see what method to use from then on\r\n",
      "created_at" : "2018-10-03T09:58:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426578285",
      "id" : 426578285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjU3ODI4NQ==",
      "updated_at" : "2018-10-03T10:17:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426578285",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Is the deprecatedrpc burdensome for users? If so, do you have a suggestion for a better way to deprecate old APIs?\r\n\r\nIIUC the suggestion is to wait more releases before removing deprecated code?\r\n\r\nIMO we are doing the right thing. We don't force updates, we don't force breaking changes. If you want to update you better take the proper measures to keep the system working. Maybe keep 2 nodes (current + new), check client libraries, create a middleware to handle API changes..",
      "created_at" : "2018-10-03T13:13:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426632456",
      "id" : 426632456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjYzMjQ1Ng==",
      "updated_at" : "2018-10-03T13:13:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426632456",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> There's been a long time it's been overly cautious with RPC API changes, in some cases for yearsÃ¢ÂÂlike with getinfo.\r\n\r\nI guess it's not often someone one says \"good job\", but that's really a great example of where (from an external perspective) it was done really well, and allowed for a really smooth transition. \r\n\r\n> Other ways would be:\r\n\r\nOf course it's all possible, just almost no one is going to put in the time and energy to do so. It's pretty easy to see by looking at bitcoin bindings, and seeing they pretty much all break now with the upgrade to 0.17. \r\n\r\nI don't like to complain too loudly about this stuff, as I know it's all volunteer driven and I'm certainly not volunteering. But a less painful deprecation schedule for would make things go smoother, especially when there's no maintenance burden on core for leaving it in for a while. (e.g. something like `signrawtransaction` is probably not very burdensome to be left in, so I think should be deprecated a lot slower than something that's actually causing pain).\r\n\r\n--\r\n\r\nA bit of a shower-thought, but instead hiding stuff behind deprecated-flag -- it'd could be nicer to have something like a deprecated use log. The first time you use a deprecated features, it appends to the log. \r\n\r\nThen on startup the software warns about the deprecated shit you've been using, and if any of them have since been removed it gives an error (until the person clears the deprecated log).",
      "created_at" : "2018-10-03T16:16:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426698971",
      "id" : 426698971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjY5ODk3MQ==",
      "updated_at" : "2018-10-03T16:16:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426698971",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9326759?v=4",
         "events_url" : "https://api.github.com/users/RHavar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RHavar/followers",
         "following_url" : "https://api.github.com/users/RHavar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RHavar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RHavar",
         "id" : 9326759,
         "login" : "RHavar",
         "node_id" : "MDQ6VXNlcjkzMjY3NTk=",
         "organizations_url" : "https://api.github.com/users/RHavar/orgs",
         "received_events_url" : "https://api.github.com/users/RHavar/received_events",
         "repos_url" : "https://api.github.com/users/RHavar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RHavar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RHavar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RHavar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> get getnetworkinfo().version, store it, and compare it against a threshold value to see what method to use from then on\r\n\r\nThat was my initial plan, to do so. But I got confused that there are `getnetworkinfo.version` and `getwalletinfo.version`, also could not find so fast which RPC APIs with which parameters are supported with which version, so trying one call after another was a simpler way for me (faster to develop). Probably some document somewhere with list of all calls, with possible parameter changes and from / to version numbers would be a good idea.",
      "created_at" : "2018-10-03T16:38:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426707444",
      "id" : 426707444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjcwNzQ0NA==",
      "updated_at" : "2018-10-03T16:38:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426707444",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sorry but if you want to use the latest version as soon as possible then act accordingly - read release notes, keep track of release candidates, test client side, update 3rd party software...",
      "created_at" : "2018-10-03T16:46:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426710765",
      "id" : 426710765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjcxMDc2NQ==",
      "updated_at" : "2018-10-03T16:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426710765",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "While I brought up RPC as an example, it was not my intention to limit the scope of this conversation to it.  ",
      "created_at" : "2018-10-03T18:33:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426747766",
      "id" : 426747766,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjc0Nzc2Ng==",
      "updated_at" : "2018-10-03T18:34:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426747766",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@nopara73 what you mean beside RPC? Configurations?",
      "created_at" : "2018-10-03T18:46:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426753020",
      "id" : 426753020,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjc1MzAyMA==",
      "updated_at" : "2018-10-03T18:46:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426753020",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@promag Yes configuration, I was debugging for hours today what the heck went wrong when updated my regtest core node factory for 0.17. I know I am an incompetent idiot for not reading the release notes properly, and only trying to fix stuff those broke introduced by the RPC change.  ",
      "created_at" : "2018-10-03T19:21:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426765514",
      "id" : 426765514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjc2NTUxNA==",
      "updated_at" : "2018-10-03T19:21:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426765514",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "As a general idea I think it's a useful one.\n\nAn API surface that could be reliably depended on until the heat death\nof the universe and that never breaks is useful and shouldn't be dismissed.\n\nIt then comes down to what API boundary should be considered kernel\nspace and what should be considered user space? As long as that boundary\nis made explicit, then issues like the ones described above could be reduced.\n",
      "created_at" : "2018-10-03T21:21:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426807982",
      "id" : 426807982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjgwNzk4Mg==",
      "updated_at" : "2018-10-03T21:21:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426807982",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't think anyone is dismissing that breaking changes are not an issue - but they are sometimes necessary (we essentially didn't do any for years, which locked us into some very bad design choices forever), and I believe we're doing what we can within reason to limit their impact:\r\n* RPC changes/configuration changes are rare events, only in major releases, and generally not things that affect non-expert usage.\r\n* Incompatibilities are always documented in the release notes.\r\n* You can use the `deprecatedrpc` functionality to retain old behavior while still upgrading (making you acknowledge that the behavior will be removed in a later release).\r\n* For critical issues, backports to old supported releases are created.\r\n\r\nThere are individual concerns here that can be addressed - for example the difficulties around `deprecatedrpc` that @RHavar brings up, and perhaps an alternative can be suggested.\r\n\r\nBut can you please not use CVE-2018-17144 to start a rant about your personal preferences in dealing with compatibilities? No, I don't think the \"slow\" adoption of a new release has anything to do with breaking changes (I doubt any significant percentage of nodes are used via RPC at all, and for those that do, we have backports). ",
      "created_at" : "2018-10-04T01:24:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426855205",
      "id" : 426855205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjg1NTIwNQ==",
      "updated_at" : "2018-10-04T01:25:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426855205",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This is a problem that all the bindings need to deal with too now, and there's no good solution (unless you expect them to do \"feature detection\" and dynamically switch between the two, but at that point it raises that question of was is really worth creating all that complexity for applications, just so you're sure they're aware of your deprecation schedule?) .\r\n\r\nYes, this is a breaking API change. The client does need to know about it. The `deprecatedrpc` just means that you get an extra release as warning. Whether it happens in 0.17 or 0.18, your client will need to change behaviour based on server version.\r\n\r\n> I also think deprecation schedule can be slower unless there's some tangible benefit for it (e.g. cleaning up the code to make it easier to work with). An aggressive schedule for renaming signrawtransaction to signrawtransactionwithwallet seems a bit overzealous.\r\n\r\nThe API isn't changed simply because developers like breaking the API for users. There was very tangible benefit to breaking `signrawtransaction` into wallet and non-wallet methods. See https://github.com/bitcoin/bitcoin/issues/10570 for rationale. It was also part of a larger effort to remove the circular dependencies between server and wallet (https://github.com/bitcoin/bitcoin/issues/7965). This was long-term technical debt inherited from V0.1 when wallet and node code were completely mixed up main.cpp.\r\n\r\nPlease believe me that developers take API stability very seriously (eg count the uses of `IsDeprecatedRPCEnabled()` in https://github.com/bitcoin/bitcoin/blob/0.17/src/wallet/rpcwallet.cpp for logic added to support the accounts API while users transition to the labels API, or the tests in https://github.com/bitcoin/bitcoin/blob/0.17/test/functional/rpc_deprecated.py and https://github.com/bitcoin/bitcoin/blob/0.17/test/functional/wallet_labels.py). However, that consideration needs to be weighed against the benefits to all users when we pay down technical debt and make the product more secure and maintainable.\r\n\r\n>> There's been a long time it's been overly cautious with RPC API changes, in some cases for yearsÃ¢ÂÂlike with getinfo.\r\n\r\n> I guess it's not often someone one says \"good job\", but that's really a great example of where (from an external perspective) it was done really well, and allowed for a really smooth transition.\r\n\r\nI disagree. This was not a good job. Supporting legacy APIs for many years that prevent us from doing useful work like separating wallet from node hurts the security of all users. And even if we take years to remove a legacy API we still get complaints (eg https://github.com/bitcoin/bitcoin/issues/11671).\r\n\r\n> Maybe it's going too fast now, but I expect this to be a moment of temporary breakage, as there is a lot going onÃ¢ÂÂsuch as the change to multi-wallet, which necessitates some RPC changes to keep sanity.\r\n\r\nYes - I've been aggressive in removing legacy code and paying down technical debt over the last couple of releases. Much of this technical debt goes back to v0.1. In the short term it may be painful for a small subset of users, but in the long run everyone benefits.",
      "created_at" : "2018-10-04T01:26:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426855471",
      "id" : 426855471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjg1NTQ3MQ==",
      "updated_at" : "2018-10-04T01:28:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426855471",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> But can you please not use CVE-2018-17144 to start a rant about your personal preferences in dealing with compatibilities? No, I don't think the \"slow\" adoption of a new release has anything to do with breaking changes (I doubt any significant percentage of nodes are used via RPC at all, and for those that do, we have backports).\r\n\r\nIf you have an explanation on why node operators aren't updating, then can you share it? If you don't, then that means there are a number of different reasons why it isn't happening, and it is reasonable to assume that \"one of the contributing factors to it\" is that over the past few years you taught your users that updating is not a simple download and go job, thus when in doubt and short on time, inaction is the action they take, until they \"get to it.\"",
      "created_at" : "2018-10-04T08:42:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426934808",
      "id" : 426934808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjkzNDgwOA==",
      "updated_at" : "2018-10-04T08:42:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426934808",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "See https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426498640\r\n\r\nThere shouldn't be any breaking rpc changes in minor releases.",
      "created_at" : "2018-10-04T08:50:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426937402",
      "id" : 426937402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjkzNzQwMg==",
      "updated_at" : "2018-10-04T08:50:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426937402",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> There shouldn't be any breaking rpc changes in minor releases.\r\n\r\nThat's beside the point. For example a store node operator, running BTCPay won't keep up with all the complexity of Bitcoin Core. Their logic is simply: \"Last time I updated Core, our server was down for 12 hours, until I figured out how to downgrade it. This update should be safe, but I wouldn't take all the shit again from the owner.\"\r\n\r\n",
      "created_at" : "2018-10-04T08:58:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426939804",
      "id" : 426939804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjkzOTgwNA==",
      "updated_at" : "2018-10-04T08:58:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426939804",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If you have an explanation on why node operators aren't updating, then can you share it?\n\nMost people who operate a node (sadly) just don't care enough to keep up to date. This is true for all software without automatic update system (and we very intentionally don't have that).\n\nAlso, it doesn't necessarily matter. We can't actually observe what percentage of economically relevant nodes has updated. I believe (but this is just a guess, and I have no strong evidence) that among the number of nodes that are actually used (through RPC or otherwise indirectly affecting validation of transactions that are economically relevant to the owner), the percentage of upgraded nodes is much higher.\n\nPlease. There is a time and place to discuss backward compatibility, but can you not turn into a drama? The rate of upgrading is completely expected. In fact, I think it's much better now than it was years ago, when breaking changes were far more rare.",
      "created_at" : "2018-10-04T11:41:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426987219",
      "id" : 426987219,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjk4NzIxOQ==",
      "updated_at" : "2018-10-04T11:57:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426987219",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Please. There is a time and place to discuss backward compatibility, but can you not turn into a drama?\r\n\r\nACK. Maybe it would be smarter to bring this up sometimes later in another context.\r\n\r\nAlso I have a feeling you were replying to my rantish comment, I've edited right away after posting, because I realized I went overboard with it. (Edits are often missed by those who are interacting with GitHub over email.)  \r\n![image](https://user-images.githubusercontent.com/9156103/46472355-307d0680-c7dd-11e8-9baa-608e3b2eaca6.png)",
      "created_at" : "2018-10-04T11:58:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426991700",
      "id" : 426991700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjk5MTcwMA==",
      "updated_at" : "2018-10-04T11:58:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426991700",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
         "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nopara73/followers",
         "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nopara73",
         "id" : 9156103,
         "login" : "nopara73",
         "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
         "organizations_url" : "https://api.github.com/users/nopara73/orgs",
         "received_events_url" : "https://api.github.com/users/nopara73/received_events",
         "repos_url" : "https://api.github.com/users/nopara73/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nopara73"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> For example a store node operator, running BTCPay won't keep up with all the complexity of Bitcoin Core.\r\n\r\nWhy not? I'd say they should.\r\n\r\n> our server was down for 12 hours, until I figured out how to downgrade it\r\n\r\nNo serious user/service should blindly upgrade **even if there are no breaking changes**. Upgrades should be tested, data should be backup, plan B should be in place, etc..",
      "created_at" : "2018-10-04T12:00:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14363#issuecomment-426992132",
      "id" : 426992132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14363",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNjk5MjEzMg==",
      "updated_at" : "2018-10-04T12:00:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/426992132",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
