[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [S3RK](https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1537830694) |\n| Concept ACK | [ishaanam](https://github.com/bitcoin/bitcoin/pull/25634#pullrequestreview-1177904870) |\n| Stale ACK | [furszy](https://github.com/bitcoin/bitcoin/pull/25634#pullrequestreview-1153817047), [aureleoules](https://github.com/bitcoin/bitcoin/pull/25634#pullrequestreview-1158070425), [Xekyo](https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1474304473), [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/25634#pullrequestreview-1373751172) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20892](https://github.com/bitcoin/bitcoin/pull/20892) (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-07-18T20:07:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1188249676",
      "id" : 1188249676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585G00BM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1188249676/reactions"
      },
      "updated_at" : "2023-05-08T06:35:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1188249676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r974244054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974244054"
         }
      },
      "author_association" : "MEMBER",
      "body" : "shouldn't the created wallet be blank whenever `DISABLE_PRIVATE_KEYS` is set?\r\n\r\n`./src/bitcoin-cli -regtest createwallet testing true false # disable keys and not blank`\r\n`./src/bitcoin-cli -regtest -rpcwallet=testing getwalletinfo`\r\n```json\r\n{\r\n  \"walletname\": \"testing\",\r\n  \"walletversion\": 169900,\r\n  \"format\": \"sqlite\",\r\n  \"balance\": 0.00000000,\r\n  \"unconfirmed_balance\": 0.00000000,\r\n  \"immature_balance\": 0.00000000,\r\n  \"txcount\": 0,\r\n  \"keypoolsize\": 0,\r\n  \"keypoolsize_hd_internal\": 0,\r\n  \"paytxfee\": 0.00000000,\r\n  \"private_keys_enabled\": false,\r\n  \"avoid_reuse\": false,\r\n  \"scanning\": false,\r\n  \"descriptors\": true,\r\n  \"external_signer\": false,\r\n  \"blank\": false # shouldn't this be overridden by true?\r\n}\r\n```\r\n",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-09-19T13:24:24Z",
      "diff_hunk" : "@@ -344,6 +344,11 @@ static RPCHelpMan createwallet()\n     uint64_t flags = 0;\n     if (!request.params[1].isNull() && request.params[1].get_bool()) {\n         flags |= WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+        // We want to set BLANK when DISABLE_PRIVATE_KEYS, but only if the user did not explicitly do blank=false\n+        // It can be set when blank is not provided; when it is provided, we handle it later",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r974244054",
      "id" : 974244054,
      "line" : 348,
      "node_id" : "PRRC_kwDOABII5846EcjW",
      "original_commit_id" : "79b7520a2ea024b995a750d9858c0cbdfca396df",
      "original_line" : 348,
      "original_position" : 5,
      "original_start_line" : 347,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1112246543,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974244054/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 347,
      "start_side" : "RIGHT",
      "updated_at" : "2022-09-19T13:28:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974244054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2022-09-19T13:29:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1251024207",
      "id" : 1251024207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585KkR1P",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1251024207/reactions"
      },
      "updated_at" : "2022-09-19T13:29:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1251024207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r974650805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974650805"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As noted in the OP, `blank=false` overrides the default behavior.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-09-19T20:12:51Z",
      "diff_hunk" : "@@ -344,6 +344,11 @@ static RPCHelpMan createwallet()\n     uint64_t flags = 0;\n     if (!request.params[1].isNull() && request.params[1].get_bool()) {\n         flags |= WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+        // We want to set BLANK when DISABLE_PRIVATE_KEYS, but only if the user did not explicitly do blank=false\n+        // It can be set when blank is not provided; when it is provided, we handle it later",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r974650805",
      "id" : 974650805,
      "in_reply_to_id" : 974244054,
      "line" : 348,
      "node_id" : "PRRC_kwDOABII5846F_21",
      "original_commit_id" : "79b7520a2ea024b995a750d9858c0cbdfca396df",
      "original_line" : 348,
      "original_position" : 5,
      "original_start_line" : 347,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1112825740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974650805/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 347,
      "start_side" : "RIGHT",
      "updated_at" : "2022-09-19T20:12:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974650805",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r974655175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974655175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes but does it make sense to create a wallet that is \"not blank\" and without private keys? I may be missing something",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-09-19T20:18:50Z",
      "diff_hunk" : "@@ -344,6 +344,11 @@ static RPCHelpMan createwallet()\n     uint64_t flags = 0;\n     if (!request.params[1].isNull() && request.params[1].get_bool()) {\n         flags |= WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+        // We want to set BLANK when DISABLE_PRIVATE_KEYS, but only if the user did not explicitly do blank=false\n+        // It can be set when blank is not provided; when it is provided, we handle it later",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r974655175",
      "id" : 974655175,
      "in_reply_to_id" : 974244054,
      "line" : 348,
      "node_id" : "PRRC_kwDOABII5846GA7H",
      "original_commit_id" : "79b7520a2ea024b995a750d9858c0cbdfca396df",
      "original_line" : 348,
      "original_position" : 5,
      "original_start_line" : 347,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1112832016,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974655175/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 347,
      "start_side" : "RIGHT",
      "updated_at" : "2022-09-19T20:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974655175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r975260149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975260149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> However, for backwards compatibility, users can choose to override this in the RPC by doing blank=False.\r\n\r\nI guess that's the reason.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-09-20T11:51:49Z",
      "diff_hunk" : "@@ -344,6 +344,11 @@ static RPCHelpMan createwallet()\n     uint64_t flags = 0;\n     if (!request.params[1].isNull() && request.params[1].get_bool()) {\n         flags |= WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+        // We want to set BLANK when DISABLE_PRIVATE_KEYS, but only if the user did not explicitly do blank=false\n+        // It can be set when blank is not provided; when it is provided, we handle it later",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r975260149",
      "id" : 975260149,
      "in_reply_to_id" : 974244054,
      "line" : 348,
      "node_id" : "PRRC_kwDOABII5846IUn1",
      "original_commit_id" : "79b7520a2ea024b995a750d9858c0cbdfca396df",
      "original_line" : 348,
      "original_position" : 5,
      "original_start_line" : 347,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1113668658,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975260149/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 347,
      "start_side" : "RIGHT",
      "updated_at" : "2022-09-20T11:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975260149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r991522408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/991522408"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The blank flag is basically a no-op for wallets without private keys. It's not necessarily a useful distinction.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-10-10T17:45:24Z",
      "diff_hunk" : "@@ -344,6 +344,11 @@ static RPCHelpMan createwallet()\n     uint64_t flags = 0;\n     if (!request.params[1].isNull() && request.params[1].get_bool()) {\n         flags |= WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+        // We want to set BLANK when DISABLE_PRIVATE_KEYS, but only if the user did not explicitly do blank=false\n+        // It can be set when blank is not provided; when it is provided, we handle it later",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r991522408",
      "id" : 991522408,
      "in_reply_to_id" : 974244054,
      "line" : 348,
      "node_id" : "PRRC_kwDOABII5847GW5o",
      "original_commit_id" : "79b7520a2ea024b995a750d9858c0cbdfca396df",
      "original_line" : 348,
      "original_position" : 5,
      "original_start_line" : 347,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1136360332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/991522408/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 347,
      "start_side" : "RIGHT",
      "updated_at" : "2022-10-10T17:45:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/991522408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1003467047"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003467047"
         }
      },
      "author_association" : "NONE",
      "body" : "I agree with @achow101 . Initially I was concerned that a bug in a future change might be introduced due to the apparent contradiction between disable_private_keys=true and blank=false, but after reading the tests, I understand that this might be posible after importing ADDRESSes and/or other elements. Am I right about this conclusion? Or am I missing something?   ",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-10-24T15:37:13Z",
      "diff_hunk" : "@@ -344,6 +344,11 @@ static RPCHelpMan createwallet()\n     uint64_t flags = 0;\n     if (!request.params[1].isNull() && request.params[1].get_bool()) {\n         flags |= WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+        // We want to set BLANK when DISABLE_PRIVATE_KEYS, but only if the user did not explicitly do blank=false\n+        // It can be set when blank is not provided; when it is provided, we handle it later",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1003467047",
      "id" : 1003467047,
      "in_reply_to_id" : 974244054,
      "line" : 348,
      "node_id" : "PRRC_kwDOABII5847z7En",
      "original_commit_id" : "79b7520a2ea024b995a750d9858c0cbdfca396df",
      "original_line" : 348,
      "original_position" : 5,
      "original_start_line" : 347,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1153363035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003467047/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 347,
      "start_side" : "RIGHT",
      "updated_at" : "2022-10-24T15:40:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003467047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/87907936?v=4",
         "events_url" : "https://api.github.com/users/hernanmarino/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hernanmarino/followers",
         "following_url" : "https://api.github.com/users/hernanmarino/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hernanmarino/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hernanmarino",
         "id" : 87907936,
         "login" : "hernanmarino",
         "node_id" : "MDQ6VXNlcjg3OTA3OTM2",
         "organizations_url" : "https://api.github.com/users/hernanmarino/orgs",
         "received_events_url" : "https://api.github.com/users/hernanmarino/received_events",
         "repos_url" : "https://api.github.com/users/hernanmarino/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hernanmarino/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hernanmarino/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hernanmarino"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1003484743"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003484743"
         }
      },
      "author_association" : "NONE",
      "body" : "Once we import private keys, does the flag `private_keys_enabled` change its value to `true`? If so, shouldn't we also be checking for the flag `private_keys_enabled` is `true` now, here in the test?",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-10-24T15:53:36Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import (\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+    ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+)\n+from test_framework.key import ECKey\n+from test_framework.util import (\n+    assert_equal,\n+)\n+from test_framework.wallet_util import generate_wif_key\n+\n+\n+class WalletBlankTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_createwallet(self):\n+        self.log.info(\"Test that createwallet sets the blank flag when disableprivatekeys\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_w_blank\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_w_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+    def test_createwallet_override(self):\n+        self.log.info(\"Test that the blank flag can be overridden\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_wo_blank\", disable_private_keys=True, blank=False)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_wo_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importaddress(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importaddress unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"iaddr\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iaddr\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importaddress(ADDRESS_BCRT1_UNSPENDABLE)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importpubkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importpubkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipub\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipub\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        eckey = ECKey()\n+        eckey.generate()\n+\n+        wallet.importpubkey(eckey.get_pubkey().get_bytes().hex())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1003484743",
      "id" : 1003484743,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII5847z_ZH",
      "original_commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "original_line" : 62,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "test/functional/wallet_blank.py",
      "position" : 62,
      "pull_request_review_id" : 1153388037,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003484743/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-24T15:55:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003484743",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/110166421?v=4",
         "events_url" : "https://api.github.com/users/pablomartin4btc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pablomartin4btc/followers",
         "following_url" : "https://api.github.com/users/pablomartin4btc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pablomartin4btc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pablomartin4btc",
         "id" : 110166421,
         "login" : "pablomartin4btc",
         "node_id" : "U_kgDOBpEBlQ",
         "organizations_url" : "https://api.github.com/users/pablomartin4btc/orgs",
         "received_events_url" : "https://api.github.com/users/pablomartin4btc/received_events",
         "repos_url" : "https://api.github.com/users/pablomartin4btc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pablomartin4btc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pablomartin4btc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pablomartin4btc"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1003504609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003504609"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, `WALLET_FLAG_DISABLE_PRIVATE_KEYS` is a permanent flag. It cannot be changed, and attempting to import private keys into a wallet with it set will result in an error and nothing imported. This test is for importing public keys, not private keys.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-10-24T16:12:53Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import (\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+    ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+)\n+from test_framework.key import ECKey\n+from test_framework.util import (\n+    assert_equal,\n+)\n+from test_framework.wallet_util import generate_wif_key\n+\n+\n+class WalletBlankTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_createwallet(self):\n+        self.log.info(\"Test that createwallet sets the blank flag when disableprivatekeys\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_w_blank\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_w_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+    def test_createwallet_override(self):\n+        self.log.info(\"Test that the blank flag can be overridden\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_wo_blank\", disable_private_keys=True, blank=False)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_wo_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importaddress(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importaddress unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"iaddr\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iaddr\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importaddress(ADDRESS_BCRT1_UNSPENDABLE)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importpubkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importpubkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipub\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipub\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        eckey = ECKey()\n+        eckey.generate()\n+\n+        wallet.importpubkey(eckey.get_pubkey().get_bytes().hex())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1003504609",
      "id" : 1003504609,
      "in_reply_to_id" : 1003484743,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII58470EPh",
      "original_commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "original_line" : 62,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "test/functional/wallet_blank.py",
      "position" : 62,
      "pull_request_review_id" : 1153416942,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003504609/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-24T16:12:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003504609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1003508817"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003508817"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, `blank` will be unset once anything is imported or generated. The purpose of `blank` is to prevent the wallet from automatically generating keys for blank wallets since they appear the same as newly created wallets to the creation/setup code that runs during wallet loading. Since disabling private keys means that nothing can be generated anyways, blank isn't actually doing anything for such wallets. Additionally, once anything is imported, blank will be unset as well.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-10-24T16:17:06Z",
      "diff_hunk" : "@@ -344,6 +344,11 @@ static RPCHelpMan createwallet()\n     uint64_t flags = 0;\n     if (!request.params[1].isNull() && request.params[1].get_bool()) {\n         flags |= WALLET_FLAG_DISABLE_PRIVATE_KEYS;\n+        // We want to set BLANK when DISABLE_PRIVATE_KEYS, but only if the user did not explicitly do blank=false\n+        // It can be set when blank is not provided; when it is provided, we handle it later",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1003508817",
      "id" : 1003508817,
      "in_reply_to_id" : 974244054,
      "line" : 348,
      "node_id" : "PRRC_kwDOABII58470FRR",
      "original_commit_id" : "79b7520a2ea024b995a750d9858c0cbdfca396df",
      "original_line" : 348,
      "original_position" : 5,
      "original_start_line" : 347,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1153422724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003508817/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 347,
      "start_side" : "RIGHT",
      "updated_at" : "2022-10-24T16:17:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003508817",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1004618290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004618290"
         }
      },
      "author_association" : "NONE",
      "body" : "Oh! Right, my bad, thanks for the clarification! I think I got confused with the following test which is `test_importprivkey`, but it doesn't have `private_keys_enabled` set to false either. I see what you're saying about the error trying to import private keys into a wallet with `WALLET_FLAG_DISABLE_PRIVATE_KEYS` on another test:\r\nhttps://github.com/bitcoin/bitcoin/blob/3c1e75ef607000b265c15b47b32485cd95c1245d/test/functional/wallet_importdescriptors.py#L225-L230\r\n",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-10-25T15:09:24Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import (\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+    ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+)\n+from test_framework.key import ECKey\n+from test_framework.util import (\n+    assert_equal,\n+)\n+from test_framework.wallet_util import generate_wif_key\n+\n+\n+class WalletBlankTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_createwallet(self):\n+        self.log.info(\"Test that createwallet sets the blank flag when disableprivatekeys\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_w_blank\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_w_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+    def test_createwallet_override(self):\n+        self.log.info(\"Test that the blank flag can be overridden\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_wo_blank\", disable_private_keys=True, blank=False)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_wo_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importaddress(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importaddress unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"iaddr\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iaddr\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importaddress(ADDRESS_BCRT1_UNSPENDABLE)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importpubkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importpubkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipub\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipub\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        eckey = ECKey()\n+        eckey.generate()\n+\n+        wallet.importpubkey(eckey.get_pubkey().get_bytes().hex())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1004618290",
      "id" : 1004618290,
      "in_reply_to_id" : 1003484743,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII58474UIy",
      "original_commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "original_line" : 62,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "test/functional/wallet_blank.py",
      "position" : 62,
      "pull_request_review_id" : 1155003228,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004618290/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-25T15:09:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004618290",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/110166421?v=4",
         "events_url" : "https://api.github.com/users/pablomartin4btc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pablomartin4btc/followers",
         "following_url" : "https://api.github.com/users/pablomartin4btc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pablomartin4btc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pablomartin4btc",
         "id" : 110166421,
         "login" : "pablomartin4btc",
         "node_id" : "U_kgDOBpEBlQ",
         "organizations_url" : "https://api.github.com/users/pablomartin4btc/orgs",
         "received_events_url" : "https://api.github.com/users/pablomartin4btc/received_events",
         "repos_url" : "https://api.github.com/users/pablomartin4btc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pablomartin4btc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pablomartin4btc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pablomartin4btc"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1020589655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1020589655"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 44e30c5aa98703b68267924bbbbb745e9242e969 \"wallet: Ensure that the blank wallet flag is unset after imports\"\r\n\r\nIt is not clear to me how the other changes in this PR result in this behavior change. Especially since it appears to only be happening once a wallet is encrypted. After the changes in this PR, running `listdescriptors` before a wallet is encrypted produces drastically different results than when it is run afterwards.\r\n`listdescriptors` before the wallet is encrypted:\r\n```\r\n{'wallet_name': 'w2', 'descriptors': [{'desc': \"wpkh([80002067/84'/1'/0']tpubDCMVLhErorrAGfApiJSJzEKwqeaf2z3NrkVMxgYQjZLzMjXMBeRw2muGNYbvaekAE8rUFLftyEar4LdrG2wXyyTJQZ26zptmeTEjPTaATts/0/*)#yz2uu6mw\", 'timestamp': 1296688602, 'active': False, 'range': [0, 0], 'next': 0}]}\r\n```\r\n`listdescriptors` after the wallet is encrypted:\r\n```\r\n{'wallet_name': 'w2', 'descriptors': [{'desc': \"wpkh([80002067/84'/1'/0']tpubDCMVLhErorrAGfApiJSJzEKwqeaf2z3NrkVMxgYQjZLzMjXMBeRw2muGNYbvaekAE8rUFLftyEar4LdrG2wXyyTJQZ26zptmeTEjPTaATts/0/*)#yz2uu6mw\", 'timestamp': 1296688602, 'active': False, 'range': [0, 0], 'next': 0}, {'desc': \"pkh([5dc1e209/44'/1'/0']tpubDDfjWivrLDGEU679nu8YgTDPUALX9bUppvdXXk19TDAaecSNxMH8vPZBeRRjaDqKUYgEd3UzZWS4rt5qsAWQW2qktupQZR1MnSnAZ7L85Cn/0/*)#rx0cg4z2\", 'timestamp': 1668205361, 'active': True, 'internal': False, 'range': [0, 0], 'next': 0}, {'desc': \"wpkh([5dc1e209/84'/1'/0']tpubDD42XKtjCmM9u18pwcFj5VNPoh4QZn6fDuHq5ypo5ZvZrsMguRRd5YvDjKX6BLKz393V9QpeouE95eHeaugv3FM6LVqTo9f2phTPQvw65xy/0/*)#q3r4f8hn\", 'timestamp': 1668205361, 'active': True, 'internal': False, 'range': [0, 0], 'next': 0}, {'desc': \"pkh([5dc1e209/44'/1'/0']tpubDDfjWivrLDGEU679nu8YgTDPUALX9bUppvdXXk19TDAaecSNxMH8vPZBeRRjaDqKUYgEd3UzZWS4rt5qsAWQW2qktupQZR1MnSnAZ7L85Cn/1/*)#jj2e4qjj\", 'timestamp': 1668205361, 'active': True, 'internal': True, 'range': [0, 0], 'next': 0}, {'desc': \"sh(wpkh([5dc1e209/49'/1'/0']tpubDCVSqsf6kfUFDo28Vq3Lsrt9FXVqtohxWFxufkxubWT4Kh9z5RfmcxZmgKPBsWvboazFWNqnA9YHmQNrtfCvxTU8mch4yzxcMshqCWXtt9u/0/*))#8s9y4eu7\", 'timestamp': 1668205361, 'active': True, 'internal': False, 'range': [0, 0], 'next': 0}, {'desc': \"tr([5dc1e209/86'/1'/0']tpubDDMfjHg7VtGGjDiXv3ohgm7NTpm6ue5XnXdJBx9NZ8PgrSdLAQ1DjnYnxNiQKJcB6ZaoQo7WjZo7iTXVzdBgW38KM5BRsJJzXtDUSSjehRU/0/*)#60q6ankn\", 'timestamp': 1668205361, 'active': True, 'internal': False, 'range': [0, 0], 'next': 0}, {'desc': \"tr([5dc1e209/86'/1'/0']tpubDDMfjHg7VtGGjDiXv3ohgm7NTpm6ue5XnXdJBx9NZ8PgrSdLAQ1DjnYnxNiQKJcB6ZaoQo7WjZo7iTXVzdBgW38KM5BRsJJzXtDUSSjehRU/1/*)#tm9mqxxt\", 'timestamp': 1668205361, 'active': True, 'internal': True, 'range': [0, 0], 'next': 0}, {'desc': \"sh(wpkh([5dc1e209/49'/1'/0']tpubDCVSqsf6kfUFDo28Vq3Lsrt9FXVqtohxWFxufkxubWT4Kh9z5RfmcxZmgKPBsWvboazFWNqnA9YHmQNrtfCvxTU8mch4yzxcMshqCWXtt9u/1/*))#j3tjdxfp\", 'timestamp': 1668205361, 'active': True, 'internal': True, 'range': [0, 0], 'next': 0}, {'desc': \"wpkh([5dc1e209/84'/1'/0']tpubDD42XKtjCmM9u18pwcFj5VNPoh4QZn6fDuHq5ypo5ZvZrsMguRRd5YvDjKX6BLKz393V9QpeouE95eHeaugv3FM6LVqTo9f2phTPQvw65xy/1/*)#39x55j8t\", 'timestamp': 1668205361, 'active': True, 'internal': True, 'range': [0, 0], 'next': 0}]}\r\n```",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-11-11T22:18:46Z",
      "diff_hunk" : "@@ -89,12 +89,12 @@ def run_test(self):\n \n         self.log.info(\"Test listdescriptors with encrypted wallet\")\n         wallet.encryptwallet(\"pass\")\n-        assert_equal(expected, wallet.listdescriptors())\n+        assert expected[\"descriptors\"][0] in wallet.listdescriptors()[\"descriptors\"]\n \n         self.log.info('Test list private descriptors with encrypted wallet')\n         assert_raises_rpc_error(-13, 'Please enter the wallet passphrase with walletpassphrase first.', wallet.listdescriptors, True)\n         wallet.walletpassphrase(passphrase=\"pass\", timeout=1000000)\n-        assert_equal(expected_private, wallet.listdescriptors(True))\n+        assert expected_private[\"descriptors\"][0] in wallet.listdescriptors(True)[\"descriptors\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1020589655",
      "id" : 1020589655,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII58481PZX",
      "original_commit_id" : "44e30c5aa98703b68267924bbbbb745e9242e969",
      "original_line" : 97,
      "original_position" : 11,
      "original_start_line" : 92,
      "path" : "test/functional/wallet_listdescriptors.py",
      "position" : 11,
      "pull_request_review_id" : 1177904870,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1020589655/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 92,
      "start_side" : "LEFT",
      "updated_at" : "2022-11-11T22:41:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1020589655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1021206883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021206883"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes. This seems like a bug. I was able to trace it back to encryption function\r\n\r\nsrc/wallet/wallet.cpp:829\r\n```\r\n        // If we are using descriptors, make new descriptors with a new seed\r\n        if (IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) && !IsWalletFlagSet(WALLET_FLAG_BLANK_WALLET)) {\r\n            SetupDescriptorScriptPubKeyMans();\r\n```\r\n\r\n@achow101 why do we want to regenerate descriptors on encryption?\r\n",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-11-14T08:38:03Z",
      "diff_hunk" : "@@ -89,12 +89,12 @@ def run_test(self):\n \n         self.log.info(\"Test listdescriptors with encrypted wallet\")\n         wallet.encryptwallet(\"pass\")\n-        assert_equal(expected, wallet.listdescriptors())\n+        assert expected[\"descriptors\"][0] in wallet.listdescriptors()[\"descriptors\"]\n \n         self.log.info('Test list private descriptors with encrypted wallet')\n         assert_raises_rpc_error(-13, 'Please enter the wallet passphrase with walletpassphrase first.', wallet.listdescriptors, True)\n         wallet.walletpassphrase(passphrase=\"pass\", timeout=1000000)\n-        assert_equal(expected_private, wallet.listdescriptors(True))\n+        assert expected_private[\"descriptors\"][0] in wallet.listdescriptors(True)[\"descriptors\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1021206883",
      "id" : 1021206883,
      "in_reply_to_id" : 1020589655,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII58483mFj",
      "original_commit_id" : "44e30c5aa98703b68267924bbbbb745e9242e969",
      "original_line" : 97,
      "original_position" : 11,
      "original_start_line" : 92,
      "path" : "test/functional/wallet_listdescriptors.py",
      "position" : 11,
      "pull_request_review_id" : 1178639959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021206883/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 92,
      "start_side" : "LEFT",
      "updated_at" : "2022-11-14T08:38:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021206883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1021807175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021807175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm, yes, I'm not sure whether this is a bug as it the behavior is (mostly) expected.\r\n\r\nWe always want to rotate keys after encryption because the old keys were written to disk unencrypted and thus may have been compromised. There may also be backups of the unencrypted keys. So if the user has opted into encryption, we want to make sure any keys they use from then on were born encrypted and known to not have been stored anywhere unencrypted. We do the same for the legacy wallet as well.\r\n\r\nThe question here is whether this behavior is expected for formerly blank wallets.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-11-14T16:43:26Z",
      "diff_hunk" : "@@ -89,12 +89,12 @@ def run_test(self):\n \n         self.log.info(\"Test listdescriptors with encrypted wallet\")\n         wallet.encryptwallet(\"pass\")\n-        assert_equal(expected, wallet.listdescriptors())\n+        assert expected[\"descriptors\"][0] in wallet.listdescriptors()[\"descriptors\"]\n \n         self.log.info('Test list private descriptors with encrypted wallet')\n         assert_raises_rpc_error(-13, 'Please enter the wallet passphrase with walletpassphrase first.', wallet.listdescriptors, True)\n         wallet.walletpassphrase(passphrase=\"pass\", timeout=1000000)\n-        assert_equal(expected_private, wallet.listdescriptors(True))\n+        assert expected_private[\"descriptors\"][0] in wallet.listdescriptors(True)[\"descriptors\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1021807175",
      "id" : 1021807175,
      "in_reply_to_id" : 1020589655,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII584854pH",
      "original_commit_id" : "44e30c5aa98703b68267924bbbbb745e9242e969",
      "original_line" : 97,
      "original_position" : 11,
      "original_start_line" : 92,
      "path" : "test/functional/wallet_listdescriptors.py",
      "position" : 11,
      "pull_request_review_id" : 1179473242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021807175/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 92,
      "start_side" : "LEFT",
      "updated_at" : "2022-11-14T16:43:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1021807175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1022477187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022477187"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I personally wouldn't expect to see new descriptors after encrypting wallet with an imported descriptor. But I also understand why rotating descriptors is generally good. \r\n\r\nI don't think distinction of \"formerly blank wallets\" is good enough. The same problem can happen with non-blank wallet. Should we rotate user imported descriptors in non-blank wallets? The current code would rotate it as well.\r\n\r\nIt seems like we need to track which descriptors are automatically generated and which are manually imported. Of course, the problem is that we can't backfill the information.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-11-15T08:26:57Z",
      "diff_hunk" : "@@ -89,12 +89,12 @@ def run_test(self):\n \n         self.log.info(\"Test listdescriptors with encrypted wallet\")\n         wallet.encryptwallet(\"pass\")\n-        assert_equal(expected, wallet.listdescriptors())\n+        assert expected[\"descriptors\"][0] in wallet.listdescriptors()[\"descriptors\"]\n \n         self.log.info('Test list private descriptors with encrypted wallet')\n         assert_raises_rpc_error(-13, 'Please enter the wallet passphrase with walletpassphrase first.', wallet.listdescriptors, True)\n         wallet.walletpassphrase(passphrase=\"pass\", timeout=1000000)\n-        assert_equal(expected_private, wallet.listdescriptors(True))\n+        assert expected_private[\"descriptors\"][0] in wallet.listdescriptors(True)[\"descriptors\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1022477187",
      "id" : 1022477187,
      "in_reply_to_id" : 1020589655,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII58488cOD",
      "original_commit_id" : "44e30c5aa98703b68267924bbbbb745e9242e969",
      "original_line" : 97,
      "original_position" : 11,
      "original_start_line" : 92,
      "path" : "test/functional/wallet_listdescriptors.py",
      "position" : 11,
      "pull_request_review_id" : 1180417665,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022477187/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 92,
      "start_side" : "LEFT",
      "updated_at" : "2022-11-15T08:26:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1022477187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thinking about this I've got a question:\r\nDo we even need to store a flag for a blank wallet? Can't we just check whether it has any descriptors in it or not at runtime?",
      "created_at" : "2022-11-15T08:27:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1314959346",
      "id" : 1314959346,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585OYK_y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314959346/reactions"
      },
      "updated_at" : "2022-11-15T08:27:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314959346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Do we even need to store a flag for a blank wallet? Can't we just check whether it has any descriptors in it or not at runtime?\r\n\r\nNo, that's how we determine whether the wallet was just created. Without the blank flag, we don't have a way of distinguishing between \"blank\" and \"newly created\".",
      "created_at" : "2022-11-15T16:35:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1315572874",
      "id" : 1315572874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585OagyK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315572874/reactions"
      },
      "updated_at" : "2022-11-15T16:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315572874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1023021756"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023021756"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Should we rotate user imported descriptors in non-blank wallets? The current code would rotate it as well.\r\n\r\nYes. This is considered an important aspect of encryption as it ensures that addresses used afterwards did not have their private keys written unencrypted. It is also a well documented behavior in both the RPC and GUI.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-11-15T16:38:13Z",
      "diff_hunk" : "@@ -89,12 +89,12 @@ def run_test(self):\n \n         self.log.info(\"Test listdescriptors with encrypted wallet\")\n         wallet.encryptwallet(\"pass\")\n-        assert_equal(expected, wallet.listdescriptors())\n+        assert expected[\"descriptors\"][0] in wallet.listdescriptors()[\"descriptors\"]\n \n         self.log.info('Test list private descriptors with encrypted wallet')\n         assert_raises_rpc_error(-13, 'Please enter the wallet passphrase with walletpassphrase first.', wallet.listdescriptors, True)\n         wallet.walletpassphrase(passphrase=\"pass\", timeout=1000000)\n-        assert_equal(expected_private, wallet.listdescriptors(True))\n+        assert expected_private[\"descriptors\"][0] in wallet.listdescriptors(True)[\"descriptors\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1023021756",
      "id" : 1023021756,
      "in_reply_to_id" : 1020589655,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII5848-hK8",
      "original_commit_id" : "44e30c5aa98703b68267924bbbbb745e9242e969",
      "original_line" : 97,
      "original_position" : 11,
      "original_start_line" : 92,
      "path" : "test/functional/wallet_listdescriptors.py",
      "position" : 11,
      "pull_request_review_id" : 1181207536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023021756/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 92,
      "start_side" : "LEFT",
      "updated_at" : "2022-11-15T16:38:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023021756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Do we even need to store a flag for a blank wallet? Can't we just check whether it has any descriptors in it or not at runtime?\r\n> \r\n> No, that's how we determine whether the wallet was just created. Without the blank flag, we don't have a way of distinguishing between \"blank\" and \"newly created\".\r\n\r\nHmm, wouldn't be sufficient to differentiate blank from newly created wallets by providing a flag to the `CreateWallet` function based on the context?\r\n\r\nSounds pretty odd this blank flag storage requirement. We could just add a runtime parameter that says \"if we are loading any wallet from disk, don't create any new seed nor new SPKMs, just load the file into a wallet\". Then, only if the context is the `createwallet` RPC command (or the same flow in the GUI), set the flag to true and create the new seed and related descriptors.\r\n",
      "created_at" : "2022-11-15T17:50:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1315668211",
      "id" : 1315668211,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585Oa4Dz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315668211/reactions"
      },
      "updated_at" : "2022-11-15T19:28:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315668211",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1023099227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023099227"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> This is considered an important aspect of encryption as it ensures that addresses used afterwards did not have their private keys written unencrypted.\r\n\r\nThis makes sense, but in this case shouldn't new private keys only be generated for the descriptors that already exist in the wallet (imported or automatically generated) instead of adding additional descriptors to the wallet that the user did not ask for? Even if rotating keys upon encryption is well documented, adding additional descriptors does not appear to be.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-11-15T17:51:43Z",
      "diff_hunk" : "@@ -89,12 +89,12 @@ def run_test(self):\n \n         self.log.info(\"Test listdescriptors with encrypted wallet\")\n         wallet.encryptwallet(\"pass\")\n-        assert_equal(expected, wallet.listdescriptors())\n+        assert expected[\"descriptors\"][0] in wallet.listdescriptors()[\"descriptors\"]\n \n         self.log.info('Test list private descriptors with encrypted wallet')\n         assert_raises_rpc_error(-13, 'Please enter the wallet passphrase with walletpassphrase first.', wallet.listdescriptors, True)\n         wallet.walletpassphrase(passphrase=\"pass\", timeout=1000000)\n-        assert_equal(expected_private, wallet.listdescriptors(True))\n+        assert expected_private[\"descriptors\"][0] in wallet.listdescriptors(True)[\"descriptors\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1023099227",
      "id" : 1023099227,
      "in_reply_to_id" : 1020589655,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII5848-0Fb",
      "original_commit_id" : "44e30c5aa98703b68267924bbbbb745e9242e969",
      "original_line" : 97,
      "original_position" : 11,
      "original_start_line" : 92,
      "path" : "test/functional/wallet_listdescriptors.py",
      "position" : 11,
      "pull_request_review_id" : 1181319349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023099227/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 92,
      "start_side" : "LEFT",
      "updated_at" : "2022-11-15T17:51:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023099227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Hmm, wouldn't be sufficient to differentiate blank from newly created wallets by providing a flag to the `CreateWallet` function based on the context?\r\n\r\nGoing forward, probably. But we still need the flag for downgrade protection. Older software determines whether a wallet is new by observing that there's nothing in it. So if a blank wallet (without the flag) were loaded into the older software, it would think the wallet was just created and generate a new seed for it. Since the flag is one of the mandatory flags, older software that see that flag (or the version number that added support for the flag) will not load or modify the wallet. We unset the flag once the wallet contains things because it is no longer needed for downgrade protection. Once the wallet has keys or descriptors, older software will not automatically generate anything for that wallet.\r\n\r\nThe other reason it's implemented this way is because at the time it was introduced, we would create a wallet specified with `-wallet` if it did not exist. Since the same function is used for both loading and creation and there is no (easy) way to tell whether the wallet that was loaded was just created or already existed, we needed the flag in order to know not to do anything to the wallet.\r\n\r\n***\r\n\r\nPerhaps there needs to be some distinction between \"this wallet needs to start out without any automatically generated things\" and \"this wallet must only have things the user adds explicitly\". The original reason blank was added was to support born-encrypted wallets. It was a way to make sure that a newly created wallet would not have any initial keys so that the user (or the creation process itself) can encrypt the wallet and generate keys automatically after encryption. However some users probably want to have wallets where the only things in their wallets are things that are added explicitly, e.g. only imports, or only `sethdseed` results. As noted in https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1020589655, blank wallets does not support that as after encrypting, a new seed or a new set of descriptors will be generated. I would argue that supporting that in blank wallets is not quite what blank wallet means and should be a separate feature.",
      "created_at" : "2022-11-15T20:15:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1315815698",
      "id" : 1315815698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585ObcES",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315815698/reactions"
      },
      "updated_at" : "2022-11-15T20:15:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315815698",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1023223547"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023223547"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This makes sense, but in this case shouldn't new private keys only be generated for the descriptors that already exist in the wallet (imported or automatically generated) instead of adding additional descriptors to the wallet that the user did not ask for? Even if rotating keys upon encryption is well documented, adding additional descriptors does not appear to be.\r\n\r\nThis can get rather complicated since users can import descriptors that don't match the same pattern as our automatically generated ones, and producing ones that look similar except for the keys might be more confusing than ones that are altogether different? At least for non-single key things, it would be very obvious that the descriptor has changed.\r\n\r\nThis is also perhaps an argument for always encrypting wallets with a default passphrase which would completely sidestep that issue.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-11-15T20:20:48Z",
      "diff_hunk" : "@@ -89,12 +89,12 @@ def run_test(self):\n \n         self.log.info(\"Test listdescriptors with encrypted wallet\")\n         wallet.encryptwallet(\"pass\")\n-        assert_equal(expected, wallet.listdescriptors())\n+        assert expected[\"descriptors\"][0] in wallet.listdescriptors()[\"descriptors\"]\n \n         self.log.info('Test list private descriptors with encrypted wallet')\n         assert_raises_rpc_error(-13, 'Please enter the wallet passphrase with walletpassphrase first.', wallet.listdescriptors, True)\n         wallet.walletpassphrase(passphrase=\"pass\", timeout=1000000)\n-        assert_equal(expected_private, wallet.listdescriptors(True))\n+        assert expected_private[\"descriptors\"][0] in wallet.listdescriptors(True)[\"descriptors\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1023223547",
      "id" : 1023223547,
      "in_reply_to_id" : 1020589655,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII5848_Sb7",
      "original_commit_id" : "44e30c5aa98703b68267924bbbbb745e9242e969",
      "original_line" : 97,
      "original_position" : 11,
      "original_start_line" : 92,
      "path" : "test/functional/wallet_listdescriptors.py",
      "position" : 11,
      "pull_request_review_id" : 1181496660,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023223547/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 92,
      "start_side" : "LEFT",
      "updated_at" : "2022-11-15T20:20:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023223547",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1023360558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023360558"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seeing as most of the solutions to this issue/confusion are likely out of the scope of this PR, I think that these changes should be fine with the addition of documentation about this behavior change related to importing descriptors before encrypting a wallet, since previously no new descriptors would be added.",
      "commit_id" : "4c936c8af2a2a8373c8b8082d6bc4d798c8193b4",
      "created_at" : "2022-11-15T23:36:26Z",
      "diff_hunk" : "@@ -89,12 +89,12 @@ def run_test(self):\n \n         self.log.info(\"Test listdescriptors with encrypted wallet\")\n         wallet.encryptwallet(\"pass\")\n-        assert_equal(expected, wallet.listdescriptors())\n+        assert expected[\"descriptors\"][0] in wallet.listdescriptors()[\"descriptors\"]\n \n         self.log.info('Test list private descriptors with encrypted wallet')\n         assert_raises_rpc_error(-13, 'Please enter the wallet passphrase with walletpassphrase first.', wallet.listdescriptors, True)\n         wallet.walletpassphrase(passphrase=\"pass\", timeout=1000000)\n-        assert_equal(expected_private, wallet.listdescriptors(True))\n+        assert expected_private[\"descriptors\"][0] in wallet.listdescriptors(True)[\"descriptors\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1023360558",
      "id" : 1023360558,
      "in_reply_to_id" : 1020589655,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII5848_z4u",
      "original_commit_id" : "44e30c5aa98703b68267924bbbbb745e9242e969",
      "original_line" : 97,
      "original_position" : 11,
      "original_start_line" : 92,
      "path" : "test/functional/wallet_listdescriptors.py",
      "position" : 11,
      "pull_request_review_id" : 1181689532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023360558/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 92,
      "start_side" : "LEFT",
      "updated_at" : "2022-11-15T23:36:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023360558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2022-12-19T09:32:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1357356663",
      "id" : 1357356663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585Q5553",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1357356663/reactions"
      },
      "updated_at" : "2022-12-19T09:32:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1357356663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140372731"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140372731"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Using ânotâ in the context of a boolean feels always a bit like a double negation. Perhaps go with âwithoutâ:\r\n\r\n```suggestion\r\n                        {RPCResult::Type::BOOL, \"blank\", \"whether this wallet was intentionally created without keys, scripts, or descriptors\"},\r\n```",
      "commit_id" : "23403d0ed81d2365f895ab4fab50f6bb87b44ad9",
      "created_at" : "2023-03-17T15:20:25Z",
      "diff_hunk" : "@@ -59,6 +59,7 @@ static RPCHelpMan getwalletinfo()\n                         }, /*skip_type_check=*/true},\n                         {RPCResult::Type::BOOL, \"descriptors\", \"whether this wallet uses descriptors for scriptPubKey management\"},\n                         {RPCResult::Type::BOOL, \"external_signer\", \"whether this wallet is configured to use an external signer such as a hardware wallet\"},\n+                        {RPCResult::Type::BOOL, \"blank\", \"Whether this wallet is marked as intentionally not having any keys, scripts, or descriptors\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140372731",
      "id" : 1140372731,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585D-LT7",
      "original_commit_id" : "6ae1256483d3752894342cc0bc3655bbc6bfac00",
      "original_line" : 62,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 4,
      "pull_request_review_id" : 1346157912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140372731/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-17T15:33:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140372731",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140387995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140387995"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You are explicitly expecting this behavior, but Iâm kinda surprised that when we import a wallet that was explicitly created âblankâ after the import it is now no longer blank. As far as I can tell, no keys were created, unless the import automatically does that. Iâm curious why this is the expected behavior (although since you seem to explicitly expect that behavior, I donât think there is an issue here).",
      "commit_id" : "23403d0ed81d2365f895ab4fab50f6bb87b44ad9",
      "created_at" : "2023-03-17T15:33:32Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import (\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+    ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+)\n+from test_framework.key import ECKey\n+from test_framework.util import (\n+    assert_equal,\n+)\n+from test_framework.wallet_util import generate_wif_key\n+\n+\n+class WalletBlankTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def add_options(self, options):\n+        self.add_wallet_options(options)\n+\n+    def test_createwallet(self):\n+        self.log.info(\"Test that createwallet sets the blank flag when disableprivatekeys\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_w_blank\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_w_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+    def test_createwallet_override(self):\n+        self.log.info(\"Test that the blank flag can be overridden\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_wo_blank\", disable_private_keys=True, blank=False)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_wo_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importaddress(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importaddress unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"iaddr\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iaddr\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importaddress(ADDRESS_BCRT1_UNSPENDABLE)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importpubkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importpubkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipub\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipub\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        eckey = ECKey()\n+        eckey.generate()\n+\n+        wallet.importpubkey(eckey.get_pubkey().get_bytes().hex())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importprivkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importprivkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipriv\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipriv\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importprivkey(generate_wif_key())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importmulti(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importmulti unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"imulti\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"imulti\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importmulti([{\n+            \"desc\": ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importdescriptors(self):\n+        if not self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importdescriptors unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"idesc\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"idesc\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importdescriptors([{\n+            \"desc\": ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importwallet(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importwallet unsets the blank flag\")\n+        def_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"iwallet\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iwallet\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        wallet_dump_path = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        def_wallet.dumpwallet(wallet_dump_path)\n+\n+        wallet.importwallet(wallet_dump_path)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140387995",
      "id" : 1140387995,
      "line" : 116,
      "node_id" : "PRRC_kwDOABII585D-PCb",
      "original_commit_id" : "23403d0ed81d2365f895ab4fab50f6bb87b44ad9",
      "original_line" : 116,
      "original_position" : 116,
      "original_start_line" : 115,
      "path" : "test/functional/wallet_blank.py",
      "position" : 116,
      "pull_request_review_id" : 1346157912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140387995/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 115,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-17T15:33:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140387995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140491616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140491616"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We determine whether a wallet is new by checking whether it has any keys or scripts contained in it. If it is \"new\", then the wallet will be setup to have the automatically generated things. The blank flag is used only to indicate to that code that the wallet is intentionally blank and should not be setup as a new wallet. Once something has been added to the wallet, it's no longer blank and the setup code will no longer recognize it as being \"new\", so the flag should be removed. It's not intended as something that should live beyond that, it doesn't just mean that the wallet was created as blank, but rather that it is currently blank and that state is intentional.",
      "commit_id" : "23403d0ed81d2365f895ab4fab50f6bb87b44ad9",
      "created_at" : "2023-03-17T17:04:57Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import (\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+    ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+)\n+from test_framework.key import ECKey\n+from test_framework.util import (\n+    assert_equal,\n+)\n+from test_framework.wallet_util import generate_wif_key\n+\n+\n+class WalletBlankTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def add_options(self, options):\n+        self.add_wallet_options(options)\n+\n+    def test_createwallet(self):\n+        self.log.info(\"Test that createwallet sets the blank flag when disableprivatekeys\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_w_blank\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_w_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+    def test_createwallet_override(self):\n+        self.log.info(\"Test that the blank flag can be overridden\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_wo_blank\", disable_private_keys=True, blank=False)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_wo_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importaddress(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importaddress unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"iaddr\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iaddr\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importaddress(ADDRESS_BCRT1_UNSPENDABLE)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importpubkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importpubkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipub\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipub\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        eckey = ECKey()\n+        eckey.generate()\n+\n+        wallet.importpubkey(eckey.get_pubkey().get_bytes().hex())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importprivkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importprivkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipriv\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipriv\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importprivkey(generate_wif_key())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importmulti(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importmulti unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"imulti\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"imulti\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importmulti([{\n+            \"desc\": ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importdescriptors(self):\n+        if not self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importdescriptors unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"idesc\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"idesc\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importdescriptors([{\n+            \"desc\": ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importwallet(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importwallet unsets the blank flag\")\n+        def_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"iwallet\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iwallet\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        wallet_dump_path = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        def_wallet.dumpwallet(wallet_dump_path)\n+\n+        wallet.importwallet(wallet_dump_path)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140491616",
      "id" : 1140491616,
      "in_reply_to_id" : 1140387995,
      "line" : 116,
      "node_id" : "PRRC_kwDOABII585D-oVg",
      "original_commit_id" : "23403d0ed81d2365f895ab4fab50f6bb87b44ad9",
      "original_line" : 116,
      "original_position" : 116,
      "original_start_line" : 115,
      "path" : "test/functional/wallet_blank.py",
      "position" : 116,
      "pull_request_review_id" : 1346348440,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140491616/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 115,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-17T17:06:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140491616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@achow101 could you please add release notes detailing how encrypting the wallet will now rotate the imported descriptors in a descriptor wallet? Other than that this looks good.",
      "created_at" : "2023-03-17T18:45:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1474263302",
      "id" : 1474263302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585X33kG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1474263302/reactions"
      },
      "updated_at" : "2023-03-17T18:45:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1474263302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140608514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140608514"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see, thanks for the explanation",
      "commit_id" : "abc328c06732aa468694d6c22217a12102ece70a",
      "created_at" : "2023-03-17T19:04:40Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import (\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+    ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+)\n+from test_framework.key import ECKey\n+from test_framework.util import (\n+    assert_equal,\n+)\n+from test_framework.wallet_util import generate_wif_key\n+\n+\n+class WalletBlankTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def add_options(self, options):\n+        self.add_wallet_options(options)\n+\n+    def test_createwallet(self):\n+        self.log.info(\"Test that createwallet sets the blank flag when disableprivatekeys\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_w_blank\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_w_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+    def test_createwallet_override(self):\n+        self.log.info(\"Test that the blank flag can be overridden\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_wo_blank\", disable_private_keys=True, blank=False)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_wo_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importaddress(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importaddress unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"iaddr\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iaddr\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importaddress(ADDRESS_BCRT1_UNSPENDABLE)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importpubkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importpubkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipub\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipub\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        eckey = ECKey()\n+        eckey.generate()\n+\n+        wallet.importpubkey(eckey.get_pubkey().get_bytes().hex())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importprivkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importprivkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipriv\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipriv\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importprivkey(generate_wif_key())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importmulti(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importmulti unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"imulti\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"imulti\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importmulti([{\n+            \"desc\": ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importdescriptors(self):\n+        if not self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importdescriptors unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"idesc\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"idesc\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importdescriptors([{\n+            \"desc\": ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importwallet(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importwallet unsets the blank flag\")\n+        def_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"iwallet\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iwallet\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        wallet_dump_path = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        def_wallet.dumpwallet(wallet_dump_path)\n+\n+        wallet.importwallet(wallet_dump_path)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140608514",
      "id" : 1140608514,
      "in_reply_to_id" : 1140387995,
      "line" : 116,
      "node_id" : "PRRC_kwDOABII585D_E4C",
      "original_commit_id" : "23403d0ed81d2365f895ab4fab50f6bb87b44ad9",
      "original_line" : 116,
      "original_position" : 116,
      "original_start_line" : 115,
      "path" : "test/functional/wallet_blank.py",
      "position" : 116,
      "pull_request_review_id" : 1346521802,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140608514/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 115,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-17T19:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140608514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140624095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140624095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed the wording slightly, although did not use this suggestion since it is incorrect.",
      "commit_id" : "abc328c06732aa468694d6c22217a12102ece70a",
      "created_at" : "2023-03-17T19:19:23Z",
      "diff_hunk" : "@@ -59,6 +59,7 @@ static RPCHelpMan getwalletinfo()\n                         }, /*skip_type_check=*/true},\n                         {RPCResult::Type::BOOL, \"descriptors\", \"whether this wallet uses descriptors for scriptPubKey management\"},\n                         {RPCResult::Type::BOOL, \"external_signer\", \"whether this wallet is configured to use an external signer such as a hardware wallet\"},\n+                        {RPCResult::Type::BOOL, \"blank\", \"Whether this wallet is marked as intentionally not having any keys, scripts, or descriptors\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1140624095",
      "id" : 1140624095,
      "in_reply_to_id" : 1140372731,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D_Irf",
      "original_commit_id" : "6ae1256483d3752894342cc0bc3655bbc6bfac00",
      "original_line" : 62,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1346546221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140624095/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-17T19:19:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140624095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a release note.",
      "created_at" : "2023-03-17T19:19:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1474299798",
      "id" : 1474299798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585X4AeW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1474299798/reactions"
      },
      "updated_at" : "2023-03-17T19:19:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1474299798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "reACK abc328c06732aa468694d6c22217a12102ece70a",
      "created_at" : "2023-03-17T19:24:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1474304473",
      "id" : 1474304473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585X4BnZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1474304473/reactions"
      },
      "updated_at" : "2023-03-17T19:24:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1474304473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1141776601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141776601"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I have a different perspective. The flag was provided during wallet creation and captures the intent of the user.\r\n\r\n> The blank flag is used only to indicate to that code that the wallet is intentionally blank and should not be setup as a new wallet.\r\n\r\nI'd like to take this one step further and argue that \"The blank flag is used only to indicate to that code that the wallet is intentionally blank and **the user is responsible for managing the keys in this wallet manually**.\" If user created wallet intentionally blank so the software doesn't touch the keys, does the intention go away after the keys are imported in the wallet? I don't think so.\r\n\r\n> Once something has been added to the wallet, it's no longer blank and the setup code will no longer recognize it as being \"new\", so the flag should be removed.\r\n\r\nWe shouldn't casually flip between just `blank` and `intentionally blank`. Yes, it's not longer blank, but it's still **intentionally blank** because this was and is the intent of the user. I think the word blank is just misleading here. We're better off replacing `intentionally blank` with `manual`.",
      "commit_id" : "abc328c06732aa468694d6c22217a12102ece70a",
      "created_at" : "2023-03-20T08:35:06Z",
      "diff_hunk" : "@@ -0,0 +1,130 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import (\n+    ADDRESS_BCRT1_UNSPENDABLE,\n+    ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+)\n+from test_framework.key import ECKey\n+from test_framework.util import (\n+    assert_equal,\n+)\n+from test_framework.wallet_util import generate_wif_key\n+\n+\n+class WalletBlankTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def add_options(self, options):\n+        self.add_wallet_options(options)\n+\n+    def test_createwallet(self):\n+        self.log.info(\"Test that createwallet sets the blank flag when disableprivatekeys\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_w_blank\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_w_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+    def test_createwallet_override(self):\n+        self.log.info(\"Test that the blank flag can be overridden\")\n+        self.nodes[0].createwallet(wallet_name=\"disable_privs_wo_blank\", disable_private_keys=True, blank=False)\n+        wallet = self.nodes[0].get_wallet_rpc(\"disable_privs_wo_blank\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importaddress(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importaddress unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"iaddr\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iaddr\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importaddress(ADDRESS_BCRT1_UNSPENDABLE)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importpubkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importpubkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipub\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipub\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        eckey = ECKey()\n+        eckey.generate()\n+\n+        wallet.importpubkey(eckey.get_pubkey().get_bytes().hex())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importprivkey(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importprivkey unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"ipriv\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"ipriv\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importprivkey(generate_wif_key())\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importmulti(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importmulti unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"imulti\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"imulti\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importmulti([{\n+            \"desc\": ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importdescriptors(self):\n+        if not self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importdescriptors unsets the blank flag\")\n+        self.nodes[0].createwallet(wallet_name=\"idesc\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"idesc\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+        wallet.importdescriptors([{\n+            \"desc\": ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR,\n+            \"timestamp\": \"now\",\n+        }])\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)\n+\n+    def test_importwallet(self):\n+        if self.options.descriptors:\n+            return\n+        self.log.info(\"Test that importwallet unsets the blank flag\")\n+        def_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"iwallet\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"iwallet\")\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], True)\n+\n+        wallet_dump_path = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        def_wallet.dumpwallet(wallet_dump_path)\n+\n+        wallet.importwallet(wallet_dump_path)\n+        assert_equal(wallet.getwalletinfo()[\"blank\"], False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#discussion_r1141776601",
      "id" : 1141776601,
      "in_reply_to_id" : 1140387995,
      "line" : 116,
      "node_id" : "PRRC_kwDOABII585EDiDZ",
      "original_commit_id" : "23403d0ed81d2365f895ab4fab50f6bb87b44ad9",
      "original_line" : 116,
      "original_position" : 116,
      "original_start_line" : 115,
      "path" : "test/functional/wallet_blank.py",
      "position" : 116,
      "pull_request_review_id" : 1348021324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141776601/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 115,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-20T08:35:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141776601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. But approach wise I'd like us to preserve the intent of the user that the wallet is intended as `manual` (we should pick a better term). Would it be hard to create a new flag to persist that intent and respect that (e.g on encryption)? ",
      "created_at" : "2023-03-20T08:36:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1475818349",
      "id" : 1475818349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585X9zNt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1475818349/reactions"
      },
      "updated_at" : "2023-03-20T08:37:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1475818349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> But approach wise I'd like us to preserve the intent of the user that the wallet is intended as `manual` (we should pick a better term). Would it be hard to create a new flag to persist that intent and respect that (e.g on encryption)?\r\n\r\nI agree, but I think that's orthogonal to this change and should be done in a followup.",
      "created_at" : "2023-03-20T15:48:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1476485625",
      "id" : 1476485625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585YAWH5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476485625/reactions"
      },
      "updated_at" : "2023-03-20T15:48:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476485625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "As far as I understand after this PR is merged we will start unsetting the blank flag and loosing the users' intent.\r\nAre we okay with loosing the intent for the wallets that used the code between this and the follow up PR?",
      "created_at" : "2023-03-21T08:29:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1477439839",
      "id" : 1477439839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585YD_Ff",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1477439839/reactions"
      },
      "updated_at" : "2023-03-21T08:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1477439839",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> As far as I understand after this PR is merged we will start unsetting the blank flag and loosing the users' intent.\r\n\r\nWe were already doing that in several places, the purpose of this PR is to unify the behavior.\r\n\r\nIf you make a blank legacy wallet, importing any script, address, pubkey, or compressed private key will currently unset the blank flag. If you import an uncompressed private key and your wallet is not encrypted, we would not unset the flag. I think that's a bug, which this PR fixes. Anything that rotates the HD seed, including encrypting a wallet, will also unset the blank flag in legacy wallets.\r\n\r\nFor descriptor wallets, we currently only unset the blank flag when creating born-encrypted wallets (which necessarily have the blank flag set when the wallet is created, but it is unset after keys are generated). We do not unset it for importing a descriptor, and encrypting a descriptor wallet with the blank flag set will not rotate the descriptors. This PR changes this so that importing a descriptor will unset the blank flag, which has a side effect of encrypting later will result in new descriptors being generated. The generating on encryption was not changed, although this is an oversight.\r\n\r\nThe changes to descriptor wallets is intended to make the blank flag behavior the same for both legacy and descriptor wallets. However given that people seem to think the blank flag has more meaning behind it, I'm okay with dropping the change to descriptor wallets. This will mean that the meaning of the blank flag will be different between the wallet types. For legacy wallets, it means that a wallet that has no keys or scripts with the flag set is supposed to be blank so that loading does not treat it as new. For descriptor wallets it will mean that the user wants to manage the descriptors themselves.",
      "created_at" : "2023-03-21T16:58:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1478256607",
      "id" : 1478256607,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585YHGff",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1478256607/reactions"
      },
      "updated_at" : "2023-03-21T16:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1478256607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> However given that people seem to think the blank flag has more meaning behind it, I'm okay with dropping the change to descriptor wallets. \r\n\r\nI think dropping the change to descriptor wallets would make more sense here. Personally I have always thought that `blank` for descriptor wallets meant that the wallet does not contain any wallet-generated descriptors. Additionally, as @S3RK pointed out, this would allow for maintaining the current behavior until a new flag can be added. ",
      "created_at" : "2023-03-21T22:32:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1478682109",
      "id" : 1478682109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585YIuX9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1478682109/reactions"
      },
      "updated_at" : "2023-03-21T22:32:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1478682109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For reference, the original release note in 0.18.0 for `blank` is as follows:\r\n\r\n> `createwallet` now has an optional `blank` argument that can be used to create a blank wallet. Blank wallets do not have any keys or HD seed. They cannot be opened in software older than 0.18. Once a blank wallet has a HD seed set (by using `sethdseed`) or private keys, scripts, addresses, and other watch only things have been imported, the wallet is no longer blank and can be opened in 0.17.x. Encrypting a blank wallet will also set a HD seed for it.",
      "created_at" : "2023-03-22T15:36:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1479793412",
      "id" : 1479793412,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585YM9sE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1479793412/reactions"
      },
      "updated_at" : "2023-03-22T15:36:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1479793412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It turns out that encrypting a blank legacy wallet also does not unset the blank flag nor does it generate a new seed.\r\n\r\nThe latest push removes the descriptor wallet changes and adds tests for the behavior when encrypting.",
      "created_at" : "2023-03-22T17:50:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1480012074",
      "id" : 1480012074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585YNzEq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1480012074/reactions"
      },
      "updated_at" : "2023-03-22T17:50:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1480012074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK c5fb9a4dd97b47db0e52c497a757dff943b255b1\r\n\r\nI'm still slightly hesitating though. One question that still bothers me is whether we should expose `blank` flag at all. It's an implementation detail and we only need it for the functional tests. It doesn't seem like there is any observable by the user behaviour of the flag, so why test it with functional tests? Unit tests are better fit for testing internal invariants. \r\n\r\nThis is a minor detail, and shouldn't block the PR, in the worst case we deprecate the flag and remove it from `getwalletinfo` RPC and move tests. ",
      "created_at" : "2023-03-29T07:27:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1488079213",
      "id" : 1488079213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585Ysklt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1488079213/reactions"
      },
      "updated_at" : "2023-03-29T07:27:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1488079213",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Before the text; this is not a blocking comment. Purely about adding some ideas.\r\n\r\n> I'm still slightly hesitating though. One question that still bothers me is whether we should expose `blank` flag at all. It's an implementation detail and we only need it for the functional tests. It doesn't seem like there is any observable by the user behaviour of the flag, so why test it with functional tests? Unit tests are better fit for testing internal invariants.\r\n\r\nHmm, I also agree that exposing an implementation detail isn't the best. More when we are planning to deprecate the flag.\r\n\r\nBut.. we currently don't have a way to return a \"test only\" result in the RPC commands. So far, the only functionality that is \"similar\" to that would be to mark the RPC result as optional and only return it on regtest/testnet (e.g. https://github.com/furszy/bitcoin-core/commit/4cfe14cb2a6e4ec9cd7e836917c7323c1ce607d5), which isn't the best but it works.\r\nAnother idea, cleaner but a bit more complex. Would be to create a `getwalletinfo` wrapper: make a proxy function that calls `getwalletinfo` and adds the `blank` flag at the end only for regtest. Which would let us add more implementation details for testing only purposes in the future.\r\n",
      "created_at" : "2023-03-29T20:08:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1489236967",
      "id" : 1489236967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585Yw_Pn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1489236967/reactions"
      },
      "updated_at" : "2023-03-29T20:08:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1489236967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re code review ACK 7baa0971527ba3c8d87b82c7a2a4eabf6abbb2b7\r\n\r\nMy previous comment about exposing `blank` flag is still valid, but I don't think it's blocking. I like furszy's suggestion to return the flag only for regtest",
      "created_at" : "2023-05-08T06:35:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25634#issuecomment-1537830694",
      "id" : 1537830694,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
      "node_id" : "IC_kwDOABII585bqW8m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1537830694/reactions"
      },
      "updated_at" : "2023-05-08T06:35:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1537830694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   }
]
