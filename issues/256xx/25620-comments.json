[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [S3RK](https://github.com/bitcoin/bitcoin/pull/25620#issuecomment-1191091976) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26951](https://github.com/bitcoin/bitcoin/pull/26951) (wallet: improve rescan performance 640% by pstratem)\n* [#26858](https://github.com/bitcoin/bitcoin/pull/26858) (wallet: Use defined purposes instead of inlining by aureleoules)\n* [#26836](https://github.com/bitcoin/bitcoin/pull/26836) (wallet: finish addressbook encapsulation by furszy)\n* [#26756](https://github.com/bitcoin/bitcoin/pull/26756) (wallet: Replace `GetBalance()` logic with `AvailableCoins()` by w0xlt)\n* [#25979](https://github.com/bitcoin/bitcoin/pull/25979) ([WIP] wallet: standardize change output detection process by furszy)\n* [#25297](https://github.com/bitcoin/bitcoin/pull/25297) (wallet: group independent db writes on single batched db transaction by furszy)\n* [#24914](https://github.com/bitcoin/bitcoin/pull/24914) (wallet: Load database records in a particular order by achow101)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-07-16T01:43:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25620#issuecomment-1186052486",
      "id" : 1186052486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25620",
      "node_id" : "IC_kwDOABII585GsbmG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186052486/reactions"
      },
      "updated_at" : "2023-02-08T15:48:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186052486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The first four commits seem fine and could stand alone, but I'm not sure that introducing an entire class for managing the address book is really necessary. I don't really see how it is more beneficial to have such a class vs just cleaning up existing address book access and making `m_address_book` private. I don't really foresee a situation where we would want to have different implementations of the address book.",
      "created_at" : "2022-07-18T20:13:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25620#issuecomment-1188256001",
      "id" : 1188256001,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25620",
      "node_id" : "IC_kwDOABII585G01kB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1188256001/reactions"
      },
      "updated_at" : "2022-07-18T20:13:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1188256001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The first four commits seem fine and could stand alone, but I'm not sure that introducing an entire class for managing the address book is really necessary. I don't really see how it is more beneficial to have such a class vs just cleaning up existing address book access and making `m_address_book` private. I don't really foresee a situation where we would want to have different implementations of the address book.\r\n\r\nThat point is more a \"plus\" than part of the short term benefits.\r\n\r\nThe manager decoupling could worth it mainly for three reasons:\r\n\r\n1) It's another extra responsibility removed from the wallet class. Class that, even with the spend/receive files decoupling, is still a long file that keeps growing. Handling more responsibilities that what should ideally handle.\r\n\r\n    The `CWallet` class description says: âCWallet maintains a set of transactions and balances, and provides the ability to create new transactions.â. And.. that is not even 1/10 of what the wallet class does (there is a good phrase that says something like: \"Try to sum up what a class does in a single phrase. If this phrase includes âANDâ itâs probably doing too much.\").\r\n\r\n    Plus, Iâm unsure about how many devs know all the current address book functionalities, the code was a bit spread across the wallet without any proper description.\r\n\r\n2) The new manager cuts the address book dependency on the wallet mutex. So, every walk-through the address book entries (which we do in several RPC commands and on the GUI too), single entry searches, the `isAddressUsed` and the payment requests retrieval can run **wallet mutex free**. Which, as we use the wallet mutex for practically everything that happens inside the wallet, seems to be an even nicer property.\r\nAn easy example is the RPC command Â´listlabelsÂ´, which will run `cs_wallet` lock free.\r\n\r\n3) Then a separated class let us add test coverage isolated from the whole wallet class. So, bugs like an unknown address book entry purpose, an entry purpose change from \"receive\" to \"send\" (which would be pretty bad), a removal of a âreceiveâ entry, among other negative test scenarios, could be guarded inside the class and test covered without requiring to setup an entire wallet, the signals etc.\r\nNote: the purpose field instead of be a hardcoded string on the caller side, could be an enum that internally (only inside the manager class) maps to the string value. Which will be less error prone.\r\n\r\n---------\r\n\r\nPD: we could still implement all of this inside the wallet class as well (including methods descriptions and what people shouldn't do), but.. is that the best for a maintainability point of view?. Shouldn't the wallet class ideally act more as a flow dispatcher, calling the appropriate classes/functions based on the contextual information?\r\nSo each inner class contains few properly documented responsibilities and we prevent problems that classes with a large span of responsibilities and activities have (plus, we make the wallet sources more friendly to review).\r\n\r\nSaying that, I'm weighting approaches out loud.. I would be fine either way for this. Maybe it's too early to implement the `AddressBookManager`.",
      "created_at" : "2022-07-19T21:37:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25620#issuecomment-1189575145",
      "id" : 1189575145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25620",
      "node_id" : "IC_kwDOABII585G53np",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189575145/reactions"
      },
      "updated_at" : "2022-07-20T01:17:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189575145",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ConceptACK. Separating this responsibility from `CWallet` class is reducing complexity and introduces useful abstractions.\r\n\r\n@furszy I noticed that you left original methods to deal with address book in `CWallet`. Some of the are pure proxies. Is that on purpose? Do you have any further plans here?",
      "created_at" : "2022-07-21T06:28:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25620#issuecomment-1191091976",
      "id" : 1191091976,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25620",
      "node_id" : "IC_kwDOABII585G_p8I",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191091976/reactions"
      },
      "updated_at" : "2022-07-21T06:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191091976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @furszy I noticed that you left original methods to deal with address book in CWallet. Some of the are pure proxies. Is that on purpose? Do you have any further plans here?\r\n\r\nYeah, I left them for two main reason:\r\n (1) To keep the same wallet interface and (2) To not give callers free will to do anything that want with the `AddressBookManager` object. Preventing external code to call any write function without triggering the wallet internal signals which are useful to notify to the upper layers (example: the `SetAddressBook` method triggers the wallet's `NotifyAddressBookChanged` signal when an entry gets added or updated in the addressbook).",
      "created_at" : "2022-07-21T15:32:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25620#issuecomment-1191636318",
      "id" : 1191636318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25620",
      "node_id" : "IC_kwDOABII585HBu1e",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191636318/reactions"
      },
      "updated_at" : "2022-07-21T15:32:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191636318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> 2. The new manager cuts the address book dependency on the wallet mutex. So, every walk-through the address book entries (which we do in several RPC commands and on the GUI too), single entry searches, the `isAddressUsed` and the payment requests retrieval can run **wallet mutex free**. Which, as we use the wallet mutex for practically everything that happens inside the wallet, seems to be an even nicer property.\r\n>  An easy example is the RPC command Â´listlabelsÂ´, which will run `cs_wallet` lock free.\r\n\r\nI don't think the presence of `cs_wallet` precludes having another `cs_address_book` (or whatever) also in `CWallet`.\r\n\r\n> we could still implement all of this inside the wallet class as well (including methods descriptions and what people shouldn't do), but.. is that the best for a maintainability point of view?\r\n\r\nI don't really think that having the separate class helps though. `AddressBookMan` is entirely internal to the wallet, so no callers will have access to its functions (as it should be). It also largely doesn't have its own private functions that its functions regularly call, so it just ends up being a wrapper around m_address_book. We end up keeping all of the same address book functions in `CWallet`, and actually end up adding even more functions. Those functions in `CWallet` just pass straight through to `AddressBookMan` and largely don't do anything interesting. So any change to function signatures now requires changing 4 places, rather than 2 places. IMO that is not more maintainable.",
      "created_at" : "2022-08-02T20:48:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25620#issuecomment-1203200126",
      "id" : 1203200126,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25620",
      "node_id" : "IC_kwDOABII585Ht2B-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203200126/reactions"
      },
      "updated_at" : "2022-08-02T20:48:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1203200126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@achow101 why do you think no callers should have access to `AddressBookMan`?\r\n\r\nI agree that having proxy functions doesn't help with maintainability, but I'd just say we need to drop the wrappers in `CWallet` and let the callers interact with the address book.",
      "created_at" : "2022-08-08T06:25:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25620#issuecomment-1207718030",
      "id" : 1207718030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25620",
      "node_id" : "IC_kwDOABII585H_FCO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207718030/reactions"
      },
      "updated_at" : "2022-08-08T06:25:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207718030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Have decoupled the commits that have no conceptual opposition within https://github.com/bitcoin/bitcoin/pull/26836. So we can move forward with them first. Afterwards, we can re-evaluate whether to rework this PR or not, based on a smaller set of patches.",
      "created_at" : "2023-02-08T15:48:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25620#issuecomment-1422834129",
      "id" : 1422834129,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25620",
      "node_id" : "IC_kwDOABII585UzrnR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1422834129/reactions"
      },
      "updated_at" : "2023-02-08T15:48:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1422834129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   }
]
