[
   {
      "author_association" : "NONE",
      "body" : "Could you PR the benchmark used for this? It would be interesting to compare it with bit-twiddling approaches; e.g. g++/clang will SSE-vectorize code that uses something like\r\n```\r\n    *it++ = ((v >> 4) < 10 ? '0' + (v >> 4) : 'a' + (v >> 4) - 10);\r\n    *it++ = ((v & 0xF) < 10 ? '0' + (v & 0xF) : 'a' + (v & 0xF) - 10);\r\n```\r\n(I'm clearly assuming ASCII here, but so does the current implementation of `HexDigit`)",
      "created_at" : "2021-10-26T22:31:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-952378024",
      "id" : 952378024,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5844xCKo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952378024/reactions"
      },
      "updated_at" : "2021-10-26T22:33:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952378024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1747924?v=4",
         "events_url" : "https://api.github.com/users/madars/events{/privacy}",
         "followers_url" : "https://api.github.com/users/madars/followers",
         "following_url" : "https://api.github.com/users/madars/following{/other_user}",
         "gists_url" : "https://api.github.com/users/madars/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/madars",
         "id" : 1747924,
         "login" : "madars",
         "node_id" : "MDQ6VXNlcjE3NDc5MjQ=",
         "organizations_url" : "https://api.github.com/users/madars/orgs",
         "received_events_url" : "https://api.github.com/users/madars/received_events",
         "repos_url" : "https://api.github.com/users/madars/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/madars/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/madars/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/madars"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not entirely sure, but my intuition says that accessing a char array through a uint16_t pointer is undefined behavior.",
      "created_at" : "2021-10-26T22:32:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-952378664",
      "id" : 952378664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5844xCUo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952378664/reactions"
      },
      "updated_at" : "2021-10-26T22:32:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952378664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Could you PR the benchmark used for this? It would be interesting to compare it with bit-twiddling approaches; e.g. g++/clang will SSE-vectorize code that uses something like\r\n> \r\n> ```\r\n>     *it++ = ((v >> 4) < 10 ? '0' + (v >> 4) : 'a' + (v >> 4) - 10);\r\n>     *it++ = ((v & 0xF) < 10 ? '0' + (v & 0xF) : 'a' + (v & 0xF) - 10);\r\n> ```\r\n> \r\n> (I'm clearly assuming ASCII here, but so does the current implementation of `HexDigit`)\r\n\r\nThe speedup comes from the 16-bit write.\r\n\r\n> I'm not entirely sure, but my intuition says that accessing a char array through a uint16_t pointer is undefined behavior.\r\n\r\nmodifying is undefined behavior.",
      "created_at" : "2021-10-26T23:29:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-952407624",
      "id" : 952407624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5844xJZI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952407624/reactions"
      },
      "updated_at" : "2021-10-26T23:32:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952407624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/888782?v=4",
         "events_url" : "https://api.github.com/users/denis2342/events{/privacy}",
         "followers_url" : "https://api.github.com/users/denis2342/followers",
         "following_url" : "https://api.github.com/users/denis2342/following{/other_user}",
         "gists_url" : "https://api.github.com/users/denis2342/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/denis2342",
         "id" : 888782,
         "login" : "denis2342",
         "node_id" : "MDQ6VXNlcjg4ODc4Mg==",
         "organizations_url" : "https://api.github.com/users/denis2342/orgs",
         "received_events_url" : "https://api.github.com/users/denis2342/received_events",
         "repos_url" : "https://api.github.com/users/denis2342/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/denis2342/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/denis2342/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/denis2342"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Could you PR the benchmark used for this?\r\n\r\nThe times from the commit log where measured with a clock_gettime(CLOCK_MONOTONIC_RAW) in the test. To be sure I patched roc/blockchain.cpp to measure the getblock non verbose call. For a 1.6MB block (706,813 ) unpatched it needed 1.7ms average and 1.2ms average with the new code.",
      "created_at" : "2021-10-27T00:46:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-952441807",
      "id" : 952441807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5844xRvP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952441807/reactions"
      },
      "updated_at" : "2021-10-27T00:47:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952441807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/888782?v=4",
         "events_url" : "https://api.github.com/users/denis2342/events{/privacy}",
         "followers_url" : "https://api.github.com/users/denis2342/followers",
         "following_url" : "https://api.github.com/users/denis2342/following{/other_user}",
         "gists_url" : "https://api.github.com/users/denis2342/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/denis2342",
         "id" : 888782,
         "login" : "denis2342",
         "node_id" : "MDQ6VXNlcjg4ODc4Mg==",
         "organizations_url" : "https://api.github.com/users/denis2342/orgs",
         "received_events_url" : "https://api.github.com/users/denis2342/received_events",
         "repos_url" : "https://api.github.com/users/denis2342/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/denis2342/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/denis2342/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/denis2342"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> modifying is undefined behavior.\r\n\r\n`memcpy` would make this defined while still likely aggressively optimized by a modern compiler, no?",
      "created_at" : "2021-10-27T02:08:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-952474285",
      "id" : 952474285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5844xZqt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952474285/reactions"
      },
      "updated_at" : "2021-10-27T02:08:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952474285",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for your contribution. However, from a risk perspective I'd prefer to keep this function as is instead of push boundaries on C++ undefined behavior here. Sorry (I also don't think particular improvements in micro-benchmarks here are as important to the big picture.)\r\n\r\nEdit: the test is very welcome though!",
      "created_at" : "2021-10-27T06:31:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-952584167",
      "id" : 952584167,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5844x0fn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952584167/reactions"
      },
      "updated_at" : "2021-10-27T06:35:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952584167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23364#discussion_r737146888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737146888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please don't do this. You can't assume `.data()` is 16-bit aligned.",
      "commit_id" : "7f561b7b861761708e96c3dff92a9a877f6f1c8f",
      "created_at" : "2021-10-27T06:34:25Z",
      "diff_hunk" : "@@ -516,13 +516,20 @@ std::string Capitalize(std::string str)\n std::string HexStr(const Span<const uint8_t> s)\n {\n     std::string rv(s.size() * 2, '\\0');\n-    static constexpr char hexmap[16] = { '0', '1', '2', '3', '4', '5', '6', '7',\n-                                         '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n-    auto it = rv.begin();\n-    for (uint8_t v : s) {\n-        *it++ = hexmap[v >> 4];\n-        *it++ = hexmap[v & 15];\n-    }\n-    assert(it == rv.end());\n+    static const uint16_t *hexmap = (const uint16_t *)\n+        \"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\"\n+        \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f\"\n+        \"404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f\"\n+        \"606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f\"\n+        \"808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f\"\n+        \"a0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebf\"\n+        \"c0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedf\"\n+        \"e0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff\";\n+    uint16_t *it = (uint16_t *)rv.data();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#discussion_r737146888",
      "id" : 737146888,
      "line" : 528,
      "node_id" : "PRRC_kwDOABII584r7_gI",
      "original_commit_id" : "7f561b7b861761708e96c3dff92a9a877f6f1c8f",
      "original_line" : 528,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/util/strencodings.cpp",
      "position" : 21,
      "pull_request_review_id" : 790202879,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23364",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737146888/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-10-27T06:34:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/737146888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've run the benchmark `BlockToJsonVerbose` on this and master on my CPU. Just for interest I also tried the non-lookuptable version from @madars, and a fixed variant that shouldn't have any alignment issues:\r\n\r\n```cpp\r\nstd::string HexStr(const Span<const uint8_t> s)\r\n{\r\n    std::string rv(s.size() * 2, '\\0');\r\n    static const char* hexmap =\r\n        \"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\"\r\n        \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f\"\r\n        \"404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f\"\r\n        \"606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f\"\r\n        \"808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f\"\r\n        \"a0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebf\"\r\n        \"c0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedf\"\r\n        \"e0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff\";\r\n    char* it = rv.data();\r\n\r\n    for (uint8_t v : s) {\r\n        std::memcpy(it, hexmap + v * 2, 2);\r\n        it += 2;\r\n    }\r\n\r\n    assert(it == rv.data() + rv.size());\r\n    return rv;\r\n}\r\n```\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|       61,945,723.75 |               16.14 |    0.1% |  480,230,046.38 |  190,496,947.38 |  2.521 |  82,830,913.62 |    0.5% |      5.51 | `BlockToJsonVerbose master`\r\n|       60,552,789.50 |               16.51 |    0.2% |  464,155,088.33 |  185,292,740.50 |  2.505 |  82,185,538.22 |    0.5% |      5.58 | `BlockToJsonVerbose #23364`\r\n|       64,150,811.88 |               15.59 |    0.0% |  507,344,048.00 |  197,153,314.75 |  2.573 |  82,831,592.25 |    0.5% |      5.32 | @madars variant\r\n|       60,510,153.56 |               16.53 |    0.0% |  464,058,161.00 |  185,538,679.67 |  2.501 |  82,185,536.89 |    0.5% |      5.58 | @martinus variant\r\n\r\nThe PR is 2.2% faster than master, the non-lookup table of @madars is slower, and my rewrite of the PR seems to produce exactly the same code as the PR (ins/op are 0.02% different)\r\n\r\nFrom what I've seen how `HexStr` is used I think more could be gained by changing the API to something like `AppendHexStr(const Span<const uint8_t> s, std::string& out);`. This would get rid of a lot of temporary `std::string`s. Such a change might be less controversial.",
      "created_at" : "2021-10-27T07:17:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-952610764",
      "id" : 952610764,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5844x6_M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952610764/reactions"
      },
      "updated_at" : "2021-10-27T07:18:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952610764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "BlockToJsonVerbose tests a lot of code which is not part of this PR. Maybe there should be a benchmark which is more like getblock(). I made a benchmark like this:\r\n\r\n```\r\nstatic void BlockToHex(benchmark::Bench& bench)\r\n{\r\n    TestBlockAndIndex data;\r\n    CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION);\r\n    ssBlock << data.block;\r\n    bench.run([&] {\r\n        auto univalue = HexStr(ssBlock);\r\n        ankerl::nanobench::doNotOptimizeAway(univalue);\r\n    });\r\n}\r\nBENCHMARK(BlockToHex);\r\n\r\n```\r\nI got the following results:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|          390,514.00 |            2,560.73 |    0.0% |      0.01 | `BlockToHex_PR`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|          899,745.00 |            1,111.43 |    0.0% |      0.01 | `BlockToHex_HEAD`\r\n",
      "created_at" : "2021-10-27T09:43:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-952736550",
      "id" : 952736550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5844yZsm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952736550/reactions"
      },
      "updated_at" : "2021-10-27T09:43:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952736550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/888782?v=4",
         "events_url" : "https://api.github.com/users/denis2342/events{/privacy}",
         "followers_url" : "https://api.github.com/users/denis2342/followers",
         "following_url" : "https://api.github.com/users/denis2342/following{/other_user}",
         "gists_url" : "https://api.github.com/users/denis2342/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/denis2342",
         "id" : 888782,
         "login" : "denis2342",
         "node_id" : "MDQ6VXNlcjg4ODc4Mg==",
         "organizations_url" : "https://api.github.com/users/denis2342/orgs",
         "received_events_url" : "https://api.github.com/users/denis2342/received_events",
         "repos_url" : "https://api.github.com/users/denis2342/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/denis2342/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/denis2342/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/denis2342"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@denis2342 Ah, I didn't know that full blocks are also converted to hex. Makes sense to add a benchmark for that.",
      "created_at" : "2021-10-27T11:50:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-952843089",
      "id" : 952843089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5844yztR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952843089/reactions"
      },
      "updated_at" : "2021-10-27T11:50:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952843089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> memcpy would make this defined while still likely aggressively optimized by a modern compiler, no?\r\n\r\nWe can try this, at least it would help move this forward. As it is now it cannot be merged.",
      "created_at" : "2021-11-26T15:59:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-980075962",
      "id" : 980075962,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII5846asW6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/980075962/reactions"
      },
      "updated_at" : "2021-11-26T15:59:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/980075962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Going to close this for now. Let us know if you'd like to continue working on it, and address comments, and it can be re-opened. Looks like @martinus may also be working on a follow up.",
      "created_at" : "2022-03-24T15:38:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-1077766577",
      "id" : 1077766577,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII585APWmx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077766577/reactions"
      },
      "updated_at" : "2022-03-24T15:38:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077766577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Follow up in #24852.",
      "created_at" : "2022-04-14T07:42:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23364#issuecomment-1098806115",
      "id" : 1098806115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23364",
      "node_id" : "IC_kwDOABII585BfnNj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098806115/reactions"
      },
      "updated_at" : "2022-04-14T07:42:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098806115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
