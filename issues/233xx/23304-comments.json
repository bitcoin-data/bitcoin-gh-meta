[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23829](https://github.com/bitcoin/bitcoin/pull/23829) (refactor: use braced init for integer literals instead of c style casts by PastaPastaPasta)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-10-19T08:30:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-946483206",
      "id" : 946483206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
      "node_id" : "IC_kwDOABII5844ajAG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/946483206/reactions"
      },
      "updated_at" : "2022-02-02T13:50:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/946483206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ready for review, supersedes #23277 ",
      "created_at" : "2021-11-03T13:15:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-959047507",
      "id" : 959047507,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
      "node_id" : "IC_kwDOABII5845KedT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/959047507/reactions"
      },
      "updated_at" : "2021-11-03T13:15:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/959047507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, thanks for adding a test!",
      "created_at" : "2021-11-29T11:17:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-981538843",
      "id" : 981538843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
      "node_id" : "IC_kwDOABII5846gRgb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/981538843/reactions"
      },
      "updated_at" : "2021-11-29T11:17:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/981538843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased for hidden merge conflict.",
      "created_at" : "2021-12-08T16:27:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-988968690",
      "id" : 988968690,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
      "node_id" : "IC_kwDOABII58468nby",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988968690/reactions"
      },
      "updated_at" : "2021-12-08T16:27:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988968690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784438902"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784438902"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since you're touching this, please make it braces or same line to be inline with the style guide",
      "commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "created_at" : "2022-01-14T01:10:13Z",
      "diff_hunk" : "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784438902",
      "id" : 784438902,
      "line" : 1285,
      "node_id" : "PRRC_kwDOABII584uwZZ2",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 1285,
      "original_position" : 116,
      "original_start_line" : 1282,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 116,
      "pull_request_review_id" : 852397699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784438902/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1282,
      "start_side" : "RIGHT",
      "updated_at" : "2022-01-14T01:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784438902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6443210?v=4",
         "events_url" : "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PastaPastaPasta/followers",
         "following_url" : "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PastaPastaPasta",
         "id" : 6443210,
         "login" : "PastaPastaPasta",
         "node_id" : "MDQ6VXNlcjY0NDMyMTA=",
         "organizations_url" : "https://api.github.com/users/PastaPastaPasta/orgs",
         "received_events_url" : "https://api.github.com/users/PastaPastaPasta/received_events",
         "repos_url" : "https://api.github.com/users/PastaPastaPasta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PastaPastaPasta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PastaPastaPasta"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439016"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "please make this not use c-style cast\r\n\r\n```\r\nint64_t{1}",
      "commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "created_at" : "2022-01-14T01:10:34Z",
      "diff_hunk" : "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439016",
      "id" : 784439016,
      "line" : 1286,
      "node_id" : "PRRC_kwDOABII584uwZbo",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 1286,
      "original_position" : 117,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 117,
      "pull_request_review_id" : 852397699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439016/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-14T01:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6443210?v=4",
         "events_url" : "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PastaPastaPasta/followers",
         "following_url" : "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PastaPastaPasta",
         "id" : 6443210,
         "login" : "PastaPastaPasta",
         "node_id" : "MDQ6VXNlcjY0NDMyMTA=",
         "organizations_url" : "https://api.github.com/users/PastaPastaPasta/orgs",
         "received_events_url" : "https://api.github.com/users/PastaPastaPasta/received_events",
         "repos_url" : "https://api.github.com/users/PastaPastaPasta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PastaPastaPasta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PastaPastaPasta"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439275"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "same line\r\n```suggestion\r\n    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT)) {\r\n```",
      "commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "created_at" : "2022-01-14T01:11:20Z",
      "diff_hunk" : "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    } else {\n+        missingExternal = std::max(target - (chain.nExternalChainCounter - chain.m_next_external_index), (int64_t) 0);\n+        missingInternal = std::max(target - (chain.nInternalChainCounter - chain.m_next_internal_index), (int64_t) 0);\n+    }\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439275",
      "id" : 784439275,
      "line" : 1301,
      "node_id" : "PRRC_kwDOABII584uwZfr",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 1301,
      "original_position" : 136,
      "original_start_line" : 1300,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 136,
      "pull_request_review_id" : 852397699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439275/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1300,
      "start_side" : "RIGHT",
      "updated_at" : "2022-01-14T01:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6443210?v=4",
         "events_url" : "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PastaPastaPasta/followers",
         "following_url" : "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PastaPastaPasta",
         "id" : 6443210,
         "login" : "PastaPastaPasta",
         "node_id" : "MDQ6VXNlcjY0NDMyMTA=",
         "organizations_url" : "https://api.github.com/users/PastaPastaPasta/orgs",
         "received_events_url" : "https://api.github.com/users/PastaPastaPasta/received_events",
         "repos_url" : "https://api.github.com/users/PastaPastaPasta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PastaPastaPasta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PastaPastaPasta"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439378"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    for (int64_t i = missingInternal + missingExternal; i--;) {\r\n```",
      "commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "created_at" : "2022-01-14T01:11:42Z",
      "diff_hunk" : "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    } else {\n+        missingExternal = std::max(target - (chain.nExternalChainCounter - chain.m_next_external_index), (int64_t) 0);\n+        missingInternal = std::max(target - (chain.nInternalChainCounter - chain.m_next_internal_index), (int64_t) 0);\n+    }\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n+    {\n+        // don't create extra internal keys\n+        missingInternal = 0;\n+    }\n+    bool internal = false;\n+    WalletBatch batch(m_storage.GetDatabase());\n+    for (int64_t i = missingInternal + missingExternal; i--;)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439378",
      "id" : 784439378,
      "line" : 1308,
      "node_id" : "PRRC_kwDOABII584uwZhS",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 1308,
      "original_position" : 143,
      "original_start_line" : 1307,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 143,
      "pull_request_review_id" : 852397699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439378/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1307,
      "start_side" : "RIGHT",
      "updated_at" : "2022-01-14T01:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439378",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6443210?v=4",
         "events_url" : "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PastaPastaPasta/followers",
         "following_url" : "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PastaPastaPasta",
         "id" : 6443210,
         "login" : "PastaPastaPasta",
         "node_id" : "MDQ6VXNlcjY0NDMyMTA=",
         "organizations_url" : "https://api.github.com/users/PastaPastaPasta/orgs",
         "received_events_url" : "https://api.github.com/users/PastaPastaPasta/received_events",
         "repos_url" : "https://api.github.com/users/PastaPastaPasta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PastaPastaPasta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PastaPastaPasta"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439520"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    bool TopUpChain(CHDChain& chain, unsigned int size);\r\n```",
      "commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "created_at" : "2022-01-14T01:12:05Z",
      "diff_hunk" : "@@ -354,6 +354,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n      */\n     bool TopUpInactiveHDChain(const CKeyID seed_id, int64_t index, bool internal);\n \n+    bool TopUpChain(CHDChain& chain ,unsigned int size);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439520",
      "id" : 784439520,
      "line" : 357,
      "node_id" : "PRRC_kwDOABII584uwZjg",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 357,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.h",
      "position" : 4,
      "pull_request_review_id" : 852397699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439520/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-14T01:14:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6443210?v=4",
         "events_url" : "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PastaPastaPasta/followers",
         "following_url" : "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PastaPastaPasta",
         "id" : 6443210,
         "login" : "PastaPastaPasta",
         "node_id" : "MDQ6VXNlcjY0NDMyMTA=",
         "organizations_url" : "https://api.github.com/users/PastaPastaPasta/orgs",
         "received_events_url" : "https://api.github.com/users/PastaPastaPasta/received_events",
         "repos_url" : "https://api.github.com/users/PastaPastaPasta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PastaPastaPasta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PastaPastaPasta"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-01-14T20:03:24Z",
      "diff_hunk" : "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138789",
      "id" : 785138789,
      "in_reply_to_id" : 784438902,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uzERl",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 1285,
      "original_position" : 116,
      "original_start_line" : 1282,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 853337044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138789/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-01-14T20:03:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138840"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-01-14T20:03:29Z",
      "diff_hunk" : "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138840",
      "id" : 785138840,
      "in_reply_to_id" : 784439016,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uzESY",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 1286,
      "original_position" : 117,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 853337101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138840/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-14T20:03:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-01-14T20:03:36Z",
      "diff_hunk" : "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    } else {\n+        missingExternal = std::max(target - (chain.nExternalChainCounter - chain.m_next_external_index), (int64_t) 0);\n+        missingInternal = std::max(target - (chain.nInternalChainCounter - chain.m_next_internal_index), (int64_t) 0);\n+    }\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138886",
      "id" : 785138886,
      "in_reply_to_id" : 784439275,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uzETG",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 1301,
      "original_position" : 136,
      "original_start_line" : 1300,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 853337176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138886/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-01-14T20:03:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-01-14T20:03:39Z",
      "diff_hunk" : "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    } else {\n+        missingExternal = std::max(target - (chain.nExternalChainCounter - chain.m_next_external_index), (int64_t) 0);\n+        missingInternal = std::max(target - (chain.nInternalChainCounter - chain.m_next_internal_index), (int64_t) 0);\n+    }\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n+    {\n+        // don't create extra internal keys\n+        missingInternal = 0;\n+    }\n+    bool internal = false;\n+    WalletBatch batch(m_storage.GetDatabase());\n+    for (int64_t i = missingInternal + missingExternal; i--;)\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138914",
      "id" : 785138914,
      "in_reply_to_id" : 784439378,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uzETi",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 1308,
      "original_position" : 143,
      "original_start_line" : 1307,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 853337224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-01-14T20:03:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-01-14T20:03:43Z",
      "diff_hunk" : "@@ -354,6 +354,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n      */\n     bool TopUpInactiveHDChain(const CKeyID seed_id, int64_t index, bool internal);\n \n+    bool TopUpChain(CHDChain& chain ,unsigned int size);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138940",
      "id" : 785138940,
      "in_reply_to_id" : 784439520,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584uzET8",
      "original_commit_id" : "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "original_line" : 357,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.h",
      "position" : null,
      "pull_request_review_id" : 853337267,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138940/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-14T20:03:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r794200640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200640"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "avoid c-style casts\r\n```suggestion\r\n    int64_t target = std::max(int64_t(nTargetSize), int64_t{1});\r\n```",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-01-28T04:50:01Z",
      "diff_hunk" : "@@ -1258,44 +1258,69 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0) {\n+        nTargetSize = kpSize;\n+    } else {\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), int64_t{0});\n+    }\n+    int64_t target = std::max((int64_t) nTargetSize, int64_t{1});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r794200640",
      "id" : 794200640,
      "line" : 1287,
      "node_id" : "PRRC_kwDOABII584vVopA",
      "original_commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "original_line" : 1287,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 122,
      "pull_request_review_id" : 865691332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200640/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-28T04:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6443210?v=4",
         "events_url" : "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PastaPastaPasta/followers",
         "following_url" : "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PastaPastaPasta",
         "id" : 6443210,
         "login" : "PastaPastaPasta",
         "node_id" : "MDQ6VXNlcjY0NDMyMTA=",
         "organizations_url" : "https://api.github.com/users/PastaPastaPasta/orgs",
         "received_events_url" : "https://api.github.com/users/PastaPastaPasta/received_events",
         "repos_url" : "https://api.github.com/users/PastaPastaPasta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PastaPastaPasta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PastaPastaPasta"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r794200792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200792"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        missingExternal = std::max(target - int64_t(setExternalKeyPool.size()), int64_t{0});\r\n        missingInternal = std::max(target - int64_t(setInternalKeyPool.size()), int64_t{0});\r\n```",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-01-28T04:50:32Z",
      "diff_hunk" : "@@ -1258,44 +1258,69 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0) {\n+        nTargetSize = kpSize;\n+    } else {\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), int64_t{0});\n+    }\n+    int64_t target = std::max((int64_t) nTargetSize, int64_t{1});\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), int64_t{0});\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), int64_t{0});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r794200792",
      "id" : 794200792,
      "line" : 1295,
      "node_id" : "PRRC_kwDOABII584vVorY",
      "original_commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "original_line" : 1295,
      "original_position" : 130,
      "original_start_line" : 1294,
      "path" : "src/wallet/scriptpubkeyman.cpp",
      "position" : 130,
      "pull_request_review_id" : 865691332,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200792/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1294,
      "start_side" : "RIGHT",
      "updated_at" : "2022-01-28T04:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6443210?v=4",
         "events_url" : "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PastaPastaPasta/followers",
         "following_url" : "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PastaPastaPasta",
         "id" : 6443210,
         "login" : "PastaPastaPasta",
         "node_id" : "MDQ6VXNlcjY0NDMyMTA=",
         "organizations_url" : "https://api.github.com/users/PastaPastaPasta/orgs",
         "received_events_url" : "https://api.github.com/users/PastaPastaPasta/received_events",
         "repos_url" : "https://api.github.com/users/PastaPastaPasta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PastaPastaPasta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PastaPastaPasta"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Do we want this for 23.0? It fixes a segfault that a number of people have run into.",
      "created_at" : "2022-02-17T17:30:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1043219811",
      "id" : 1043219811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
      "node_id" : "IC_kwDOABII584-LkVj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1043219811/reactions"
      },
      "updated_at" : "2022-02-17T17:30:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1043219811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r811523943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811523943"
         }
      },
      "author_association" : "MEMBER",
      "body" : "where are these magic numbers coming from?",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-02-22T02:10:06Z",
      "diff_hunk" : "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r811523943",
      "id" : 811523943,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII584wXt9n",
      "original_commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/wallet_inactive_hdchains.py",
      "position" : 54,
      "pull_request_review_id" : 889219977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811523943/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T02:25:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811523943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r811527262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811527262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "seems kind of racey, do a while not true loop?",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-02-22T02:20:07Z",
      "diff_hunk" : "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_encrypted_wallet(self):\n+        self.log.info(\"Test inactive HD chains when wallet is encrypted\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"enc_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"enc_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"enc_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"enc_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Encrypting will generate a new HD seed and flush the keypool\n+        test_wallet.encryptwallet(\"pass\")\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet will not be able to generate the topped up keypool\n+        # until it is unlocked. So it still should not know about the second address\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+        test_wallet.walletpassphrase(\"pass\", 1)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r811527262",
      "id" : 811527262,
      "line" : 119,
      "node_id" : "PRRC_kwDOABII584wXuxe",
      "original_commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "original_line" : 119,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "test/functional/wallet_inactive_hdchains.py",
      "position" : 119,
      "pull_request_review_id" : 889219977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811527262/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T02:25:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811527262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r811528046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811528046"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I assume this is important, probably needs a comment on what this is doing because I don't understand it",
      "commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "created_at" : "2022-02-22T02:22:31Z",
      "diff_hunk" : "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_encrypted_wallet(self):\n+        self.log.info(\"Test inactive HD chains when wallet is encrypted\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"enc_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"enc_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"enc_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"enc_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Encrypting will generate a new HD seed and flush the keypool\n+        test_wallet.encryptwallet(\"pass\")\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet will not be able to generate the topped up keypool\n+        # until it is unlocked. So it still should not know about the second address\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+        test_wallet.walletpassphrase(\"pass\", 1)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_without_upgraded_keymeta(self):\n+        # Test that it is possible to top up inactive hd chains even if there is no key origin\n+        # in CKeyMetadata. This tests for the segfault reported in\n+        # https://github.com/bitcoin/bitcoin/issues/21605\n+        self.log.info(\"Test that topping up inactive HD chains does not need upgraded key origin\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"keymeta_base\", descriptors=False, blank=True)\n+        self.nodes[1].createwallet_passthrough(wallet_name=\"keymeta_test\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r811528046",
      "id" : 811528046,
      "line" : 134,
      "node_id" : "PRRC_kwDOABII584wXu9u",
      "original_commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "original_line" : 134,
      "original_position" : 134,
      "original_start_line" : null,
      "path" : "test/functional/wallet_inactive_hdchains.py",
      "position" : 134,
      "pull_request_review_id" : 889219977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811528046/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T02:25:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811528046",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r812295121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295121"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not entirely sure, but probably something to do with the keypool defaults. However these don't make sense with the keypool options we are using in the test, so I've changed this to match those.",
      "commit_id" : "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "created_at" : "2022-02-22T19:39:15Z",
      "diff_hunk" : "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r812295121",
      "id" : 812295121,
      "in_reply_to_id" : 811523943,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584waqPR",
      "original_commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/wallet_inactive_hdchains.py",
      "position" : null,
      "pull_request_review_id" : 890276670,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295121/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T19:39:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r812295311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295311"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, but with `gettransaction`.",
      "commit_id" : "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "created_at" : "2022-02-22T19:39:29Z",
      "diff_hunk" : "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_encrypted_wallet(self):\n+        self.log.info(\"Test inactive HD chains when wallet is encrypted\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"enc_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"enc_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"enc_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"enc_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Encrypting will generate a new HD seed and flush the keypool\n+        test_wallet.encryptwallet(\"pass\")\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet will not be able to generate the topped up keypool\n+        # until it is unlocked. So it still should not know about the second address\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+        test_wallet.walletpassphrase(\"pass\", 1)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r812295311",
      "id" : 812295311,
      "in_reply_to_id" : 811527262,
      "line" : 91,
      "node_id" : "PRRC_kwDOABII584waqSP",
      "original_commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "original_line" : 91,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "test/functional/wallet_inactive_hdchains.py",
      "position" : 91,
      "pull_request_review_id" : 890276914,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295311/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T19:39:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295311",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r812295953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment.\r\n\r\nIt's because we override createwallet in the test framework so that passing `--descriptors` will autofill the descriptor parameter. But that doesn't work for old nodes, so we need a passthrough function.",
      "commit_id" : "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "created_at" : "2022-02-22T19:40:21Z",
      "diff_hunk" : "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_encrypted_wallet(self):\n+        self.log.info(\"Test inactive HD chains when wallet is encrypted\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"enc_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"enc_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"enc_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"enc_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Encrypting will generate a new HD seed and flush the keypool\n+        test_wallet.encryptwallet(\"pass\")\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet will not be able to generate the topped up keypool\n+        # until it is unlocked. So it still should not know about the second address\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+        test_wallet.walletpassphrase(\"pass\", 1)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_without_upgraded_keymeta(self):\n+        # Test that it is possible to top up inactive hd chains even if there is no key origin\n+        # in CKeyMetadata. This tests for the segfault reported in\n+        # https://github.com/bitcoin/bitcoin/issues/21605\n+        self.log.info(\"Test that topping up inactive HD chains does not need upgraded key origin\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"keymeta_base\", descriptors=False, blank=True)\n+        self.nodes[1].createwallet_passthrough(wallet_name=\"keymeta_test\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r812295953",
      "id" : 812295953,
      "in_reply_to_id" : 811528046,
      "line" : 116,
      "node_id" : "PRRC_kwDOABII584waqcR",
      "original_commit_id" : "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "original_line" : 116,
      "original_position" : 134,
      "original_start_line" : null,
      "path" : "test/functional/wallet_inactive_hdchains.py",
      "position" : 116,
      "pull_request_review_id" : 890277757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-22T19:40:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Do we want this for 23.0? \r\n\r\nYes, definitely.\r\n\r\nIt would be really good to have a tested ACK from someone experiencing the segfault problem.",
      "created_at" : "2022-02-28T12:21:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1054201530",
      "id" : 1054201530,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
      "node_id" : "IC_kwDOABII584-1da6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054201530/reactions"
      },
      "updated_at" : "2022-02-28T16:04:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054201530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK c4d76c6faa3adf06f192649e169ca860ce420d30",
      "created_at" : "2022-02-28T15:37:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1054381764",
      "id" : 1054381764,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
      "node_id" : "IC_kwDOABII584-2JbE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054381764/reactions"
      },
      "updated_at" : "2022-02-28T15:37:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054381764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@GITErnesO @IvRRimum are you able to test this change?",
      "created_at" : "2022-03-01T13:45:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1055457852",
      "id" : 1055457852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
      "node_id" : "IC_kwDOABII584-6QI8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1055457852/reactions"
      },
      "updated_at" : "2022-03-01T13:45:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1055457852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> @GITErnesO @IvRRimum are you able to test this change?\r\n\r\nI have 7 empty wallets that throw this error.\r\nI'm still trying to build from sources.\r\n\r\nI gave one of the wallets that throw this error to achow101 so my guess is that he checked that now it works OK.\r\nAnd my guess is that it is the same issue for the other wallets.\r\n\r\nIf I can get and RC or an internal version I will check all the 7 wallets.\r\nI'll also continue to build from sources, so I can compile a version with this pull and test the wallets.\r\n",
      "created_at" : "2022-03-01T16:28:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1055624248",
      "id" : 1055624248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
      "node_id" : "IC_kwDOABII584-64w4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1055624248/reactions"
      },
      "updated_at" : "2022-03-01T16:28:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1055624248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/99622432?v=4",
         "events_url" : "https://api.github.com/users/GITErnesO/events{/privacy}",
         "followers_url" : "https://api.github.com/users/GITErnesO/followers",
         "following_url" : "https://api.github.com/users/GITErnesO/following{/other_user}",
         "gists_url" : "https://api.github.com/users/GITErnesO/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/GITErnesO",
         "id" : 99622432,
         "login" : "GITErnesO",
         "node_id" : "U_kgDOBfAeIA",
         "organizations_url" : "https://api.github.com/users/GITErnesO/orgs",
         "received_events_url" : "https://api.github.com/users/GITErnesO/received_events",
         "repos_url" : "https://api.github.com/users/GITErnesO/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/GITErnesO/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/GITErnesO/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/GITErnesO"
      }
   }
]
