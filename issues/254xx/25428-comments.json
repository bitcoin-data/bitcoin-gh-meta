[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r901832137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901832137"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`Reset` is a strange API function for a socket. Conceptually, I like `Close` better (which is what it does, right?).",
      "commit_id" : "e8ff3f0c52e7512a580bc907dc72e5bb141b4217",
      "created_at" : "2022-06-20T16:12:51Z",
      "diff_hunk" : "@@ -51,15 +51,21 @@ Sock& Sock::operator=(Sock&& other)\n \n SOCKET Sock::Get() const { return m_socket; }\n \n-SOCKET Sock::Release()\n-{\n-    const SOCKET s = m_socket;\n+void Sock::Reset() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r901832137",
      "id" : 901832137,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII5841wN3J",
      "original_commit_id" : "e8ff3f0c52e7512a580bc907dc72e5bb141b4217",
      "original_line" : 54,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/util/sock.cpp",
      "position" : 7,
      "pull_request_review_id" : 1012516839,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901832137/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-20T16:13:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901832137",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#21878](https://github.com/bitcoin/bitcoin/pull/21878) (Make all networking code mockable by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-06-20T23:57:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#issuecomment-1160966923",
      "id" : 1160966923,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25428",
      "node_id" : "IC_kwDOABII585FMvML",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160966923/reactions"
      },
      "updated_at" : "2022-06-21T08:00:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160966923",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r902585461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902585461"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`Sock::Reset()` existed before this PR. I picked up that name to mimic `unique_ptr::reset()`. `Sock::Get()` mimics `unique_ptr::get()`, as the `Sock` class initially came up as a RAII sock manager, mimicing `unique_ptr`. However, it has morphed since and soon the `Sock::Get()` method is to be removed.\r\n\r\nHere is a patch that renames `Sock::Reset()` to `Sock::Close()`:\r\n\r\n<details>\r\n<summary>rename Sock::Reset() to Sock::Close()</summary>\r\n\r\n```diff\r\ndiff --git i/src/i2p.cpp w/src/i2p.cpp\r\nindex caff8c1e69..5897df2b0c 100644\r\n--- i/src/i2p.cpp\r\n+++ w/src/i2p.cpp\r\n@@ -407,11 +407,11 @@ void Session::Disconnect()\r\n         if (m_session_id.empty()) {\r\n             Log(\"Destroying incomplete session\");\r\n         } else {\r\n             Log(\"Destroying session %s\", m_session_id);\r\n         }\r\n     }\r\n-    m_control_sock->Reset();\r\n+    m_control_sock->Close();\r\n     m_session_id.clear();\r\n }\r\n } // namespace sam\r\n } // namespace i2p\r\ndiff --git i/src/test/fuzz/util.cpp w/src/test/fuzz/util.cpp\r\nindex c65eef9c61..111dd0cc7c 100644\r\n--- i/src/test/fuzz/util.cpp\r\n+++ w/src/test/fuzz/util.cpp\r\n@@ -21,25 +21,25 @@ FuzzedSock::FuzzedSock(FuzzedDataProvider& fuzzed_data_provider)\r\n     m_socket = fuzzed_data_provider.ConsumeIntegralInRange<SOCKET>(INVALID_SOCKET - 1, INVALID_SOCKET);\r\n }\r\n \r\n FuzzedSock::~FuzzedSock()\r\n {\r\n     // Sock::~Sock() will be called after FuzzedSock::~FuzzedSock() and it will call\r\n-    // Sock::Reset() (not FuzzedSock::Reset()!) which will call close(m_socket).\r\n+    // Sock::Close() (not FuzzedSock::Close()!) which will call close(m_socket).\r\n     // Avoid closing an arbitrary file descriptor (m_socket is just a random very high number which\r\n     // theoretically may concide with a real opened file descriptor).\r\n-    Reset();\r\n+    Close();\r\n }\r\n \r\n FuzzedSock& FuzzedSock::operator=(Sock&& other)\r\n {\r\n     assert(false && \"Move of Sock into FuzzedSock not allowed.\");\r\n     return *this;\r\n }\r\n \r\n-void FuzzedSock::Reset()\r\n+void FuzzedSock::Close()\r\n {\r\n     m_socket = INVALID_SOCKET;\r\n }\r\n \r\n ssize_t FuzzedSock::Send(const void* data, size_t len, int flags) const\r\n {\r\ndiff --git i/src/test/fuzz/util.h w/src/test/fuzz/util.h\r\nindex 66d00b1767..fe589e9c06 100644\r\n--- i/src/test/fuzz/util.h\r\n+++ w/src/test/fuzz/util.h\r\n@@ -52,13 +52,13 @@ public:\r\n     explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider);\r\n \r\n     ~FuzzedSock() override;\r\n \r\n     FuzzedSock& operator=(Sock&& other) override;\r\n \r\n-    void Reset() override;\r\n+    void Close() override;\r\n \r\n     ssize_t Send(const void* data, size_t len, int flags) const override;\r\n \r\n     ssize_t Recv(void* buf, size_t len, int flags) const override;\r\n \r\n     int Connect(const sockaddr*, socklen_t) const override;\r\ndiff --git i/src/test/sock_tests.cpp w/src/test/sock_tests.cpp\r\nindex 4a5b25c61b..eaf1998a97 100644\r\n--- i/src/test/sock_tests.cpp\r\n+++ w/src/test/sock_tests.cpp\r\n@@ -66,17 +66,17 @@ BOOST_AUTO_TEST_CASE(move_assignment)\r\n     BOOST_CHECK(!SocketIsClosed(s));\r\n     BOOST_CHECK_EQUAL(sock2->Get(), s);\r\n     delete sock2;\r\n     BOOST_CHECK(SocketIsClosed(s));\r\n }\r\n \r\n-BOOST_AUTO_TEST_CASE(reset)\r\n+BOOST_AUTO_TEST_CASE(close)\r\n {\r\n     const SOCKET s = CreateSocket();\r\n     Sock sock(s);\r\n-    sock.Reset();\r\n+    sock.Close();\r\n     BOOST_CHECK(SocketIsClosed(s));\r\n }\r\n \r\n #ifndef WIN32 // Windows does not have socketpair(2).\r\n \r\n static void CreateSocketPair(int s[2])\r\ndiff --git i/src/test/util/net.h w/src/test/util/net.h\r\nindex 37d278645a..03361fa024 100644\r\n--- i/src/test/util/net.h\r\n+++ w/src/test/util/net.h\r\n@@ -97,21 +97,21 @@ public:\r\n     explicit StaticContentsSock(const std::string& contents) : m_contents{contents}, m_consumed{0}\r\n     {\r\n         // Just a dummy number that is not INVALID_SOCKET.\r\n         m_socket = INVALID_SOCKET - 1;\r\n     }\r\n \r\n-    ~StaticContentsSock() override { Reset(); }\r\n+    ~StaticContentsSock() override { Close(); }\r\n \r\n     StaticContentsSock& operator=(Sock&& other) override\r\n     {\r\n         assert(false && \"Move of Sock into MockSock not allowed.\");\r\n         return *this;\r\n     }\r\n \r\n-    void Reset() override\r\n+    void Close() override\r\n     {\r\n         m_socket = INVALID_SOCKET;\r\n     }\r\n \r\n     ssize_t Send(const void*, size_t len, int) const override { return len; }\r\n \r\ndiff --git i/src/util/sock.cpp w/src/util/sock.cpp\r\nindex aca83d4170..ae3732e64b 100644\r\n--- i/src/util/sock.cpp\r\n+++ w/src/util/sock.cpp\r\n@@ -36,25 +36,25 @@ Sock::Sock(SOCKET s) : m_socket(s) {}\r\n Sock::Sock(Sock&& other)\r\n {\r\n     m_socket = other.m_socket;\r\n     other.m_socket = INVALID_SOCKET;\r\n }\r\n \r\n-Sock::~Sock() { Reset(); }\r\n+Sock::~Sock() { Close(); }\r\n \r\n Sock& Sock::operator=(Sock&& other)\r\n {\r\n-    Reset();\r\n+    Close();\r\n     m_socket = other.m_socket;\r\n     other.m_socket = INVALID_SOCKET;\r\n     return *this;\r\n }\r\n \r\n SOCKET Sock::Get() const { return m_socket; }\r\n \r\n-void Sock::Reset() {\r\n+void Sock::Close() {\r\n     if (m_socket == INVALID_SOCKET) {\r\n         return;\r\n     }\r\n #ifdef WIN32\r\n     int ret = closesocket(m_socket);\r\n #else\r\ndiff --git i/src/util/sock.h w/src/util/sock.h\r\nindex 71c6a49321..67f43bba7a 100644\r\n--- i/src/util/sock.h\r\n+++ w/src/util/sock.h\r\n@@ -68,13 +68,13 @@ public:\r\n      */\r\n     [[nodiscard]] virtual SOCKET Get() const;\r\n \r\n     /**\r\n      * Close if non-empty.\r\n      */\r\n-    virtual void Reset();\r\n+    virtual void Close();\r\n \r\n     /**\r\n      * send(2) wrapper. Equivalent to `send(this->Get(), data, len, flags);`. Code that uses this\r\n      * wrapper can be unit tested if this method is overridden by a mock Sock implementation.\r\n      */\r\n     [[nodiscard]] virtual ssize_t Send(const void* data, size_t len, int flags) const;\r\n```\r\n</details>\r\n\r\nOr, maybe even better, remove the `Sock::Reset()` method from the `Sock` API, it is not used much:\r\n\r\n<details>\r\n<summary>remove Sock::Reset()</summary>\r\n\r\n```diff\r\ndiff --git i/src/i2p.cpp w/src/i2p.cpp\r\nindex caff8c1e69..8611984555 100644\r\n--- i/src/i2p.cpp\r\n+++ w/src/i2p.cpp\r\n@@ -407,11 +407,11 @@ void Session::Disconnect()\r\n         if (m_session_id.empty()) {\r\n             Log(\"Destroying incomplete session\");\r\n         } else {\r\n             Log(\"Destroying session %s\", m_session_id);\r\n         }\r\n     }\r\n-    m_control_sock->Reset();\r\n+    m_control_sock = std::make_unique<Sock>(INVALID_SOCKET);\r\n     m_session_id.clear();\r\n }\r\n } // namespace sam\r\n } // namespace i2p\r\ndiff --git i/src/test/fuzz/util.cpp w/src/test/fuzz/util.cpp\r\nindex c65eef9c61..8f5e771e37 100644\r\n--- i/src/test/fuzz/util.cpp\r\n+++ w/src/test/fuzz/util.cpp\r\n@@ -21,29 +21,24 @@ FuzzedSock::FuzzedSock(FuzzedDataProvider& fuzzed_data_provider)\r\n     m_socket = fuzzed_data_provider.ConsumeIntegralInRange<SOCKET>(INVALID_SOCKET - 1, INVALID_SOCKET);\r\n }\r\n \r\n FuzzedSock::~FuzzedSock()\r\n {\r\n     // Sock::~Sock() will be called after FuzzedSock::~FuzzedSock() and it will call\r\n-    // Sock::Reset() (not FuzzedSock::Reset()!) which will call close(m_socket).\r\n+    // close(m_socket) if m_socket is not INVALID_SOCKET.\r\n     // Avoid closing an arbitrary file descriptor (m_socket is just a random very high number which\r\n     // theoretically may concide with a real opened file descriptor).\r\n-    Reset();\r\n+    m_socket = INVALID_SOCKET;\r\n }\r\n \r\n FuzzedSock& FuzzedSock::operator=(Sock&& other)\r\n {\r\n     assert(false && \"Move of Sock into FuzzedSock not allowed.\");\r\n     return *this;\r\n }\r\n \r\n-void FuzzedSock::Reset()\r\n-{\r\n-    m_socket = INVALID_SOCKET;\r\n-}\r\n-\r\n ssize_t FuzzedSock::Send(const void* data, size_t len, int flags) const\r\n {\r\n     constexpr std::array send_errnos{\r\n         EACCES,\r\n         EAGAIN,\r\n         EALREADY,\r\ndiff --git i/src/test/fuzz/util.h w/src/test/fuzz/util.h\r\nindex 66d00b1767..0819d326fd 100644\r\n--- i/src/test/fuzz/util.h\r\n+++ w/src/test/fuzz/util.h\r\n@@ -52,14 +52,12 @@ public:\r\n     explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider);\r\n \r\n     ~FuzzedSock() override;\r\n \r\n     FuzzedSock& operator=(Sock&& other) override;\r\n \r\n-    void Reset() override;\r\n-\r\n     ssize_t Send(const void* data, size_t len, int flags) const override;\r\n \r\n     ssize_t Recv(void* buf, size_t len, int flags) const override;\r\n \r\n     int Connect(const sockaddr*, socklen_t) const override;\r\n \r\ndiff --git i/src/test/sock_tests.cpp w/src/test/sock_tests.cpp\r\nindex 4a5b25c61b..01a402833d 100644\r\n--- i/src/test/sock_tests.cpp\r\n+++ w/src/test/sock_tests.cpp\r\n@@ -66,20 +66,12 @@ BOOST_AUTO_TEST_CASE(move_assignment)\r\n     BOOST_CHECK(!SocketIsClosed(s));\r\n     BOOST_CHECK_EQUAL(sock2->Get(), s);\r\n     delete sock2;\r\n     BOOST_CHECK(SocketIsClosed(s));\r\n }\r\n \r\n-BOOST_AUTO_TEST_CASE(reset)\r\n-{\r\n-    const SOCKET s = CreateSocket();\r\n-    Sock sock(s);\r\n-    sock.Reset();\r\n-    BOOST_CHECK(SocketIsClosed(s));\r\n-}\r\n-\r\n #ifndef WIN32 // Windows does not have socketpair(2).\r\n \r\n static void CreateSocketPair(int s[2])\r\n {\r\n     BOOST_REQUIRE_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, s), 0);\r\n }\r\ndiff --git i/src/test/util/net.h w/src/test/util/net.h\r\nindex 37d278645a..edb45d7c8e 100644\r\n--- i/src/test/util/net.h\r\n+++ w/src/test/util/net.h\r\n@@ -97,25 +97,20 @@ public:\r\n     explicit StaticContentsSock(const std::string& contents) : m_contents{contents}, m_consumed{0}\r\n     {\r\n         // Just a dummy number that is not INVALID_SOCKET.\r\n         m_socket = INVALID_SOCKET - 1;\r\n     }\r\n \r\n-    ~StaticContentsSock() override { Reset(); }\r\n+    ~StaticContentsSock() override { m_socket = INVALID_SOCKET; }\r\n \r\n     StaticContentsSock& operator=(Sock&& other) override\r\n     {\r\n         assert(false && \"Move of Sock into MockSock not allowed.\");\r\n         return *this;\r\n     }\r\n \r\n-    void Reset() override\r\n-    {\r\n-        m_socket = INVALID_SOCKET;\r\n-    }\r\n-\r\n     ssize_t Send(const void*, size_t len, int) const override { return len; }\r\n \r\n     ssize_t Recv(void* buf, size_t len, int flags) const override\r\n     {\r\n         const size_t consume_bytes{std::min(len, m_contents.size() - m_consumed)};\r\n         std::memcpy(buf, m_contents.data() + m_consumed, consume_bytes);\r\ndiff --git i/src/util/sock.cpp w/src/util/sock.cpp\r\nindex aca83d4170..bcefa2a322 100644\r\n--- i/src/util/sock.cpp\r\n+++ w/src/util/sock.cpp\r\n@@ -36,39 +36,34 @@ Sock::Sock(SOCKET s) : m_socket(s) {}\r\n Sock::Sock(Sock&& other)\r\n {\r\n     m_socket = other.m_socket;\r\n     other.m_socket = INVALID_SOCKET;\r\n }\r\n \r\n-Sock::~Sock() { Reset(); }\r\n+Sock::~Sock() { *this = Sock{INVALID_SOCKET}; }\r\n \r\n Sock& Sock::operator=(Sock&& other)\r\n {\r\n-    Reset();\r\n+    if (m_socket != INVALID_SOCKET) {\r\n+#ifdef WIN32\r\n+        int ret = closesocket(m_socket);\r\n+#else\r\n+        int ret = close(m_socket);\r\n+#endif\r\n+        if (ret) {\r\n+            LogPrintf(\r\n+                \"Error closing socket %d: %s\\n\", m_socket, NetworkErrorString(WSAGetLastError()));\r\n+        }\r\n+    }\r\n     m_socket = other.m_socket;\r\n     other.m_socket = INVALID_SOCKET;\r\n     return *this;\r\n }\r\n \r\n SOCKET Sock::Get() const { return m_socket; }\r\n \r\n-void Sock::Reset() {\r\n-    if (m_socket == INVALID_SOCKET) {\r\n-        return;\r\n-    }\r\n-#ifdef WIN32\r\n-    int ret = closesocket(m_socket);\r\n-#else\r\n-    int ret = close(m_socket);\r\n-#endif\r\n-    if (ret) {\r\n-        LogPrintf(\"Error closing socket %d: %s\\n\", m_socket, NetworkErrorString(WSAGetLastError()));\r\n-    }\r\n-    m_socket = INVALID_SOCKET;\r\n-}\r\n-\r\n ssize_t Sock::Send(const void* data, size_t len, int flags) const\r\n {\r\n     return send(m_socket, static_cast<const char*>(data), len, flags);\r\n }\r\n \r\n ssize_t Sock::Recv(void* buf, size_t len, int flags) const\r\ndiff --git i/src/util/sock.h w/src/util/sock.h\r\nindex 71c6a49321..1593a15663 100644\r\n--- i/src/util/sock.h\r\n+++ w/src/util/sock.h\r\n@@ -65,17 +65,12 @@ public:\r\n     /**\r\n      * Get the value of the contained socket.\r\n      * @return socket or INVALID_SOCKET if empty\r\n      */\r\n     [[nodiscard]] virtual SOCKET Get() const;\r\n \r\n-    /**\r\n-     * Close if non-empty.\r\n-     */\r\n-    virtual void Reset();\r\n-\r\n     /**\r\n      * send(2) wrapper. Equivalent to `send(this->Get(), data, len, flags);`. Code that uses this\r\n      * wrapper can be unit tested if this method is overridden by a mock Sock implementation.\r\n      */\r\n     [[nodiscard]] virtual ssize_t Send(const void* data, size_t len, int flags) const;\r\n \r\n```\r\n</details>\r\n\r\nWhat to do? Rename, remove, leave it as is?\r\n\r\nI like deleting code.",
      "commit_id" : "e0537dada61e2a778f09b4b36f2df87ffbe299b1",
      "created_at" : "2022-06-21T12:57:03Z",
      "diff_hunk" : "@@ -51,15 +51,21 @@ Sock& Sock::operator=(Sock&& other)\n \n SOCKET Sock::Get() const { return m_socket; }\n \n-SOCKET Sock::Release()\n-{\n-    const SOCKET s = m_socket;\n+void Sock::Reset() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r902585461",
      "id" : 902585461,
      "in_reply_to_id" : 901832137,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841zFx1",
      "original_commit_id" : "e8ff3f0c52e7512a580bc907dc72e5bb141b4217",
      "original_line" : 54,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/util/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 1013554007,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902585461/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T12:57:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902585461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r902592776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902592776"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you can remove it that'd be even better. If it isn't a lot of impact on the code. I mean it's a RAII wrapper, I'd assume normally it'd only gets closed on destrucction.\r\n\r\n(to be clear, the rename patch is fine with me too! My preference is Remove > Rename > Leave as is)",
      "commit_id" : "e0537dada61e2a778f09b4b36f2df87ffbe299b1",
      "created_at" : "2022-06-21T13:03:50Z",
      "diff_hunk" : "@@ -51,15 +51,21 @@ Sock& Sock::operator=(Sock&& other)\n \n SOCKET Sock::Get() const { return m_socket; }\n \n-SOCKET Sock::Release()\n-{\n-    const SOCKET s = m_socket;\n+void Sock::Reset() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r902592776",
      "id" : 902592776,
      "in_reply_to_id" : 901832137,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841zHkI",
      "original_commit_id" : "e8ff3f0c52e7512a580bc907dc72e5bb141b4217",
      "original_line" : 54,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/util/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 1013564820,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902592776/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T13:07:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902592776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r902617674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902617674"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removed!",
      "commit_id" : "e0537dada61e2a778f09b4b36f2df87ffbe299b1",
      "created_at" : "2022-06-21T13:26:09Z",
      "diff_hunk" : "@@ -51,15 +51,21 @@ Sock& Sock::operator=(Sock&& other)\n \n SOCKET Sock::Get() const { return m_socket; }\n \n-SOCKET Sock::Release()\n-{\n-    const SOCKET s = m_socket;\n+void Sock::Reset() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r902617674",
      "id" : 902617674,
      "in_reply_to_id" : 901832137,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841zNpK",
      "original_commit_id" : "e8ff3f0c52e7512a580bc907dc72e5bb141b4217",
      "original_line" : 54,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/util/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 1013600872,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902617674/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-21T13:26:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902617674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`e8ff3f0c52..e0537dada6`: remove `Sock::Reset()`",
      "created_at" : "2022-06-21T13:27:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#issuecomment-1161748826",
      "id" : 1161748826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25428",
      "node_id" : "IC_kwDOABII585FPuFa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161748826/reactions"
      },
      "updated_at" : "2022-06-21T13:27:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161748826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK! Nice cleanup now!",
      "created_at" : "2022-06-21T20:40:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#issuecomment-1162326790",
      "id" : 1162326790,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25428",
      "node_id" : "IC_kwDOABII585FR7MG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162326790/reactions"
      },
      "updated_at" : "2022-06-21T20:40:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162326790",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903050752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903050752"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Assigning *this in the destructor looks a bit strange to me. Let's be sure that this isn't undefined behavior or footguns of some kind (it can't ever trigger a recursive constructor call, can it?).",
      "commit_id" : "a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "created_at" : "2022-06-21T20:42:35Z",
      "diff_hunk" : "@@ -39,27 +39,28 @@ Sock::Sock(Sock&& other)\n     other.m_socket = INVALID_SOCKET;\n }\n \n-Sock::~Sock() { Reset(); }\n+Sock::~Sock() { *this = Sock{INVALID_SOCKET}; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903050752",
      "id" : 903050752,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584103YA",
      "original_commit_id" : "e0537dada61e2a778f09b4b36f2df87ffbe299b1",
      "original_line" : 42,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 1014221695,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903050752/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T05:46:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903050752",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903379426"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903379426"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You are right! The problem is not the assignment operator, but constructing a temporary `Sock` in the destructor which, at the end of the destructor, gets destructed... :bomb: :fire:\r\n\r\nI renamed the `Reset()` method to `Close()` and made it private, solely for the purpose of avoiding duplicating code in the destructor and in the assignment operator. But still removed it from the public API.\r\n\r\n",
      "commit_id" : "a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "created_at" : "2022-06-22T07:26:59Z",
      "diff_hunk" : "@@ -39,27 +39,28 @@ Sock::Sock(Sock&& other)\n     other.m_socket = INVALID_SOCKET;\n }\n \n-Sock::~Sock() { Reset(); }\n+Sock::~Sock() { *this = Sock{INVALID_SOCKET}; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903379426",
      "id" : 903379426,
      "in_reply_to_id" : 903050752,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58412Hni",
      "original_commit_id" : "e0537dada61e2a778f09b4b36f2df87ffbe299b1",
      "original_line" : 42,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 1014662630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903379426/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T07:26:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903379426",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`e0537dada6...a724c39606`: make `Close()` `private` and call it from both the destructor and the assignment operator.",
      "created_at" : "2022-06-22T07:29:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#issuecomment-1162749736",
      "id" : 1162749736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25428",
      "node_id" : "IC_kwDOABII585FTico",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162749736/reactions"
      },
      "updated_at" : "2022-06-22T07:29:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162749736",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903428919"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903428919"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops! Yes, sounds like a more straightforwardly safe solution to me. Thanks.",
      "commit_id" : "a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "created_at" : "2022-06-22T08:12:25Z",
      "diff_hunk" : "@@ -39,27 +39,28 @@ Sock::Sock(Sock&& other)\n     other.m_socket = INVALID_SOCKET;\n }\n \n-Sock::~Sock() { Reset(); }\n+Sock::~Sock() { *this = Sock{INVALID_SOCKET}; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903428919",
      "id" : 903428919,
      "in_reply_to_id" : 903050752,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58412Ts3",
      "original_commit_id" : "e0537dada61e2a778f09b4b36f2df87ffbe299b1",
      "original_line" : 42,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/sock.cpp",
      "position" : null,
      "pull_request_review_id" : 1014730904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903428919/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T08:12:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903428919",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "created_at" : "2022-06-22T08:14:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#issuecomment-1162793423",
      "id" : 1162793423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25428",
      "node_id" : "IC_kwDOABII585FTtHP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162793423/reactions"
      },
      "updated_at" : "2022-06-22T08:14:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162793423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903433592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903433592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Last nit: could this be `m_control_sock.release()`, or does the smart pointer always need to point to something?\r\n\r\nEdit: I think that requires more changes, seems fine to keep it for a follow-up.",
      "commit_id" : "a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "created_at" : "2022-06-22T08:16:59Z",
      "diff_hunk" : "@@ -410,7 +410,7 @@ void Session::Disconnect()\n             Log(\"Destroying session %s\", m_session_id);\n         }\n     }\n-    m_control_sock->Reset();\n+    m_control_sock = std::make_unique<Sock>(INVALID_SOCKET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903433592",
      "id" : 903433592,
      "line" : 413,
      "node_id" : "PRRC_kwDOABII58412U14",
      "original_commit_id" : "a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "original_line" : 413,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/i2p.cpp",
      "position" : 5,
      "pull_request_review_id" : 1014737415,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903433592/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T08:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903433592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903459210"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903459210"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In the current code the smart pointer always has to point to something because we unconditionally dereference it in a few places.\r\n\r\nHowever, that change is coming in https://github.com/bitcoin/bitcoin/pull/21878, from commit `i2p: avoid using Sock::Get() for checking for a valid socket` - it will use an empty unique_ptr to denote that there is no valid socket and together with a few other commits will remove the `Sock::Get()` method so that the value of the underlying socket file descriptor will be completely hidden inside the `Sock` class.",
      "commit_id" : "a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "created_at" : "2022-06-22T08:42:25Z",
      "diff_hunk" : "@@ -410,7 +410,7 @@ void Session::Disconnect()\n             Log(\"Destroying session %s\", m_session_id);\n         }\n     }\n-    m_control_sock->Reset();\n+    m_control_sock = std::make_unique<Sock>(INVALID_SOCKET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903459210",
      "id" : 903459210,
      "in_reply_to_id" : 903433592,
      "line" : 413,
      "node_id" : "PRRC_kwDOABII58412bGK",
      "original_commit_id" : "a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "original_line" : 413,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/i2p.cpp",
      "position" : 5,
      "pull_request_review_id" : 1014773921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903459210/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T08:42:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903459210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903475781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903475781"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Great, so you already thought of that, thanks!",
      "commit_id" : "a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "created_at" : "2022-06-22T08:57:57Z",
      "diff_hunk" : "@@ -410,7 +410,7 @@ void Session::Disconnect()\n             Log(\"Destroying session %s\", m_session_id);\n         }\n     }\n-    m_control_sock->Reset();\n+    m_control_sock = std::make_unique<Sock>(INVALID_SOCKET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25428#discussion_r903475781",
      "id" : 903475781,
      "in_reply_to_id" : 903433592,
      "line" : 413,
      "node_id" : "PRRC_kwDOABII58412fJF",
      "original_commit_id" : "a724c39606273dfe4c6f9887ef8b77d0a98f1b34",
      "original_line" : 413,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/i2p.cpp",
      "position" : 5,
      "pull_request_review_id" : 1014796785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25428",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903475781/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T08:57:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903475781",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
