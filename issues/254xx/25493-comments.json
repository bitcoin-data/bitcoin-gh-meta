[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r908731433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908731433"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@vasild could you explain what the following block\r\n```cpp\r\n#ifndef WSAEAGAIN\r\n#ifdef EAGAIN\r\n#define WSAEAGAIN EAGAIN\r\n#else\r\n#define WSAEAGAIN WSAEWOULDBLOCK\r\n#endif\r\n#endif\r\n```\r\nis accounting for (given you added it)? I'd have thought everything inside this #else block could be replaced by `#define WSAEAGAIN WSAEWOULDBLOCK`, as `WSAEAGAIN` would never be defined?\r\n",
      "commit_id" : "ae2db1c4764e2ab0e027c9526ba51c5330bb8b1e",
      "created_at" : "2022-06-28T16:55:03Z",
      "diff_hunk" : "@@ -34,19 +37,20 @@\n #include <unistd.h>\n #endif\n \n+// We map Linux / BSD error functions and codes, to the equivalent\n+// Windows definitions, and use the WSA* names throughout our code.\n+// Note that glibc defines EWOULDBLOCK as EAGAIN (see errno.h).\n #ifndef WIN32\n typedef unsigned int SOCKET;\n-#include <errno.h>\n+#include <cerrno>\n #define WSAGetLastError()   errno\n #define WSAEINVAL           EINVAL\n-#define WSAEALREADY         EALREADY\n #define WSAEWOULDBLOCK      EWOULDBLOCK\n #define WSAEAGAIN           EAGAIN\n #define WSAEMSGSIZE         EMSGSIZE\n #define WSAEINTR            EINTR\n #define WSAEINPROGRESS      EINPROGRESS\n #define WSAEADDRINUSE       EADDRINUSE\n-#define WSAENOTSOCK         EBADF\n #define INVALID_SOCKET      (SOCKET)(~0)\n #define SOCKET_ERROR        -1\n #else",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r908731433",
      "id" : 908731433,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII5842KiQp",
      "original_commit_id" : "e872992e897e0894e64544a4d100bd96f82512e5",
      "original_line" : 56,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/compat/compat.h",
      "position" : 53,
      "pull_request_review_id" : 1022102168,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908731433/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-28T16:55:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908731433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2022-06-28T19:19:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#issuecomment-1169128145",
      "id" : 1169128145,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25493",
      "node_id" : "IC_kwDOABII585Fr3rR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1169128145/reactions"
      },
      "updated_at" : "2022-06-28T19:19:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1169128145",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23233](https://github.com/bitcoin/bitcoin/pull/23233) (BIP324: Add encrypted p2p transport {de}serializer by dhruv)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-06-29T00:34:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#issuecomment-1169414528",
      "id" : 1169414528,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25493",
      "node_id" : "IC_kwDOABII585Fs9mA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1169414528/reactions"
      },
      "updated_at" : "2022-07-19T13:11:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1169414528",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909276656"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909276656"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The purpose of that is to ensure that `WSAEAGAIN` is defined on Windows - if it is already defined, don't do anything. If it is not defined but `EAGAIN` is defined then define `WSAEAGAIN` to `EAGAIN`, otherwise define `WSAEAGAIN` to `WSAEWOULDBLOCK` which is assumed to be present.",
      "commit_id" : "5cb0589c2159c50d3f5d2f7b22287446a54a1070",
      "created_at" : "2022-06-29T07:13:26Z",
      "diff_hunk" : "@@ -34,19 +37,20 @@\n #include <unistd.h>\n #endif\n \n+// We map Linux / BSD error functions and codes, to the equivalent\n+// Windows definitions, and use the WSA* names throughout our code.\n+// Note that glibc defines EWOULDBLOCK as EAGAIN (see errno.h).\n #ifndef WIN32\n typedef unsigned int SOCKET;\n-#include <errno.h>\n+#include <cerrno>\n #define WSAGetLastError()   errno\n #define WSAEINVAL           EINVAL\n-#define WSAEALREADY         EALREADY\n #define WSAEWOULDBLOCK      EWOULDBLOCK\n #define WSAEAGAIN           EAGAIN\n #define WSAEMSGSIZE         EMSGSIZE\n #define WSAEINTR            EINTR\n #define WSAEINPROGRESS      EINPROGRESS\n #define WSAEADDRINUSE       EADDRINUSE\n-#define WSAENOTSOCK         EBADF\n #define INVALID_SOCKET      (SOCKET)(~0)\n #define SOCKET_ERROR        -1\n #else",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909276656",
      "id" : 909276656,
      "in_reply_to_id" : 908731433,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII5842MnXw",
      "original_commit_id" : "e872992e897e0894e64544a4d100bd96f82512e5",
      "original_line" : 56,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/compat/compat.h",
      "position" : 53,
      "pull_request_review_id" : 1022842859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909276656/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T07:13:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909276656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909289563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909289563"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe the comment `// for Windows API` is too narrow and should be removed? (here and elsewhere)",
      "commit_id" : "5cb0589c2159c50d3f5d2f7b22287446a54a1070",
      "created_at" : "2022-06-29T07:27:53Z",
      "diff_hunk" : "@@ -10,7 +10,7 @@\n #include <crypto/sha512.h>\n #include <support/cleanse.h>\n #ifdef WIN32\n-#include <compat.h> // for Windows API\n+#include <compat/compat.h> // for Windows API",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909289563",
      "id" : 909289563,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842Mqhb",
      "original_commit_id" : "ae2db1c4764e2ab0e027c9526ba51c5330bb8b1e",
      "original_line" : 13,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/random.cpp",
      "position" : null,
      "pull_request_review_id" : 1022861171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909289563/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T07:47:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909289563",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909291000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909291000"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, but when would that be the case? I find the code confusing because I'm pretty sure it's trying to account for situations that don't exist. Can you point to a toolchain / system where we'd be compiling Bitcoin Core, for Windows, where `WSAEAGAIN` would be defined? (so we can document it)?\r\n\r\n>  to WSAEWOULDBLOCK which is assumed to be present.\r\n\r\nIf you're going to assume `WSAEWOULDBLOCK` is present, I think we can assume `WSAEAGAIN` wont be, and again, just simplify to `#define WSAEAGAIN WSAEWOULDBLOCK`.",
      "commit_id" : "5cb0589c2159c50d3f5d2f7b22287446a54a1070",
      "created_at" : "2022-06-29T07:29:26Z",
      "diff_hunk" : "@@ -34,19 +37,20 @@\n #include <unistd.h>\n #endif\n \n+// We map Linux / BSD error functions and codes, to the equivalent\n+// Windows definitions, and use the WSA* names throughout our code.\n+// Note that glibc defines EWOULDBLOCK as EAGAIN (see errno.h).\n #ifndef WIN32\n typedef unsigned int SOCKET;\n-#include <errno.h>\n+#include <cerrno>\n #define WSAGetLastError()   errno\n #define WSAEINVAL           EINVAL\n-#define WSAEALREADY         EALREADY\n #define WSAEWOULDBLOCK      EWOULDBLOCK\n #define WSAEAGAIN           EAGAIN\n #define WSAEMSGSIZE         EMSGSIZE\n #define WSAEINTR            EINTR\n #define WSAEINPROGRESS      EINPROGRESS\n #define WSAEADDRINUSE       EADDRINUSE\n-#define WSAENOTSOCK         EBADF\n #define INVALID_SOCKET      (SOCKET)(~0)\n #define SOCKET_ERROR        -1\n #else",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909291000",
      "id" : 909291000,
      "in_reply_to_id" : 908731433,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII5842Mq34",
      "original_commit_id" : "e872992e897e0894e64544a4d100bd96f82512e5",
      "original_line" : 56,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/compat/compat.h",
      "position" : 53,
      "pull_request_review_id" : 1022863190,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909291000/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T07:29:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909291000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909299343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909299343"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think `sockopt_arg_type` can be removed altogether, but I did not try on Windows.\r\n\r\n`Sock::SetSockOpt()` is taking `void*`, thus any pointer is ok to be passed. Then `Sock::SetSockOpt()` casts explicitly the `void*` to `char*` when calling `setsockopt()` - this is already working in the current code.\r\n\r\nThis works on FreeBSD:\r\n\r\n```diff\r\ndiff --git i/src/compat.h w/src/compat.h\r\nindex 0a44b98b4e..180fb31275 100644\r\n--- i/src/compat.h\r\n+++ w/src/compat.h\r\n@@ -74,18 +74,12 @@ typedef int64_t ssize_t;\r\n #else\r\n typedef int32_t ssize_t;\r\n #endif\r\n #endif\r\n #endif\r\n \r\n-#ifndef WIN32\r\n-typedef void* sockopt_arg_type;\r\n-#else\r\n-typedef char* sockopt_arg_type;\r\n-#endif\r\n-\r\n #ifdef WIN32\r\n // Export main() and ensure working ASLR when using mingw-w64.\r\n // Exporting a symbol will prevent the linker from stripping\r\n // the .reloc section from the binary, which is a requirement\r\n // for ASLR. While release builds are not affected, anyone\r\n // building with a binutils < 2.36 is subject to this ld bug.\r\ndiff --git i/src/net.cpp w/src/net.cpp\r\nindex 7f4e571c8d..4a3fa29390 100644\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -2297,22 +2297,22 @@ bool CConnman::BindListenPort(const CService& addrBind, bilingual_str& strError,\r\n         LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\r\n         return false;\r\n     }\r\n \r\n     // Allow binding if the port is still in TIME_WAIT state after\r\n     // the program was closed and restarted.\r\n-    if (sock->SetSockOpt(SOL_SOCKET, SO_REUSEADDR, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\r\n+    if (sock->SetSockOpt(SOL_SOCKET, SO_REUSEADDR, &nOne, sizeof(int)) == SOCKET_ERROR) {\r\n         strError = strprintf(Untranslated(\"Error setting SO_REUSEADDR on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\r\n         LogPrintf(\"%s\\n\", strError.original);\r\n     }\r\n \r\n     // some systems don't have IPV6_V6ONLY but are always v6only; others do have the option\r\n     // and enable it by default or not. Try to enable it, if possible.\r\n     if (addrBind.IsIPv6()) {\r\n #ifdef IPV6_V6ONLY\r\n-        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_V6ONLY, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\r\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_V6ONLY, &nOne, sizeof(int)) == SOCKET_ERROR) {\r\n             strError = strprintf(Untranslated(\"Error setting IPV6_V6ONLY on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\r\n             LogPrintf(\"%s\\n\", strError.original);\r\n         }\r\n #endif\r\n #ifdef WIN32\r\n         int nProtLevel = PROTECTION_LEVEL_UNRESTRICTED;\r\ndiff --git i/src/netbase.cpp w/src/netbase.cpp\r\nindex 030f462ed9..22eda88399 100644\r\n--- i/src/netbase.cpp\r\n+++ w/src/netbase.cpp\r\n@@ -582,13 +582,13 @@ bool ConnectSocketDirectly(const CService &addrConnect, const Sock& sock, int nT\r\n             // Even if the wait was successful, the connect might not\r\n             // have been successful. The reason for this failure is hidden away\r\n             // in the SO_ERROR for the socket in modern systems. We read it into\r\n             // sockerr here.\r\n             int sockerr;\r\n             socklen_t sockerr_len = sizeof(sockerr);\r\n-            if (sock.GetSockOpt(SOL_SOCKET, SO_ERROR, (sockopt_arg_type)&sockerr, &sockerr_len) ==\r\n+            if (sock.GetSockOpt(SOL_SOCKET, SO_ERROR, &sockerr, &sockerr_len) ==\r\n                 SOCKET_ERROR) {\r\n                 LogPrintf(\"getsockopt() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\r\n                 return false;\r\n             }\r\n             if (sockerr != 0) {\r\n                 LogConnectFailure(manual_connection,\r\ndiff --git i/src/test/sock_tests.cpp w/src/test/sock_tests.cpp\r\nindex 01a402833d..f10cca8c17 100644\r\n--- i/src/test/sock_tests.cpp\r\n+++ w/src/test/sock_tests.cpp\r\n@@ -21,13 +21,13 @@ static bool SocketIsClosed(const SOCKET& s)\r\n {\r\n     // Notice that if another thread is running and creates its own socket after `s` has been\r\n     // closed, it may be assigned the same file descriptor number. In this case, our test will\r\n     // wrongly pretend that the socket is not closed.\r\n     int type;\r\n     socklen_t len = sizeof(type);\r\n-    return getsockopt(s, SOL_SOCKET, SO_TYPE, (sockopt_arg_type)&type, &len) == SOCKET_ERROR;\r\n+    return getsockopt(s, SOL_SOCKET, SO_TYPE, &areupayingattention, &len) == SOCKET_ERROR;\r\n }\r\n \r\n static SOCKET CreateSocket()\r\n {\r\n     const SOCKET s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\r\n     BOOST_REQUIRE(s != static_cast<SOCKET>(SOCKET_ERROR));\r\n```\r\n",
      "commit_id" : "5cb0589c2159c50d3f5d2f7b22287446a54a1070",
      "created_at" : "2022-06-29T07:38:56Z",
      "diff_hunk" : "@@ -77,6 +88,8 @@ typedef int32_t ssize_t;\n #endif\n #endif\n \n+// The type of the option value passed to getsockopt & setsockopt\n+// differs between Windows and non-Windows.\n #ifndef WIN32\n typedef void* sockopt_arg_type;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909299343",
      "id" : 909299343,
      "line" : 93,
      "node_id" : "PRRC_kwDOABII5842Ms6P",
      "original_commit_id" : "ae2db1c4764e2ab0e027c9526ba51c5330bb8b1e",
      "original_line" : 93,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/compat/compat.h",
      "position" : 90,
      "pull_request_review_id" : 1022861171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909299343/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T07:47:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909299343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909313949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909313949"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Can you point to a toolchain...\r\n\r\nNo, I just coded it defensively so that it works in all scenarios, including future platforms that may define `WSAEAGAIN` or aux headers from dependencies - e.g. leveldb, sqlite may define it even if Windows itself does not.\r\n\r\nBut ok, if you feel like simplifying it, then I am fine with that. Worst that can happen is that it will fail to compile with an error like \"`WSAEAGAIN` is redefined\" - no subtle behavior at runtime. So, it would become:\r\n\r\n```cpp\r\n#ifdef EAGAIN\r\n#define WSAEAGAIN EAGAIN\r\n#else\r\n#define WSAEAGAIN WSAEWOULDBLOCK\r\n#endif\r\n```\r\n",
      "commit_id" : "5cb0589c2159c50d3f5d2f7b22287446a54a1070",
      "created_at" : "2022-06-29T07:54:14Z",
      "diff_hunk" : "@@ -34,19 +37,20 @@\n #include <unistd.h>\n #endif\n \n+// We map Linux / BSD error functions and codes, to the equivalent\n+// Windows definitions, and use the WSA* names throughout our code.\n+// Note that glibc defines EWOULDBLOCK as EAGAIN (see errno.h).\n #ifndef WIN32\n typedef unsigned int SOCKET;\n-#include <errno.h>\n+#include <cerrno>\n #define WSAGetLastError()   errno\n #define WSAEINVAL           EINVAL\n-#define WSAEALREADY         EALREADY\n #define WSAEWOULDBLOCK      EWOULDBLOCK\n #define WSAEAGAIN           EAGAIN\n #define WSAEMSGSIZE         EMSGSIZE\n #define WSAEINTR            EINTR\n #define WSAEINPROGRESS      EINPROGRESS\n #define WSAEADDRINUSE       EADDRINUSE\n-#define WSAENOTSOCK         EBADF\n #define INVALID_SOCKET      (SOCKET)(~0)\n #define SOCKET_ERROR        -1\n #else",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909313949",
      "id" : 909313949,
      "in_reply_to_id" : 908731433,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII5842Mwed",
      "original_commit_id" : "e872992e897e0894e64544a4d100bd96f82512e5",
      "original_line" : 56,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/compat/compat.h",
      "position" : 53,
      "pull_request_review_id" : 1022895660,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909313949/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T07:54:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909313949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909425673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909425673"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree. If it was specifically about windows compatibility, we could name it like `wincompat.h` instead of having comments like this. But I think the file is less specific?",
      "commit_id" : "5cb0589c2159c50d3f5d2f7b22287446a54a1070",
      "created_at" : "2022-06-29T09:43:39Z",
      "diff_hunk" : "@@ -10,7 +10,7 @@\n #include <crypto/sha512.h>\n #include <support/cleanse.h>\n #ifdef WIN32\n-#include <compat.h> // for Windows API\n+#include <compat/compat.h> // for Windows API",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909425673",
      "id" : 909425673,
      "in_reply_to_id" : 909289563,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842NLwJ",
      "original_commit_id" : "ae2db1c4764e2ab0e027c9526ba51c5330bb8b1e",
      "original_line" : 13,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/random.cpp",
      "position" : null,
      "pull_request_review_id" : 1023051542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909425673/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T09:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909425673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909446123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909446123"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Worst that can happen is that it will fail to compile with an error like \"WSAEAGAIN is redefined\"\r\n\r\nI think that would be much better behaviour, and make it obvious if such a situation where to exist, rather than silently accomodating dependencies / toolchains changing underneath us with some #ifdef soup.",
      "commit_id" : "5cb0589c2159c50d3f5d2f7b22287446a54a1070",
      "created_at" : "2022-06-29T10:04:50Z",
      "diff_hunk" : "@@ -34,19 +37,20 @@\n #include <unistd.h>\n #endif\n \n+// We map Linux / BSD error functions and codes, to the equivalent\n+// Windows definitions, and use the WSA* names throughout our code.\n+// Note that glibc defines EWOULDBLOCK as EAGAIN (see errno.h).\n #ifndef WIN32\n typedef unsigned int SOCKET;\n-#include <errno.h>\n+#include <cerrno>\n #define WSAGetLastError()   errno\n #define WSAEINVAL           EINVAL\n-#define WSAEALREADY         EALREADY\n #define WSAEWOULDBLOCK      EWOULDBLOCK\n #define WSAEAGAIN           EAGAIN\n #define WSAEMSGSIZE         EMSGSIZE\n #define WSAEINTR            EINTR\n #define WSAEINPROGRESS      EINPROGRESS\n #define WSAEADDRINUSE       EADDRINUSE\n-#define WSAENOTSOCK         EBADF\n #define INVALID_SOCKET      (SOCKET)(~0)\n #define SOCKET_ERROR        -1\n #else",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909446123",
      "id" : 909446123,
      "in_reply_to_id" : 908731433,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII5842NQvr",
      "original_commit_id" : "e872992e897e0894e64544a4d100bd96f82512e5",
      "original_line" : 56,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/compat/compat.h",
      "position" : 53,
      "pull_request_review_id" : 1023080136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909446123/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T10:04:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909446123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909446603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909446603"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Will drop this comment.",
      "commit_id" : "5cb0589c2159c50d3f5d2f7b22287446a54a1070",
      "created_at" : "2022-06-29T10:05:21Z",
      "diff_hunk" : "@@ -10,7 +10,7 @@\n #include <crypto/sha512.h>\n #include <support/cleanse.h>\n #ifdef WIN32\n-#include <compat.h> // for Windows API\n+#include <compat/compat.h> // for Windows API",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909446603",
      "id" : 909446603,
      "in_reply_to_id" : 909289563,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842NQ3L",
      "original_commit_id" : "ae2db1c4764e2ab0e027c9526ba51c5330bb8b1e",
      "original_line" : 13,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/random.cpp",
      "position" : null,
      "pull_request_review_id" : 1023080796,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909446603/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T10:05:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909446603",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909447438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909447438"
         }
      },
      "author_association" : "MEMBER",
      "body" : "areupayingattention ð ",
      "commit_id" : "5cb0589c2159c50d3f5d2f7b22287446a54a1070",
      "created_at" : "2022-06-29T10:06:16Z",
      "diff_hunk" : "@@ -77,6 +88,8 @@ typedef int32_t ssize_t;\n #endif\n #endif\n \n+// The type of the option value passed to getsockopt & setsockopt\n+// differs between Windows and non-Windows.\n #ifndef WIN32\n typedef void* sockopt_arg_type;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r909447438",
      "id" : 909447438,
      "in_reply_to_id" : 909299343,
      "line" : 93,
      "node_id" : "PRRC_kwDOABII5842NREO",
      "original_commit_id" : "ae2db1c4764e2ab0e027c9526ba51c5330bb8b1e",
      "original_line" : 93,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/compat/compat.h",
      "position" : 90,
      "pull_request_review_id" : 1023081973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 2,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909447438/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-29T10:06:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909447438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We will need to update the minisketch subtree, to accomodate the `compat.h` renaming, as the minisketch header, in the subtree, actually includes `compat.h`, when building for MSVC.",
      "created_at" : "2022-06-29T11:34:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#issuecomment-1169871709",
      "id" : 1169871709,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25493",
      "node_id" : "IC_kwDOABII585FutNd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1169871709/reactions"
      },
      "updated_at" : "2022-06-29T11:34:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1169871709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For now I've rebased this on top of a minisketch subtree update, and a cherry-pick of https://github.com/sipa/minisketch/pull/66; that way we'll get a run against the MSVC CI. I've also added a commit to use the SSIZE_T change in our code.\r\n\r\nOnce that PR is merged, I'll open a PR to update the subtree in our repo. Once that is merged, I'll rebase this.",
      "created_at" : "2022-06-29T13:48:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#issuecomment-1170004704",
      "id" : 1170004704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25493",
      "node_id" : "IC_kwDOABII585FvNrg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1170004704/reactions"
      },
      "updated_at" : "2022-06-29T13:48:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1170004704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r914282067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914282067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Some systems don't allow redefining FD_SETSIZE (notably including glibc), so IMO good to point out that Windows specifically allows it.\r\n\r\n```suggestion\r\n// Windows defines FD_SETSIZE to 64 (see _fd_types.h in mingw-w64),\r\n// which is too small for our usage, but allows us to redefine it safely.\r\n// We redefine it to be 1024, to match glibc, see typesizes.h.\r\n```",
      "commit_id" : "18ce5f990d7a2ae5815d09c87be5db7f5d86c1e7",
      "created_at" : "2022-07-05T23:30:09Z",
      "diff_hunk" : "@@ -3,21 +3,24 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPAT_H\n-#define BITCOIN_COMPAT_H\n+#ifndef BITCOIN_COMPAT_COMPAT_H\n+#define BITCOIN_COMPAT_COMPAT_H\n \n #if defined(HAVE_CONFIG_H)\n #include <config/bitcoin-config.h>\n #endif\n \n+// Windows defines FD_SETSIZE to 64, see _fd_types.h (mingw-w64),\n+// which is too small for our usage. We redefine it to be 1024, to\n+// match glibc, see typesizes.h.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r914282067",
      "id" : 914282067,
      "line" : 15,
      "node_id" : "PRRC_kwDOABII5842ftZT",
      "original_commit_id" : "18ce5f990d7a2ae5815d09c87be5db7f5d86c1e7",
      "original_line" : 15,
      "original_position" : 15,
      "original_start_line" : 13,
      "path" : "src/compat/compat.h",
      "position" : 15,
      "pull_request_review_id" : 1029317346,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914282067/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 13,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-05T23:44:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914282067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r914667241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914667241"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Taken the suggestion.",
      "commit_id" : "bdbdfe074b7c54268ec813f5092ce722d6cc5899",
      "created_at" : "2022-07-06T10:13:57Z",
      "diff_hunk" : "@@ -3,21 +3,24 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPAT_H\n-#define BITCOIN_COMPAT_H\n+#ifndef BITCOIN_COMPAT_COMPAT_H\n+#define BITCOIN_COMPAT_COMPAT_H\n \n #if defined(HAVE_CONFIG_H)\n #include <config/bitcoin-config.h>\n #endif\n \n+// Windows defines FD_SETSIZE to 64, see _fd_types.h (mingw-w64),\n+// which is too small for our usage. We redefine it to be 1024, to\n+// match glibc, see typesizes.h.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#discussion_r914667241",
      "id" : 914667241,
      "in_reply_to_id" : 914282067,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842hLbp",
      "original_commit_id" : "18ce5f990d7a2ae5815d09c87be5db7f5d86c1e7",
      "original_line" : 15,
      "original_position" : 15,
      "original_start_line" : 13,
      "path" : "src/compat/compat.h",
      "position" : null,
      "pull_request_review_id" : 1029847905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25493",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914667241/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-07-06T10:13:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914667241",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Maybe #include <sys/stat.h> could be moved from src/wallet/bdb.cpp into compat/compat.h as well.\r\n\r\nRebased and incorporated this change.",
      "created_at" : "2022-07-20T09:47:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#issuecomment-1190064829",
      "id" : 1190064829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25493",
      "node_id" : "IC_kwDOABII585G7vK9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190064829/reactions"
      },
      "updated_at" : "2022-07-20T09:47:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190064829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I would expect non-standard headers to be included in `compat.h` (inside some #ifdef magic) and then other source files to include `compat.h`. This implies that a non-standard header is included _only_ in `compat.h`. `sys/stat.h` is included in 5 files (in `httpserver.cpp` without #ifdef :eyes:). Should all of those be replaced with `#include <compat.h>`?\r\n\r\n`compat.h` is included in 27 files. Now all of them (indirectly) include `sys/stat.h`.\r\n\r\nThe commit message of 3a865ea692cc46a68816dbd84f7254f4390a4f42 `compat: document S_I* defines when building for Windows` needs to be extended because now the commit does more than mentioned.",
      "created_at" : "2022-07-20T11:21:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#issuecomment-1190151782",
      "id" : 1190151782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25493",
      "node_id" : "IC_kwDOABII585G8EZm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190151782/reactions"
      },
      "updated_at" : "2022-07-20T11:25:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190151782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok. I've just reverted Hebastos suggestion for now. If someone wants to go an massage the headers later (with IWYU), they can. However doing that is unrelated to adding documentation.",
      "created_at" : "2022-07-20T12:11:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25493#issuecomment-1190197959",
      "id" : 1190197959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25493",
      "node_id" : "IC_kwDOABII585G8PrH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190197959/reactions"
      },
      "updated_at" : "2022-07-20T12:11:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190197959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
