[
   {
      "author_association" : "MEMBER",
      "body" : "Thanks, squashed",
      "created_at" : "2021-04-29T09:43:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21802#issuecomment-829091207",
      "id" : 829091207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21802",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyOTA5MTIwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-29T09:43:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/829091207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reproduced on master with `D_GLIBCXX_DEBUG` via running the fuzzer over asmap and asmap direct\r\n\r\n<details>\r\n<summary>asmap output</summary>\r\n\r\n```\r\nINFO: Loaded 1 modules   (811800 inline 8-bit counters): 811800 [0x56282d063a10, 0x56282d129d28),\r\nINFO: Loaded 1 PC tables (811800 PCs): 811800 [0x56282d129d28,0x56282dd8cea8),\r\nINFO:     1070 files found in qa-assets/fuzz_seed_corpus/asmap/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 292568 bytes\r\nINFO: seed corpus: files: 1070 min: 1b max: 292568b total: 5871094b rss: 161Mb\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/debug/safe_iterator.h:908:\r\nIn function:\r\n    __gnu_debug::_Safe_iterator<type-parameter-0-0, type-parameter-0-1,\r\n    std::random_access_iterator_tag>::_Self __gnu_debug::operator+(const\r\n    __gnu_debug::_Safe_iterator<type-parameter-0-0, type-parameter-0-1,\r\n    std::random_access_iterator_tag>::_Self &,\r\n    __gnu_debug::_Safe_iterator<type-parameter-0-0, type-parameter-0-1,\r\n    std::random_access_iterator_tag>::difference_type)\r\n\r\nError: attempt to advance a dereferenceable iterator 8167 steps, which falls\r\noutside its valid range.\r\n\r\nObjects involved in the operation:\r\n    iterator @ 0x0x7ffc4397d7f0 {\r\n      type = std::__cxx1998::_Bit_const_iterator (constant iterator);\r\n      state = dereferenceable;\r\n      references sequence with type 'std::__debug::vector<bool, std::allocator<bool> >' @ 0x0x7ffc4397dac0\r\n    }\r\n==135635== ERROR: libFuzzer: deadly signal\r\n    #0 0x562826cc6fd1 in __sanitizer_print_stack_trace (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3afefd1)\r\n    #1 0x562826c12128 in fuzzer::PrintStackTrace() (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a4a128)\r\n    #2 0x562826bf7273 in fuzzer::Fuzzer::CrashCallback() (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a2f273)\r\n    #3 0x7fa76a77241f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1541f)\r\n    #4 0x7fa76a3b618a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4618a)\r\n    #5 0x7fa76a395858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x25858)\r\n    #6 0x7fa76a821148  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa1148)\r\n    #7 0x562828748e40 in __gnu_debug::operator+(__gnu_debug::_Safe_iterator<std::__cxx1998::_Bit_const_iterator, std::__debug::vector<bool, std::allocator<bool> >, std::random_access_iterator_tag> const&, long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/debug/safe_iterator.h:906:2\r\n    #8 0x56282874a24c in SanityCheckASMap(std::__debug::vector<bool, std::allocator<bool> > const&, int) /home/jonas/bitcoin/src/util/asmap.cpp:159:21\r\n    #9 0x5628283ea928 in SanityCheckASMap(std::__debug::vector<bool, std::allocator<bool> > const&) /home/jonas/bitcoin/src/netaddress.cpp:1242:12\r\n    #10 0x562826d80b92 in asmap_fuzz_target(Span<unsigned char const>) /home/jonas/bitcoin/src/test/fuzz/asmap.cpp:45:10\r\n    #11 0x562826cf3acd in void std::__invoke_impl<void, void (*&)(Span<unsigned char const>), Span<unsigned char const> >(std::__invoke_other, void (*&)(Span<unsigned char const>), Span<unsigned char const>&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:60:14\r\n    #12 0x562826cf37a0 in std::enable_if<is_invocable_r_v<void, void (*&)(Span<unsigned char const>), Span<unsigned char const> >, void>::type std::__invoke_r<void, void (*&)(Span<unsigned char const>), Span<unsigned char const> >(void (*&)(Span<unsigned char const>), Span<unsigned char const>&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:110:2\r\n    #13 0x562826cf307e in std::_Function_handler<void (Span<unsigned char const>), void (*)(Span<unsigned char const>)>::_M_invoke(std::_Any_data const&, Span<unsigned char const>&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:291:9\r\n    #14 0x56282909c437 in std::function<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>) const /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:622:14\r\n    #15 0x56282909c0e5 in LLVMFuzzerTestOneInput /home/jonas/bitcoin/src/test/fuzz/fuzz.cpp:63:5\r\n    #16 0x562826bf8931 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a30931)\r\n    #17 0x562826bf8075 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a30075)\r\n    #18 0x562826bfa997 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a32997)\r\n    #19 0x562826bfacf9 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a32cf9)\r\n    #20 0x562826be99ce in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a219ce)\r\n    #21 0x562826c12812 in main (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a4a812)\r\n    #22 0x7fa76a3970b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\r\n    #23 0x562826bbe76d in _start (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x39f676d)\r\n```\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>asmap_direct output</summary>\r\n\r\n```\r\nINFO: Loaded 1 modules   (811800 inline 8-bit counters): 811800 [0x55a86b9d7a10, 0x55a86ba9dd28),\r\nINFO: Loaded 1 PC tables (811800 PCs): 811800 [0x55a86ba9dd28,0x55a86c700ea8),\r\nINFO:      638 files found in qa-assets/fuzz_seed_corpus/asmap_direct/\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: seed corpus: files: 638 min: 1b max: 4096b total: 163116b rss: 160Mb\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/debug/safe_iterator.h:908:\r\nIn function:\r\n    __gnu_debug::_Safe_iterator<type-parameter-0-0, type-parameter-0-1,\r\n    std::random_access_iterator_tag>::_Self __gnu_debug::operator+(const\r\n    __gnu_debug::_Safe_iterator<type-parameter-0-0, type-parameter-0-1,\r\n    std::random_access_iterator_tag>::_Self &,\r\n    __gnu_debug::_Safe_iterator<type-parameter-0-0, type-parameter-0-1,\r\n    std::random_access_iterator_tag>::difference_type)\r\n\r\nError: attempt to advance a past-the-end iterator 18 steps, which falls\r\noutside its valid range.\r\n\r\nObjects involved in the operation:\r\n    iterator @ 0x0x7ffcd1b577b0 {\r\n      type = std::__cxx1998::_Bit_const_iterator (constant iterator);\r\n      state = past-the-end;\r\n      references sequence with type 'std::__debug::vector<bool, std::allocator<bool> >' @ 0x0x7ffcd1b57ac0\r\n    }\r\n==135577== ERROR: libFuzzer: deadly signal\r\n    #0 0x55a86563afd1 in __sanitizer_print_stack_trace (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3afefd1)\r\n    #1 0x55a865586128 in fuzzer::PrintStackTrace() (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a4a128)\r\n    #2 0x55a86556b273 in fuzzer::Fuzzer::CrashCallback() (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a2f273)\r\n    #3 0x7fdcb293241f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1541f)\r\n    #4 0x7fdcb257618a in raise (/lib/x86_64-linux-gnu/libc.so.6+0x4618a)\r\n    #5 0x7fdcb2555858 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x25858)\r\n    #6 0x7fdcb29e1148  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa1148)\r\n    #7 0x55a8670bce40 in __gnu_debug::operator+(__gnu_debug::_Safe_iterator<std::__cxx1998::_Bit_const_iterator, std::__debug::vector<bool, std::allocator<bool> >, std::random_access_iterator_tag> const&, long) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/debug/safe_iterator.h:906:2\r\n    #8 0x55a8670be24c in SanityCheckASMap(std::__debug::vector<bool, std::allocator<bool> > const&, int) /home/jonas/bitcoin/src/util/asmap.cpp:159:21\r\n    #9 0x55a865702c33 in asmap_direct_fuzz_target(Span<unsigned char const>) /home/jonas/bitcoin/src/test/fuzz/asmap_direct.cpp:35:9\r\n    #10 0x55a865667acd in void std::__invoke_impl<void, void (*&)(Span<unsigned char const>), Span<unsigned char const> >(std::__invoke_other, void (*&)(Span<unsigned char const>), Span<unsigned char const>&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:60:14\r\n    #11 0x55a8656677a0 in std::enable_if<is_invocable_r_v<void, void (*&)(Span<unsigned char const>), Span<unsigned char const> >, void>::type std::__invoke_r<void, void (*&)(Span<unsigned char const>), Span<unsigned char const> >(void (*&)(Span<unsigned char const>), Span<unsigned char const>&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:110:2\r\n    #12 0x55a86566707e in std::_Function_handler<void (Span<unsigned char const>), void (*)(Span<unsigned char const>)>::_M_invoke(std::_Any_data const&, Span<unsigned char const>&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:291:9\r\n    #13 0x55a867a10437 in std::function<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>) const /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:622:14\r\n    #14 0x55a867a100e5 in LLVMFuzzerTestOneInput /home/jonas/bitcoin/src/test/fuzz/fuzz.cpp:63:5\r\n    #15 0x55a86556c931 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a30931)\r\n    #16 0x55a86556c075 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a30075)\r\n    #17 0x55a86556e997 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a32997)\r\n    #18 0x55a86556ecf9 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a32cf9)\r\n    #19 0x55a86555d9ce in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a219ce)\r\n    #20 0x55a865586812 in main (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x3a4a812)\r\n    #21 0x7fdcb25570b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\r\n    #22 0x55a86553276d in _start (/home/jonas/bitcoin/src/test/fuzz/fuzz+0x39f676d)\r\n```\r\n\r\n</details>\r\n\r\nRan fa09871 and can confirmed that 100000 runs over asmap and asmap_direct yielded no crashes.",
      "created_at" : "2021-04-29T16:02:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21802#issuecomment-829365310",
      "id" : 829365310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21802",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyOTM2NTMxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-29T16:02:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/829365310",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\n\nI vaguely remember we used to have a CI build that used glibc in debug mode. Don't we have that anymore?",
      "created_at" : "2021-04-29T16:51:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21802#issuecomment-829426882",
      "id" : 829426882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21802",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyOTQyNjg4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-29T16:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/829426882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I vaguely remember we used to have a CI build that used glibc in debug mode. Don't we have that anymore?\r\n\r\nThe only mention of `-D_GLIBCXX_DEBUG` in the repo history is f3973040028d6a7335a3265fa0e13b599b2fac3d (2014).\r\n\r\nThere has been some `-D_GLIBCXX_DEBUG` mentions here on GitHub in the past: see https://github.com/bitcoin/bitcoin/pull/14624#issuecomment-434994801 (2018) and the recent thread https://github.com/bitcoin/bitcoin/pull/21781#discussion_r620987297.\r\n",
      "created_at" : "2021-04-29T18:11:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21802#issuecomment-829479730",
      "id" : 829479730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21802",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyOTQ3OTczMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-29T18:11:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/829479730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please don't merge this just yet",
      "created_at" : "2021-05-05T06:22:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21802#issuecomment-832442626",
      "id" : 832442626,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21802",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzMjQ0MjYyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-05T06:22:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832442626",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(ready for review/merge again)",
      "created_at" : "2021-05-06T08:06:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21802#issuecomment-833321624",
      "id" : 833321624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21802",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzMzMyMTYyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-06T08:06:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/833321624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fa098713201a6999ec4c12d0a8bde0adcf47b095",
      "created_at" : "2021-05-07T03:11:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21802#issuecomment-834030278",
      "id" : 834030278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21802",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzNDAzMDI3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-07T03:11:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834030278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
