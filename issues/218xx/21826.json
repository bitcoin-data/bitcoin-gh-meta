{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Compiling on boost 1.58 is no longer possible.\r\n\r\nI get:\r\n\r\n```\r\nmake V=1\r\nMaking all in src\r\nmake[1]: Entering directory '/bitcoin/src'\r\nmake[2]: Entering directory '/bitcoin/src'\r\nmake[3]: Entering directory '/bitcoin'\r\nmake[3]: Leaving directory '/bitcoin'\r\n/usr/bin/ccache clang++-8 -stdlib=libc++ -std=c++17 -DHAVE_CONFIG_H -I. -I../src/config   -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -I. -I./secp256k1/include  -DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC -I/usr/include -I./leveldb/include -I./leveldb/helpers/memenv -I./univalue/include -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -DPROVIDE_FUZZ_MAIN_FUNCTION -fdebug-prefix-map=/bitcoin/src=. -Wstack-protector -fstack-protector-all -fcf-protection=full -Wall -Wextra -Wgnu -Wformat -Wformat-security -Wvla -Wshadow-field -Wswitch -Wthread-safety -Wrange-loop-analysis -Wredundant-decls -Wunused-variable -Wunused-member-function -Wdate-time -Wconditional-uninitialized -Wsign-compare -Woverloaded-virtual -Wunreachable-code-loop-increment -Wno-unused-parameter -Wno-self-assign -Wno-unused-local-typedef -Wno-implicit-fallthrough    -fPIE -g -O2 -MT bitcoind-bitcoind.o -MD -MP -MF .deps/bitcoind-bitcoind.Tpo -c -o bitcoind-bitcoind.o `test -f 'bitcoind.cpp' || echo './'`bitcoind.cpp\r\nclang: warning: argument unused during compilation: '-stdlib=libc++' [-Wunused-command-line-argument]\r\nIn file included from bitcoind.cpp:14:\r\nIn file included from ./interfaces/chain.h:9:\r\nIn file included from ./util/settings.h:8:\r\nIn file included from ./fs.h:14:\r\nIn file included from /usr/include/boost/filesystem.hpp:16:\r\nIn file included from /usr/include/boost/filesystem/path.hpp:29:\r\nIn file included from /usr/include/boost/shared_ptr.hpp:17:\r\nIn file included from /usr/include/boost/smart_ptr/shared_ptr.hpp:28:\r\n/usr/include/boost/smart_ptr/detail/shared_count.hpp:395:33: error: no template named 'auto_ptr' in namespace 'std'\r\n    explicit shared_count( std::auto_ptr<Y> & r ): pi_( new sp_counted_impl_p<Y>( r.get() ) )\r\n                           ~~~~~^\r\nIn file included from bitcoind.cpp:14:\r\nIn file included from ./interfaces/chain.h:9:\r\nIn file included from ./util/settings.h:8:\r\nIn file included from ./fs.h:14:\r\nIn file included from /usr/include/boost/filesystem.hpp:16:\r\nIn file included from /usr/include/boost/filesystem/path.hpp:29:\r\nIn file included from /usr/include/boost/shared_ptr.hpp:17:\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:242:65: error: no member named 'auto_ptr' in namespace 'std'\r\ntemplate< class T, class R > struct sp_enable_if_auto_ptr< std::auto_ptr< T >, R >\r\n                                                           ~~~~~^\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:242:75: error: 'T' does not refer to a value\r\ntemplate< class T, class R > struct sp_enable_if_auto_ptr< std::auto_ptr< T >, R >\r\n                                                                          ^\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:242:17: note: declared here\r\ntemplate< class T, class R > struct sp_enable_if_auto_ptr< std::auto_ptr< T >, R >\r\n                ^\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:242:81: error: expected ';' at end of declaration\r\ntemplate< class T, class R > struct sp_enable_if_auto_ptr< std::auto_ptr< T >, R >\r\n                                                                                ^\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:242:82: error: expected unqualified-id\r\ntemplate< class T, class R > struct sp_enable_if_auto_ptr< std::auto_ptr< T >, R >\r\n                                                                                 ^\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:441:31: error: no template named 'auto_ptr' in namespace 'std'\r\n    explicit shared_ptr( std::auto_ptr<Y> & r ): px(r.get()), pn()\r\n                         ~~~~~^\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:454:22: error: no template named 'auto_ptr' in namespace 'std'\r\n    shared_ptr( std::auto_ptr<Y> && r ): px(r.get()), pn()\r\n                ~~~~~^\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:520:34: error: no template named 'auto_ptr' in namespace 'std'\r\n    shared_ptr & operator=( std::auto_ptr<Y> & r )\r\n                            ~~~~~^\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:529:34: error: no template named 'auto_ptr' in namespace 'std'\r\n    shared_ptr & operator=( std::auto_ptr<Y> && r )\r\n                            ~~~~~^\r\n/usr/include/boost/smart_ptr/shared_ptr.hpp:531:38: error: no template named 'auto_ptr' in namespace 'std'\r\n        this_type( static_cast< std::auto_ptr<Y> && >( r ) ).swap( *this );\r\n                                ~~~~~^\r\nIn file included from bitcoind.cpp:14:\r\nIn file included from ./interfaces/chain.h:9:\r\nIn file included from ./util/settings.h:8:\r\nIn file included from ./fs.h:14:\r\nIn file included from /usr/include/boost/filesystem.hpp:17:\r\n/usr/include/boost/filesystem/operations.hpp:130:38: error: cannot initialize object parameter of type 'const boost::system::system_error' with an expression of type 'const boost::filesystem::filesystem_error'\r\n        return system::system_error::what();\r\n                                     ^~~~\r\n/usr/include/boost/filesystem/operations.hpp:136:55: error: cannot initialize object parameter of type 'const boost::system::system_error' with an expression of type 'const boost::filesystem::filesystem_error'\r\n            m_imp_ptr->m_what = system::system_error::what();\r\n                                                      ^~~~\r\n/usr/include/boost/filesystem/operations.hpp:154:40: error: cannot initialize object parameter of type 'const boost::system::system_error' with an expression of type 'const boost::filesystem::filesystem_error'\r\n          return system::system_error::what();\r\n                                       ^~~~\r\n/usr/include/boost/filesystem/operations.hpp:946:39: error: no viable overloaded 'operator->'\r\n          symlink_stat = m_stack.top()->symlink_status(ec);\r\n                         ~~~~~~~~~~~~~^\r\n/usr/include/boost/iterator/iterator_facade.hpp:649:17: note: candidate function not viable: no known conversion from 'std::__1::__vector_base<boost::filesystem::directory_iterator, std::__1::allocator<boost::filesystem::directory_iterator> >::value_type' (aka 'boost::filesystem::directory_iterator') to 'const boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::iterators::single_pass_traversal_tag, boost::filesystem::directory_entry &, long, false, false>' for object argument\r\n        pointer operator->() const\r\n                ^\r\nIn file included from bitcoind.cpp:14:\r\nIn file included from ./interfaces/chain.h:9:\r\nIn file included from ./util/settings.h:8:\r\nIn file included from ./fs.h:14:\r\nIn file included from /usr/include/boost/filesystem.hpp:17:\r\n/usr/include/boost/filesystem/operations.hpp:954:43: error: no viable overloaded 'operator->'\r\n          file_status stat = m_stack.top()->status(ec);\r\n                             ~~~~~~~~~~~~~^\r\n/usr/include/boost/iterator/iterator_facade.hpp:649:17: note: candidate function not viable: no known conversion from 'std::__1::__vector_base<boost::filesystem::directory_iterator, std::__1::allocator<boost::filesystem::directory_iterator> >::value_type' (aka 'boost::filesystem::directory_iterator') to 'const boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::iterators::single_pass_traversal_tag, boost::filesystem::directory_entry &, long, false, false>' for object argument\r\n        pointer operator->() const\r\n                ^\r\nIn file included from bitcoind.cpp:14:\r\nIn file included from ./interfaces/chain.h:9:\r\nIn file included from ./util/settings.h:8:\r\nIn file included from ./fs.h:14:\r\nIn file included from /usr/include/boost/filesystem.hpp:17:\r\n/usr/include/boost/filesystem/operations.hpp:958:48: error: no viable overloaded 'operator->'\r\n          directory_iterator next(m_stack.top()->path(), ec);\r\n                                  ~~~~~~~~~~~~~^\r\n/usr/include/boost/iterator/iterator_facade.hpp:649:17: note: candidate function not viable: no known conversion from 'std::__1::__vector_base<boost::filesystem::directory_iterator, std::__1::allocator<boost::filesystem::directory_iterator> >::value_type' (aka 'boost::filesystem::directory_iterator') to 'const boost::iterators::detail::iterator_facade_base<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::iterators::single_pass_traversal_tag, boost::filesystem::directory_entry &, long, false, false>' for object argument\r\n        pointer operator->() const\r\n                ^\r\nIn file included from bitcoind.cpp:14:\r\nIn file included from ./interfaces/chain.h:9:\r\nIn file included from ./util/settings.h:8:\r\nIn file included from ./fs.h:14:\r\nIn file included from /usr/include/boost/filesystem.hpp:17:\r\n/usr/include/boost/filesystem/operations.hpp:959:27: error: invalid operands to binary expression ('boost::filesystem::directory_iterator' and 'boost::filesystem::directory_iterator')\r\n          if (!ec && next != directory_iterator())\r\n                     ~~~~ ^  ~~~~~~~~~~~~~~~~~~~~\r\n/usr/include/boost/filesystem/path.hpp:669:15: note: candidate function not viable: no known conversion from 'boost::filesystem::directory_iterator' to 'const boost::filesystem::path' for 1st argument\r\n  inline bool operator!=(const path& lhs, const path& rhs) {return lhs.compare(rhs) != 0;}\r\n              ^\r\n/usr/include/boost/filesystem/path.hpp:670:15: note: candidate function not viable: no known conversion from 'boost::filesystem::directory_iterator' to 'const boost::filesystem::path' for 1st argument\r\n  inline bool operator!=(const path& lhs, const path::string_type& rhs) {return lhs.compare(rhs) != 0;}\r\n              ^\r\n/usr/include/boost/filesystem/path.hpp:671:15: note: candidate function not viable: no known conversion from 'boost::filesystem::directory_iterator' to 'const path::string_type' (aka 'const basic_string<char>') for 1st argument\r\n  inline bool operator!=(const path::string_type& lhs, const path& rhs) {return rhs.compare(lhs) != 0;}\r\n              ^\r\n/usr/include/boost/filesystem/path.hpp:672:15: note: candidate function not viable: no known conversion from 'boost::filesystem::directory_iterator' to 'const boost::filesystem::path' for 1st argument\r\n  inline bool operator!=(const path& lhs, const path::value_type* rhs) {return lhs.compare(rhs) != 0;}\r\n              ^\r\n/usr/include/boost/filesystem/path.hpp:673:15: note: candidate function not viable: no known conversion from 'boost::filesystem::directory_iterator' to 'const path::value_type *' (aka 'const char *') for 1st argument\r\n  inline bool operator!=(const path::value_type* lhs, const path& rhs) {return rhs.compare(lhs) != 0;}\r\n              ^\r\n/usr/include/boost/iterator/iterator_facade.hpp:891:345: note: candidate template ignored: deduced type 'const iterator_facade<boost::filesystem::directory_iterator, boost::filesystem::directory_entry, boost::iterators::single_pass_traversal_tag, boost::filesystem::directory_entry &, long>' of 1st parameter does not match adjusted type 'boost::filesystem::directory_iterator' of argument [with Derived1 = boost::filesystem::directory_iterator, V1 = boost::filesystem::directory_entry, TC1 = boost::iterators::single_pass_traversal_tag, Reference1 = boost::filesystem::directory_entry &, Difference1 = long, Derived2 = boost::filesystem::directory_iterator, V2 = boost::filesystem::directory_entry, TC2 = boost::iterators::single_pass_traversal_tag, Reference2 = boost::filesystem::directory_entry &, Difference2 = long]\r\n  template < class Derived1, class V1, class TC1, class Reference1, class Difference1 , class Derived2, class V2, class TC2, class Reference2, class Difference2 > inline typename boost::iterators::detail::enable_if_interoperable< Derived1, Derived2 , typename mpl::apply2<boost::iterators::detail::always_bool2,Derived1,Derived2>::type >::type operator !=( iterator_facade<Derived1, V1, TC1, Reference1, Difference1> const& lhs , iterator_facade<Derived2, V2, TC2, Reference2, Difference2> const& rhs) { static_assert(( is_interoperable< Derived1, Derived2 >::value ), \"( is_interoperable< Derived1, Derived2 >::value )\"); return ! iterator_core_access::equal( *static_cast<Derived1 const*>(&lhs) , *static_cast<Derived2 const*>(&rhs) , is_convertible<Derived2,Derived1>() ); }\r\n                                                                                                                                                                                                                                                                                                                                                        ^\r\nIn file included from bitcoind.cpp:14:\r\nIn file included from ./interfaces/chain.h:9:\r\nIn file included from ./util/settings.h:8:\r\nIn file included from ./fs.h:14:\r\nIn file included from /usr/include/boost/filesystem.hpp:17:\r\n/usr/include/boost/filesystem/operations.hpp:993:34: error: cannot increment value of type 'std::__1::__vector_base<boost::filesystem::directory_iterator, std::__1::allocator<boost::filesystem::directory_iterator> >::value_type' (aka 'boost::filesystem::directory_iterator')\r\n      while (!m_stack.empty() && ++m_stack.top() == directory_iterator())\r\n                                 ^ ~~~~~~~~~~~~~\r\n/usr/include/boost/filesystem/operations.hpp:1026:34: error: cannot increment value of type 'std::__1::__vector_base<boost::filesystem::directory_iterator, std::__1::allocator<boost::filesystem::directory_iterator> >::value_type' (aka 'boost::filesystem::directory_iterator')\r\n      while (!m_stack.empty() && ++m_stack.top() == directory_iterator());\r\n                                 ^ ~~~~~~~~~~~~~\r\n19 errors generated.\r\nMakefile:12175: recipe for target 'bitcoind-bitcoind.o' failed\r\nmake[2]: *** [bitcoind-bitcoind.o] Error 1\r\nmake[2]: Leaving directory '/bitcoin/src'\r\nMakefile:15330: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/bitcoin/src'\r\nMakefile:820: recipe for target 'all-recursive' failed\r\nmake: *** [all-recursive] Error 1\r\n",
   "closed_at" : "2021-05-03T17:56:40Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 6,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21826/comments",
   "created_at" : "2021-05-01T21:00:49Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21826/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/21826",
   "id" : 873767886,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      },
      {
         "color" : "02d7e1",
         "default" : false,
         "description" : null,
         "id" : 148216,
         "name" : "Docs",
         "node_id" : "MDU6TGFiZWwxNDgyMTY=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21826/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : null,
      "closed_issues" : 40,
      "created_at" : "2020-04-25T00:14:49Z",
      "creator" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      },
      "description" : "",
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/47",
      "id" : 5347322,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
      "node_id" : "MDk6TWlsZXN0b25lNTM0NzMyMg==",
      "number" : 47,
      "open_issues" : 15,
      "state" : "open",
      "title" : "22.0",
      "updated_at" : "2021-05-03T17:56:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/47"
   },
   "node_id" : "MDU6SXNzdWU4NzM3Njc4ODY=",
   "number" : 21826,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "doc: Boost minimum required (1.58) is wrong",
   "updated_at" : "2021-05-03T17:56:40Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21826",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   }
}
