[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/26929#pullrequestreview-1263473805) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-01-20T11:12:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#issuecomment-1398237495",
      "id" : 1398237495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26929",
      "node_id" : "IC_kwDOABII585TV2k3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398237495/reactions"
      },
      "updated_at" : "2023-01-20T12:05:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398237495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/26929/checks?check_run_id=10776272066\r\n```bash\r\n/usr/bin/ccache g++ -m32 -std=c++17 -DHAVE_CONFIG_H -I. -I../src/config  -fmacro-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu=. -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -DHAVE_BUILD_INFO -D_FILE_OFFSET_BITS=64 -DPROVIDE_FUZZ_MAIN_FUNCTION -I. -I./minisketch/include -I./secp256k1/include -I./univalue/include -I./leveldb/include -isystem /tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include -DBOOST_MULTI_INDEX_DISABLE_SERIALIZATION -DBOOST_NO_CXX98_FUNCTION_BASE -isystem /tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include -I/tmp/cirrus-ci-build/depends/i686-pc-linux-gnu/include/  -fdebug-prefix-map=/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-i686-pc-linux-gnu=. -fstack-reuse=none -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection   -Werror    -fno-extended-identifiers -fvisibility=hidden -fPIE -pipe -std=c++17 -O2  -c -o rpc/libbitcoin_common_a-util.o `test -f 'rpc/util.cpp' || echo './'`rpc/util.cpp\r\nrpc/util.cpp: In function âstd::optional<UniValue::VType> ExpectedType(RPCArg::Type)â:\r\nrpc/util.cpp:717:1: error: control reaches end of non-void function [-Werror=return-type]\r\n }\r\n ^\r\n```",
      "created_at" : "2023-01-20T11:22:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#issuecomment-1398247408",
      "id" : 1398247408,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26929",
      "node_id" : "IC_kwDOABII585TV4_w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398247408/reactions"
      },
      "updated_at" : "2023-01-20T11:22:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398247408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082422648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082422648"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Feels like a `util::Result` return type would be more appropriate here?",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-20T12:04:20Z",
      "diff_hunk" : "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082422648",
      "id" : 1082422648,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585AhHV4",
      "original_commit_id" : "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "original_line" : 216,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 22,
      "pull_request_review_id" : 1263473805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082422648/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:05:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082422648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082429724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082429724"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure. This would be `util::Result<void, UniValue>`, which is not yet available. I could also use `std::optional<UniValue>`, but not sure if it is worth it.",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-20T12:09:53Z",
      "diff_hunk" : "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082429724",
      "id" : 1082429724,
      "in_reply_to_id" : 1082422648,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585AhJEc",
      "original_commit_id" : "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "original_line" : 216,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 22,
      "pull_request_review_id" : 1263480346,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082429724/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:09:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082429724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082464732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082464732"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah it would benefit from #25665 but could do it with today's implementation already as well. I didn't realize we need a `UniValue` object (instead of just the string) in `HandleRequest`, though, so that makes this a bit more verbose than I hoped. Just found it a bit confusing to have a `UniValue` act as a variant, but that's probably personal preference.\r\n\r\nNo strong view either way, just thinking out loud. Feel free to close.\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 5f44b82aa..30528bd09 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -11,6 +11,7 @@\r\n #include <script/signingprovider.h>\r\n #include <tinyformat.h>\r\n #include <util/check.h>\r\n+#include <util/result.h>\r\n #include <util/strencodings.h>\r\n #include <util/string.h>\r\n #include <util/system.h>\r\n@@ -559,9 +560,9 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\r\n     UniValue arg_mismatch{UniValue::VOBJ};\r\n     for (size_t i{0}; i < m_args.size(); ++i) {\r\n         const auto& arg{m_args.at(i)};\r\n-        UniValue match{arg.MatchesType(request.params[i])};\r\n-        if (!match.isTrue()) {\r\n-            arg_mismatch.pushKV(strprintf(\"Position %s (%s)\", i, arg.m_names), std::move(match));\r\n+        auto match{arg.MatchesType(request.params[i])};\r\n+        if (!match) {\r\n+            arg_mismatch.pushKV(strprintf(\"Position %s (%s)\", i, arg.m_names), UniValue{UniValue::VType::VSTR, util::ErrorString(match).original});\r\n         }\r\n     }\r\n     if (!arg_mismatch.empty()) {\r\n@@ -717,7 +718,7 @@ static std::optional<UniValue::VType> ExpectedType(RPCArg::Type type)\r\n     NONFATAL_UNREACHABLE();\r\n }\r\n \r\n-UniValue RPCArg::MatchesType(const UniValue& request) const\r\n+util::Result<bool> RPCArg::MatchesType(const UniValue& request) const\r\n {\r\n     if (m_opts.skip_type_check) return true;\r\n     if (IsOptional() && request.isNull()) return true;\r\n@@ -725,7 +726,7 @@ UniValue RPCArg::MatchesType(const UniValue& request) const\r\n     if (!exp_type) return true; // nothing to check\r\n \r\n     if (*exp_type != request.getType()) {\r\n-        return strprintf(\"JSON value of type %s is not of expected type %s\", uvTypeName(request.getType()), uvTypeName(*exp_type));\r\n+        return util::Error{Untranslated(strprintf(\"JSON value of type %s is not of expected type %s\", uvTypeName(request.getType()), uvTypeName(*exp_type)))};\r\n     }\r\n     return true;\r\n }\r\ndiff --git a/src/rpc/util.h b/src/rpc/util.h\r\nindex 0d60e29fa..c374ee528 100644\r\n--- a/src/rpc/util.h\r\n+++ b/src/rpc/util.h\r\n@@ -16,6 +16,7 @@\r\n #include <script/standard.h>\r\n #include <univalue.h>\r\n #include <util/check.h>\r\n+#include <util/result.h>\r\n \r\n #include <string>\r\n #include <variant>\r\n@@ -213,7 +214,7 @@ struct RPCArg {\r\n      * Check whether the request JSON type matches.\r\n      * Returns true if type matches, or object describing error(s) if not.\r\n      */\r\n-    UniValue MatchesType(const UniValue& request) const;\r\n+    util::Result<bool> MatchesType(const UniValue& request) const;\r\n \r\n     /** Return the first of all aliases */\r\n     std::string GetFirstName() const;\r\n```\r\n</details>",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-20T12:34:42Z",
      "diff_hunk" : "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082464732",
      "id" : 1082464732,
      "in_reply_to_id" : 1082422648,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585AhRnc",
      "original_commit_id" : "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "original_line" : 216,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 22,
      "pull_request_review_id" : 1263511143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082464732/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:35:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082464732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082467981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082467981"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Although I think with https://github.com/bitcoin/bitcoin/pull/25665 merged I'd definitely prefer having the `util::Result<void, UniValue>` return type, just for readability.",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-20T12:37:04Z",
      "diff_hunk" : "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082467981",
      "id" : 1082467981,
      "in_reply_to_id" : 1082422648,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585AhSaN",
      "original_commit_id" : "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "original_line" : 216,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 22,
      "pull_request_review_id" : 1263514036,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082467981/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:37:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082467981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082478974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082478974"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Your diff doesn't work, because the return type is `util::Result<bool>`, but the function needs to return an `UniValue` object somehow. (To make the calling code less verbose and because it is needed for follow up 2/2)",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-20T12:44:56Z",
      "diff_hunk" : "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082478974",
      "id" : 1082478974,
      "in_reply_to_id" : 1082422648,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585AhVF-",
      "original_commit_id" : "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "original_line" : 216,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 22,
      "pull_request_review_id" : 1263523374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082478974/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:44:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082478974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082577837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082577837"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think my diff does work? I'm not sure what the follow up and its requirements are, but the diff compiles, and seems to work fine e.g. for this call. But I agree that making the calling code more verbose is not ideal, so probably best to drop this approach.\r\n\r\n<details>\r\n<summary>./src/bitcoin-cli -signet getmempoolancestors tx 5</summary>\r\n\r\n```\r\nerror code: -3\r\nerror message:\r\nWrong type passed:\r\n{\r\n    \"Position 1 (verbose)\": \"JSON value of type number is not of expected type bool\"\r\n}\r\n```\r\n</details>\r\n\r\n\r\nI don't mean to bikeshed, but here's another approach without `util::Result` that may be more appropriate by returning `std::pair<bool, UniValue>`. Still slightly more verbose than currently, but could be worth it if compatible with 2/2? I'll give up after this :-D\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 5f44b82aa..e0c6aec67 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -559,9 +559,9 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\r\n     UniValue arg_mismatch{UniValue::VOBJ};\r\n     for (size_t i{0}; i < m_args.size(); ++i) {\r\n         const auto& arg{m_args.at(i)};\r\n-        UniValue match{arg.MatchesType(request.params[i])};\r\n-        if (!match.isTrue()) {\r\n-            arg_mismatch.pushKV(strprintf(\"Position %s (%s)\", i, arg.m_names), std::move(match));\r\n+        auto [match, error] = arg.MatchesType(request.params[i]);\r\n+        if (!match) {\r\n+            arg_mismatch.pushKV(strprintf(\"Position %s (%s)\", i, arg.m_names), std::move(error.value()));\r\n         }\r\n     }\r\n     if (!arg_mismatch.empty()) {\r\n@@ -717,17 +717,17 @@ static std::optional<UniValue::VType> ExpectedType(RPCArg::Type type)\r\n     NONFATAL_UNREACHABLE();\r\n }\r\n \r\n-UniValue RPCArg::MatchesType(const UniValue& request) const\r\n+std::pair<bool, std::optional<UniValue>> RPCArg::MatchesType(const UniValue& request) const\r\n {\r\n-    if (m_opts.skip_type_check) return true;\r\n-    if (IsOptional() && request.isNull()) return true;\r\n+    if (m_opts.skip_type_check) return {true, std::nullopt};\r\n+    if (IsOptional() && request.isNull()) return {true, std::nullopt};\r\n     const auto exp_type{ExpectedType(m_type)};\r\n-    if (!exp_type) return true; // nothing to check\r\n+    if (!exp_type) return {true, std::nullopt}; // nothing to check\r\n \r\n     if (*exp_type != request.getType()) {\r\n-        return strprintf(\"JSON value of type %s is not of expected type %s\", uvTypeName(request.getType()), uvTypeName(*exp_type));\r\n+        return {false, strprintf(\"JSON value of type %s is not of expected type %s\", uvTypeName(request.getType()), uvTypeName(*exp_type))};\r\n     }\r\n-    return true;\r\n+    return {true, std::nullopt};\r\n }\r\n \r\n std::string RPCArg::GetFirstName() const\r\ndiff --git a/src/rpc/util.h b/src/rpc/util.h\r\nindex 0d60e29fa..2d5f882fe 100644\r\n--- a/src/rpc/util.h\r\n+++ b/src/rpc/util.h\r\n@@ -213,7 +213,7 @@ struct RPCArg {\r\n      * Check whether the request JSON type matches.\r\n      * Returns true if type matches, or object describing error(s) if not.\r\n      */\r\n-    UniValue MatchesType(const UniValue& request) const;\r\n+    std::pair<bool, std::optional<UniValue>> MatchesType(const UniValue& request) const;\r\n \r\n     /** Return the first of all aliases */\r\n     std::string GetFirstName() const;\r\n```\r\n</details>",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-20T14:03:52Z",
      "diff_hunk" : "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082577837",
      "id" : 1082577837,
      "in_reply_to_id" : 1082422648,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585AhtOt",
      "original_commit_id" : "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "original_line" : 216,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 22,
      "pull_request_review_id" : 1263645976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082577837/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T14:04:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082577837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082590785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082590785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The return value in 2/2 needs to be of a type that can hold the nested types of a JSON argument, so UniValue seems a good fit.\r\n\r\n> std::pair<bool, UniValue>\r\n\r\nyes, that works, but seems worse than just `std::optional<UniValue>`.",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-20T14:13:13Z",
      "diff_hunk" : "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082590785",
      "id" : 1082590785,
      "in_reply_to_id" : 1082422648,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585AhwZB",
      "original_commit_id" : "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "original_line" : 216,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 22,
      "pull_request_review_id" : 1263660075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082590785/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T14:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082590785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082608076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082608076"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> but seems worse than just std::optional<UniValue>\r\n\r\nFrom a code brevity perspective, yes, but from a readability perspective I don't think so, because then boolean evaluation of `MatchesType` is the negation of what the name implies.",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-20T14:25:08Z",
      "diff_hunk" : "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082608076",
      "id" : 1082608076,
      "in_reply_to_id" : 1082422648,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585Ah0nM",
      "original_commit_id" : "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "original_line" : 216,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 22,
      "pull_request_review_id" : 1263688189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082608076/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T14:25:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082608076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082640658"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082640658"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, but then I'd prefer `UniValue` over `std::pair<bool, UniValue>`",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-20T14:45:48Z",
      "diff_hunk" : "@@ -214,8 +209,11 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n-    /** Check whether the request JSON type matches. */\n-    void MatchesType(const UniValue& request) const;\n+    /**\n+     * Check whether the request JSON type matches.\n+     * Returns true if type matches, or object describing error(s) if not.\n+     */\n+    UniValue MatchesType(const UniValue& request) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1082640658",
      "id" : 1082640658,
      "in_reply_to_id" : 1082422648,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585Ah8kS",
      "original_commit_id" : "fa7562ea7c4b4b1c76f9752f1dd6c4927aea9e6a",
      "original_line" : 216,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/rpc/util.h",
      "position" : 22,
      "pull_request_review_id" : 1263736159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082640658/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T14:45:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082640658",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086659972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086659972"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think this is an appropriate place for this test?\r\n\r\nE.g. renaming `rpc_named_arguments.py` -> `rpc_arguments.py` and adding it there seems more logical to me.",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-25T13:46:09Z",
      "diff_hunk" : "@@ -429,6 +430,17 @@ def _test_getdifficulty(self):\n     def _test_getnetworkhashps(self):\n         self.log.info(\"Test getnetworkhashps\")\n         hashes_per_second = self.nodes[0].getnetworkhashps()\n+        assert_raises_rpc_error(\n+            -3,\n+            textwrap.dedent(\"\"\"\n+            Wrong type passed:\n+            {\n+                \"Position 1 (nblocks)\": \"JSON value of type string is not of expected type number\",\n+                \"Position 2 (height)\": \"JSON value of type array is not of expected type number\"\n+            }\n+            \"\"\").strip(),\n+            lambda: self.nodes[0].getnetworkhashps(\"a\", []),\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086659972",
      "id" : 1086659972,
      "line" : 443,
      "node_id" : "PRRC_kwDOABII585AxR2E",
      "original_commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_line" : 443,
      "original_position" : 22,
      "original_start_line" : 433,
      "path" : "test/functional/rpc_blockchain.py",
      "position" : 22,
      "pull_request_review_id" : 1269382574,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086659972/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 433,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-25T13:52:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086659972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086681113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086681113"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not? Every other RPC that has missing-arg or wrong-type checks is also called in the rpc-specific test file?\r\n\r\nExamples:\r\n\r\n```\r\ngit grep 'is not of expected type' test\r\n```\r\n\r\nFor example in this file:\r\n\r\n```\r\ntest/functional/rpc_blockchain.py:        assert_raises_rpc_error(-3, \"JSON value of type string is not of expected type number\", self.nodes[0].getchaintxstats, '')\r\ntest/functional/rpc_blockchain.py:        assert_raises_rpc_error(-3, \"JSON value of type number is not of expected type string\", self.nodes[0].getchaintxstats, blockhash=0)\r\ntest/functional/rpc_blockchain.py:        assert_raises_rpc_error(-3, \"JSON value of type string is not of expected type number\", node.getblock, blockhash, \"2\")\r\n\r\n",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-25T14:04:31Z",
      "diff_hunk" : "@@ -429,6 +430,17 @@ def _test_getdifficulty(self):\n     def _test_getnetworkhashps(self):\n         self.log.info(\"Test getnetworkhashps\")\n         hashes_per_second = self.nodes[0].getnetworkhashps()\n+        assert_raises_rpc_error(\n+            -3,\n+            textwrap.dedent(\"\"\"\n+            Wrong type passed:\n+            {\n+                \"Position 1 (nblocks)\": \"JSON value of type string is not of expected type number\",\n+                \"Position 2 (height)\": \"JSON value of type array is not of expected type number\"\n+            }\n+            \"\"\").strip(),\n+            lambda: self.nodes[0].getnetworkhashps(\"a\", []),\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086681113",
      "id" : 1086681113,
      "in_reply_to_id" : 1086659972,
      "line" : 443,
      "node_id" : "PRRC_kwDOABII585AxXAZ",
      "original_commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_line" : 443,
      "original_position" : 22,
      "original_start_line" : 433,
      "path" : "test/functional/rpc_blockchain.py",
      "position" : 22,
      "pull_request_review_id" : 1269414816,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086681113/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 433,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-25T14:04:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086681113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086695163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086695163"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh yes, I'm not arguing against checking for an RPC's specific argument types within the RPC-specific test file in general, that can help with regressions etc.\r\n\r\nSince this PR is about type checking in general (and not about `getnetworkhashps`), I think it'd be good to have a test that checks the correct error message is raised - and that should be a test dedicated to just that? If for some unrelated reason in the future `_test_getnetworkhashps()` gets deleted because the method is deprecated, we'd unintentionally remove test coverage on this PR too.",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-25T14:16:33Z",
      "diff_hunk" : "@@ -429,6 +430,17 @@ def _test_getdifficulty(self):\n     def _test_getnetworkhashps(self):\n         self.log.info(\"Test getnetworkhashps\")\n         hashes_per_second = self.nodes[0].getnetworkhashps()\n+        assert_raises_rpc_error(\n+            -3,\n+            textwrap.dedent(\"\"\"\n+            Wrong type passed:\n+            {\n+                \"Position 1 (nblocks)\": \"JSON value of type string is not of expected type number\",\n+                \"Position 2 (height)\": \"JSON value of type array is not of expected type number\"\n+            }\n+            \"\"\").strip(),\n+            lambda: self.nodes[0].getnetworkhashps(\"a\", []),\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086695163",
      "id" : 1086695163,
      "in_reply_to_id" : 1086659972,
      "line" : 443,
      "node_id" : "PRRC_kwDOABII585Axab7",
      "original_commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_line" : 443,
      "original_position" : 22,
      "original_start_line" : 433,
      "path" : "test/functional/rpc_blockchain.py",
      "position" : 22,
      "pull_request_review_id" : 1269436527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086695163/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 433,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-25T14:27:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086695163",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086706371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086706371"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, will add more tests in the follow-up",
      "commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "created_at" : "2023-01-25T14:25:25Z",
      "diff_hunk" : "@@ -429,6 +430,17 @@ def _test_getdifficulty(self):\n     def _test_getnetworkhashps(self):\n         self.log.info(\"Test getnetworkhashps\")\n         hashes_per_second = self.nodes[0].getnetworkhashps()\n+        assert_raises_rpc_error(\n+            -3,\n+            textwrap.dedent(\"\"\"\n+            Wrong type passed:\n+            {\n+                \"Position 1 (nblocks)\": \"JSON value of type string is not of expected type number\",\n+                \"Position 2 (height)\": \"JSON value of type array is not of expected type number\"\n+            }\n+            \"\"\").strip(),\n+            lambda: self.nodes[0].getnetworkhashps(\"a\", []),\n+        )",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26929#discussion_r1086706371",
      "id" : 1086706371,
      "in_reply_to_id" : 1086659972,
      "line" : 443,
      "node_id" : "PRRC_kwDOABII585AxdLD",
      "original_commit_id" : "fafeddfe0e6748e9769ad3dd526a6c0eaf6f4aac",
      "original_line" : 443,
      "original_position" : 22,
      "original_start_line" : 433,
      "path" : "test/functional/rpc_blockchain.py",
      "position" : 22,
      "pull_request_review_id" : 1269453485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086706371/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 433,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-25T14:25:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086706371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
