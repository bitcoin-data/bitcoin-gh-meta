{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "New warnings currently emitted by the shortly-to-be-released GCC 13.\r\nThis is building master (eebc24bfc6d2d809952e27c7fe269452f319455f), using GCC `gcc (GCC) 13.0.0 20230115 (Red Hat 13.0.0-0)`:\r\n```bash\r\nexternal_signer.cpp: In static member function âstatic bool ExternalSigner::Enumerate(const std::string&, std::vector<ExternalSigner>&, std::string)â:\r\nexternal_signer.cpp:33:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   33 |         const UniValue& error = find_value(signer, \"error\");\r\n      |                         ^~~~~\r\nexternal_signer.cpp:33:43: note: the temporary was destroyed at the end of the full expression âfind_value((* & signer), std::__cxx11::basic_string<char>(((const char*)\"error\"), std::allocator<char>()))â\r\n   33 |         const UniValue& error = find_value(signer, \"error\");\r\n      |                                 ~~~~~~~~~~^~~~~~~~~~~~~~~~~\r\nexternal_signer.cpp:41:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   41 |         const UniValue& fingerprint = find_value(signer, \"fingerprint\");\r\n      |                         ^~~~~~~~~~~\r\nexternal_signer.cpp:41:49: note: the temporary was destroyed at the end of the full expression âfind_value((* & signer), std::__cxx11::basic_string<char>(((const char*)\"fingerprint\"), std::allocator<char>()))â\r\n   41 |         const UniValue& fingerprint = find_value(signer, \"fingerprint\");\r\n      |                                       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~\r\nexternal_signer.cpp:53:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   53 |         const UniValue& model_field = find_value(signer, \"model\");\r\n      |                         ^~~~~~~~~~~\r\nexternal_signer.cpp:53:49: note: the temporary was destroyed at the end of the full expression âfind_value((* & signer), std::__cxx11::basic_string<char>(((const char*)\"model\"), std::allocator<char>()))â\r\n   53 |         const UniValue& model_field = find_value(signer, \"model\");\r\n      |                                       ~~~~~~~~~~^~~~~~~~~~~~~~~~~\r\n```\r\n\r\n```bash\r\nrpc/rawtransaction_util.cpp: In function âCMutableTransaction ConstructTransaction(const UniValue&, const UniValue&, const UniValue&, std::optional<bool>)â:\r\nrpc/rawtransaction_util.cpp:55:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   55 |         const UniValue& vout_v = find_value(o, \"vout\");\r\n      |                         ^~~~~~\r\nrpc/rawtransaction_util.cpp:55:44: note: the temporary was destroyed at the end of the full expression âfind_value((* & o), std::__cxx11::basic_string<char>(((const char*)\"vout\"), std::allocator<char>()))â\r\n   55 |         const UniValue& vout_v = find_value(o, \"vout\");\r\n      |                                  ~~~~~~~~~~^~~~~~~~~~~\r\nrpc/rawtransaction_util.cpp:73:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   73 |         const UniValue& sequenceObj = find_value(o, \"sequence\");\r\n      |                         ^~~~~~~~~~~\r\nrpc/rawtransaction_util.cpp:73:49: note: the temporary was destroyed at the end of the full expression âfind_value((* & o), std::__cxx11::basic_string<char>(((const char*)\"sequence\"), std::allocator<char>()))â\r\n   73 |         const UniValue& sequenceObj = find_value(o, \"sequence\");\r\n      |                                       ~~~~~~~~~~^~~~~~~~~~~~~~~\r\n```\r\n\r\n```bash\r\nbitcoin-cli.cpp: In function âUniValue ConnectAndCallRPC(BaseRequestHandler*, const std::string&, const std::vector<std::__cxx11::basic_string<char> >&, const std::optional<std::__cxx11::basic_string<char> >&)â:\r\nbitcoin-cli.cpp:853:33: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n  853 |                 const UniValue& error = find_value(response, \"error\");\r\n      |                                 ^~~~~\r\nbitcoin-cli.cpp:853:51: note: the temporary was destroyed at the end of the full expression âfind_value(response, std::__cxx11::basic_string<char>(((const char*)\"error\"), std::allocator<char>()))â\r\n  853 |                 const UniValue& error = find_value(response, \"error\");\r\n      |                                         ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~\r\nbitcoin-cli.cpp: In function âvoid ParseError(const UniValue&, std::string&, int&)â:\r\nbitcoin-cli.cpp:881:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n  881 |         const UniValue& err_code = find_value(error, \"code\");\r\n      |                         ^~~~~~~~\r\nbitcoin-cli.cpp:881:46: note: the temporary was destroyed at the end of the full expression âfind_value((* & error), std::__cxx11::basic_string<char>(((const char*)\"code\"), std::allocator<char>()))â\r\n  881 |         const UniValue& err_code = find_value(error, \"code\");\r\n      |                                    ~~~~~~~~~~^~~~~~~~~~~~~~~\r\nbitcoin-cli.cpp:882:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n  882 |         const UniValue& err_msg = find_value(error, \"message\");\r\n      |                         ^~~~~~~\r\nbitcoin-cli.cpp:882:45: note: the temporary was destroyed at the end of the full expression âfind_value((* & error), std::__cxx11::basic_string<char>(((const char*)\"message\"), std::allocator<char>()))â\r\n  882 |         const UniValue& err_msg = find_value(error, \"message\");\r\n      |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~\r\nbitcoin-cli.cpp: In function âvoid GetWalletBalances(UniValue&)â:\r\nbitcoin-cli.cpp:909:21: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n  909 |     const UniValue& wallets = find_value(listwallets, \"result\");\r\n      |                     ^~~~~~~\r\nbitcoin-cli.cpp:909:41: note: the temporary was destroyed at the end of the full expression âfind_value(listwallets, std::__cxx11::basic_string<char>(((const char*)\"result\"), std::allocator<char>()))â\r\n  909 |     const UniValue& wallets = find_value(listwallets, \"result\");\r\n      |                               ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~\r\nbitcoin-cli.cpp:916:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n  916 |         const UniValue& balance = find_value(getbalances, \"result\")[\"mine\"][\"trusted\"];\r\n      |                         ^~~~~~~\r\nbitcoin-cli.cpp:916:86: note: the temporary was destroyed at the end of the full expression â(&(& find_value(getbalances, std::__cxx11::basic_string<char>(((const char*)\"result\"), std::allocator<char>())))->UniValue::operator[](std::__cxx11::basic_string<char>(((const char*)\"mine\"), std::allocator<char>())))->UniValue::operator[](std::__cxx11::basic_string<char>(((const char*)\"trusted\"), std::allocator<char>()))â\r\n  916 |         const UniValue& balance = find_value(getbalances, \"result\")[\"mine\"][\"trusted\"];\r\n      |                                                                                      ^\r\nbitcoin-cli.cpp: In function âint CommandLineRPC(int, char**)â:\r\nbitcoin-cli.cpp:1163:29: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n 1163 |             const UniValue& error{find_value(getnewaddress, \"error\")};\r\n      |                             ^~~~~\r\nbitcoin-cli.cpp:1163:45: note: the temporary was destroyed at the end of the full expression âfind_value(getnewaddress, std::__cxx11::basic_string<char>(((const char*)\"error\"), std::allocator<char>()))â\r\n 1163 |             const UniValue& error{find_value(getnewaddress, \"error\")};\r\n      |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\nbitcoin-cli.cpp:1188:29: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n 1188 |             const UniValue& error = find_value(reply, \"error\");\r\n      |                             ^~~~~\r\nbitcoin-cli.cpp:1188:47: note: the temporary was destroyed at the end of the full expression âfind_value(reply, std::__cxx11::basic_string<char>(((const char*)\"error\"), std::allocator<char>()))â\r\n 1188 |             const UniValue& error = find_value(reply, \"error\");\r\n      |                                     ~~~~~~~~~~^~~~~~~~~~~~~~~~\r\n```\r\n\r\n```bash\r\nrpc/mining.cpp: In lambda function:\r\nrpc/mining.cpp:606:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n  606 |         const UniValue& modeval = find_value(oparam, \"mode\");\r\n      |                         ^~~~~~~\r\nrpc/mining.cpp:606:45: note: the temporary was destroyed at the end of the full expression âfind_value((* & oparam), std::__cxx11::basic_string<char>(((const char*)\"mode\"), std::allocator<char>()))â\r\n  606 |         const UniValue& modeval = find_value(oparam, \"mode\");\r\n      |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~\r\nrpc/mining.cpp:619:29: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n  619 |             const UniValue& dataval = find_value(oparam, \"data\");\r\n      |                             ^~~~~~~\r\nrpc/mining.cpp:619:49: note: the temporary was destroyed at the end of the full expression âfind_value((* & oparam), std::__cxx11::basic_string<char>(((const char*)\"data\"), std::allocator<char>()))â\r\n  619 |             const UniValue& dataval = find_value(oparam, \"data\");\r\n      |                                       ~~~~~~~~~~^~~~~~~~~~~~~~~~\r\nrpc/mining.cpp:646:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n  646 |         const UniValue& aClientRules = find_value(oparam, \"rules\");\r\n      |                         ^~~~~~~~~~~~\r\nrpc/mining.cpp:646:50: note: the temporary was destroyed at the end of the full expression âfind_value((* & oparam), std::__cxx11::basic_string<char>(((const char*)\"rules\"), std::allocator<char>()))â\r\n  646 |         const UniValue& aClientRules = find_value(oparam, \"rules\");\r\n      |                                        ~~~~~~~~~~^~~~~~~~~~~~~~~~~\r\n```\r\n\r\n```bash\r\ntest/interfaces_tests.cpp: In member function âvoid interfaces_tests::findCommonAncestor::test_method()â:\r\ntest/interfaces_tests.cpp:101:19: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n  101 |     const CChain& active = WITH_LOCK(Assert(m_node.chainman)->GetMutex(), return Assert(m_node.chainman)->ActiveChain());\r\n      |                   ^~~~~~\r\nIn file included from ./util/system.h:21,\r\n                 from ./test/util/setup_common.h:19,\r\n                 from test/interfaces_tests.cpp:9:\r\n./sync.h:302:96: note: the temporary was destroyed at the end of the full expression â<lambda closure object>interfaces_tests::findCommonAncestor::test_method()::<lambda()>{((interfaces_tests::findCommonAncestor*)this)}.interfaces_tests::findCommonAncestor::test_method()::<lambda()>()â\r\n  302 | #define WITH_LOCK(cs, code) (MaybeCheckNotHeld(cs), [&]() -> decltype(auto) { LOCK(cs); code; }())\r\n      |                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\r\ntest/interfaces_tests.cpp:101:28: note: in expansion of macro âWITH_LOCKâ\r\n  101 |     const CChain& active = WITH_LOCK(Assert(m_node.chainman)->GetMutex(), return Assert(m_node.chainman)->ActiveChain());\r\n      |                            ^~~~~~~~~\r\n```\r\n\r\n```bash\r\ntest/system_tests.cpp: In member function âvoid system_tests::run_command::test_method()â:\r\ntest/system_tests.cpp:48:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   48 |         const UniValue& success = find_value(result, \"success\");\r\n      |                         ^~~~~~~\r\ntest/system_tests.cpp:48:45: note: the temporary was destroyed at the end of the full expression âfind_value(result, std::__cxx11::basic_string<char>(((const char*)\"success\"), std::allocator<char>()))â\r\n   48 |         const UniValue& success = find_value(result, \"success\");\r\n      |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~\r\ntest/system_tests.cpp:96:25: warning: possibly dangling reference to a temporary [-Wdangling-reference]\r\n   96 |         const UniValue& success = find_value(result, \"success\");\r\n      |                         ^~~~~~~\r\ntest/system_tests.cpp:96:45: note: the temporary was destroyed at the end of the full expression âfind_value(result, std::__cxx11::basic_string<char>(((const char*)\"success\"), std::allocator<char>()))â\r\n   96 |         const UniValue& success = find_value(result, \"success\");\r\n      |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~\r\n```",
   "closed_at" : "2023-01-24T11:16:58Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26926/comments",
   "created_at" : "2023-01-20T10:17:54Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26926/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/26926",
   "id" : 1550607914,
   "labels" : [
      {
         "color" : "bfd4f2",
         "default" : false,
         "description" : null,
         "id" : 159815356,
         "name" : "Upstream",
         "node_id" : "MDU6TGFiZWwxNTk4MTUzNTY=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream"
      },
      {
         "color" : "006688",
         "default" : false,
         "description" : null,
         "id" : 477890092,
         "name" : "Questions and Help",
         "node_id" : "MDU6TGFiZWw0Nzc4OTAwOTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Questions%20and%20Help"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26926/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585cbGYq",
   "number" : 26926,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26926/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26926/timeline",
   "title" : "GCC 13: `-Wdangling-reference` output",
   "updated_at" : "2023-01-24T11:16:58Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26926",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
