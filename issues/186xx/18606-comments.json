[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407226776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407226776"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why?\r\n\r\nI'd argue the file should stay in the old directory. All the functional test needs is read-access to the file. You can get the file path in the test with:\r\n\r\n```py\r\nos.path.join(config[\"environment\"][\"SRCDIR\"], 'contrib', ...",
      "commit_id" : "a08159006fc81b2e78ea5ab552c723f0123466d7",
      "created_at" : "2020-04-12T17:13:29Z",
      "diff_hunk" : "@@ -1,141 +0,0 @@\n-# bash programmable completion for bitcoin-cli(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407226776",
      "id" : 407226776,
      "line" : 1,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIyNjc3Ng==",
      "original_commit_id" : "b9ee5478b4045ec97f8a8c64e9b559091ff2a75a",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "contrib/bitcoin-cli.bash-completion",
      "position" : 1,
      "pull_request_review_id" : 391877669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-14T12:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407226776",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407229833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407229833"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I was missing the `config[\"environment\"]` variable. Branch updated.",
      "commit_id" : "a08159006fc81b2e78ea5ab552c723f0123466d7",
      "created_at" : "2020-04-12T17:39:06Z",
      "diff_hunk" : "@@ -1,141 +0,0 @@\n-# bash programmable completion for bitcoin-cli(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407229833",
      "id" : 407229833,
      "in_reply_to_id" : 407226776,
      "line" : 1,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIyOTgzMw==",
      "original_commit_id" : "b9ee5478b4045ec97f8a8c64e9b559091ff2a75a",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "contrib/bitcoin-cli.bash-completion",
      "position" : 1,
      "pull_request_review_id" : 391879883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-14T12:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407229833",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems that even when using `SRCDIR` CI builds fail:  https://travis-ci.org/github/pierreN/bitcoin/jobs/674154306#L3417\r\n\r\nA decent way to fix this would be to add the bash auto-completion file to `Makefile.am`'s `EXTRA_DIST`. I updated the PR to reflect that.\r\n\r\nIf you think this is too intrusive, another more hackish way would be to just look for the file in the parent directories (https://github.com/pierreN/bitcoin/blob/feature-auto-cli-2/test/functional/tool_cli_completion.py#L260)?",
      "created_at" : "2020-04-12T21:19:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-612677390",
      "id" : 612677390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjY3NzM5MA==",
      "updated_at" : "2020-04-12T21:25:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612677390",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407261553"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407261553"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        res = self.nodes[0].format(command=option.command, output=args_cli)\r\n```\r\n\r\nInstead of using regex to parse the pseudo doc-json, a hidden RPC could be added that spits out the format you want.\r\n\r\nI think all you need to do is register a formatter in RPCMan::Check",
      "commit_id" : "a08159006fc81b2e78ea5ab552c723f0123466d7",
      "created_at" : "2020-04-12T22:43:48Z",
      "diff_hunk" : "@@ -0,0 +1,290 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the bitcoin-cli bash autocompletion file.\n+\n+This checks that the bitcoin-cli bash autocompletion file in the\n+contrib/ folder match the RPC calls available.\n+\"\"\"\n+\n+from os import path\n+from re import compile, MULTILINE, DOTALL\n+from collections import defaultdict\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+# bash cli completion file header\n+COMPLETION_HEADER = \"\"\"# Dynamic bash programmable completion for bitcoin-cli(1)\n+#     DO NOT EDIT THIS FILE BY HAND -- THIS WILL FAIL THE FUNCTIONAL TEST tool_cli_completion\n+# This file is auto-generated by the functional test tool_cli_completion.\n+# If you want to modify this file, modify test/functional/tool_cli_completion.py and re-autogenerate\n+# this file via the --overwrite test flag.\n+\n+\"\"\"\n+\n+# option types which are limited to certain values\n+TYPED_OPTIONS = [\n+        [\"estimate_mode\", {\"UNSET\", \"ECONOMICAL\", \"CONSERVATIVE\"}],\n+        [\"sighashtype\", {\"ALL\", \"NONE\", \"SINGLE\", \"ALL|ANYONECANPAY\",\n+                         \"NONE|ANYONECANPAY\", \"SINGLE|ANYONECANPAY\"}]\n+]\n+\n+# regexp to extract arguments from the help of a single command\n+ARG_REGEXP = compile(r'.*Arguments\\s*:\\s*\\n*(.*)\\n*\\s*Result', MULTILINE | DOTALL)\n+\n+\n+class PossibleArgs():\n+    \"\"\" Helper class to store options associated to a command. \"\"\"\n+    def __init__(self, command):\n+        self.command = command\n+        self.arguments = {}\n+\n+    def set_args(self, position, values):\n+        \"\"\" Set the position-th positional argument as having values as possible values. \"\"\"\n+        if position in self.arguments:\n+            raise AssertionError((\"{} positional parameter already \"\n+                                 \"defined for command {}\").format(position, self.command))\n+\n+        self.arguments[position] = values\n+        return self\n+\n+    def set_bool_args(self, position):\n+        return self.set_args(position, {\"true\", \"false\"})\n+\n+    def set_file_args(self, position):\n+        # We consider an empty string as a file value for the sake of simplicity (don't\n+        # have to create an extra level of indirection).\n+        return self.set_args(position, {\"\"})\n+\n+    def set_unknwon_args(self, position):\n+        return self.set_args(position, {})\n+\n+    def has_option(self, position):\n+        return position in self.arguments and len(self.arguments[position]) > 0\n+\n+    def get_num_args(self):\n+        \"\"\" Return the max number of positional argument the option accepts. \"\"\"\n+        pos = list(self.arguments.keys())\n+        if len(pos) == 0:\n+            return 0\n+\n+        return max(pos)\n+\n+    def generate_autocomplete(self, pos):\n+        \"\"\" Generate the autocomplete file line relevent to the given position pos. \"\"\"\n+        if len(self.arguments[pos]) == 0:\n+            raise AssertionError(\"generating undefined arg id {} ({})\".format(pos, self.arguments))\n+\n+        # handle special file case\n+        if len(self.arguments[pos]) == 1 and len(next(iter(self.arguments[pos]))) == 0:\n+            return \"_filedir\"\n+\n+        # a set order is undefined, so we order args alphabetically\n+        args = list(self.arguments[pos])\n+        args.sort()\n+\n+        return \"COMPREPLY=( $( compgen -W \\\"\" + ' '.join(args) + \"\\\" -- \\\"$cur\\\" ) )\"\n+\n+\n+# commands where the option type can only be difficultly derived from the help message\n+SPECIAL_OPTIONS = [\n+        PossibleArgs(\"addnode\").set_args(2, {\"add\", \"remove\", \"onetry\"}),\n+        PossibleArgs(\"setban\").set_args(2, {\"add\", \"remove\"}),\n+]\n+\n+\n+def generate_start_complete(cword):\n+    \"\"\" Generate the start of an autocomplete block (beware of indentation). \"\"\"\n+    if cword > 1:\n+        return \"\"\"    if ((cword > {0})); then\n+        case ${{words[cword-{0}]}} in\"\"\".format(cword)\n+\n+    return \"    case \\\"$prev\\\" in\"\n+\n+\n+def generate_end_complete(cword):\n+    \"\"\" Generate the end of an autocomplete block. \"\"\"\n+    if cword > 1:\n+        return \"\\n{}esac\\n{}fi\\n\\n\".format(' '*8, ' '*4)\n+\n+    return \"\\n{}esac\\n\".format(' '*4)\n+\n+\n+class CliCompletionTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_cli()\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bitcoind_zmq()  # zmq doesn't add commands to complete for now, but it might\n+\n+    def add_options(self, parser):\n+        parser.add_argument(\n+            '--header',\n+            help='Static header part of the bitcoin-cli bash completion file',\n+        )\n+\n+        parser.add_argument(\n+            '--footer',\n+            help='Static footer part of the bitcoin-cli bash completion file',\n+        )\n+\n+        parser.add_argument(\n+            '--completion',\n+            help='Location of the current bash completion file',\n+        )\n+\n+        parser.add_argument(\n+            '--overwrite',\n+            default=False,\n+            action='store_true',\n+            help='Force the test to pass by overwriting the file pointed by --completion '\n+                 'to a newly generated autocompletion file',\n+        )\n+\n+    def parse_single_helper(self, option):\n+        \"\"\" Complete the arguments of option via the RPC help command. \"\"\"\n+\n+        # if we can't find an argument list in the help text, then it has no option to add\n+        regexp_res = ARG_REGEXP.match(self.nodes[0].help(option.command))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407261553",
      "id" : 407261553,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI2MTU1Mw==",
      "original_commit_id" : "4576b77818156ebbcc9f6dbde5f3412ac6a3d1df",
      "original_line" : 153,
      "original_position" : 153,
      "original_start_line" : null,
      "path" : "test/functional/tool_cli_completion.py",
      "position" : null,
      "pull_request_review_id" : 391901212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-14T12:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407261553",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407261681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407261681"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks good this way, if it makes out-of-tree builds happy. :+1: ",
      "commit_id" : "a08159006fc81b2e78ea5ab552c723f0123466d7",
      "created_at" : "2020-04-12T22:44:57Z",
      "diff_hunk" : "@@ -45,7 +45,8 @@ OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n DIST_CONTRIB = \\\n \t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n-\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n+\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py \\\n+\t       $(top_srcdir)/contrib/bitcoin-cli.bash-completion",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407261681",
      "id" : 407261681,
      "line" : 49,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI2MTY4MQ==",
      "original_commit_id" : "4576b77818156ebbcc9f6dbde5f3412ac6a3d1df",
      "original_line" : 49,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "Makefile.am",
      "position" : 6,
      "pull_request_review_id" : 391901303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-14T12:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407261681",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407927056"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407927056"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, good idea. I have updated the branch to do that. Please have a look at the new code, thanks.\r\n\r\nNote that some non-hidden RPC calls didn't use RPCHelpMan::Check so I added a commit to fix that first (otherwise they wouldn't appear in the bash cli completion file).",
      "commit_id" : "a08159006fc81b2e78ea5ab552c723f0123466d7",
      "created_at" : "2020-04-14T07:37:16Z",
      "diff_hunk" : "@@ -0,0 +1,290 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the bitcoin-cli bash autocompletion file.\n+\n+This checks that the bitcoin-cli bash autocompletion file in the\n+contrib/ folder match the RPC calls available.\n+\"\"\"\n+\n+from os import path\n+from re import compile, MULTILINE, DOTALL\n+from collections import defaultdict\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+# bash cli completion file header\n+COMPLETION_HEADER = \"\"\"# Dynamic bash programmable completion for bitcoin-cli(1)\n+#     DO NOT EDIT THIS FILE BY HAND -- THIS WILL FAIL THE FUNCTIONAL TEST tool_cli_completion\n+# This file is auto-generated by the functional test tool_cli_completion.\n+# If you want to modify this file, modify test/functional/tool_cli_completion.py and re-autogenerate\n+# this file via the --overwrite test flag.\n+\n+\"\"\"\n+\n+# option types which are limited to certain values\n+TYPED_OPTIONS = [\n+        [\"estimate_mode\", {\"UNSET\", \"ECONOMICAL\", \"CONSERVATIVE\"}],\n+        [\"sighashtype\", {\"ALL\", \"NONE\", \"SINGLE\", \"ALL|ANYONECANPAY\",\n+                         \"NONE|ANYONECANPAY\", \"SINGLE|ANYONECANPAY\"}]\n+]\n+\n+# regexp to extract arguments from the help of a single command\n+ARG_REGEXP = compile(r'.*Arguments\\s*:\\s*\\n*(.*)\\n*\\s*Result', MULTILINE | DOTALL)\n+\n+\n+class PossibleArgs():\n+    \"\"\" Helper class to store options associated to a command. \"\"\"\n+    def __init__(self, command):\n+        self.command = command\n+        self.arguments = {}\n+\n+    def set_args(self, position, values):\n+        \"\"\" Set the position-th positional argument as having values as possible values. \"\"\"\n+        if position in self.arguments:\n+            raise AssertionError((\"{} positional parameter already \"\n+                                 \"defined for command {}\").format(position, self.command))\n+\n+        self.arguments[position] = values\n+        return self\n+\n+    def set_bool_args(self, position):\n+        return self.set_args(position, {\"true\", \"false\"})\n+\n+    def set_file_args(self, position):\n+        # We consider an empty string as a file value for the sake of simplicity (don't\n+        # have to create an extra level of indirection).\n+        return self.set_args(position, {\"\"})\n+\n+    def set_unknwon_args(self, position):\n+        return self.set_args(position, {})\n+\n+    def has_option(self, position):\n+        return position in self.arguments and len(self.arguments[position]) > 0\n+\n+    def get_num_args(self):\n+        \"\"\" Return the max number of positional argument the option accepts. \"\"\"\n+        pos = list(self.arguments.keys())\n+        if len(pos) == 0:\n+            return 0\n+\n+        return max(pos)\n+\n+    def generate_autocomplete(self, pos):\n+        \"\"\" Generate the autocomplete file line relevent to the given position pos. \"\"\"\n+        if len(self.arguments[pos]) == 0:\n+            raise AssertionError(\"generating undefined arg id {} ({})\".format(pos, self.arguments))\n+\n+        # handle special file case\n+        if len(self.arguments[pos]) == 1 and len(next(iter(self.arguments[pos]))) == 0:\n+            return \"_filedir\"\n+\n+        # a set order is undefined, so we order args alphabetically\n+        args = list(self.arguments[pos])\n+        args.sort()\n+\n+        return \"COMPREPLY=( $( compgen -W \\\"\" + ' '.join(args) + \"\\\" -- \\\"$cur\\\" ) )\"\n+\n+\n+# commands where the option type can only be difficultly derived from the help message\n+SPECIAL_OPTIONS = [\n+        PossibleArgs(\"addnode\").set_args(2, {\"add\", \"remove\", \"onetry\"}),\n+        PossibleArgs(\"setban\").set_args(2, {\"add\", \"remove\"}),\n+]\n+\n+\n+def generate_start_complete(cword):\n+    \"\"\" Generate the start of an autocomplete block (beware of indentation). \"\"\"\n+    if cword > 1:\n+        return \"\"\"    if ((cword > {0})); then\n+        case ${{words[cword-{0}]}} in\"\"\".format(cword)\n+\n+    return \"    case \\\"$prev\\\" in\"\n+\n+\n+def generate_end_complete(cword):\n+    \"\"\" Generate the end of an autocomplete block. \"\"\"\n+    if cword > 1:\n+        return \"\\n{}esac\\n{}fi\\n\\n\".format(' '*8, ' '*4)\n+\n+    return \"\\n{}esac\\n\".format(' '*4)\n+\n+\n+class CliCompletionTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_cli()\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bitcoind_zmq()  # zmq doesn't add commands to complete for now, but it might\n+\n+    def add_options(self, parser):\n+        parser.add_argument(\n+            '--header',\n+            help='Static header part of the bitcoin-cli bash completion file',\n+        )\n+\n+        parser.add_argument(\n+            '--footer',\n+            help='Static footer part of the bitcoin-cli bash completion file',\n+        )\n+\n+        parser.add_argument(\n+            '--completion',\n+            help='Location of the current bash completion file',\n+        )\n+\n+        parser.add_argument(\n+            '--overwrite',\n+            default=False,\n+            action='store_true',\n+            help='Force the test to pass by overwriting the file pointed by --completion '\n+                 'to a newly generated autocompletion file',\n+        )\n+\n+    def parse_single_helper(self, option):\n+        \"\"\" Complete the arguments of option via the RPC help command. \"\"\"\n+\n+        # if we can't find an argument list in the help text, then it has no option to add\n+        regexp_res = ARG_REGEXP.match(self.nodes[0].help(option.command))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r407927056",
      "id" : 407927056,
      "in_reply_to_id" : 407261553,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkyNzA1Ng==",
      "original_commit_id" : "4576b77818156ebbcc9f6dbde5f3412ac6a3d1df",
      "original_line" : 153,
      "original_position" : 153,
      "original_start_line" : null,
      "path" : "test/functional/tool_cli_completion.py",
      "position" : null,
      "pull_request_review_id" : 392673218,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-14T12:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407927056",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19386 (rpc: Assert that RPCArg names are equal to CRPCCommand ones (server) by MarcoFalke)\n* #19262 (rpc: Replace OMITTED_NAMED_ARG with OMITTED by MarcoFalke)\n* #18788 (tests: Update more tests to work with descriptor wallets by achow101)\n* #16365 (Log RPC parameters (arguments) if -debug=rpcparams by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-04-14T12:24:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-613412109",
      "id" : 613412109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMzQxMjEwOQ==",
      "updated_at" : "2020-07-13T11:21:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/613412109",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated branch to partially get rid of conflict with #17356 (some conflict might be left if git is not clever enough).\r\n\r\nAdded a comment for #12674 : https://github.com/bitcoin/bitcoin/pull/12674/files#r408113386",
      "created_at" : "2020-04-14T12:57:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-613426646",
      "id" : 613426646,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMzQyNjY0Ng==",
      "updated_at" : "2020-04-14T12:57:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/613426646",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r410708249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410708249"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I hadn't notice #18531 when writing 412bb2f - I'll rebase this PR after #18531 is merged.\r\n",
      "commit_id" : "a08159006fc81b2e78ea5ab552c723f0123466d7",
      "created_at" : "2020-04-18T14:57:06Z",
      "diff_hunk" : "@@ -0,0 +1,290 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests the bitcoin-cli bash autocompletion file.\n+\n+This checks that the bitcoin-cli bash autocompletion file in the\n+contrib/ folder match the RPC calls available.\n+\"\"\"\n+\n+from os import path\n+from re import compile, MULTILINE, DOTALL\n+from collections import defaultdict\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+# bash cli completion file header\n+COMPLETION_HEADER = \"\"\"# Dynamic bash programmable completion for bitcoin-cli(1)\n+#     DO NOT EDIT THIS FILE BY HAND -- THIS WILL FAIL THE FUNCTIONAL TEST tool_cli_completion\n+# This file is auto-generated by the functional test tool_cli_completion.\n+# If you want to modify this file, modify test/functional/tool_cli_completion.py and re-autogenerate\n+# this file via the --overwrite test flag.\n+\n+\"\"\"\n+\n+# option types which are limited to certain values\n+TYPED_OPTIONS = [\n+        [\"estimate_mode\", {\"UNSET\", \"ECONOMICAL\", \"CONSERVATIVE\"}],\n+        [\"sighashtype\", {\"ALL\", \"NONE\", \"SINGLE\", \"ALL|ANYONECANPAY\",\n+                         \"NONE|ANYONECANPAY\", \"SINGLE|ANYONECANPAY\"}]\n+]\n+\n+# regexp to extract arguments from the help of a single command\n+ARG_REGEXP = compile(r'.*Arguments\\s*:\\s*\\n*(.*)\\n*\\s*Result', MULTILINE | DOTALL)\n+\n+\n+class PossibleArgs():\n+    \"\"\" Helper class to store options associated to a command. \"\"\"\n+    def __init__(self, command):\n+        self.command = command\n+        self.arguments = {}\n+\n+    def set_args(self, position, values):\n+        \"\"\" Set the position-th positional argument as having values as possible values. \"\"\"\n+        if position in self.arguments:\n+            raise AssertionError((\"{} positional parameter already \"\n+                                 \"defined for command {}\").format(position, self.command))\n+\n+        self.arguments[position] = values\n+        return self\n+\n+    def set_bool_args(self, position):\n+        return self.set_args(position, {\"true\", \"false\"})\n+\n+    def set_file_args(self, position):\n+        # We consider an empty string as a file value for the sake of simplicity (don't\n+        # have to create an extra level of indirection).\n+        return self.set_args(position, {\"\"})\n+\n+    def set_unknwon_args(self, position):\n+        return self.set_args(position, {})\n+\n+    def has_option(self, position):\n+        return position in self.arguments and len(self.arguments[position]) > 0\n+\n+    def get_num_args(self):\n+        \"\"\" Return the max number of positional argument the option accepts. \"\"\"\n+        pos = list(self.arguments.keys())\n+        if len(pos) == 0:\n+            return 0\n+\n+        return max(pos)\n+\n+    def generate_autocomplete(self, pos):\n+        \"\"\" Generate the autocomplete file line relevent to the given position pos. \"\"\"\n+        if len(self.arguments[pos]) == 0:\n+            raise AssertionError(\"generating undefined arg id {} ({})\".format(pos, self.arguments))\n+\n+        # handle special file case\n+        if len(self.arguments[pos]) == 1 and len(next(iter(self.arguments[pos]))) == 0:\n+            return \"_filedir\"\n+\n+        # a set order is undefined, so we order args alphabetically\n+        args = list(self.arguments[pos])\n+        args.sort()\n+\n+        return \"COMPREPLY=( $( compgen -W \\\"\" + ' '.join(args) + \"\\\" -- \\\"$cur\\\" ) )\"\n+\n+\n+# commands where the option type can only be difficultly derived from the help message\n+SPECIAL_OPTIONS = [\n+        PossibleArgs(\"addnode\").set_args(2, {\"add\", \"remove\", \"onetry\"}),\n+        PossibleArgs(\"setban\").set_args(2, {\"add\", \"remove\"}),\n+]\n+\n+\n+def generate_start_complete(cword):\n+    \"\"\" Generate the start of an autocomplete block (beware of indentation). \"\"\"\n+    if cword > 1:\n+        return \"\"\"    if ((cword > {0})); then\n+        case ${{words[cword-{0}]}} in\"\"\".format(cword)\n+\n+    return \"    case \\\"$prev\\\" in\"\n+\n+\n+def generate_end_complete(cword):\n+    \"\"\" Generate the end of an autocomplete block. \"\"\"\n+    if cword > 1:\n+        return \"\\n{}esac\\n{}fi\\n\\n\".format(' '*8, ' '*4)\n+\n+    return \"\\n{}esac\\n\".format(' '*4)\n+\n+\n+class CliCompletionTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_cli()\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bitcoind_zmq()  # zmq doesn't add commands to complete for now, but it might\n+\n+    def add_options(self, parser):\n+        parser.add_argument(\n+            '--header',\n+            help='Static header part of the bitcoin-cli bash completion file',\n+        )\n+\n+        parser.add_argument(\n+            '--footer',\n+            help='Static footer part of the bitcoin-cli bash completion file',\n+        )\n+\n+        parser.add_argument(\n+            '--completion',\n+            help='Location of the current bash completion file',\n+        )\n+\n+        parser.add_argument(\n+            '--overwrite',\n+            default=False,\n+            action='store_true',\n+            help='Force the test to pass by overwriting the file pointed by --completion '\n+                 'to a newly generated autocompletion file',\n+        )\n+\n+    def parse_single_helper(self, option):\n+        \"\"\" Complete the arguments of option via the RPC help command. \"\"\"\n+\n+        # if we can't find an argument list in the help text, then it has no option to add\n+        regexp_res = ARG_REGEXP.match(self.nodes[0].help(option.command))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r410708249",
      "id" : 410708249,
      "in_reply_to_id" : 407261553,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcwODI0OQ==",
      "original_commit_id" : "4576b77818156ebbcc9f6dbde5f3412ac6a3d1df",
      "original_line" : 153,
      "original_position" : 153,
      "original_start_line" : null,
      "path" : "test/functional/tool_cli_completion.py",
      "position" : null,
      "pull_request_review_id" : 395920843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-18T14:57:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410708249",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-07-15T18:58:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-658944860",
      "id" : 658944860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODk0NDg2MA==",
      "updated_at" : "2020-07-15T18:58:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658944860",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@pierreN is this something you plan on continuing to work on?",
      "created_at" : "2021-01-14T19:52:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-760438464",
      "id" : 760438464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MDQzODQ2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-14T19:52:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760438464",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@pierreN ping for rebase.",
      "created_at" : "2021-03-19T15:02:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-802898381",
      "id" : 802898381,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMjg5ODM4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-19T15:02:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/802898381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry for the few months delay.\r\nI have a bit more time now and will try to follow through with this PR.",
      "created_at" : "2021-05-06T21:39:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-833886506",
      "id" : 833886506,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzMzg4NjUwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-06T21:39:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/833886506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/946757?v=4",
         "events_url" : "https://api.github.com/users/pierreN/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pierreN/followers",
         "following_url" : "https://api.github.com/users/pierreN/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pierreN/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pierreN",
         "id" : 946757,
         "login" : "pierreN",
         "node_id" : "MDQ6VXNlcjk0Njc1Nw==",
         "organizations_url" : "https://api.github.com/users/pierreN/orgs",
         "received_events_url" : "https://api.github.com/users/pierreN/received_events",
         "repos_url" : "https://api.github.com/users/pierreN/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pierreN/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pierreN"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--13523179cfe9479db18ec6c5d236f789-->There hasn't been much activity lately and the patch still needs rebase. What is the status here?\n\n* Is it still relevant? â¡ï¸ Please solve the conflicts to make it ready for review and to ensure the CI passes.\n* Is it no longer relevant? â¡ï¸ Please close.\n* Did the author lose interest or time to work on this? â¡ï¸ Please close it and mark it 'Up for grabs' with the label, so that it can be picked up in the future.\n",
      "created_at" : "2021-12-15T11:22:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-994695058",
      "id" : 994695058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "IC_kwDOABII5847SdeS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/994695058/reactions"
      },
      "updated_at" : "2021-12-15T11:22:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/994695058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r784782130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784782130"
         }
      },
      "author_association" : "NONE",
      "body" : "Happy New Year :clinking_glasses: \r\n\r\n```suggestion\r\n# Copyright (c) 2012-2022 The Bitcoin Core developers\r\n```",
      "commit_id" : "a08159006fc81b2e78ea5ab552c723f0123466d7",
      "created_at" : "2022-01-14T11:49:19Z",
      "diff_hunk" : "@@ -1,5 +1,10 @@\n-# bash programmable completion for bitcoin-cli(1)\n-# Copyright (c) 2012-2019 The Bitcoin Core developers\n+# Dynamic bash programmable completion for bitcoin-cli(1)\n+#     DO NOT EDIT THIS FILE BY HAND -- THIS WILL FAIL THE FUNCTIONAL TEST tool_cli_completion\n+# This file is auto-generated by the functional test tool_cli_completion.\n+# If you want to modify this file, modify test/functional/tool_cli_completion.py and re-autogenerate\n+# this file via the --overwrite test flag.\n+\n+# Copyright (c) 2012-2020 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#discussion_r784782130",
      "id" : 784782130,
      "line" : 7,
      "node_id" : "PRRC_kwDOABII584uxtMy",
      "original_commit_id" : "a08159006fc81b2e78ea5ab552c723f0123466d7",
      "original_line" : 7,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "contrib/bitcoin-cli.bash-completion",
      "position" : 9,
      "pull_request_review_id" : 852829759,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18606",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784782130/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-14T11:49:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784782130",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/97605837?v=4",
         "events_url" : "https://api.github.com/users/niVelion/events{/privacy}",
         "followers_url" : "https://api.github.com/users/niVelion/followers",
         "following_url" : "https://api.github.com/users/niVelion/following{/other_user}",
         "gists_url" : "https://api.github.com/users/niVelion/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/niVelion",
         "id" : 97605837,
         "login" : "niVelion",
         "node_id" : "U_kgDOBdFYzQ",
         "organizations_url" : "https://api.github.com/users/niVelion/orgs",
         "received_events_url" : "https://api.github.com/users/niVelion/received_events",
         "repos_url" : "https://api.github.com/users/niVelion/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/niVelion/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/niVelion/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/niVelion"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "ACK, would be great to see this merged.\r\n\r\nI can see in https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits that the next task is primarily to amend the commit message after squashing, the message that'll make it into the `master` branch to describe this improvement.\r\n\r\nHere's the starting point:\r\n\r\n```\r\n# This is a combination of 4 commits.\r\n# This is the 1st commit message:\r\n\r\nrpc: make all unhidden actors use RPCHelpMan::Check\r\n\r\n# This is the commit message #2:\r\n\r\nrpc: add format command with support for args_cli\r\n\r\n- add format command to get infos about commands via a particular format\r\n- add output format args_cli to get arguments type info of shown commands\r\n- refactor RPCArg::ToTypeString to be used accross multiple output formats\r\n- overload CRPCTable::execute to call != methods than in their request\r\n\r\n# This is the commit message #3:\r\n\r\ncontrib: sync bitcoin-cli bash autocompletion\r\n\r\n# This is the commit message #4:\r\n\r\ntest: keeps bitcoin-cli autocomplete in sync\r\n\r\nAdd a functional test which parses available RPC commands, generates\r\nthe associated bitcoin-cli autocomplete file and checks that the current\r\nautocomplete file matches.\r\nAn outdated autocomplete file can be updated via the --overwrite test\r\nparameter.\r\n```",
      "created_at" : "2022-01-14T12:27:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-1013076335",
      "id" : 1013076335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "IC_kwDOABII5848YlFv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1013076335/reactions"
      },
      "updated_at" : "2022-01-14T12:29:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1013076335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/97605837?v=4",
         "events_url" : "https://api.github.com/users/niVelion/events{/privacy}",
         "followers_url" : "https://api.github.com/users/niVelion/followers",
         "following_url" : "https://api.github.com/users/niVelion/following{/other_user}",
         "gists_url" : "https://api.github.com/users/niVelion/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/niVelion",
         "id" : 97605837,
         "login" : "niVelion",
         "node_id" : "U_kgDOBdFYzQ",
         "organizations_url" : "https://api.github.com/users/niVelion/orgs",
         "received_events_url" : "https://api.github.com/users/niVelion/received_events",
         "repos_url" : "https://api.github.com/users/niVelion/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/niVelion/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/niVelion/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/niVelion"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "#25243 has picked this up.",
      "created_at" : "2022-05-30T09:37:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18606#issuecomment-1140933458",
      "id" : 1140933458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18606",
      "node_id" : "IC_kwDOABII585EAUNS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1140933458/reactions"
      },
      "updated_at" : "2022-05-30T09:37:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1140933458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
