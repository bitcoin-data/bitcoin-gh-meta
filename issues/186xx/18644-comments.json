[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408534636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408534636"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Don't we use Optional<> for this?",
      "commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "created_at" : "2020-04-15T01:52:36Z",
      "diff_hunk" : "@@ -638,14 +638,28 @@ class CNetMessage {\n  */\n class TransportDeserializer {\n public:\n-    // returns true if the current deserialization is complete\n-    virtual bool Complete() const = 0;\n     // set the serialization context version\n     virtual void SetVersion(int version) = 0;\n-    // read and deserialize data\n-    virtual int Read(const char *data, unsigned int bytes) = 0;\n-    // decomposes a message from the context\n-    virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n+    /**\n+     * Try to decode all CNetMessage%s from the first \\p num_bytes bytes of the\n+     * \\p receive_buffer buffer.\n+     *\n+     * @param[in] message_start The expected message start string.\n+     * @param[in] time The approximate time at which these messages were\n+     *                 received in microseconds since UNIX epoch.\n+     *\n+     * @returns A tuple where the first element indicates whether or not an",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408534636",
      "id" : 408534636,
      "line" : 651,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUzNDYzNg==",
      "original_commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "original_line" : 651,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 20,
      "pull_request_review_id" : 393406511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-15T01:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408534636",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408537361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408537361"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See the `@note`",
      "commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "created_at" : "2020-04-15T02:02:00Z",
      "diff_hunk" : "@@ -638,14 +638,28 @@ class CNetMessage {\n  */\n class TransportDeserializer {\n public:\n-    // returns true if the current deserialization is complete\n-    virtual bool Complete() const = 0;\n     // set the serialization context version\n     virtual void SetVersion(int version) = 0;\n-    // read and deserialize data\n-    virtual int Read(const char *data, unsigned int bytes) = 0;\n-    // decomposes a message from the context\n-    virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n+    /**\n+     * Try to decode all CNetMessage%s from the first \\p num_bytes bytes of the\n+     * \\p receive_buffer buffer.\n+     *\n+     * @param[in] message_start The expected message start string.\n+     * @param[in] time The approximate time at which these messages were\n+     *                 received in microseconds since UNIX epoch.\n+     *\n+     * @returns A tuple where the first element indicates whether or not an",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408537361",
      "id" : 408537361,
      "in_reply_to_id" : 408534636,
      "line" : 651,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUzNzM2MQ==",
      "original_commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "original_line" : 651,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 20,
      "pull_request_review_id" : 393409295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-15T02:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408537361",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18638 (net: Use mockable time for ping/pong, add tests by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-04-15T03:00:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#issuecomment-613787316",
      "id" : 613787316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18644",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMzc4NzMxNg==",
      "updated_at" : "2020-05-13T00:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/613787316",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408617531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408617531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This will copy the vector. Two options:\r\n\r\n* Add an `std::move()` around the `std::get` here\r\n* Change the declaration to `std::vector<CNetMessage>& msgs` (or `auto& msgs`).",
      "commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "created_at" : "2020-04-15T06:51:08Z",
      "diff_hunk" : "@@ -565,41 +565,44 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\n }\n #undef X\n \n+/**\n+ * Try to decode all CNetMessage%s from the first \\p nBytes bytes of the \\p pch\n+ * buffer and send them off for further processing.\n+ *\n+ * @param[out] complete Whether or not at least one CNetMessage was successfully\n+ *                      decoded.\n+ *\n+ * @returns Whether or not an unhandleable error has occured (e.g. failure to\n+ *          deserialize the header or ludicrous message sizes).\n+ *\n+ * @see ReadMessages(const char *, unsigned int, const CMessageHeader::MessageStartChars&, int64_t)\n+ */\n bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete)\n {\n-    complete = false;\n     int64_t nTimeMicros = GetTimeMicros();\n     LOCK(cs_vRecv);\n     nLastRecv = nTimeMicros / 1000000;\n     nRecvBytes += nBytes;\n-    while (nBytes > 0) {\n-        // absorb network data\n-        int handled = m_deserializer->Read(pch, nBytes);\n-        if (handled < 0) return false;\n-\n-        pch += handled;\n-        nBytes -= handled;\n \n-        if (m_deserializer->Complete()) {\n-            // decompose a transport agnostic CNetMessage from the deserializer\n-            CNetMessage msg = m_deserializer->GetMessage(Params().MessageStart(), nTimeMicros);\n+    std::tuple<bool, std::vector<CNetMessage>> tup = m_deserializer->ReadMessages(pch, nBytes, Params().MessageStart(), nTimeMicros);\n \n-            //store received bytes per message command\n-            //to prevent a memory DOS, only allow valid commands\n-            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.m_command);\n-            if (i == mapRecvBytesPerMsgCmd.end())\n-                i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n-            assert(i != mapRecvBytesPerMsgCmd.end());\n-            i->second += msg.m_raw_message_size;\n+    std::vector<CNetMessage> msgs = std::get<1>(tup);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408617531",
      "id" : 408617531,
      "line" : 589,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxNzUzMQ==",
      "original_commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "original_line" : 589,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 43,
      "pull_request_review_id" : 393498019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-15T06:55:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408617531",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408617955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408617955"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to use an `std::tuple` with just two members here (instead of an `std::pair`)?",
      "commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "created_at" : "2020-04-15T06:52:11Z",
      "diff_hunk" : "@@ -638,14 +638,28 @@ class CNetMessage {\n  */\n class TransportDeserializer {\n public:\n-    // returns true if the current deserialization is complete\n-    virtual bool Complete() const = 0;\n     // set the serialization context version\n     virtual void SetVersion(int version) = 0;\n-    // read and deserialize data\n-    virtual int Read(const char *data, unsigned int bytes) = 0;\n-    // decomposes a message from the context\n-    virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n+    /**\n+     * Try to decode all CNetMessage%s from the first \\p num_bytes bytes of the\n+     * \\p receive_buffer buffer.\n+     *\n+     * @param[in] message_start The expected message start string.\n+     * @param[in] time The approximate time at which these messages were\n+     *                 received in microseconds since UNIX epoch.\n+     *\n+     * @returns A tuple where the first element indicates whether or not an\n+     *          unhandleable error has occured (e.g. failure to deserialize the\n+     *          header or ludicrous message sizes), and the second element\n+     *          contains all succesfully decoded CNetMessage%s.\n+     *\n+     * @note Even if an unhandleable error has occured, CNetMessage%s might have\n+     *       already been decoded. These CNetMessage%s should not be ignored and\n+     *       probably should be processed.\n+     *\n+     * @see CNode::ReceiveMsgBytes(const char *, unsigned int, bool&)\n+     */\n+    virtual std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *receive_buffer, unsigned int num_bytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408617955",
      "id" : 408617955,
      "line" : 662,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxNzk1NQ==",
      "original_commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "original_line" : 662,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 31,
      "pull_request_review_id" : 393498019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-15T06:55:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408617955",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408618382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408618382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add an `std::move` around `out_msgs` here to avoid a copy.",
      "commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "created_at" : "2020-04-15T06:53:01Z",
      "diff_hunk" : "@@ -693,12 +707,30 @@ class V1TransportDeserializer final : public TransportDeserializer\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-    int Read(const char *pch, unsigned int nBytes) override {\n+    int Read(const char *pch, unsigned int nBytes) {\n         int ret = in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n         if (ret < 0) Reset();\n         return ret;\n     }\n-    CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) override;\n+    std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *receive_buffer, unsigned int num_bytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) override {\n+        std::vector<CNetMessage> out_msgs;\n+        while (num_bytes > 0) {\n+            // absorb network data\n+            int handled = Read(receive_buffer, num_bytes);\n+            if (handled < 0) {\n+                return std::make_tuple(false, out_msgs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408618382",
      "id" : 408618382,
      "line" : 721,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxODM4Mg==",
      "original_commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "original_line" : 721,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 61,
      "pull_request_review_id" : 393498019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-15T06:55:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408618382",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408618510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408618510"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here.",
      "commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "created_at" : "2020-04-15T06:53:18Z",
      "diff_hunk" : "@@ -693,12 +707,30 @@ class V1TransportDeserializer final : public TransportDeserializer\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-    int Read(const char *pch, unsigned int nBytes) override {\n+    int Read(const char *pch, unsigned int nBytes) {\n         int ret = in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n         if (ret < 0) Reset();\n         return ret;\n     }\n-    CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) override;\n+    std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *receive_buffer, unsigned int num_bytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) override {\n+        std::vector<CNetMessage> out_msgs;\n+        while (num_bytes > 0) {\n+            // absorb network data\n+            int handled = Read(receive_buffer, num_bytes);\n+            if (handled < 0) {\n+                return std::make_tuple(false, out_msgs);\n+            }\n+\n+            receive_buffer += handled;\n+            num_bytes -= handled;\n+\n+            if (Complete()) {\n+                out_msgs.push_back(GetMessage(message_start, time));\n+            }\n+        }\n+        return std::make_tuple(true, out_msgs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#discussion_r408618510",
      "id" : 408618510,
      "line" : 731,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxODUxMA==",
      "original_commit_id" : "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "original_line" : 731,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 71,
      "pull_request_review_id" : 393498019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18644",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-15T06:55:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/408618510",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @dongcarl.\r\n\r\nI'm NACKish on this. Once we have the handshake implemented, the `CNode` instances should be capable to individually read and process messages.\r\n\r\nI'd suggest to keep the per-message-process-logic in the `CNode` instance to allow switching the deserializer between individual messages.\r\n\r\nLet me make an example:\r\n* Peer A sends BIP324 handshake to peer B (very first message, 32bytes)\r\n* Peer A sends encrypted `version` message after BIP324 **in the same buffer**\r\n* Peer B processes the buffer, needs to switch to encrypted traffic **(switch the `deserializer`)** between the two messages in the same buffer.\r\n\r\nHave a look at the following draft commit BIP324 handshake, (not available in a PR): https://github.com/jonasschnelli/bitcoin/commit/0a50bdb16d66b3bc24b761d435fbe02a141ff8e3\r\n\r\nMaybe there are better ways how to do this,... open to suggestions.",
      "created_at" : "2020-04-15T08:06:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#issuecomment-613885385",
      "id" : 613885385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18644",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMzg4NTM4NQ==",
      "updated_at" : "2020-04-15T08:06:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/613885385",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonasschnelli \r\n\r\n> Let me make an example:\r\n>   * Peer A sends BIP324 handshake to peer B (very first message, 32bytes)\r\n>   * Peer A sends encrypted `version` message after BIP324 **in the same buffer**\r\n>   * Peer B processes the buffer, needs to switch to encrypted traffic **(switch the `deserializer`)** between the two messages in the same buffer.\r\n> \r\n> Have a look at the following draft commit BIP324 handshake, (not available in a PR): [jonasschnelli@0a50bdb](https://github.com/jonasschnelli/bitcoin/commit/0a50bdb16d66b3bc24b761d435fbe02a141ff8e3)\r\n\r\nThat's a good point! I _think_ I have a way to do this cleanly, but I'm going to shut my mouth until I have the code for it...\r\n\r\nIs the right way to rebase your https://github.com/bitcoin/bitcoin/compare/master...jonasschnelli:2019/08/net_v2 branch to: rebase #14049 over #18242 then cherry-picking the last 3 commits from https://github.com/bitcoin/bitcoin/compare/master...jonasschnelli:2019/08/net_v2?\r\n\r\nHappy to send you the rebased branches so you can use them in your PRs!",
      "created_at" : "2020-04-15T16:43:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#issuecomment-614150557",
      "id" : 614150557,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18644",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDE1MDU1Nw==",
      "updated_at" : "2020-04-15T16:44:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614150557",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> That's a good point! I think I have a way to do this cleanly, but I'm going to shut my mouth until I have the code for it...\r\n\r\nGreat! Let's see with what you come up.\r\n\r\n> Is the right way to rebase your master...jonasschnelli:2019/08/net_v2 branch to: rebase #14049 over #18242 then cherry-picking the last 3 commits from master...jonasschnelli:2019/08/net_v2?\r\n\r\nThe `jonasschnelli:2019/08/net_v2` branch is experimental and in an extrem draft state. The purpose of it was to validate the BIP and look for conceptual flaws during an (draft) implementation. You can try to rebase the handshake on top of 18242 (yeah, you'll need #14049/enabling ECDH as well).",
      "created_at" : "2020-04-15T18:09:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#issuecomment-614195072",
      "id" : 614195072,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18644",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDE5NTA3Mg==",
      "updated_at" : "2020-04-15T18:09:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614195072",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Closing, will reopen or open a new PR once I have something!",
      "created_at" : "2020-05-26T18:12:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18644#issuecomment-634190545",
      "id" : 634190545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18644",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNDE5MDU0NQ==",
      "updated_at" : "2020-05-26T18:12:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634190545",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   }
]
