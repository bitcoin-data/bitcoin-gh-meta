{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "From #18553:\r\n\r\n[theuni](https://github.com/bitcoin/bitcoin/pull/18553#issuecomment-611717976)\r\n> Sidenote: we could potentially add a check for illegal instructions in the .text.startup section in one of our python binary checking tools. Though we'd have to create a per-arch blacklist/whitelist to define \"illegal\".\r\n\r\n[laanwj](https://github.com/bitcoin/bitcoin/pull/18553#issuecomment-611733956)\r\n> My idea was to forbid .text.startup sections completely in all 'special' compilation units, e.g. those compiled with non-default instruction sets. I think that's easier to implement a check for than instruction white/blacklists.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18603/comments",
   "created_at" : "2020-04-12T11:08:29Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18603/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/18603",
   "id" : 598461506,
   "labels" : [
      {
         "color" : "ffffee",
         "default" : false,
         "description" : null,
         "id" : 231994551,
         "name" : "Scripts and tools",
         "node_id" : "MDU6TGFiZWwyMzE5OTQ1NTE=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18603/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU1OTg0NjE1MDY=",
   "number" : 18603,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "scripts: check for .text.startup sections",
   "updated_at" : "2020-04-12T11:08:29Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18603",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
