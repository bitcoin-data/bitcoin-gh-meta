[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410270513"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410270513"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    PerBlockConnectTrace(CBlockIndex* index, const std::shared_ptr<const CBlock>& block) : pindex(index), pblock(block) {}\r\n```\r\n\r\nstyle nit to avoid shared_ptr increment/decrement",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-17T14:43:45Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410270513",
      "id" : 410270513,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MDUxMw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2519,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395517042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410270513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410271078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410271078"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this needed?",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-17T14:44:40Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.\n-        assert(!blocksConnected.back().pindex);\n-        blocksConnected.pop_back();\n-        return blocksConnected;\n-    }\n-};\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410271078",
      "id" : 410271078,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MTA3OA==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2528,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395517042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410271078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410272193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410272193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this change to auto? `auto` shouldn't be used in consensus code unless there is a reason ",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-17T14:46:26Z",
      "diff_hunk" : "@@ -2868,7 +2843,7 @@ bool CChainState::ActivateBestChain(BlockValidationState &state, const CChainPar\n                 }\n                 pindexNewTip = m_chain.Tip();\n \n-                for (const PerBlockConnectTrace& trace : connectTrace.GetBlocksConnected()) {\n+                for (auto& trace : connectTrace) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410272193",
      "id" : 410272193,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MjE5Mw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2846,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395517042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410272193",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410272555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410272555"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nusing ConnectTrace = std::vector<PerBlockConnectTrace>;\r\n```\r\n\r\nstyle nit for C++11",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-17T14:46:59Z",
      "diff_hunk" : "@@ -409,7 +409,9 @@ enum DisconnectResult\n     DISCONNECT_FAILED   // Something else went wrong.\n };\n \n-class ConnectTrace;\n+// forward declaration for ActivateBestChainStep and ConnectTip\n+struct PerBlockConnectTrace;\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410272555",
      "id" : 410272555,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3MjU1NQ==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 414,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 395517042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410272555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410307560"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410307560"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\r\n\r\nNote to other reviewers: This comment obviously no longer applies after 312d27b\r\n",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-17T15:43:17Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410307560",
      "id" : 410307560,
      "line" : 2569,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMwNzU2MA==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2569,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 37,
      "pull_request_review_id" : 395566048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410307560",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717136"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717136"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for this comment! It sent me down a bit of a rabbit hole about how to pass smart pointers. Here's what I've learned:\r\n\r\nI think your suggestion to change the ctor to take a const lvalue reference makes a copy and therefore increases the ref count (the `const` is the callee saying to the caller \"I won't steal this reference\", and so if the callee wants to keep ownership, it needs to make a copy). We can avoid that copy in three ways:\r\n\r\n- pass by non-const lvalue reference (`std::shared_ptr<const CBlock>&`) which is the callee saying \"I may or may not steal this reference\" and call the constructor with an lvalue (ie `thisBlock` below).\r\n- pass by value (`std::shared_ptr<const CBlock>`), and have the caller cast to rvalue reference in the call (ie `std::move(thisBlock)` below). The `std::move` is the caller saying \"I no longer want ownership of this reference. In this case, the caller can still keep shared ownership by passing an lvalue (`thisBlock`), which would increase the ref count.\r\n- pass by rvalue (`std::shared_ptr<const CBlock>&&`) which is the callee saying \"I will steal ownership\". The caller has to call using an rvalue reference (`std::move(thisBlock)`). Calling by lvalue would be invalid.\r\n\r\nI think it's best to keep this as pass-by-value and have the caller pass it with an rvalue reference.\r\n\r\nAlso, the initializer list needs to use a std::move to prevent the ref increment/decrement, which I'll change.\r\n\r\nSome references:\r\n- summary of ways to pass smart pointers as arguments (it's talking about unique_ptr, but the same concepts are true for shared_ptrs): https://stackoverflow.com/questions/8114276/how-do-i-pass-a-unique-ptr-argument-to-a-constructor-or-a-function\r\n- CPP Core Guidelines on passing shared pointers: http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-sharedptrparam-owner\r\n- Herb Sutter on smart pointer parameters: https://herbsutter.com/2013/06/05/gotw-91-solution-smart-pointer-parameters/\r\n- Scott Meyers on passing move types by value/rvalue reference: http://scottmeyers.blogspot.com/2014/07/should-move-only-types-ever-be-passed.html\r\n- Demonstration code of the different ways to pass a shared_ptr and the effect on ref counts: https://gist.github.com/jnewbery/10ee24a5ce783932accddbe4347f110e",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-18T16:12:56Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717136",
      "id" : 410717136,
      "in_reply_to_id" : 410270513,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNzEzNg==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2519,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395927302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717136",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's not needed. I just wanted to keep it here so the comment made sense and I didn't have to move it to the header file.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-18T16:13:40Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.\n-        assert(!blocksConnected.back().pindex);\n-        blocksConnected.pop_back();\n-        return blocksConnected;\n-    }\n-};\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717223",
      "id" : 410717223,
      "in_reply_to_id" : 410271078,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNzIyMw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2528,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395927361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717291"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sounds sensible. I'll revert.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-18T16:13:57Z",
      "diff_hunk" : "@@ -2868,7 +2843,7 @@ bool CChainState::ActivateBestChain(BlockValidationState &state, const CChainPar\n                 }\n                 pindexNewTip = m_chain.Tip();\n \n-                for (const PerBlockConnectTrace& trace : connectTrace.GetBlocksConnected()) {\n+                for (auto& trace : connectTrace) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717291",
      "id" : 410717291,
      "in_reply_to_id" : 410272193,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxNzI5MQ==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2846,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395927406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410717291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410718508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410718508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it makes a difference for aliases which are not templates (and I can't see this in the style guide), but changed anyway.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-18T16:24:01Z",
      "diff_hunk" : "@@ -409,7 +409,9 @@ enum DisconnectResult\n     DISCONNECT_FAILED   // Something else went wrong.\n };\n \n-class ConnectTrace;\n+// forward declaration for ActivateBestChainStep and ConnectTip\n+struct PerBlockConnectTrace;\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410718508",
      "id" : 410718508,
      "in_reply_to_id" : 410272555,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxODUwOA==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 414,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 395928292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410718508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @MarcoFalke . I've addressed your comments.",
      "created_at" : "2020-04-18T16:24:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-615898514",
      "id" : 615898514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNTg5ODUxNA==",
      "updated_at" : "2020-04-18T16:24:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/615898514",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410721803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410721803"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Didn't see the new comment, but I think you can put the new comment to the single place where connecttrace is instantiated. No strong opinion, though.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-04-18T16:52:04Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(block) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.\n-        assert(!blocksConnected.back().pindex);\n-        blocksConnected.pop_back();\n-        return blocksConnected;\n-    }\n-};\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410721803",
      "id" : 410721803,
      "in_reply_to_id" : 410271078,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcyMTgwMw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 2528,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 395930706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410721803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r420873583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420873583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I don't think it makes a difference for aliases which are not templates (and I can't see this in the style guide), but changed anyway.\r\n\r\nThis is my understanding as well after looking this up, along with `typedef` being the earlier, traditional syntax of the two. Perhaps one advantage `typedef` may have over `using` is that it is used only for declaring type aliases.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-05-06T15:15:43Z",
      "diff_hunk" : "@@ -409,7 +409,9 @@ enum DisconnectResult\n     DISCONNECT_FAILED   // Something else went wrong.\n };\n \n-class ConnectTrace;\n+// forward declaration for ActivateBestChainStep and ConnectTip\n+struct PerBlockConnectTrace;\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r420873583",
      "id" : 420873583,
      "in_reply_to_id" : 410272555,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg3MzU4Mw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 414,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 406717147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420873583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r420922597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420922597"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Git grepping instances of type aliases seems easier with`typedef` as well.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-05-06T16:23:27Z",
      "diff_hunk" : "@@ -409,7 +409,9 @@ enum DisconnectResult\n     DISCONNECT_FAILED   // Something else went wrong.\n };\n \n-class ConnectTrace;\n+// forward declaration for ActivateBestChainStep and ConnectTip\n+struct PerBlockConnectTrace;\n+typedef std::vector<PerBlockConnectTrace> ConnectTrace;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r420922597",
      "id" : 420922597,
      "in_reply_to_id" : 410272555,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkyMjU5Nw==",
      "original_commit_id" : "a9f84cc3d05f1807bb37ce8d1fdb9ba5ff491e64",
      "original_line" : 414,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 406780031,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420922597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21789 by MarcoFalke\n* #15606 by jamesob\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-07T02:23:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-624991192",
      "id" : 624991192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDk5MTE5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-24T19:16:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624991192",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-07-08T06:38:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-655319539",
      "id" : 655319539,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NTMxOTUzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-08T06:38:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655319539",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r479612111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479612111"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm still very new to move semantics, but just confirming, what's the motivation for removing the `std::move`?\r\n\r\nIn my local experiments, it looks like taking out the `std::move` increments the refcount; could this have performance implications?\r\n\r\n#### No `std::move`\r\n\r\n\tint main() {\r\n\t    CBlockIndex index;\r\n\t    CBlockIndex* pindex = &index;\r\n\r\n\t    std::shared_ptr<const CBlock> pblock(new CBlock);\r\n\r\n\t// (lldb) p pblock\r\n\t// strong=1 weak=1 {\r\n\t//   __ptr_ = 0x0000000100205290\r\n\t// }\r\n\r\n\t    ConnectTrace connectTrace;\r\n\t    connectTrace.emplace_back(pindex, pblock);\r\n\r\n\t// (lldb) p pblock\r\n\t// strong=2 weak=1 {\r\n\t//   __ptr_ = 0x0000000100205290\r\n\t// }\r\n\r\n\t}\r\n\r\n#### With `std::move`\r\n\r\n\tint main() {\r\n\t    CBlockIndex index;\r\n\t    CBlockIndex* pindex = &index;\r\n\r\n\t    std::shared_ptr<const CBlock> pblock(new CBlock);\r\n\r\n\t// (lldb) p pblock\r\n\t// strong=1 weak=1 {\r\n\t//   __ptr_ = 0x0000000100304150\r\n\t// }\r\n\r\n\t    ConnectTrace connectTrace;\r\n\t    connectTrace.emplace_back(pindex, std::move(pblock));\r\n\r\n\t// (lldb) p pblock\r\n\t// nullptr {\r\n\t//   __ptr_ = 0x0000000000000000\r\n\t// }\r\n\r\n\t}",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-08-29T05:50:10Z",
      "diff_hunk" : "@@ -2610,7 +2585,7 @@ bool CChainState::ConnectTip(BlockValidationState& state, const CChainParams& ch\n     LogPrint(BCLog::BENCH, \"  - Connect postprocess: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime5) * MILLI, nTimePostConnect * MICRO, nTimePostConnect * MILLI / nBlocksTotal);\n     LogPrint(BCLog::BENCH, \"- Connect block: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime1) * MILLI, nTimeTotal * MICRO, nTimeTotal * MILLI / nBlocksTotal);\n \n-    connectTrace.BlockConnected(pindexNew, std::move(pthisBlock));\n+    connectTrace.emplace_back(pindexNew, pthisBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r479612111",
      "id" : 479612111,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxMjExMQ==",
      "original_commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "original_line" : 2588,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 478101059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479612111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r479612433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479612433"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Note (no action needed): I agree these asserts are no longer needed, because `ConnectTip` guarantees guarantees neither the `CBlockIndex` nor the `std::shared_ptr<const CBlock>` will be null.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-08-29T05:53:50Z",
      "diff_hunk" : "@@ -2512,45 +2512,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(std::move(block)) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r479612433",
      "id" : 479612433,
      "line" : 2557,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxMjQzMw==",
      "original_commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "original_line" : 2557,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 25,
      "pull_request_review_id" : 478101059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479612433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r479615472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479615472"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Beginner question: what do you mean by \"consistent state\" here?\r\n\r\ni.e. what could go wrong with the mempool after some, but not all, of the `ActivateBestChainStep` involved in `ActivateBestChain`?",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-08-29T06:32:22Z",
      "diff_hunk" : "@@ -132,14 +132,19 @@ class CValidationInterface {\n     virtual void TransactionRemovedFromMempool(const CTransactionRef &ptx) {}\n     /**\n      * Notifies listeners of a block being connected.\n-     * Provides a vector of transactions evicted from the mempool as a result.\n+     *\n+     * The mempool is not guaranteed to be in a consistent state when this\n+     * notification is fired. Listeners should use UpdatedBlockTip for that.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r479615472",
      "id" : 479615472,
      "line" : 139,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNTQ3Mg==",
      "original_commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "original_line" : 139,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validationinterface.h",
      "position" : 7,
      "pull_request_review_id" : 478101059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479615472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r483494853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483494853"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, you're right! The caller should cast to rvalue reference by calling `std::move()` (that was my intention in https://github.com/bitcoin/bitcoin/pull/18685#discussion_r410717136).\r\n\r\nThanks for catching this.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-09-04T09:15:03Z",
      "diff_hunk" : "@@ -2610,7 +2585,7 @@ bool CChainState::ConnectTip(BlockValidationState& state, const CChainParams& ch\n     LogPrint(BCLog::BENCH, \"  - Connect postprocess: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime5) * MILLI, nTimePostConnect * MICRO, nTimePostConnect * MILLI / nBlocksTotal);\n     LogPrint(BCLog::BENCH, \"- Connect block: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime1) * MILLI, nTimeTotal * MICRO, nTimeTotal * MILLI / nBlocksTotal);\n \n-    connectTrace.BlockConnected(pindexNew, std::move(pthisBlock));\n+    connectTrace.emplace_back(pindexNew, pthisBlock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r483494853",
      "id" : 483494853,
      "in_reply_to_id" : 479612111,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5NDg1Mw==",
      "original_commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "original_line" : 2588,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 482493700,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483494853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r483514430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483514430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "cs_main and mempool.cs are both still being held when the `BlockConnected` signal is called, and `UpdateMempoolForReorg()` may have been called after blocks were connected but before the `BlockConnected` signal is called. See the comment above for the `TransactionAddedToMempool` signal.\r\n\r\nThe `UpdatedBlockTip` signal is called just before releasing `cs_main`, when we know that the mempool is consistent with the chain tip. ",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-09-04T09:52:33Z",
      "diff_hunk" : "@@ -132,14 +132,19 @@ class CValidationInterface {\n     virtual void TransactionRemovedFromMempool(const CTransactionRef &ptx) {}\n     /**\n      * Notifies listeners of a block being connected.\n-     * Provides a vector of transactions evicted from the mempool as a result.\n+     *\n+     * The mempool is not guaranteed to be in a consistent state when this\n+     * notification is fired. Listeners should use UpdatedBlockTip for that.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r483514430",
      "id" : 483514430,
      "in_reply_to_id" : 479615472,
      "line" : 139,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUxNDQzMA==",
      "original_commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "original_line" : 139,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validationinterface.h",
      "position" : 7,
      "pull_request_review_id" : 482518727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483514430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've addressed the comment here https://github.com/bitcoin/bitcoin/pull/18685#discussion_r479612111 and rebased on master (there wasn't a conflict but this was a few thousand commits behind master and it's a small change).",
      "created_at" : "2020-09-04T09:53:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-687047944",
      "id" : 687047944,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzA0Nzk0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T09:53:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687047944",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r483914867"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483914867"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for clarifying! Here's my updated understanding:\r\n\r\n- If a `validationinterface` listener considers the callbacks as a canonical log of all events, then immediately after a `BlockConnected` but before the subsequent `UpdatedBlockTip`, the listener might have an inconsistent view (e.g. some transactions have disappeared from both the mempool and the active chain)\r\n\r\n- If a validationinterface callback locks both `cs_main` and `m_mempool.cs` before accessing the underlying state directly, it WOULD get a consistent view (because by the time the lock can be acquired, the `UpdatedBlockTip` would have happened), but I don't think any callbacks do this at the moment",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-09-05T05:50:08Z",
      "diff_hunk" : "@@ -132,14 +132,19 @@ class CValidationInterface {\n     virtual void TransactionRemovedFromMempool(const CTransactionRef &ptx) {}\n     /**\n      * Notifies listeners of a block being connected.\n-     * Provides a vector of transactions evicted from the mempool as a result.\n+     *\n+     * The mempool is not guaranteed to be in a consistent state when this\n+     * notification is fired. Listeners should use UpdatedBlockTip for that.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r483914867",
      "id" : 483914867,
      "in_reply_to_id" : 479615472,
      "line" : 139,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkxNDg2Nw==",
      "original_commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "original_line" : 139,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validationinterface.h",
      "position" : 7,
      "pull_request_review_id" : 483033034,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483914867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r483916524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483916524"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit (feel free to ignore): How would you feel about rewording this to make it really obvious that there's one BlockConnected signal per block? For example:\r\n\r\n    Used to track blocks that were connected as part of a single\r\n    ActivateBestChainStep call. After the ABCS call, a separate BlockConnected\r\n    validationinterface signal is fired for each block that was connected\r\n    in the ABCS call.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-09-05T06:12:31Z",
      "diff_hunk" : "@@ -2541,45 +2541,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(std::move(block)) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r483916524",
      "id" : 483916524,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkxNjUyNA==",
      "original_commit_id" : "d956ac72f11c0888c6d719d257aa050a37d12ff2",
      "original_line" : 2555,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 483033034,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483916524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4276679?v=4",
         "events_url" : "https://api.github.com/users/robot-dreams/events{/privacy}",
         "followers_url" : "https://api.github.com/users/robot-dreams/followers",
         "following_url" : "https://api.github.com/users/robot-dreams/following{/other_user}",
         "gists_url" : "https://api.github.com/users/robot-dreams/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/robot-dreams",
         "id" : 4276679,
         "login" : "robot-dreams",
         "node_id" : "MDQ6VXNlcjQyNzY2Nzk=",
         "organizations_url" : "https://api.github.com/users/robot-dreams/orgs",
         "received_events_url" : "https://api.github.com/users/robot-dreams/received_events",
         "repos_url" : "https://api.github.com/users/robot-dreams/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/robot-dreams/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/robot-dreams"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r484319651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484319651"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree with your first point. For the second point, if we consider the client to be a passive listener (ie the only input it's getting is from the validation interface), then it shouldn't/can't acquire those locks. It should wait for a `UpdatedBlockTip` to be sure that the state is consistent.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-09-07T09:44:48Z",
      "diff_hunk" : "@@ -132,14 +132,19 @@ class CValidationInterface {\n     virtual void TransactionRemovedFromMempool(const CTransactionRef &ptx) {}\n     /**\n      * Notifies listeners of a block being connected.\n-     * Provides a vector of transactions evicted from the mempool as a result.\n+     *\n+     * The mempool is not guaranteed to be in a consistent state when this\n+     * notification is fired. Listeners should use UpdatedBlockTip for that.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r484319651",
      "id" : 484319651,
      "in_reply_to_id" : 479615472,
      "line" : 139,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMxOTY1MQ==",
      "original_commit_id" : "42f5e77bbbaf20e5e03378d6daa640452e0c5bbf",
      "original_line" : 139,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/validationinterface.h",
      "position" : 7,
      "pull_request_review_id" : 483413932,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484319651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r484321444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484321444"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure. That seems better. Updated.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2020-09-07T09:47:56Z",
      "diff_hunk" : "@@ -2541,45 +2541,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(std::move(block)) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. The BlockConnected validationinterface signal is\n+ * fired after a single ABCS call for all blocks that were connected in that\n+ * ABCS call.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r484321444",
      "id" : 484321444,
      "in_reply_to_id" : 483916524,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMyMTQ0NA==",
      "original_commit_id" : "d956ac72f11c0888c6d719d257aa050a37d12ff2",
      "original_line" : 2555,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 483416162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484321444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r583777097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583777097"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Suggest removing this `using` and moving the associated comment to the header. (In particular, if someone changes one `using` or the other, the one in validation.cpp wins; not precisely shadowing but still annoying)",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2021-02-26T16:52:11Z",
      "diff_hunk" : "@@ -2541,45 +2541,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(std::move(block)) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. After the ABCS call returns, a separate\n+ * BlockConnected validationinterface signal is fired for each block that was\n+ * connected in the ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.\n-        assert(!blocksConnected.back().pindex);\n-        blocksConnected.pop_back();\n-        return blocksConnected;\n-    }\n-};\n+using ConnectTrace = std::vector<PerBlockConnectTrace>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r583777097",
      "id" : 583777097,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mzc3NzA5Nw==",
      "original_commit_id" : "4faaaa1d5935e1296c624a8d9d414989ec2fede6",
      "original_line" : 2557,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 599759426,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583777097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r583778936"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583778936"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Adding `assert(index != nullptr && block);` would replace the assertions you're deleting below.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2021-02-26T16:55:08Z",
      "diff_hunk" : "@@ -2541,45 +2541,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(std::move(block)) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r583778936",
      "id" : 583778936,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mzc3ODkzNg==",
      "original_commit_id" : "4faaaa1d5935e1296c624a8d9d414989ec2fede6",
      "original_line" : 2548,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 599759426,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583778936",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r584168851"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584168851"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done. I've moved everything into the class declaration in the header.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2021-02-27T18:07:50Z",
      "diff_hunk" : "@@ -2541,45 +2541,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(std::move(block)) {}\n };\n+\n /**\n- * Used to track blocks whose transactions were applied to the UTXO state as a\n- * part of a single ActivateBestChainStep call.\n- *\n- * This class is single-use, once you call GetBlocksConnected() you have to throw\n- * it away and make a new one.\n+ * Used to track blocks that were connected as part of a single\n+ * ActivateBestChainStep call. After the ABCS call returns, a separate\n+ * BlockConnected validationinterface signal is fired for each block that was\n+ * connected in the ABCS call.\n  */\n-class ConnectTrace {\n-private:\n-    std::vector<PerBlockConnectTrace> blocksConnected;\n-\n-public:\n-    explicit ConnectTrace() : blocksConnected(1) {}\n-\n-    void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n-        assert(!blocksConnected.back().pindex);\n-        assert(pindex);\n-        assert(pblock);\n-        blocksConnected.back().pindex = pindex;\n-        blocksConnected.back().pblock = std::move(pblock);\n-        blocksConnected.emplace_back();\n-    }\n-\n-    std::vector<PerBlockConnectTrace>& GetBlocksConnected() {\n-        // We always keep one extra block at the end of our list because\n-        // blocks are added after all the conflicted transactions have\n-        // been filled in. Thus, the last entry should always be an empty\n-        // one waiting for the transactions from the next block. We pop\n-        // the last entry here to make sure the list we return is sane.\n-        assert(!blocksConnected.back().pindex);\n-        blocksConnected.pop_back();\n-        return blocksConnected;\n-    }\n-};\n+using ConnectTrace = std::vector<PerBlockConnectTrace>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r584168851",
      "id" : 584168851,
      "in_reply_to_id" : 583777097,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE2ODg1MQ==",
      "original_commit_id" : "4faaaa1d5935e1296c624a8d9d414989ec2fede6",
      "original_line" : 2557,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 600180886,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584168851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r584168853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584168853"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "16523a7c42f987428291e149230609a30d49002e",
      "created_at" : "2021-02-27T18:07:52Z",
      "diff_hunk" : "@@ -2541,45 +2541,20 @@ static int64_t nTimeFlush = 0;\n static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n+//! A single block and block index pointer.\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    PerBlockConnectTrace() {}\n+    PerBlockConnectTrace(CBlockIndex* index, std::shared_ptr<const CBlock> block) : pindex(index), pblock(std::move(block)) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#discussion_r584168853",
      "id" : 584168853,
      "in_reply_to_id" : 583778936,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE2ODg1Mw==",
      "original_commit_id" : "4faaaa1d5935e1296c624a8d9d414989ec2fede6",
      "original_line" : 2548,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 600180889,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18685",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-27T18:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584168853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review, @ajtowns! I've addressed your comments and rebased on master (since this was a couple of thousand commits behind the current master).",
      "created_at" : "2021-02-27T18:08:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-787112566",
      "id" : 787112566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NzExMjU2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-27T18:08:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787112566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns do you mind looking at this again? I've addressed your review comments.",
      "created_at" : "2021-04-29T07:20:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-828999358",
      "id" : 828999358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyODk5OTM1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-29T07:20:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/828999358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns?",
      "created_at" : "2021-06-02T15:43:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-853136938",
      "id" : 853136938,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MzEzNjkzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T15:43:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853136938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-06-29T04:23:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-870220375",
      "id" : 870220375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDIyMDM3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-29T04:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870220375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing due to lack of reviewer interest.",
      "created_at" : "2021-07-16T09:38:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-881315423",
      "id" : 881315423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "IC_kwDOABII5840h85f",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-16T09:38:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/881315423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Mark up for grabs?",
      "created_at" : "2021-07-25T23:53:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-886278292",
      "id" : 886278292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "IC_kwDOABII584004iU",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-25T23:53:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886278292",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Mark up for grabs?\r\n\r\n@Rspigler feel free to pick this up if you're interested. I'm happy to review, but this didn't get much reviewer interest last time round.",
      "created_at" : "2021-07-26T08:45:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18685#issuecomment-886504350",
      "id" : 886504350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18685",
      "node_id" : "IC_kwDOABII58401vue",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-26T08:45:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886504350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
