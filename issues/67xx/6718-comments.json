[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Please add a line or two about Trivial tree?\n",
      "created_at" : "2015-09-24T13:58:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#issuecomment-142935770",
      "id" : 142935770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MjkzNTc3MA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142935770/reactions"
      },
      "updated_at" : "2015-09-24T13:58:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142935770",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "node_id" : "MDQ6VXNlcjY4NDg3NjQ=",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40320891"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40320891"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Remove `-`.\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T13:58:26Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in markdown to the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+  - At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time for required for peer review is unpredictable and will vary from patch to patch.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40320891",
      "id" : 40320891,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwODkx",
      "original_commit_id" : "0ceac70f80d2e6728fd6d660695f5e29bf7e9568",
      "original_line" : null,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40320891/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40320891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40321045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40321045"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Should \"Nit\" be included in this list?\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T13:59:36Z",
      "diff_hunk" : "@@ -0,0 +1,100 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in markdown to the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+  - At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time for required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project, that the quality of the patch is at the minimum bar and as well as judging the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit test demonstrating the bug and also proving the fix. This helps prevent regression;\n+  - where consensus rules are affected, must be accompanied by a published BIP assigned with a number;\n+\n+###Peer Review\n+\n+Anyone may participate in peer review is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+\n+  - ACK means \"I have tested the code and I agree it should be merged\"\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded.\n+  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\"\n+  - Concept ACK mean \"I agree in the general principle of this pull request\"\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40321045",
      "id" : 40321045,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIxMDQ1",
      "original_commit_id" : "0ceac70f80d2e6728fd6d660695f5e29bf7e9568",
      "original_line" : null,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40321045/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40321045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK, thanks for writing this up\n",
      "created_at" : "2015-09-24T14:01:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#issuecomment-142937498",
      "id" : 142937498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MjkzNzQ5OA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142937498/reactions"
      },
      "updated_at" : "2015-09-24T14:01:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142937498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK, very well written!\n",
      "created_at" : "2015-09-24T14:05:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#issuecomment-142939389",
      "id" : 142939389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MjkzOTM4OQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142939389/reactions"
      },
      "updated_at" : "2015-09-24T14:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142939389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "node_id" : "MDQ6VXNlcjY4NDg3NjQ=",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK, very nice!\n",
      "created_at" : "2015-09-24T14:08:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#issuecomment-142941007",
      "id" : 142941007,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0Mjk0MTAwNw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142941007/reactions"
      },
      "updated_at" : "2015-09-24T14:08:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142941007",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@paveljanik Re: the trivial tree, maybe @theuni could comment on that. I think it was a great idea, but AFAIK it has not been kept up to date regularly lately, so I 'm not sure what his stance on it is now.\n",
      "created_at" : "2015-09-24T14:14:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#issuecomment-142942567",
      "id" : 142942567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0Mjk0MjU2Nw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142942567/reactions"
      },
      "updated_at" : "2015-09-24T14:14:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142942567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If it is so, I think that adding `[Trivial]` to pull request titles is enough to solve this.\n",
      "created_at" : "2015-09-24T14:16:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#issuecomment-142943142",
      "id" : 142943142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0Mjk0MzE0Mg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142943142/reactions"
      },
      "updated_at" : "2015-09-24T14:16:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142943142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6848764?v=4",
         "events_url" : "https://api.github.com/users/paveljanik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/paveljanik/followers",
         "following_url" : "https://api.github.com/users/paveljanik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/paveljanik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/paveljanik",
         "id" : 6848764,
         "login" : "paveljanik",
         "node_id" : "MDQ6VXNlcjY4NDg3NjQ=",
         "organizations_url" : "https://api.github.com/users/paveljanik/orgs",
         "received_events_url" : "https://api.github.com/users/paveljanik/received_events",
         "repos_url" : "https://api.github.com/users/paveljanik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/paveljanik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/paveljanik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40323230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40323230"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure if this is a good idea. Git and Github are two separate things. I agree with referencing a fix by `fixes #4321` placed in a _Github_ PR description or a _Github_ comment. Placing it in a _git commit_ is not required and not best practice IMO.\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T14:17:03Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40323230",
      "id" : 40323230,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIzMjMw",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40323230/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40323230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40323320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40323320"
         }
      },
      "author_association" : "MEMBER",
      "body" : "+1. I prefer to place it somewhere in the GitHub PR description.\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T14:18:00Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40323320",
      "id" : 40323320,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIzMzIw",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40323320/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40323320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK.\nNice work!\n",
      "created_at" : "2015-09-24T14:19:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#issuecomment-142943813",
      "id" : 142943813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0Mjk0MzgxMw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142943813/reactions"
      },
      "updated_at" : "2015-09-24T14:19:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142943813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40323631"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40323631"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree, to the extent possible you should be able to read and understand the\ncommits without needing access to the github repository or its PRs/issues.\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T14:20:39Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40323631",
      "id" : 40323631,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIzNjMx",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40323631/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40323631",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40325449"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40325449"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Absolutely, it must be understandable without referring to them, but please **do** refer to solved github issues in the commit descriptions. This makes it much easier to keep track of what was solved when when browsing history.\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T14:34:56Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40325449",
      "id" : 40325449,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI1NDQ5",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40325449/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40325449",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40328338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328338"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/proposal/proposals\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T14:56:24Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40328338",
      "id" : 40328338,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI4MzM4",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328338/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40328381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328381"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/diff/diffs\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T14:56:50Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40328381",
      "id" : 40328381,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI4Mzgx",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328381/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40328740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328740"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should \"fixed spelling\" be the example we give as a good simple commit message? Maybe \"Correct typo in xx.cpp\", or something similar?\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T14:59:26Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40328740",
      "id" : 40328740,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI4NzQw",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328740/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328740",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40328990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328990"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/markdown to the /markdown in the/\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T15:01:07Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in markdown to the body of the pull request to indicate tasks are pending.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40328990",
      "id" : 40328990,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI4OTkw",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328990/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40328990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40329134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329134"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/time for required/time required/\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T15:02:22Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in markdown to the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time for required for peer review is unpredictable and will vary from patch to patch.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40329134",
      "id" : 40329134,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5MTM0",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329134/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40329623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329623"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggest rewriting this slightly\n*that the quality of the patch meets the minimum standards for inclusion, as well as\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T15:06:25Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in markdown to the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time for required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project, that the quality of the patch is at the minimum bar and as well as judging the general consensus of contributors.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40329623",
      "id" : 40329623,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5NjIz",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329623/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40329746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329746"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/be unit test/be a unit test/\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T15:07:28Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in markdown to the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time for required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project, that the quality of the patch is at the minimum bar and as well as judging the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit test demonstrating the bug and also proving the fix. This helps prevent regression;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40329746",
      "id" : 40329746,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5NzQ2",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329746/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40329934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329934"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/peer review is/peer review which is/\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T15:08:42Z",
      "diff_hunk" : "@@ -0,0 +1,101 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposal using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diff should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"fixed spelling\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in markdown to the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time for required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project, that the quality of the patch is at the minimum bar and as well as judging the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit test demonstrating the bug and also proving the fix. This helps prevent regression;\n+  - where consensus rules are affected, must be accompanied by a published BIP assigned with a number;\n+\n+###Peer Review\n+\n+Anyone may participate in peer review is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40329934",
      "id" : 40329934,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5OTM0",
      "original_commit_id" : "86945479e6990e2b5768273820b1e75dd77aa937",
      "original_line" : null,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329934/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40329934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice work. Definite improvement on the developer-notes, which were somewhat hidden away. The fact that this is shown as suggested reading to everyone opening a pull request is also good.\n",
      "created_at" : "2015-09-24T15:16:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#issuecomment-142959477",
      "id" : 142959477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0Mjk1OTQ3Nw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142959477/reactions"
      },
      "updated_at" : "2015-09-24T15:16:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142959477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40348637"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40348637"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/hierarchy/roles/\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T17:45:43Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40348637",
      "id" : 40348637,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4NjM3",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40348637/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40348637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40348949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40348949"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Prefer colon format (and seems to be more common):\n\n```\np2p: Add ZMQ message support\nconsensus: Add new opcode for BIP-XXXX\nqt/wallet: Refactor send code\n```\n\n(also note ZMQ really has nothing to do with p2p..)\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T17:48:19Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposals using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40348949",
      "id" : 40348949,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4OTQ5",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40348949/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40348949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349117"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should I reopen TBC support? ;)\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T17:49:44Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposals using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349117",
      "id" : 40349117,
      "line" : 54,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MTE3",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : 54,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349117/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349117",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "libsecp256k1*\n\nAlthough I'm not sure this document should apply to it.\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T17:50:24Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposals using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349180",
      "id" : 40349180,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MTgw",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349180/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349302"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This doesn't belong under \"must\".\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T17:51:27Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposals using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349302",
      "id" : 40349302,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzAy",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349302/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349390"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349390"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also needs non-trivial miner support (for new rules) or community consensus (for removed/changed rules).\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T17:52:16Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposals using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression;\n+  - where consensus rules are affected, must be accompanied by a published BIP assigned with a number;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349390",
      "id" : 40349390,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5Mzkw",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349390/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349390",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349459"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not all good NACK reasons are technical.\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T17:52:57Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposals using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression;\n+  - where consensus rules are affected, must be accompanied by a published BIP assigned with a number;\n+\n+\n+###Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+\n+  - ACK means \"I have tested the code and I agree it should be merged\";\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40349459",
      "id" : 40349459,
      "line" : 92,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5NDU5",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : 92,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349459/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40349459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40358524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40358524"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/repositories/repository/\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-24T19:00:13Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40358524",
      "id" : 40358524,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU4NTI0",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40358524/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40358524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40393961"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40393961"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"remembering [that] mistakes\" or \"keeping in mind that\" perhaps?  \n\nGood work :)\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-25T01:56:50Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposals using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    Net: Automatically create hidden service, listen on Tor\n+    Qt: Add feed bump button\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression;\n+  - where consensus rules are affected, must be accompanied by a published BIP assigned with a number;\n+\n+\n+###Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+\n+  - ACK means \"I have tested the code and I agree it should be merged\";\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;\n+  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\";\n+  - Concept ACK means \"I agree in the general principle of this pull request\";\n+  - Nit refers to trivial, often non-blocking issues.\n+\n+Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n+\n+Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review, remembering mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40393961",
      "id" : 40393961,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzOTYx",
      "original_commit_id" : "73f63e8978d32f1d1db436d4fda362426d7ee37d",
      "original_line" : null,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40393961/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40393961",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40430703"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40430703"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm sure there are some exceptions, but in general they should aim to be.\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-25T13:48:27Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposals using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression;\n+  - where consensus rules are affected, must be accompanied by a published BIP assigned with a number;\n+\n+\n+###Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+\n+  - ACK means \"I have tested the code and I agree it should be merged\";\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40430703",
      "id" : 40430703,
      "line" : 92,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNzAz",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : 92,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40430703/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40430703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40430873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40430873"
         }
      },
      "author_association" : "MEMBER",
      "body" : "absolutely. They are a wholly different animal from normal run-of-the-mill changes, that should be made clear.\n",
      "commit_id" : "06d92d71a2ef414543940fd6ef1080176eb455bb",
      "created_at" : "2015-09-25T13:50:06Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of âCore developersâ in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repositories âmaintainersâ who are responsible for merging pull requests as well as a âlead maintainerâ who is responsible for overall merging, moderation and appointment of maintainers and the release cycle.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the âcontributor workflowâ where everyone without exception contributes patch proposals using âpull requestsâ. This facilitates social contribution, easy testing and peer review.\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches \n+\n+The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    [P2P] Add ZMQ message support\n+    [Consensus] Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    [Qt Wallet] Refactor send code\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring \n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as secp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression;\n+  - where consensus rules are affected, must be accompanied by a published BIP assigned with a number;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6718#discussion_r40430873",
      "id" : 40430873,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwODcz",
      "original_commit_id" : "7a95562901ffc523cb3136449ba9e0c78ac682dc",
      "original_line" : null,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "CONTRIBUTING.md",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6718",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40430873/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2015-09-26T08:04:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40430873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
