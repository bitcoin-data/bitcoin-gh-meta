[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "A patch: http://gtf.org/garzik/bitcoin/patch.univalue_get_int\n",
      "created_at" : "2015-10-06T01:43:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-145719718",
      "id" : 145719718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NTcxOTcxOA==",
      "updated_at" : "2015-10-06T01:43:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145719718",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "How does json_spirit handle out of range integeres?\nI'd say there is only one sane way to handle it: reject the input?\n\n```\n9999999999 = 0x2 540b e3ff\n```\n\nYeah, that screams \"too big for 32 bit signed integer\" to me.\n",
      "created_at" : "2015-10-07T07:28:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146100704",
      "id" : 146100704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NjEwMDcwNA==",
      "updated_at" : "2015-10-07T19:37:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146100704",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "static_cast will just _truncate_ the number to 32 bit, NACK on that\n\nWe should however document the new behavior.\n",
      "created_at" : "2015-10-07T07:31:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146101116",
      "id" : 146101116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NjEwMTExNg==",
      "updated_at" : "2015-10-07T07:38:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146101116",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Agree with @laanwj. What about if UniValue would throw an exception in case of a detected out-of-range int?\n",
      "created_at" : "2015-10-07T07:53:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146104906",
      "id" : 146104906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NjEwNDkwNg==",
      "updated_at" : "2015-10-07T07:53:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146104906",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonasschnelli That's what it does now, and is tested behavior. And the attached patch disables it.\n",
      "created_at" : "2015-10-07T08:16:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146110645",
      "id" : 146110645,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NjExMDY0NQ==",
      "updated_at" : "2015-10-07T08:16:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146110645",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj The patch precisely mimics json_spirit behavior, thus restoring the old RPC interface behavior.\n\nThe user (@gmaxwell) complained about the exception being thrown, as that causes a trickle down impact of making a previously-working RPC call now not work.\n\nIf we are to keep the new behavior, which _is cleaner and more type specific_, every .get_int() must be audited.\n\nIn theory the current get_int() call inside the RPC function is wrong, and an audit will fix that and any others.\n",
      "created_at" : "2015-10-07T23:26:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146364753",
      "id" : 146364753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NjM2NDc1Mw==",
      "updated_at" : "2015-10-07T23:26:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146364753",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The old situation was clearly wrong to me - large numbers should not be silently ignored, let alone silently ANDed with `0xffffffff`.\n\nThis was a much larger risk than just rejecting the value. @gmaxwell was lucky that his arbitrary big value mapped to another large number in 32 bit integers. It could just as well have mapped to 1, or even -1 instead. The result would be much more \"WTF\" than a 'number too large' error.\n\nThe error signals a clear wrong input. Yes, this may mean people have to change cases where this happens in their interface, but this may help them isolate pesky hidden bugs. \n\nThe new behavior is more strict but not _wrong_ in any way. Working around it by restoring the previous broken behavior is not acceptable to me. If this means auditing uses of get_int, that is what should be done (although as said, any 'failure scenario' here is preferable to silently chopping off numbers).\n",
      "created_at" : "2015-10-08T01:43:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146390395",
      "id" : 146390395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NjM5MDM5NQ==",
      "updated_at" : "2015-10-08T01:44:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146390395",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK on restoring the broken behaviour.\nAgreed with @laanwj that just because it might break an existing API, doesn't mean we should revert [the behaviour].\n\n@jgarzik if you feel strongly,  maybe it should be noted in a README/CHANGELOG?\n\nThis [xkcd](https://imgs.xkcd.com/comics/workflow.png) comes to mind.\n",
      "created_at" : "2015-10-08T01:49:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-146390909",
      "id" : 146390909,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NjM5MDkwOQ==",
      "updated_at" : "2015-10-08T01:49:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146390909",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/413395?v=4",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "node_id" : "MDQ6VXNlcjQxMzM5NQ==",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This issue is not resolved.  Do not close until it is solved / release noted / audited.\n",
      "created_at" : "2015-10-20T12:27:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-149549838",
      "id" : 149549838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0OTU0OTgzOA==",
      "updated_at" : "2015-10-20T12:27:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149549838",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't regard it as an issue.\n\nYou're providing a large number where a 32 bit integer is parsed. The only sane action is to reject the input.\n\nTruncating was extremely ill-advised. This is an improvement not a reversion!\n",
      "created_at" : "2015-10-20T12:55:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-149558518",
      "id" : 149558518,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0OTU1ODUxOA==",
      "updated_at" : "2015-10-20T12:57:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149558518",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "(pasting from IRC for the record)\nThe issue is\n- user visible breakage occurred\n- it was noticed in the field by users\n- other get_int() calls should be checked for further unexpected behavior changes\n\nI agree it is an improvement but we cannot simply assume it is a bug-free improvement.\n",
      "created_at" : "2015-10-20T13:07:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-149562441",
      "id" : 149562441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0OTU2MjQ0MQ==",
      "updated_at" : "2015-10-20T13:07:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149562441",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "NACK. I agree with @laanwj \n",
      "created_at" : "2015-10-20T13:10:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-149562864",
      "id" : 149562864,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0OTU2Mjg2NA==",
      "updated_at" : "2015-10-20T13:10:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149562864",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7275704?v=4",
         "events_url" : "https://api.github.com/users/btcdrak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/btcdrak/followers",
         "following_url" : "https://api.github.com/users/btcdrak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/btcdrak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/btcdrak",
         "id" : 7275704,
         "login" : "btcdrak",
         "node_id" : "MDQ6VXNlcjcyNzU3MDQ=",
         "organizations_url" : "https://api.github.com/users/btcdrak/orgs",
         "received_events_url" : "https://api.github.com/users/btcdrak/received_events",
         "repos_url" : "https://api.github.com/users/btcdrak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/btcdrak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/btcdrak"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@gmaxwell What is your expected behaviour here?\n",
      "created_at" : "2015-10-20T13:12:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-149563350",
      "id" : 149563350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0OTU2MzM1MA==",
      "updated_at" : "2015-10-20T13:12:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149563350",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Folks, this is an issue not a PR.  There is nothing to NAK :)\n\nThis issue is open until the user visible breakage is fully analyzed and documented ,which I've assigned to myself.  All .get_int() calls should be examined, not just this one.\n\nThe new behavior throws an exception, versus prior behavior of returning a range bound number and _not_ throw an exception.  This new behavior is more correct, but does produce user visible interface changes.\n",
      "created_at" : "2015-10-20T13:17:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-149564480",
      "id" : 149564480,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0OTU2NDQ4MA==",
      "updated_at" : "2015-10-20T13:19:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149564480",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "We have APIs where there is no way to provide an 'infinite' but where one is really expected.  Examples are the depths that listunspent and list transaction go back.  The positional arguments _require_ you to provide something in these places, even when you really just want the default.\n\nAs far as I can tell, what just about everyone does is mashes the button to get a really big good-as-infinite value. So far so good.  They bake these values into their command-lines and scripts etc. And the new behavior now fails with these values that worked before-- just because they hit 10 nines instead of 9.\n\nFor most of these things, I think saturating is appropriate. Yes-- it's not the most \"type safe\" behavior (though a saturating integer is a type that these could be defined as!), but JSON is not type safe. This was also the previously effective behavior. \n\nConsequence of not doing something here is that the interfaces becomes harder to use-- because now you have the mental load of the largest permitted value. Consequence of saturating is that users who've become confused and sent in some totally crazy wrong field and up getting the \"effectively infinite\" default behavior instead of what they really wanted.\n",
      "created_at" : "2015-10-20T16:27:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-149623205",
      "id" : 149623205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0OTYyMzIwNQ==",
      "updated_at" : "2015-10-20T16:27:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149623205",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think saturation would be good in this specific case, as it concerns a limit (and max is more-or-less infinite). It should definitely not be the default behavior of `get_int`. But adding a `get_int_saturate` (@gmaxwell's idea) and using it in listunspent would be a valid option.\n\nTo be clear, the previous behavior was _not_ saturation:\n\n```\n10000000 â 10000000\n100000000 â 100000000\n1000000000 â 1000000000\n10000000000 â 1410065408\n100000000000 â 1215752192\n1000000000000 â -727379968\n10000000000000 â 1316134912\n100000000000000 â 276447232\n1000000000000000 â -1530494976\n10000000000000000 â 1874919424\n100000000000000000 â 1569325056\n1000000000000000000 â -1486618624\n10000000000000000000 â -1981284352\n100000000000000000000 â 1661992960\n```\n\nThe saturating parser would have to actually detect an overflow (or underflow) and  return INT_MIN or INT_MAX respectively. I remember implementing some of this in `ParseInt32` but not sure what's done with it... think it just returns a generic error\n",
      "created_at" : "2015-10-20T17:57:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-149647989",
      "id" : 149647989,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0OTY0Nzk4OQ==",
      "updated_at" : "2015-10-20T18:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149647989",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sufficiently old and undesired - closing",
      "created_at" : "2019-10-21T13:51:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6765#issuecomment-544524384",
      "id" : 544524384,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6765",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NDUyNDM4NA==",
      "updated_at" : "2019-10-21T13:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544524384",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   }
]
