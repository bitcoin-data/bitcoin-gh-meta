{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "There have been multiple discussions about completing libconsensus in the mailing list but they are hard to find.\nHere's a detailed plan \n\nGoals: \n\n1) Complete libconsensus's C API with the following functions: VerifyScript, VerifyHeader, VerifyTx and VerifyBlock. Possibly also: CheckTransaction/Consensus::CheckTx, Consensus::CheckTxInputs, Consensus::CheckTxInputsScripts (doesn't exist yet in master), CheckBlockHeader, ContextualCheckBlockHeader, CheckBlock and ContextualCheckBlock.\n\n2) Maintain libconsensus as a stateless library that doesn't have its own storage.\n\nRegardless of the concrete final C API, here's some things we do know now and if done in advance, would simplify the task of reviewing concrete C API's proposals:\n- [ ] Separate consensus critical code into different files. Right now, if one wants to propose a concrete C API without moving any code, he needs to include main.cpp (and its abundant dependencies) in the libconsensus build. This goes against goal 2.\n- [ ] Remove depencies that use globals (like Params()/pCurrentParams, util::mapArgs or util::error/util::LogPrintStr/fPrintToConsole_and_friends).\n\nThe most complicated part of proposing a concrete C API is to somehow interface with the equivalent of CBlockIndex and CCoinsViewCache (which depend on storage) in Bitcoin Core:\n- [ ] C-compatible API for CBlockIndex\n- [ ] C-compatible API for CCoinsViewCache\n- [ ] Discuss and accept a complete C API for libconsensus.\n\nIf you think this plan is not detailed enough, please make concrete suggestions or questions: \"this is not well documented enough\" is not very useful as feedback.\n\nProposed API (C++, not the final C API):\n\n```\nbool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* error = NULL);\n\nbool VerifyTx(const CTransaction& tx, CValidationState &state, const Consensus::Params&, int nBlockHeight, int64_t nBlockTime, const CCoinsViewCache& inputs, int nSpendHeight, bool cacheStore, unsigned int flags);\nbool CheckTx(const CTransaction&, CValidationState&, const Consensus::Params&);\n/**\n * Check whether all inputs of this transaction are valid (no double spends and amounts)\n * This does not modify the UTXO set. This does not check scripts and sigs.\n * Preconditions: tx.IsCoinBase() is false.\n */\nbool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n/**\n * Preconditions: tx.IsCoinBase() is false.\n * Check whether all inputs of this transaction are valid (scripts and sigs)\n * This does not modify the UTXO set. This does not check double spends and amounts.\n * This is the more expensive consensus check for a transaction, do it last.\n */\nbool CheckTxInputsScripts(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, bool cacheStore, unsigned int flags);\n\n/** Block header validation functions */\n\nbool VerifyBlockHeader(const CBlockHeader&, CValidationState&, const Consensus::Params&, int64_t nTime, CBlockIndexBase*, PrevIndexGetter);\nbool CheckBlockHeader(const CBlockHeader&, CValidationState&, const Consensus::Params&, int64_t nTime, bool fCheckPOW = true);\nbool ContextualCheckBlockHeader(const CBlockHeader&, CValidationState&, const Consensus::Params&, const CBlockIndexBase*, PrevIndexGetter);\n\n/** Block validation functions */\n\nbool VerifyBlock(const CBlock&, CValidationState&, const Consensus::Params&, int64_t nTime, const CBlockIndexBase*, PrevIndexGetter);\nbool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& params, int64_t nTime, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\nbool ContextualCheckBlock(const CBlock&, CValidationState&, const Consensus::Params&, const CBlockIndexBase*, PrevIndexGetter);\n```\n",
   "closed_at" : "2020-05-07T00:12:18Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 11,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714/comments",
   "created_at" : "2015-09-23T17:23:09Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714",
   "id" : 107966978,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "description" : null,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "E6F6D6",
         "default" : false,
         "description" : null,
         "id" : 135961,
         "name" : "Refactoring",
         "node_id" : "MDU6TGFiZWwxMzU5NjE=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWUxMDc5NjY5Nzg=",
   "number" : 6714,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "A plan for abstracting out libconsensus",
   "updated_at" : "2020-05-07T00:12:18Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
      "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jtimon/followers",
      "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jtimon",
      "id" : 1008458,
      "login" : "jtimon",
      "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
      "organizations_url" : "https://api.github.com/users/jtimon/orgs",
      "received_events_url" : "https://api.github.com/users/jtimon/received_events",
      "repos_url" : "https://api.github.com/users/jtimon/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jtimon"
   }
}
