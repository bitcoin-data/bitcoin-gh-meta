[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> There have been multiple discussions about completing libconsensus in the mailing list but they are hard to find.\n\nMost recently:\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009568.html\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011005.html\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011149.html\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011150.html\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/011161.html\n",
      "created_at" : "2015-09-23T17:27:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-142671839",
      "id" : 142671839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MjY3MTgzOQ==",
      "updated_at" : "2015-09-23T17:27:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/142671839",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/101238?v=4",
         "events_url" : "https://api.github.com/users/kanzure/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kanzure/followers",
         "following_url" : "https://api.github.com/users/kanzure/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kanzure/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kanzure",
         "id" : 101238,
         "login" : "kanzure",
         "node_id" : "MDQ6VXNlcjEwMTIzOA==",
         "organizations_url" : "https://api.github.com/users/kanzure/orgs",
         "received_events_url" : "https://api.github.com/users/kanzure/received_events",
         "repos_url" : "https://api.github.com/users/kanzure/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kanzure/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kanzure/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kanzure"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "An alternative plan that may be more interesting for users in the short term is to slowly complete libconsensus' API. For example, the next steps could be:\n- [ ] Separate header consensus validation critical code\n- [ ] Remove depencies that use globals\n- [ ] C-compatible API for CBlockIndex\n- [ ] Expose CheckBlockHeader, ContextualCheckBlockHeader and VerifyHeader\n\nThat would require less work to see some results for users rather than merely better software quality from having a properly encapsulated code base, and an increase in the number of potential contributors due to the decreased probability of any given change being considered risky or conflicting with other changes that are more of a more priority.\n",
      "created_at" : "2015-09-24T20:46:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-143046055",
      "id" : 143046055,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MzA0NjA1NQ==",
      "updated_at" : "2015-09-24T20:46:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143046055",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If we're to maintain libconsensus as stateless, we'll presumably have to pass it the UTXO somehow. Eventually, I was imagining this being exposed as an abstract DB model so wrappers can be written to support arbitrary storage engines.\n\nAlso, it would be useful to provide a subscription mechanism for signals pertaining to consensus state changes (i.e. NEW_TIP, REORG).\n",
      "created_at" : "2015-09-24T20:59:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-143049581",
      "id" : 143049581,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MzA0OTU4MQ==",
      "updated_at" : "2015-09-24T20:59:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143049581",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/894059?v=4",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "node_id" : "MDQ6VXNlcjg5NDA1OQ==",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd also like to add that I think rather than focusing too much on quick implementation we should really think more about high level design. Architecturally, having a solid, reusable libconsensus that is easy to review is priority #1, methinks.\n",
      "created_at" : "2015-09-24T21:01:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-143049945",
      "id" : 143049945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MzA0OTk0NQ==",
      "updated_at" : "2015-09-24T21:02:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143049945",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/894059?v=4",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "node_id" : "MDQ6VXNlcjg5NDA1OQ==",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I would like to correct myself - a libconsensus is not what's priority #1. What's priority #1 is removing dependencies on anything but highly stable code, cleaning up the directory structure, and having a good interface.\n",
      "created_at" : "2015-09-24T22:11:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-143063647",
      "id" : 143063647,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MzA2MzY0Nw==",
      "updated_at" : "2015-09-24T22:11:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143063647",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/894059?v=4",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "node_id" : "MDQ6VXNlcjg5NDA1OQ==",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As discussed recently, the value of the code encapsulation and the completion of libconsensus are independent, even if the former is required to implement the latter. For that reason and following @sipa 's and your advice I will prepare an independent document plan for the encapsulation part \"with words and pictures\".\n\nBut the API is also important and even if not so doable in the short term, it's never too late to start discussing it. So I will update the initial post with the \"current proposed API\", even if it's a C++ instead of a C API (functions will be the analogous of  `VerifyScript` not of `bitcoinconsensus_verify_script` )  and there's open questions like how to \"break\" CBlockIndex and CCoinsViewCache.\n\nRegarding your comment about libconsensus being stateless and the UTXO being passed somehow, that's what I mean by \"breaking CCoinsViewCache\" which is I believe the hardest part of designing this API and will probably generate more controversy (since I'm sure there will be alternative proposals).\nMy initial design draft is \"one or more function pointers to retrieve data, basic C types or structs at most\", but there's still several ways to do that.\nI believe the CBlockIndex case is much simpler and we should deal with that first (see #5995).\nVerifyTx requires breaking CCoinsViewCache, VerifyHeader requires breaking CBlockIndex and VerifyBlock requires both.\n",
      "created_at" : "2015-09-24T22:29:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-143066693",
      "id" : 143066693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0MzA2NjY5Mw==",
      "updated_at" : "2015-09-24T22:29:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143066693",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Possibly also: CheckTransaction/Consensus::CheckTx, Consensus::CheckTxInputs, Consensus::CheckTxInputsScripts ...\n\nI'm sure these are by-products, and may easily be exposed at some point, but I'd focus on the higher level functions, such as `VerifyHeader`, `VerifyTx`, ... and expose the low level stuff only if demanded.\n\nI can see the issue regarding stateless and state-dependent checks, and I tend to believe it should be tackled seperately: ideally there were functions for stateless checks, and functions for stateful checks (or both), given that state probably adds a lot of complexity.\n\nI noted a few examples of use-cases that I can think of, which are loosely related to verification in general, see https://github.com/bitcoin/bitcoin/issues/4162#issuecomment-134307209.\n\nFrom a practical perspective, currently on my \"wishlist\" would be to have a better insight about (script) verification failures: exposing `ScriptError` in one way or another seems useful, for example as optional parameter, or return code. I'd differentiate between errors regarding the use of the verification function (such as `ERR_TX_SIZE_MISMATCH`, ...) and actual verification errors (i.e. `ScriptError`).\n",
      "created_at" : "2015-09-29T10:33:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-144019088",
      "id" : 144019088,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NDAxOTA4OA==",
      "updated_at" : "2015-09-29T10:39:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144019088",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5836089?v=4",
         "events_url" : "https://api.github.com/users/dexX7/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dexX7/followers",
         "following_url" : "https://api.github.com/users/dexX7/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dexX7/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dexX7",
         "id" : 5836089,
         "login" : "dexX7",
         "node_id" : "MDQ6VXNlcjU4MzYwODk=",
         "organizations_url" : "https://api.github.com/users/dexX7/orgs",
         "received_events_url" : "https://api.github.com/users/dexX7/received_events",
         "repos_url" : "https://api.github.com/users/dexX7/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dexX7/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dexX7"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Here's a use case I'm looking at right now, which I think might be useful for thinking about libconsensus:\n\nI want to be able to validate blocks in parallel, without holding the cs_main lock.  Basically, I want multiple threads to be able to call TestBlockValidity() with different blocks (why? because I intend to implement 'weak block' announcements, where miners tell their peers about blocks they're working on and the peers pre-validate them).  (this could also speed up RPC getblocktemplate 'proposal', and might even be a big win for normal operation, if block validation doesn't have to hold the cs_main lock for long periods of time)\n\nI THINK that means a design where the context from previous blocks in the chain is encapsulated in some kind of data structure and passed into TestBlockValidity. I'd like to write code that does something like:\n\n```\nReceiveWeakBlock(CBlock& block)\n{\n    LOCK(cs_main);\n    if block->prev isn't current tip: ignore\n    BlockValidationContext = snapshot of information from best chain and snapshot of the UTXO state\n        (snapshot of UTXO state probably implemented as an actual leveldb read-only snapshot).\n    schedule a task to validate the block with the BlockValidationContext, but skipping the POW check...\n    ... I'm imagining the task calls something like:\n         ValidateBlock(const CBlock& block, const BlockValidationContext& context, VALIDATE_BLOCK_ALL & (~VALIDATE_BLOCK_POW))\n}\n```\n",
      "created_at" : "2015-09-30T15:46:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-144453428",
      "id" : 144453428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NDQ1MzQyOA==",
      "updated_at" : "2015-09-30T15:46:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144453428",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated OP with a draft of the currently proposed C++ API (not the final C API).\nI still owe the document with pictures that focuses more in the code movements/architecture. \n",
      "created_at" : "2015-10-01T16:55:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-144785680",
      "id" : 144785680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NDc4NTY4MA==",
      "updated_at" : "2015-10-01T16:55:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144785680",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "After thinking about these issues a bit more, it seems we're conflating several goals in this, and while these goals are complementary in the long run, in the short term this kind of work requires an even greater level of architectural sophistication that strongly takes dependencies and all the development dynamics into account. We really need to take a step back from the code and think high level design.\n\n## Goal 1: Splitting consensus code from nonconsensus code\n\nThis is the literal stated goal of this thread. It is indeed a crucial long-term goal, I hardly think a justification is needed at this point. However, after a bit more discussion and thought it seems that perhaps creating a libconsensus is not the best place to start. I think we agree that most urgent is the encapsulation, not so much the packaging. We should probably forget about a C interface (or any other language bindings) for now.\n\n## Goal 2: Better code organization\n\nI don't think I need to convince anyone here that main.cpp is a horrendous mess. The fact that much of this code is consensus-critical makes things a heck of a lot worse...but even if this were a completely different type of app without such stringent security requirements, this would still be a serious problem in itself. It is seriously hurting recruitment into the project, it is creating enormous bottlenecks in testing and code review...and it is a vicious cycle. Even though most of the core developers are aware of these issues, we've been inadvertently promoting a culture where people try to change as few lines of code as possible and greatly limit their ambitions in the hopes of getting their stuff reviewed and merged quickly lest they suffer months of continuous rebasing...and this tends to lead to an even greater scattering of logic across the codebase in the long run, making refactors even harder...and perhaps even more importantly, making it harder to bring new people up to speed. We need to change this pattern.\n\n## Goal 3: Layered architecture with less stable layers built atop more stable ones\n\nWe've come a long ways since the very early days of this codebase in terms of reducing our complex web of dependencies - but we still have a good ways to go. It is self-evident: the less we need to be tinkering with lower layer stuff in ways that are negatively felt by those atop it and the more that people working atop it can tinker without the risk of breaking something below, the freer we **all** are to tinker generally.\n\nThese three stated goals are inextricably intertwined. Perhaps we should seriously take a step back and contemplate everything...and come up with a plan that addresses all these concerns that can be broken down into small palatable steps before just jumping into doing the steps.\n",
      "created_at" : "2015-10-04T01:14:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-145304208",
      "id" : 145304208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDE0NTMwNDIwOA==",
      "updated_at" : "2015-10-04T01:54:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145304208",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/894059?v=4",
         "events_url" : "https://api.github.com/users/CodeShark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CodeShark/followers",
         "following_url" : "https://api.github.com/users/CodeShark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CodeShark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CodeShark",
         "id" : 894059,
         "login" : "CodeShark",
         "node_id" : "MDQ6VXNlcjg5NDA1OQ==",
         "organizations_url" : "https://api.github.com/users/CodeShark/orgs",
         "received_events_url" : "https://api.github.com/users/CodeShark/received_events",
         "repos_url" : "https://api.github.com/users/CodeShark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CodeShark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CodeShark"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Many changes happened since this issue was opened. E.g. main.cpp is no longer and we have indexes that feed off of the validation interface instead of leeching directly from validation. There is still a lot more to do and we should use this issue as reference. Though, closing this for now. When someone has a plan to restructure consensus and wants to work on it, we can reopen this issue or open a new one, but I think no need to keep this sitting in the open issues until then.",
      "created_at" : "2020-05-07T00:12:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/6714#issuecomment-624956077",
      "id" : 624956077,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6714",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDk1NjA3Nw==",
      "updated_at" : "2020-05-07T00:12:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624956077",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
