[
   {
      "author_association" : "MEMBER",
      "body" : "I am wondering why the tread sanitizer on Ubuntu does not detect this issue",
      "created_at" : "2020-05-19T23:47:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631146948",
      "id" : 631146948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTE0Njk0OA==",
      "updated_at" : "2020-05-19T23:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631146948",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Confirm:\r\n- Fedora 32, Clang 10.0.0: `WARNING: ThreadSanitizer: double lock of a mutex`\r\n- Ubuntu 20.04, Clang 10.0.0: no warnings",
      "created_at" : "2020-05-20T11:48:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631424665",
      "id" : 631424665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTQyNDY2NQ==",
      "updated_at" : "2020-05-20T11:48:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631424665",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\nMind testing #19029?",
      "created_at" : "2020-05-20T15:50:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631561209",
      "id" : 631561209,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTU2MTIwOQ==",
      "updated_at" : "2020-05-20T15:50:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631561209",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Same bug in debian, so I guess this should be reported to the debian clang maintainer?",
      "created_at" : "2020-05-20T20:04:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631696545",
      "id" : 631696545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTY5NjU0NQ==",
      "updated_at" : "2020-05-20T20:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631696545",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "[`llvm-project-10.0.0/compiler-rt/test/tsan/mutex_double_lock.cpp`](https://github.com/llvm-mirror/compiler-rt/blob/master/test/tsan/mutex_double_lock.cpp):\r\n```C++\r\n// RUN: %clangxx_tsan -O1 %s -o %t && %deflake %run %t | FileCheck %s\r\n#include <pthread.h>\r\n#include <unistd.h>\r\n\r\nextern \"C\" void AnnotateRWLockAcquired(const char *f, int l, void *m, long rw);\r\n\r\nvoid *ThreadFunc(void *m) {\r\n  AnnotateRWLockAcquired(__FILE__, __LINE__, m, 1);\r\n  return 0;\r\n}\r\n\r\nint main() {\r\n  int m = 0;\r\n  AnnotateRWLockAcquired(__FILE__, __LINE__, &m, 1);\r\n  pthread_t th;\r\n  pthread_create(&th, 0, ThreadFunc, &m);\r\n  pthread_join(th, 0);\r\n  return 0;\r\n}\r\n\r\n// CHECK: WARNING: ThreadSanitizer: double lock of a mutex\r\n// CHECK:     #0 AnnotateRWLockAcquired\r\n// CHECK:     #1 ThreadFunc\r\n// CHECK: Location is stack of main thread.\r\n// CHECK:   Mutex {{.*}} created at:\r\n// CHECK:     #0 AnnotateRWLockAcquired\r\n// CHECK:     #1 main\r\n// CHECK: SUMMARY: ThreadSanitizer: double lock of a mutex {{.*}}mutex_double_lock.cpp{{.*}}ThreadFunc\r\n```",
      "created_at" : "2020-05-21T04:06:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631866811",
      "id" : 631866811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTg2NjgxMQ==",
      "updated_at" : "2020-05-21T04:16:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631866811",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Same bug in debian, so I guess this should be reported to the debian clang maintainer?\r\n\r\nI cannot see such warnings on macOS 10.15  with `brew`ed clang 10.0.0.\r\nMaybe it is Fedora distro's bug?\r\n\r\nThe (almost) minimal code for testing:\r\n```C++\r\n#include <condition_variable>\r\n#include <chrono>\r\n#include <iostream>\r\n#include <mutex>\r\n#include <thread>\r\n \r\nstd::mutex m;\r\nstd::condition_variable cv;\r\n\r\nvoid ThreadOne() {\r\n    std::unique_lock<std::mutex> lock(m);\r\n    std::cout << __func__ << \":\" << __LINE__ << std::endl;\r\n    cv.wait_for(lock, std::chrono::seconds(3), []{ return false; });\r\n    std::cout << __func__ << \":\" << __LINE__ << std::endl;\r\n}\r\n\r\nvoid ThreadTwo() {\r\n    std::unique_lock<std::mutex> lock(m);\r\n    std::cout << __func__ << \":\" << __LINE__ << std::endl;\r\n    cv.wait_for(lock, std::chrono::seconds(10), []{ return false; });\r\n    std::cout << __func__ << \":\" << __LINE__ << std::endl;\r\n}\r\n\r\nint main() {\r\n    std::thread t1(ThreadOne);\r\n    std::thread t2(ThreadTwo);\r\n    t1.join();\r\n    t2.join();\r\n    return 0;\r\n}\r\n```",
      "created_at" : "2020-05-21T07:38:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631935873",
      "id" : 631935873,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTkzNTg3Mw==",
      "updated_at" : "2020-05-21T07:38:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631935873",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I see this on Arch with self compiled clang ( `clang version 10.0.0 (https://github.com/llvm/llvm-project.git d32170dbd5b0d54436537b6b75beaf44324e0c28)` )\r\n\r\n```\r\n$ TSAN_OPTIONS=\"halt_on_error=1\" ./src/bitcoind -noprinttoconsole\r\n==================\r\nWARNING: ThreadSanitizer: double lock of a mutex (pid=105686)\r\n    #0 pthread_mutex_lock /home/elichai2/gits/llvm-project/compiler-rt/lib/tsan/../sanitizer_common/sanitizer_common_interceptors.inc:4153:3 (bitcoind+0xa0316)\r\n    #1 __gthread_mutex_lock /usr/include/c++/10.1.0/x86_64-pc-linux-gnu/bits/gthr-default.h:749:41 (bitcoind+0x536b0f)\r\n    #2 std::mutex::lock() /usr/include/c++/10.1.0/bits/std_mutex.h:100:37 (bitcoind+0x536b0f)\r\n    #3 std::unique_lock<std::mutex>::lock() /usr/include/c++/10.1.0/bits/unique_lock.h:138:21 (bitcoind+0x536b0f)\r\n    #4 UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::Enter(char const*, char const*, int) /home/elichai2/gits/bitcoin-variant/src/./sync.h:131:23 (bitcoind+0x536b0f)\r\n    #5 UniqueLock<AnnotatedMixin<std::mutex>, std::unique_lock<std::mutex> >::UniqueLock(AnnotatedMixin<std::mutex>&, char const*, char const*, int, bool) /home/elichai2/gits/bitcoin-variant/src/./sync.h:152:18 (bitcoind+0x536b0f)\r\n    #6 CThreadInterrupt::sleep_for(std::chrono::duration<long, std::ratio<1l, 1000l> >) /home/elichai2/gits/bitcoin-variant/src/threadinterrupt.cpp:33:5 (bitcoind+0x536b0f)\r\n    #7 void std::__invoke_impl<void, void (CConnman::*&)(), CConnman*&>(std::__invoke_memfun_deref, void (CConnman::*&)(), CConnman*&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:73:14 (bitcoind+0x17d5ac)\r\n    #8 std::__invoke_result<void (CConnman::*&)(), CConnman*&>::type std::__invoke<void (CConnman::*&)(), CConnman*&>(void (CConnman::*&)(), CConnman*&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:95:14 (bitcoind+0x17d5ac)\r\n    #9 void std::_Bind<void (CConnman::* (CConnman*))()>::__call<void, 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/functional:416:11 (bitcoind+0x17d5ac)\r\n    #10 void std::_Bind<void (CConnman::* (CConnman*))()>::operator()<void>() /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/functional:499:17 (bitcoind+0x17d5ac)\r\n    #11 void std::__invoke_impl<void, std::_Bind<void (CConnman::* (CConnman*))()>&>(std::__invoke_other, std::_Bind<void (CConnman::* (CConnman*))()>&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:60:14 (bitcoind+0x17d5ac)\r\n    #12 std::enable_if<__and_<std::is_void<void>, std::__is_invocable<std::_Bind<void (CConnman::* (CConnman*))()>&> >::value, void>::type std::__invoke_r<void, std::_Bind<void (CConnman::* (CConnman*))()>&>(std::_Bind<void (CConnman::* (CConnman*))()>&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:153:7 (bitcoind+0x17d5ac)\r\n    #13 std::_Function_handler<void (), std::_Bind<void (CConnman::* (CConnman*))()> >::_M_invoke(std::_Any_data const&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/std_function.h:291:9 (bitcoind+0x17d5ac)\r\n    #14 std::function<void ()>::operator()() const /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/std_function.h:622:14 (bitcoind+0x12979f)\r\n    #15 void TraceThread<std::function<void ()> >(char const*, std::function<void ()>) /home/elichai2/gits/bitcoin-variant/src/./util/system.h:392:9 (bitcoind+0x12979f)\r\n    #16 void std::__invoke_impl<void, void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> >(std::__invoke_other, void (*&&)(char const*, std::function<void ()>), char const*&&, std::function<void ()>&&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:60:14 (bitcoind+0x17d893)\r\n    #17 std::__invoke_result<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> >::type std::__invoke<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> >(void (*&&)(char const*, std::function<void ()>), char const*&&, std::function<void ()>&&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:95:14 (bitcoind+0x17d893)\r\n    #18 void std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> > >::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/thread:264:13 (bitcoind+0x17d893)\r\n    #19 std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> > >::operator()() /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/thread:271:11 (bitcoind+0x17d893)\r\n    #20 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> > > >::_M_run() /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/thread:215:13 (bitcoind+0x17d893)\r\n    #21 execute_native_thread_routine /build/gcc/src/gcc/libstdc++-v3/src/c++11/thread.cc:80:18 (libstdc++.so.6+0xcfb73)\r\n\r\n  Location is heap block of size 328976 at 0x7fd09f302000 allocated by main thread:\r\n    #0 operator new(unsigned long) /home/elichai2/gits/llvm-project/compiler-rt/lib/tsan/rtl/tsan_new_delete.cpp:64:3 (bitcoind+0xf231b)\r\n    #1 AppInitMain(NodeContext&) /home/elichai2/gits/bitcoin-variant/src/init.cpp:1376:46 (bitcoind+0x116388)\r\n    #2 AppInit(int, char**) /home/elichai2/gits/bitcoin-variant/src/bitcoind.cpp:148:16 (bitcoind+0xf3f16)\r\n    #3 main /home/elichai2/gits/bitcoin-variant/src/bitcoind.cpp:178:13 (bitcoind+0xf3f16)\r\n\r\n  Mutex M921689607751673000 is already destroyed.\r\n\r\nSUMMARY: ThreadSanitizer: double lock of a mutex /usr/include/c++/10.1.0/x86_64-pc-linux-gnu/bits/gthr-default.h:749:41 in __gthread_mutex_lock\r\n\r\n```",
      "created_at" : "2020-05-21T08:05:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631947999",
      "id" : 631947999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTk0Nzk5OQ==",
      "updated_at" : "2020-05-21T08:06:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631947999",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@elichai Does #19029 fix it for you?",
      "created_at" : "2020-05-21T08:07:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631948831",
      "id" : 631948831,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTk0ODgzMQ==",
      "updated_at" : "2020-05-21T08:07:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631948831",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Nope, still the same error: (tried make clean and all)\r\n```bash\r\n$ git checkout origin/pr/19029\r\n$ ./autogen.sh && ./configure --disable-wallet --with-sanitizers=thread --with-gui=no --disable-tests CC=clang CXX=clang++\r\n$ make clean\r\n$ make -j12\r\n$ with-env [TSAN_OPTIONS \"halt_on_error=1\"] {./src/bitcoind -noprinttoconsole}\r\n==================\r\nWARNING: ThreadSanitizer: double lock of a mutex (pid=141560)\r\n    #0 pthread_mutex_lock /home/elichai2/gits/llvm-project/compiler-rt/lib/tsan/../sanitizer_common/sanitizer_common_interceptors.inc:4153:3 (bitcoind+0x9d696)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/x86_64-pc-linux-gnu/bits/gthr-default.h:749:12 (bitcoind+0x158b35)\r\n    #2 std::mutex::lock() /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/std_mutex.h:100:17 (bitcoind+0x158b35)\r\n    #3 std::lock_guard<std::mutex>::lock_guard(std::mutex&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/std_mutex.h:159:19 (bitcoind+0x158b35)\r\n    #4 CConnman::WakeMessageHandler() /home/elichai2/gits/bitcoin-variant/src/net.cpp:1458:37 (bitcoind+0x158b35)\r\n    #5 CConnman::SocketHandler() /home/elichai2/gits/bitcoin-variant/src/net.cpp:1399:21 (bitcoind+0x158b35)\r\n    #6 CConnman::ThreadSocketHandler() /home/elichai2/gits/bitcoin-variant/src/net.cpp:1451:9 (bitcoind+0x159c4c)\r\n    #7 void std::__invoke_impl<void, void (CConnman::*&)(), CConnman*&>(std::__invoke_memfun_deref, void (CConnman::*&)(), CConnman*&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:73:14 (bitcoind+0x17a9dc)\r\n    #8 std::__invoke_result<void (CConnman::*&)(), CConnman*&>::type std::__invoke<void (CConnman::*&)(), CConnman*&>(void (CConnman::*&)(), CConnman*&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:95:14 (bitcoind+0x17a9dc)\r\n    #9 void std::_Bind<void (CConnman::* (CConnman*))()>::__call<void, 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/functional:416:11 (bitcoind+0x17a9dc)\r\n    #10 void std::_Bind<void (CConnman::* (CConnman*))()>::operator()<void>() /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/functional:499:17 (bitcoind+0x17a9dc)\r\n    #11 void std::__invoke_impl<void, std::_Bind<void (CConnman::* (CConnman*))()>&>(std::__invoke_other, std::_Bind<void (CConnman::* (CConnman*))()>&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:60:14 (bitcoind+0x17a9dc)\r\n    #12 std::enable_if<__and_<std::is_void<void>, std::__is_invocable<std::_Bind<void (CConnman::* (CConnman*))()>&> >::value, void>::type std::__invoke_r<void, std::_Bind<void (CConnman::* (CConnman*))()>&>(std::_Bind<void (CConnman::* (CConnman*))()>&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:153:7 (bitcoind+0x17a9dc)\r\n    #13 std::_Function_handler<void (), std::_Bind<void (CConnman::* (CConnman*))()> >::_M_invoke(std::_Any_data const&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/std_function.h:291:9 (bitcoind+0x17a9dc)\r\n    #14 std::function<void ()>::operator()() const /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/std_function.h:622:14 (bitcoind+0x126b1f)\r\n    #15 void TraceThread<std::function<void ()> >(char const*, std::function<void ()>) /home/elichai2/gits/bitcoin-variant/src/./util/system.h:392:9 (bitcoind+0x126b1f)\r\n    #16 void std::__invoke_impl<void, void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> >(std::__invoke_other, void (*&&)(char const*, std::function<void ()>), char const*&&, std::function<void ()>&&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:60:14 (bitcoind+0x17acc3)\r\n    #17 std::__invoke_result<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> >::type std::__invoke<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> >(void (*&&)(char const*, std::function<void ()>), char const*&&, std::function<void ()>&&) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/invoke.h:95:14 (bitcoind+0x17acc3)\r\n    #18 void std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> > >::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/thread:264:13 (bitcoind+0x17acc3)\r\n    #19 std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> > >::operator()() /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/thread:271:11 (bitcoind+0x17acc3)\r\n    #20 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(char const*, std::function<void ()>), char const*, std::function<void ()> > > >::_M_run() /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/thread:215:13 (bitcoind+0x17acc3)\r\n    #21 execute_native_thread_routine /build/gcc/src/gcc/libstdc++-v3/src/c++11/thread.cc:80:18 (libstdc++.so.6+0xcfb73)\r\n\r\n  Location is heap block of size 329168 at 0x7ff638b26000 allocated by main thread:\r\n    #0 operator new(unsigned long) /home/elichai2/gits/llvm-project/compiler-rt/lib/tsan/rtl/tsan_new_delete.cpp:64:3 (bitcoind+0xef69b)\r\n    #1 AppInitMain(NodeContext&) /home/elichai2/gits/bitcoin-variant/src/init.cpp:1376:46 (bitcoind+0x113708)\r\n    #2 AppInit(int, char**) /home/elichai2/gits/bitcoin-variant/src/bitcoind.cpp:148:16 (bitcoind+0xf1296)\r\n    #3 main /home/elichai2/gits/bitcoin-variant/src/bitcoind.cpp:178:13 (bitcoind+0xf1296)\r\n\r\n  Mutex M935763518076445768 is already destroyed.\r\n\r\nSUMMARY: ThreadSanitizer: double lock of a mutex /usr/lib64/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/x86_64-pc-linux-gnu/bits/gthr-default.h:749:12 in __gthread_mutex_lock(pthread_mutex_t*)\r\n==================\r\n```",
      "created_at" : "2020-05-21T08:15:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631952838",
      "id" : 631952838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTk1MjgzOA==",
      "updated_at" : "2020-05-21T08:17:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631952838",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Nope, still the same error: (tried make clean and all)\r\n\r\n... but it differs from the one reported by @MarcoFalke in OP, right?",
      "created_at" : "2020-05-21T08:18:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631954199",
      "id" : 631954199,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTk1NDE5OQ==",
      "updated_at" : "2020-05-21T08:18:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631954199",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Could the TSan behavior depend on `libstdc++` implementation?",
      "created_at" : "2020-05-21T08:21:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631955741",
      "id" : 631955741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTk1NTc0MQ==",
      "updated_at" : "2020-05-21T08:21:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631955741",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "hmm it does say:\r\n>  C++11 threading is supported with llvm libc++.\r\n\r\nhttps://clang.llvm.org/docs/ThreadSanitizer.html#current-status",
      "created_at" : "2020-05-21T08:30:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631959761",
      "id" : 631959761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTk1OTc2MQ==",
      "updated_at" : "2020-05-21T08:30:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631959761",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@elichai Thanks for the hint :)\r\n\r\nI can reproduce warnings on Ubuntu 20.04 for the [test case](https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631935873):\r\n```\r\n$ sudo apt install libc++-dev libc++abi-dev\r\n$ clang++ -stdlib=libc++ -pthread -fsanitize=thread -g -O1 -o double-lock double-lock.cpp\r\n$ ./double-lock\r\n```\r\n\r\nBut I failed to build `bitcoind` with `CXXFLAGS='-stdlib=libc++'`:\r\n```\r\n/usr/bin/ld: libbitcoin_util.a(libbitcoin_util_a-system.o): in function `SetupEnvironment()':\r\nsystem.cpp:(.text+0xb576): undefined reference to `boost::filesystem::path::imbue(std::__1::locale const&)'\r\n/usr/bin/ld: system.cpp:(.text+0xb588): undefined reference to `boost::filesystem::path::imbue(std::__1::locale const&)'\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nIt seems on Fedora 32 the `clang++` uses `libc++` by default, but I don't know how to verify this assumption.",
      "created_at" : "2020-05-21T10:00:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631998228",
      "id" : 631998228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTk5ODIyOA==",
      "updated_at" : "2020-05-21T10:00:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631998228",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> ```\r\n> /usr/bin/ld: libbitcoin_util.a(libbitcoin_util_a-system.o): in function `SetupEnvironment()':\r\n> system.cpp:(.text+0xb576): undefined reference to `boost::filesystem::path::imbue(std::__1::locale const&)'\r\n> /usr/bin/ld: system.cpp:(.text+0xb588): undefined reference to `boost::filesystem::path::imbue(std::__1::locale const&)'\r\n> clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n> ```\r\n\r\nGot the exact same error, but stuff came up so don't have the time right now to debug this and see why boost fails linking with boost and libc++",
      "created_at" : "2020-05-21T10:02:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-631999329",
      "id" : 631999329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTk5OTMyOQ==",
      "updated_at" : "2020-05-21T10:02:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631999329",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> But I failed to build `bitcoind` with `CXXFLAGS='-stdlib=libc++'`:\r\n\r\nLLVM's `libc++` and GNU's `libstdc++` aren't ABI compatible.",
      "created_at" : "2020-05-21T10:43:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632016317",
      "id" : 632016317,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjAxNjMxNw==",
      "updated_at" : "2020-05-21T10:43:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632016317",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the minimal example.\r\n\r\nFedora 32:\r\n\r\n```\r\n$ clang++ -fsanitize=thread -lpthread -I/usr/include/c++/10/x86_64-redhat-linux/ /tmp/m.cpp -o /tmp/m.exe && /tmp/m.exe \r\nThreadOne:12\r\n==================\r\nWARNING: ThreadSanitizer: double lock of a mutex (pid=2976881)\r\n    #0 pthread_mutex_lock <null> (m.exe+0x452f1b)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) <null> (m.exe+0x4d15f6)\r\n    #2 std::mutex::lock() <null> (m.exe+0x4d1d88)\r\n    #3 std::unique_lock<std::mutex>::lock() <null> (m.exe+0x4d1d13)\r\n    #4 std::unique_lock<std::mutex>::unique_lock(std::mutex&) <null> (m.exe+0x4d1920)\r\n    #5 ThreadTwo() <null> (m.exe+0x4d1251)\r\n    #6 void std::__invoke_impl<void, void (*)()>(std::__invoke_other, void (*&&)()) <null> (m.exe+0x4d35fd)\r\n    #7 std::__invoke_result<void (*)()>::type std::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4d3530)\r\n    #8 void std::thread::_Invoker<std::tuple<void (*)()> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) <null> (m.exe+0x4d34d8)\r\n    #9 std::thread::_Invoker<std::tuple<void (*)()> >::operator()() <null> (m.exe+0x4d3478)\r\n    #10 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >::_M_run() <null> (m.exe+0x4d334f)\r\n    #11 <null> <null> (libstdc++.so.6+0xd8ac3)\r\n\r\n  Location is global 'm' of size 40 at 0x000000fb7bf0 (m.exe+0x000000fb7bf0)\r\n\r\n  Mutex M13 (0x000000fb7bf0) created at:\r\n    #0 pthread_mutex_lock <null> (m.exe+0x452f1b)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) <null> (m.exe+0x4d15f6)\r\n    #2 std::mutex::lock() <null> (m.exe+0x4d1d88)\r\n    #3 std::unique_lock<std::mutex>::lock() <null> (m.exe+0x4d1d13)\r\n    #4 std::unique_lock<std::mutex>::unique_lock(std::mutex&) <null> (m.exe+0x4d1920)\r\n    #5 ThreadOne() <null> (m.exe+0x4d0fb1)\r\n    #6 void std::__invoke_impl<void, void (*)()>(std::__invoke_other, void (*&&)()) <null> (m.exe+0x4d35fd)\r\n    #7 std::__invoke_result<void (*)()>::type std::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4d3530)\r\n    #8 void std::thread::_Invoker<std::tuple<void (*)()> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) <null> (m.exe+0x4d34d8)\r\n    #9 std::thread::_Invoker<std::tuple<void (*)()> >::operator()() <null> (m.exe+0x4d3478)\r\n    #10 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >::_M_run() <null> (m.exe+0x4d334f)\r\n    #11 <null> <null> (libstdc++.so.6+0xd8ac3)\r\n\r\nSUMMARY: ThreadSanitizer: double lock of a mutex (/tmp/m.exe+0x452f1b) in pthread_mutex_lock\r\n==================\r\nThreadTwo:19\r\nThreadOne:14\r\nThreadTwo:21\r\nThreadSanitizer: reported 1 warnings\r\n```\r\n\r\nDebian Sid:\r\n\r\n```\r\n$ clang++ -fsanitize=thread /tmp/m.cpp -o /tmp/m.exe && /tmp/m.exe\r\nThreadOne:12\r\nThreadTwo:19\r\nThreadOne:14\r\nThreadTwo:21\r\n```\r\n\r\nArch:\r\n\r\n```\r\n$ clang++ -fsanitize=thread /tmp/m.cpp -o /tmp/m.exe && /tmp/m.exe\r\nThreadOne:12\r\n==================\r\nWARNING: ThreadSanitizer: double lock of a mutex (pid=814)\r\n    #0 pthread_mutex_lock ??:? (m.exe+0x7e3c8)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) m.cpp:? (m.exe+0xd3d16)\r\n    #2 std::mutex::lock() ??:? (m.exe+0xd4528)\r\n    #3 std::unique_lock<std::mutex>::lock() ??:? (m.exe+0xd44b3)\r\n    #4 std::unique_lock<std::mutex>::unique_lock(std::mutex&) ??:? (m.exe+0xd4080)\r\n    #5 ThreadTwo() ??:? (m.exe+0xd38e0)\r\n    #6 void std::__invoke_impl<void, void (*)()>(std::__invoke_other, void (*&&)()) ??:? (m.exe+0xd5ead)\r\n    #7 std::__invoke_result<void (*)()>::type std::__invoke<void (*)()>(void (*&&)()) ??:? (m.exe+0xd5de0)\r\n    #8 void std::thread::_Invoker<std::tuple<void (*)()> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) ??:? (m.exe+0xd5d88)\r\n    #9 std::thread::_Invoker<std::tuple<void (*)()> >::operator()() ??:? (m.exe+0xd5d28)\r\n    #10 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >::_M_run() ??:? (m.exe+0xd5bff)\r\n    #11 execute_native_thread_routine /build/gcc/src/gcc/libstdc++-v3/src/c++11/thread.cc:80 (libstdc++.so.6+0xcfb73)\r\n\r\n  Location is global '<null>' at 0x000000000000 (m.exe+0x000000bb9990)\r\n\r\n  Mutex M13 (0x5645c381d990) created at:\r\n    #0 pthread_mutex_lock ??:? (m.exe+0x7e3c8)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) m.cpp:? (m.exe+0xd3d16)\r\n    #2 std::mutex::lock() ??:? (m.exe+0xd4528)\r\n    #3 std::unique_lock<std::mutex>::lock() ??:? (m.exe+0xd44b3)\r\n    #4 std::unique_lock<std::mutex>::unique_lock(std::mutex&) ??:? (m.exe+0xd4080)\r\n    #5 ThreadOne() ??:? (m.exe+0xd35d0)\r\n    #6 void std::__invoke_impl<void, void (*)()>(std::__invoke_other, void (*&&)()) ??:? (m.exe+0xd5ead)\r\n    #7 std::__invoke_result<void (*)()>::type std::__invoke<void (*)()>(void (*&&)()) ??:? (m.exe+0xd5de0)\r\n    #8 void std::thread::_Invoker<std::tuple<void (*)()> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) ??:? (m.exe+0xd5d88)\r\n    #9 std::thread::_Invoker<std::tuple<void (*)()> >::operator()() ??:? (m.exe+0xd5d28)\r\n    #10 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >::_M_run() ??:? (m.exe+0xd5bff)\r\n    #11 execute_native_thread_routine /build/gcc/src/gcc/libstdc++-v3/src/c++11/thread.cc:80 (libstdc++.so.6+0xcfb73)\r\n\r\nSUMMARY: ThreadSanitizer: double lock of a mutex ??:? in __interceptor_pthread_mutex_lock\r\n==================\r\nThreadTwo:19\r\nThreadOne:14\r\nThreadTwo:21\r\nThreadSanitizer: reported 1 warnings\r\n",
      "created_at" : "2020-05-21T11:34:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632037233",
      "id" : 632037233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjAzNzIzMw==",
      "updated_at" : "2020-05-21T11:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632037233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto Even with libc++ I can *not* reproduce on Debian Sid:\r\n\r\n```\r\n$ clang++ -stdlib=libc++ -fsanitize=thread /tmp/m.cpp -o /tmp/m.exe && /tmp/m.exe\r\nThreadOne:12\r\nThreadTwo:19\r\nThreadOne:14\r\nThreadTwo:21\r\n```\r\n\r\nOnly in Ubuntu Focal:\r\n\r\n```\r\n$  clang++ -stdlib=libc++ -fsanitize=thread /tmp/m.cpp -o /tmp/m.exe && /tmp/m.exe \r\nThreadOne:12\r\n==================\r\nWARNING: ThreadSanitizer: double lock of a mutex (pid=1548)\r\n    #0 pthread_mutex_lock <null> (m.exe+0x443056)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x83505)\r\n    #2 ThreadTwo() <null> (m.exe+0x4b5381)\r\n    #3 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4b919d)\r\n    #4 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4b9088)\r\n    #5 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4b8619)\r\n\r\n  Location is global 'm' of size 40 at 0x000000f9c928 (m.exe+0x000000f9c928)\r\n\r\n  Mutex M8 (0x000000f9c928) created at:\r\n    #0 pthread_mutex_lock <null> (m.exe+0x443056)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x83505)\r\n    #2 ThreadOne() <null> (m.exe+0x4b5121)\r\n    #3 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4b919d)\r\n    #4 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4b9088)\r\n    #5 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4b8619)\r\n\r\nSUMMARY: ThreadSanitizer: double lock of a mutex (/tmp/m.exe+0x443056) in pthread_mutex_lock\r\n==================\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=1548)\r\n  Read of size 4 at 0x0000004f5d68 by thread T2 (mutexes: write M8):\r\n    #0 std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const <null> (m.exe+0x4b6732)\r\n    #1 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) <null> (m.exe+0x4b6010)\r\n    #2 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) <null> (m.exe+0x4b59c3)\r\n    #3 ThreadTwo() <null> (m.exe+0x4b5395)\r\n    #4 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4b919d)\r\n    #5 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4b9088)\r\n    #6 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4b8619)\r\n\r\n  Previous write of size 4 at 0x0000004f5d68 by thread T1 (mutexes: write M8):\r\n    #0 std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const <null> (m.exe+0x4b6783)\r\n    #1 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) <null> (m.exe+0x4b6010)\r\n    #2 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) <null> (m.exe+0x4b59c3)\r\n    #3 ThreadOne() <null> (m.exe+0x4b5135)\r\n    #4 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4b919d)\r\n    #5 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4b9088)\r\n    #6 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4b8619)\r\n\r\n  Location is global 'std::__1::cout' of size 160 at 0x0000004f5cd0 (m.exe+0x0000004f5d68)\r\n\r\n  Mutex M8 (0x000000f9c928) created at:\r\n    #0 pthread_mutex_lock <null> (m.exe+0x443056)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x83505)\r\n    #2 ThreadOne() <null> (m.exe+0x4b5121)\r\n    #3 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4b919d)\r\n    #4 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4b9088)\r\n    #5 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4b8619)\r\n\r\n  Thread T2 (tid=1551, running) created by main thread at:\r\n    #0 pthread_create <null> (m.exe+0x425c8b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) <null> (m.exe+0x4b857c)\r\n    #2 std::__1::thread::thread<void (&)(), void>(void (&)()) <null> (m.exe+0x4b5d3a)\r\n    #3 main <null> (m.exe+0x4b55f8)\r\n\r\n  Thread T1 (tid=1550, running) created by main thread at:\r\n    #0 pthread_create <null> (m.exe+0x425c8b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) <null> (m.exe+0x4b857c)\r\n    #2 std::__1::thread::thread<void (&)(), void>(void (&)()) <null> (m.exe+0x4b5d3a)\r\n    #3 main <null> (m.exe+0x4b55e5)\r\n\r\nSUMMARY: ThreadSanitizer: data race (/tmp/m.exe+0x4b6732) in std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const\r\n==================\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=1548)\r\n  Read of size 8 at 0x0000004f5cf0 by thread T2 (mutexes: write M8):\r\n    #0 std::__1::ios_base::width() const <null> (m.exe+0x4b6909)\r\n    #1 std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) <null> (m.exe+0x4b635c)\r\n    #2 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) <null> (m.exe+0x4b6047)\r\n    #3 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) <null> (m.exe+0x4b59c3)\r\n    #4 ThreadTwo() <null> (m.exe+0x4b5395)\r\n    #5 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4b919d)\r\n    #6 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4b9088)\r\n    #7 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4b8619)\r\n\r\n  Previous write of size 8 at 0x0000004f5cf0 by thread T1 (mutexes: write M8):\r\n    #0 std::__1::ios_base::width(long) <null> (m.exe+0x4b6b27)\r\n    #1 std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) <null> (m.exe+0x4b654e)\r\n    #2 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) <null> (m.exe+0x4b6047)\r\n    #3 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) <null> (m.exe+0x4b59c3)\r\n    #4 ThreadOne() <null> (m.exe+0x4b5135)\r\n    #5 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4b919d)\r\n    #6 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4b9088)\r\n    #7 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4b8619)\r\n\r\n  Location is global 'std::__1::cout' of size 160 at 0x0000004f5cd0 (m.exe+0x0000004f5cf0)\r\n\r\n  Mutex M8 (0x000000f9c928) created at:\r\n    #0 pthread_mutex_lock <null> (m.exe+0x443056)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x83505)\r\n    #2 ThreadOne() <null> (m.exe+0x4b5121)\r\n    #3 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4b919d)\r\n    #4 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4b9088)\r\n    #5 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4b8619)\r\n\r\n  Thread T2 (tid=1551, running) created by main thread at:\r\n    #0 pthread_create <null> (m.exe+0x425c8b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) <null> (m.exe+0x4b857c)\r\n    #2 std::__1::thread::thread<void (&)(), void>(void (&)()) <null> (m.exe+0x4b5d3a)\r\n    #3 main <null> (m.exe+0x4b55f8)\r\n\r\n  Thread T1 (tid=1550, running) created by main thread at:\r\n    #0 pthread_create <null> (m.exe+0x425c8b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) <null> (m.exe+0x4b857c)\r\n    #2 std::__1::thread::thread<void (&)(), void>(void (&)()) <null> (m.exe+0x4b5d3a)\r\n    #3 main <null> (m.exe+0x4b55e5)\r\n\r\nSUMMARY: ThreadSanitizer: data race (/tmp/m.exe+0x4b6909) in std::__1::ios_base::width() const\r\n==================\r\nThreadTwo:19\r\nThreadOne:14\r\nThreadTwo:21\r\nThreadSanitizer: reported 3 warnings\r\n\r\n",
      "created_at" : "2020-05-21T11:41:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632039847",
      "id" : 632039847,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjAzOTg0Nw==",
      "updated_at" : "2020-05-21T11:44:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632039847",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @hebasto Even with libc++ I can _not_ reproduce on Debian Sid:\r\n> \r\n> ```\r\n> $ clang++ -stdlib=libc++ -fsanitize=thread /tmp/m.cpp -o /tmp/m.exe && /tmp/m.exe\r\n> ThreadOne:12\r\n> ThreadTwo:19\r\n> ThreadOne:14\r\n> ThreadTwo:21\r\n> ```\r\n\r\n@MarcoFalke \r\nWhich version of libc++ have you installed?",
      "created_at" : "2020-05-21T11:54:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632045539",
      "id" : 632045539,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA0NTUzOQ==",
      "updated_at" : "2020-05-21T11:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632045539",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\n# apt install libc++-dev libc++abi-dev\r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\nThe following additional packages will be installed:\r\n  libc++-9-dev libc++1-9 libc++abi-9-dev libc++abi1-9\r\n```\r\n\r\nhttps://packages.debian.org/sid/libc++-dev",
      "created_at" : "2020-05-21T12:00:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632047743",
      "id" : 632047743,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA0Nzc0Mw==",
      "updated_at" : "2020-05-21T12:00:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632047743",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> ```\r\n> # apt install libc++-dev libc++abi-dev\r\n> Reading package lists... Done\r\n> Building dependency tree       \r\n> Reading state information... Done\r\n> The following additional packages will be installed:\r\n>   libc++-9-dev libc++1-9 libc++abi-9-dev libc++abi1-9\r\n> ```\r\n> \r\n> https://packages.debian.org/sid/libc++-dev\r\n\r\nCould try https://packages.debian.org/sid/libc++-10-dev (with https://packages.debian.org/sid/libc++abi-10-dev and https://packages.debian.org/sid/clang-10) ?",
      "created_at" : "2020-05-21T12:02:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632048558",
      "id" : 632048558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA0ODU1OA==",
      "updated_at" : "2020-05-21T12:03:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632048558",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, so that works again.\r\n\r\n```\r\n$ # clang++-10 -stdlib=libc++ -fsanitize=thread /tmp/m.cpp -o /tmp/m.exe && /tmp/m.exe\r\nThreadOne:12\r\n==================\r\nWARNING: ThreadSanitizer: double lock of a mutex (pid=1298)\r\n    #0 pthread_mutex_lock <null> (m.exe+0x447056)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x87505)\r\n    #2 ThreadTwo() <null> (m.exe+0x4b9381)\r\n    #3 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4bd19d)\r\n    #4 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4bd088)\r\n    #5 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4bc619)\r\n\r\n  Location is global 'm' of size 40 at 0x000000fa0928 (m.exe+0x000000fa0928)\r\n\r\n  Mutex M8 (0x000000fa0928) created at:\r\n    #0 pthread_mutex_lock <null> (m.exe+0x447056)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x87505)\r\n    #2 ThreadOne() <null> (m.exe+0x4b9121)\r\n    #3 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4bd19d)\r\n    #4 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4bd088)\r\n    #5 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4bc619)\r\n\r\nSUMMARY: ThreadSanitizer: double lock of a mutex (/tmp/m.exe+0x447056) in pthread_mutex_lock\r\n==================\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=1298)\r\n  Read of size 4 at 0x0000004f9d68 by thread T2 (mutexes: write M8):\r\n    #0 std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const <null> (m.exe+0x4ba732)\r\n    #1 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) <null> (m.exe+0x4ba010)\r\n    #2 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) <null> (m.exe+0x4b99c3)\r\n    #3 ThreadTwo() <null> (m.exe+0x4b9395)\r\n    #4 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4bd19d)\r\n    #5 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4bd088)\r\n    #6 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4bc619)\r\n\r\n  Previous write of size 4 at 0x0000004f9d68 by thread T1 (mutexes: write M8):\r\n    #0 std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const <null> (m.exe+0x4ba783)\r\n    #1 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) <null> (m.exe+0x4ba010)\r\n    #2 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) <null> (m.exe+0x4b99c3)\r\n    #3 ThreadOne() <null> (m.exe+0x4b9135)\r\n    #4 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4bd19d)\r\n    #5 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4bd088)\r\n    #6 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4bc619)\r\n\r\n  Location is global 'std::__1::cout' of size 160 at 0x0000004f9cd0 (m.exe+0x0000004f9d68)\r\n\r\n  Mutex M8 (0x000000fa0928) created at:\r\n    #0 pthread_mutex_lock <null> (m.exe+0x447056)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x87505)\r\n    #2 ThreadOne() <null> (m.exe+0x4b9121)\r\n    #3 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4bd19d)\r\n    #4 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4bd088)\r\n    #5 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4bc619)\r\n\r\n  Thread T2 (tid=1301, running) created by main thread at:\r\n    #0 pthread_create <null> (m.exe+0x429c8b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) <null> (m.exe+0x4bc57c)\r\n    #2 std::__1::thread::thread<void (&)(), void>(void (&)()) <null> (m.exe+0x4b9d3a)\r\n    #3 main <null> (m.exe+0x4b95f8)\r\n\r\n  Thread T1 (tid=1300, running) created by main thread at:\r\n    #0 pthread_create <null> (m.exe+0x429c8b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) <null> (m.exe+0x4bc57c)\r\n    #2 std::__1::thread::thread<void (&)(), void>(void (&)()) <null> (m.exe+0x4b9d3a)\r\n    #3 main <null> (m.exe+0x4b95e5)\r\n\r\nSUMMARY: ThreadSanitizer: data race (/tmp/m.exe+0x4ba732) in std::__1::basic_ios<char, std::__1::char_traits<char> >::fill() const\r\n==================\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=1298)\r\n  Read of size 8 at 0x0000004f9cf0 by thread T2 (mutexes: write M8):\r\n    #0 std::__1::ios_base::width() const <null> (m.exe+0x4ba909)\r\n    #1 std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) <null> (m.exe+0x4ba35c)\r\n    #2 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) <null> (m.exe+0x4ba047)\r\n    #3 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) <null> (m.exe+0x4b99c3)\r\n    #4 ThreadTwo() <null> (m.exe+0x4b9395)\r\n    #5 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4bd19d)\r\n    #6 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4bd088)\r\n    #7 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4bc619)\r\n\r\n  Previous write of size 8 at 0x0000004f9cf0 by thread T1 (mutexes: write M8):\r\n    #0 std::__1::ios_base::width(long) <null> (m.exe+0x4bab27)\r\n    #1 std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char) <null> (m.exe+0x4ba54e)\r\n    #2 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long) <null> (m.exe+0x4ba047)\r\n    #3 std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<<<std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) <null> (m.exe+0x4b99c3)\r\n    #4 ThreadOne() <null> (m.exe+0x4b9135)\r\n    #5 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4bd19d)\r\n    #6 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4bd088)\r\n    #7 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4bc619)\r\n\r\n  Location is global 'std::__1::cout' of size 160 at 0x0000004f9cd0 (m.exe+0x0000004f9cf0)\r\n\r\n  Mutex M8 (0x000000fa0928) created at:\r\n    #0 pthread_mutex_lock <null> (m.exe+0x447056)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x87505)\r\n    #2 ThreadOne() <null> (m.exe+0x4b9121)\r\n    #3 decltype(std::__1::forward<void (*)()>(fp)()) std::__1::__invoke<void (*)()>(void (*&&)()) <null> (m.exe+0x4bd19d)\r\n    #4 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()>&, std::__1::__tuple_indices<>) <null> (m.exe+0x4bd088)\r\n    #5 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)()> >(void*) <null> (m.exe+0x4bc619)\r\n\r\n  Thread T2 (tid=1301, running) created by main thread at:\r\n    #0 pthread_create <null> (m.exe+0x429c8b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) <null> (m.exe+0x4bc57c)\r\n    #2 std::__1::thread::thread<void (&)(), void>(void (&)()) <null> (m.exe+0x4b9d3a)\r\n    #3 main <null> (m.exe+0x4b95f8)\r\n\r\n  Thread T1 (tid=1300, running) created by main thread at:\r\n    #0 pthread_create <null> (m.exe+0x429c8b)\r\n    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) <null> (m.exe+0x4bc57c)\r\n    #2 std::__1::thread::thread<void (&)(), void>(void (&)()) <null> (m.exe+0x4b9d3a)\r\n    #3 main <null> (m.exe+0x4b95e5)\r\n\r\nSUMMARY: ThreadSanitizer: data race (/tmp/m.exe+0x4ba909) in std::__1::ios_base::width() const\r\n==================\r\nThreadTwo:19\r\nThreadOne:14\r\nThreadTwo:21\r\nThreadSanitizer: reported 3 warnings\r\n",
      "created_at" : "2020-05-21T12:05:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632050048",
      "id" : 632050048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA1MDA0OA==",
      "updated_at" : "2020-05-21T12:05:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632050048",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would building from depends fix the standard library issue?",
      "created_at" : "2020-05-21T13:28:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632086195",
      "id" : 632086195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA4NjE5NQ==",
      "updated_at" : "2020-05-21T13:28:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632086195",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @fanquake @dongcarl ^\r\n\r\n\r\nAnother alternative would be to completely get rid of operating system package mangers in the sanitizer ci builds and use guix?",
      "created_at" : "2020-05-21T13:30:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632087340",
      "id" : 632087340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA4NzM0MA==",
      "updated_at" : "2020-05-21T13:30:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632087340",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "#18820 is required to build from depends with libc++.",
      "created_at" : "2020-05-21T13:30:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632087615",
      "id" : 632087615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjA4NzYxNQ==",
      "updated_at" : "2020-05-21T13:30:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632087615",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Steps to reproduce the issue on Ubuntu 20.04:\r\n```\r\n$ git fetch origin pull/18820/merge:pr18820m\r\n$ git switch pr18820m\r\n$ make -C depends CC=clang CXX='clang++ -stdlib=libc++' NO_QT=1\r\n$ ./autogen.sh\r\n$ CONFIG_SITE=$PWD/depends/x86_64-pc-linux-gnu/share/config.site ./configure --disable-wallet --with-sanitizers=thread --disable-tests CC=clang CXX='clang++ -stdlib=libc++'\r\n$ make\r\n$ TSAN_OPTIONS=\"halt_on_error=1\" ./src/bitcoind -noprinttoconsole\r\n==================\r\nWARNING: ThreadSanitizer: double lock of a mutex (pid=57183)\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x82ff6)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x83505)\r\n    #2 UniqueLock<AnnotatedMixin<std::__1::mutex>, std::__1::unique_lock<std::__1::mutex> >::Enter(char const*, char const*, int) <null> (bitcoind+0x1fb591)\r\n    #3 UniqueLock<AnnotatedMixin<std::__1::mutex>, std::__1::unique_lock<std::__1::mutex> >::UniqueLock(AnnotatedMixin<std::__1::mutex>&, char const*, char const*, int, bool) <null> (bitcoind+0x18d5ad)\r\n    #4 CThreadInterrupt::sleep_for(std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) <null> (bitcoind+0x93f5be)\r\n    #5 CThreadInterrupt::sleep_for(std::__1::chrono::duration<long long, std::__1::ratio<1l, 1l> >) <null> (bitcoind+0x93f80a)\r\n    #6 CConnman::ThreadOpenAddedConnections() <null> (bitcoind+0x173ac4)\r\n    #7 decltype(*(std::__1::forward<CConnman*&>(fp0)).*fp()) std::__1::__invoke<void (CConnman::*&)(), CConnman*&, void>(void (CConnman::*&)(), CConnman*&) <null> (bitcoind+0x205b54)\r\n    #8 std::__1::__bind_return<void (CConnman::*)(), std::__1::tuple<CConnman*>, std::__1::tuple<>, __is_valid_bind_return<void (CConnman::*)(), std::__1::tuple<CConnman*>, std::__1::tuple<> >::value>::type std::__1::__apply_functor<void (CConnman::*)(), std::__1::tuple<CConnman*>, 0ul, std::__1::tuple<> >(void (CConnman::*&)(), std::__1::tuple<CConnman*>&, std::__1::__tuple_indices<0ul>, std::__1::tuple<>&&) <null> (bitcoind+0x205a10)\r\n    #9 std::__1::__bind_return<void (CConnman::*)(), std::__1::tuple<CConnman*>, std::__1::tuple<>, __is_valid_bind_return<void (CConnman::*)(), std::__1::tuple<CConnman*>, std::__1::tuple<> >::value>::type std::__1::__bind<void (CConnman::*)(), CConnman*>::operator()<>() <null> (bitcoind+0x20595e)\r\n    #10 decltype(std::__1::forward<std::__1::__bind<void (CConnman::*)(), CConnman*>&>(fp)()) std::__1::__invoke<std::__1::__bind<void (CConnman::*)(), CConnman*>&>(std::__1::__bind<void (CConnman::*)(), CConnman*>&) <null> (bitcoind+0x20587d)\r\n    #11 void std::__1::__invoke_void_return_wrapper<void>::__call<std::__1::__bind<void (CConnman::*)(), CConnman*>&>(std::__1::__bind<void (CConnman::*)(), CConnman*>&) <null> (bitcoind+0x20578d)\r\n    #12 std::__1::__function::__alloc_func<std::__1::__bind<void (CConnman::*)(), CConnman*>, std::__1::allocator<std::__1::__bind<void (CConnman::*)(), CConnman*> >, void ()>::operator()() <null> (bitcoind+0x20570d)\r\n    #13 std::__1::__function::__func<std::__1::__bind<void (CConnman::*)(), CConnman*>, std::__1::allocator<std::__1::__bind<void (CConnman::*)(), CConnman*> >, void ()>::operator()() <null> (bitcoind+0x202fdc)\r\n    #14 void TraceThread<std::__1::function<void ()> >(char const*, std::__1::function<void ()>) <null> (bitcoind+0x1210ea)\r\n    #15 decltype(std::__1::forward<void (*)(char const*, std::__1::function<void ()>)>(fp)(std::__1::forward<char const*>(fp0), std::__1::forward<std::__1::function<void ()> >(fp0))) std::__1::__invoke<void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> >(void (*&&)(char const*, std::__1::function<void ()>), char const*&&, std::__1::function<void ()>&&) <null> (bitcoind+0x207102)\r\n    #16 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()>, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> >&, std::__1::__tuple_indices<2ul, 3ul>) <null> (bitcoind+0x206f27)\r\n    #17 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> > >(void*) <null> (bitcoind+0x2063f6)\r\n\r\n  Location is heap block of size 328856 at 0x7efdcf619000 allocated by main thread:\r\n    #0 operator new(unsigned long) <null> (bitcoind+0xf2b3b)\r\n    #1 AppInitMain(util::Ref const&, NodeContext&) <null> (bitcoind+0x1111c2)\r\n    #2 main <null> (bitcoind+0xf5a87)\r\n\r\n  Mutex M395319 (0x7efdcf669430) created at:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x82ff6)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1+0x83505)\r\n    #2 UniqueLock<AnnotatedMixin<std::__1::mutex>, std::__1::unique_lock<std::__1::mutex> >::Enter(char const*, char const*, int) <null> (bitcoind+0x1fb591)\r\n    #3 UniqueLock<AnnotatedMixin<std::__1::mutex>, std::__1::unique_lock<std::__1::mutex> >::UniqueLock(AnnotatedMixin<std::__1::mutex>&, char const*, char const*, int, bool) <null> (bitcoind+0x18d5ad)\r\n    #4 CThreadInterrupt::sleep_for(std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) <null> (bitcoind+0x93f5be)\r\n    #5 CThreadInterrupt::sleep_for(std::__1::chrono::duration<long long, std::__1::ratio<1l, 1l> >) <null> (bitcoind+0x93f80a)\r\n    #6 CConnman::ThreadDNSAddressSeed() <null> (bitcoind+0x16f669)\r\n    #7 decltype(*(std::__1::forward<CConnman*&>(fp0)).*fp()) std::__1::__invoke<void (CConnman::*&)(), CConnman*&, void>(void (CConnman::*&)(), CConnman*&) <null> (bitcoind+0x205b54)\r\n    #8 std::__1::__bind_return<void (CConnman::*)(), std::__1::tuple<CConnman*>, std::__1::tuple<>, __is_valid_bind_return<void (CConnman::*)(), std::__1::tuple<CConnman*>, std::__1::tuple<> >::value>::type std::__1::__apply_functor<void (CConnman::*)(), std::__1::tuple<CConnman*>, 0ul, std::__1::tuple<> >(void (CConnman::*&)(), std::__1::tuple<CConnman*>&, std::__1::__tuple_indices<0ul>, std::__1::tuple<>&&) <null> (bitcoind+0x205a10)\r\n    #9 std::__1::__bind_return<void (CConnman::*)(), std::__1::tuple<CConnman*>, std::__1::tuple<>, __is_valid_bind_return<void (CConnman::*)(), std::__1::tuple<CConnman*>, std::__1::tuple<> >::value>::type std::__1::__bind<void (CConnman::*)(), CConnman*>::operator()<>() <null> (bitcoind+0x20595e)\r\n    #10 decltype(std::__1::forward<std::__1::__bind<void (CConnman::*)(), CConnman*>&>(fp)()) std::__1::__invoke<std::__1::__bind<void (CConnman::*)(), CConnman*>&>(std::__1::__bind<void (CConnman::*)(), CConnman*>&) <null> (bitcoind+0x20587d)\r\n    #11 void std::__1::__invoke_void_return_wrapper<void>::__call<std::__1::__bind<void (CConnman::*)(), CConnman*>&>(std::__1::__bind<void (CConnman::*)(), CConnman*>&) <null> (bitcoind+0x20578d)\r\n    #12 std::__1::__function::__alloc_func<std::__1::__bind<void (CConnman::*)(), CConnman*>, std::__1::allocator<std::__1::__bind<void (CConnman::*)(), CConnman*> >, void ()>::operator()() <null> (bitcoind+0x20570d)\r\n    #13 std::__1::__function::__func<std::__1::__bind<void (CConnman::*)(), CConnman*>, std::__1::allocator<std::__1::__bind<void (CConnman::*)(), CConnman*> >, void ()>::operator()() <null> (bitcoind+0x202fdc)\r\n    #14 void TraceThread<std::__1::function<void ()> >(char const*, std::__1::function<void ()>) <null> (bitcoind+0x1210ea)\r\n    #15 decltype(std::__1::forward<void (*)(char const*, std::__1::function<void ()>)>(fp)(std::__1::forward<char const*>(fp0), std::__1::forward<std::__1::function<void ()> >(fp0))) std::__1::__invoke<void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> >(void (*&&)(char const*, std::__1::function<void ()>), char const*&&, std::__1::function<void ()>&&) <null> (bitcoind+0x207102)\r\n    #16 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()>, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> >&, std::__1::__tuple_indices<2ul, 3ul>) <null> (bitcoind+0x206f27)\r\n    #17 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(char const*, std::__1::function<void ()>), char const*, std::__1::function<void ()> > >(void*) <null> (bitcoind+0x2063f6)\r\n\r\nSUMMARY: ThreadSanitizer: double lock of a mutex (/home/hebasto/bitcoin/src/bitcoind+0x82ff6) in pthread_mutex_lock\r\n==================\r\n```",
      "created_at" : "2020-05-21T15:45:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632167641",
      "id" : 632167641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjE2NzY0MQ==",
      "updated_at" : "2020-05-21T15:45:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632167641",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto How did you build depends?",
      "created_at" : "2020-05-21T16:21:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632187706",
      "id" : 632187706,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjE4NzcwNg==",
      "updated_at" : "2020-05-21T16:21:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632187706",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @hebasto How did you build depends?\r\n\r\n```\r\n$ git fetch origin pull/18820/merge:pr18820m\r\n$ git switch pr18820m\r\n$ make -C depends CC=clang CXX='clang++ -stdlib=libc++' NO_QT=1\r\n```",
      "created_at" : "2020-05-21T16:23:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632188681",
      "id" : 632188681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjE4ODY4MQ==",
      "updated_at" : "2020-05-21T16:23:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632188681",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks like that doesn't pass for me: https://travis-ci.org/github/bitcoin/bitcoin/jobs/689725073#L2171",
      "created_at" : "2020-05-21T17:18:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632234638",
      "id" : 632234638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjIzNDYzOA==",
      "updated_at" : "2020-05-21T17:18:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632234638",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Looks like that doesn't pass for me: https://travis-ci.org/github/bitcoin/bitcoin/jobs/689725073#L2171\r\n\r\nCould your pull be built on top of the #18820 to make `CXX` and `CC` variables propagate to depends?",
      "created_at" : "2020-05-21T17:27:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632239011",
      "id" : 632239011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjIzOTAxMQ==",
      "updated_at" : "2020-05-21T17:27:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632239011",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Might be worthwhile to try again now :-)",
      "created_at" : "2020-05-22T22:02:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-632926405",
      "id" : 632926405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjkyNjQwNQ==",
      "updated_at" : "2020-05-22T22:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632926405",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There is more than this issue. Let's review #19041 first and then see how to proceed further.",
      "created_at" : "2020-05-31T14:36:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19024#issuecomment-636479764",
      "id" : 636479764,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19024",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjQ3OTc2NA==",
      "updated_at" : "2020-05-31T14:36:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636479764",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
