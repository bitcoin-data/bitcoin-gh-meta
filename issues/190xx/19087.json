{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "**Expected behavior**\r\n\r\nThe behavior of returning error from RPC call should be consistent between these cases:\r\n\r\n* Single RPC call fails\r\n* Single forbidden RPC call\r\n* Batched failed RPC call\r\n* One (or more) method of the batched call is forbidden\r\n\r\n**Actual behavior**\r\n\r\n* Single failed RPC call returns HTTP error code\r\n* Single forbidden RPC call returns HTTP error code - `HTTP_FORBIDDEN` (`403`)\r\n* Batched failed RPC call [leaks](https://github.com/bitcoin/bitcoin/blob/25ad2c623af30056ffb36dcd203a52edda2b170f/src/httprpc.cpp#L79) an [internal error code](https://github.com/bitcoin/bitcoin/blob/99813a9745fe10a58bedd7a4cb721faf14f907a4/src/rpc/protocol.h#L29)\r\n* [Batched call](https://github.com/bitcoin/bitcoin/blob/25ad2c623af30056ffb36dcd203a52edda2b170f/src/httprpc.cpp#L213) containing a forbidden method [returns](https://github.com/bitcoin/bitcoin/blob/25ad2c623af30056ffb36dcd203a52edda2b170f/src/httprpc.cpp#L224) `HTTP_FORBIDDEN` (`403`) for the whole batch.\r\n\r\n**To reproduce**\r\n\r\nDisclaimer: the bug was discovered by code analysis when trying to come up with a correct solution to https://github.com/MetacoSA/NBitcoin/issues/864 I'm fairly confident that using `curl` to call methods and then observing output would reproduce the issue.\r\n\r\nAnother way to see a problem might be running BTCPayServer/NBXplorer with the bitcoind version from master with some users restricted. (Example: restrict `getpeerinfo` and see that Payjoin stops working.) I didn't try this with newest Core, but I hit it with [btc-rpc-proxy](https://github.com/Kixunil/btc-rpc-proxy), which returns HTTP errors for authentication just like what `bitcoind` does according to the code.\r\n\r\n**System information**\r\n\r\nNot relevant.\r\n\r\n**Discussion**\r\n\r\nI'm opening this issue in order to decide on proper handling of RPC errors. I see these possible approaches:\r\n\r\n* `RPC_METHOD_NOT_FOUND` becomes public, [the comment](https://github.com/bitcoin/bitcoin/blob/99813a9745fe10a58bedd7a4cb721faf14f907a4/src/rpc/protocol.h#L29) is removed and the rest of the code stays the same, the behavior doesn't change.\r\n* [`JSONErrorReply`](https://github.com/bitcoin/bitcoin/blob/99813a9745fe10a58bedd7a4cb721faf14f907a4/src/rpc/protocol.h#L29) function is modified to return HTTP errors for batched calls too.\r\n* New public error codes are defined and used for every method independently, the mapping to HTTP codes is removed (at least for batched calls)\r\n\r\nI personally like the last one because it allows efficient inspection of node capabilities, but I'm worried that it might break some clients. I'd love to hear arguments from people who are more experienced in this area.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19087/comments",
   "created_at" : "2020-05-28T07:18:06Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19087/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/19087",
   "id" : 626276805,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19087/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU2MjYyNzY4MDU=",
   "number" : 19087,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Inconsistent RPC error handling",
   "updated_at" : "2020-05-28T07:18:06Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19087",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/1178779?v=4",
      "events_url" : "https://api.github.com/users/Kixunil/events{/privacy}",
      "followers_url" : "https://api.github.com/users/Kixunil/followers",
      "following_url" : "https://api.github.com/users/Kixunil/following{/other_user}",
      "gists_url" : "https://api.github.com/users/Kixunil/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/Kixunil",
      "id" : 1178779,
      "login" : "Kixunil",
      "node_id" : "MDQ6VXNlcjExNzg3Nzk=",
      "organizations_url" : "https://api.github.com/users/Kixunil/orgs",
      "received_events_url" : "https://api.github.com/users/Kixunil/received_events",
      "repos_url" : "https://api.github.com/users/Kixunil/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/Kixunil/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/Kixunil/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/Kixunil"
   }
}
