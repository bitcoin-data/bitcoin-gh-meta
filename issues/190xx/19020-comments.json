[
   {
      "author_association" : "MEMBER",
      "body" : "Please don't review yet",
      "created_at" : "2020-05-19T21:44:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19020#issuecomment-631099924",
      "id" : 631099924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19020",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTA5OTkyNA==",
      "updated_at" : "2020-05-19T21:44:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631099924",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r427620111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427620111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This may be fine here, but it's not obvious. When deserializing, the receiving object is expected to be overwritten completely. As `nTime` is only conditionally deserialized, the alternative would need a reset for that value.",
      "commit_id" : "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
      "created_at" : "2020-05-19T21:48:19Z",
      "diff_hunk" : "@@ -329,14 +329,11 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n class CAddress : public CService\n {\n public:\n-    CAddress();\n-    explicit CAddress(CService ipIn, ServiceFlags nServicesIn);\n-\n-    void Init();\n+    CAddress() : CService{} {};\n+    explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n     SERIALIZE_METHODS(CAddress, obj)\n     {\n-        SER_READ(obj, obj.Init());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r427620111",
      "id" : 427620111,
      "line" : 339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyMDExMQ==",
      "original_commit_id" : "eac91b03763880417b81037f890dd5a463ce8dde",
      "original_line" : 339,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 16,
      "pull_request_review_id" : 414848068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-20T12:27:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427620111",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2020-05-20T07:20:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19020#issuecomment-631287170",
      "id" : 631287170,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19020",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTI4NzE3MA==",
      "updated_at" : "2020-05-20T19:06:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631287170",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nAFAICT the suggested change is fully in line with with the recommendations in the C++ Core Guidelines (Stroustrup & Sutter):\r\n* [C.41: **A constructor should create a fully initialized object**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c41-a-constructor-should-create-a-fully-initialized-object): \"A constructor establishes the invariant for a class. A user of a class should be able to assume that a constructed object is usable.\"\r\n* [C.45: **Don't define a default constructor that only initializes data members; use in-class member initializers instead**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-default): \"Using in-class member initializers lets the compiler generate the function for you. The compiler-generated function can be more efficient.\"\r\n* [C.48: **Prefer in-class initializers to member initializers in constructors for constant initializers**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c48-prefer-in-class-initializers-to-member-initializers-in-constructors-for-constant-initializers): \"Makes it explicit that the same value is expected to be used in all constructors. Avoids repetition. Avoids maintenance problems. It leads to the shortest and most efficient code.\"\r\n* [C.49: **Prefer initialization to assignment in constructors**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c49-prefer-initialization-to-assignment-in-constructors): \"An initialization explicitly states that initialization, rather than assignment, is done and can be more elegant and efficient. Prevents âuse before setâ errors.\"\r\n* [ES.20: **Always initialize an object**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-always): \"Avoid used-before-set errors and their associated undefined behavior. Avoid problems with comprehension of complex initialization. Simplify refactoring.\"\r\n* [ES.23: **Prefer the {}-initializer syntax**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-list): \"Prefer {}. The rules for {} initialization are simpler, more general, less ambiguous, and safer than for other forms of initialization. Use = only when you are sure that there can be no narrowing conversions. For built-in arithmetic types, use = only with auto. Avoid () initialization, which allows parsing ambiguities.\"",
      "created_at" : "2020-05-20T08:52:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19020#issuecomment-631337453",
      "id" : 631337453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19020",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTMzNzQ1Mw==",
      "updated_at" : "2020-05-20T08:53:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631337453",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r427974238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427974238"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, fixed.",
      "commit_id" : "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
      "created_at" : "2020-05-20T12:37:26Z",
      "diff_hunk" : "@@ -329,14 +329,11 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n class CAddress : public CService\n {\n public:\n-    CAddress();\n-    explicit CAddress(CService ipIn, ServiceFlags nServicesIn);\n-\n-    void Init();\n+    CAddress() : CService{} {};\n+    explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n     SERIALIZE_METHODS(CAddress, obj)\n     {\n-        SER_READ(obj, obj.Init());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r427974238",
      "id" : 427974238,
      "in_reply_to_id" : 427620111,
      "line" : 339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3NDIzOA==",
      "original_commit_id" : "eac91b03763880417b81037f890dd5a463ce8dde",
      "original_line" : 339,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 16,
      "pull_request_review_id" : 415287692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-20T12:37:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427974238",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428328107"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428328107"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wouldn't `unsigned int` be the value to test for equivalence?",
      "commit_id" : "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
      "created_at" : "2020-05-20T21:50:36Z",
      "diff_hunk" : "@@ -50,6 +50,7 @@ static_assert(sizeof(double) == 8, \"64-bit double assumed\");\n //             code.\n static_assert(sizeof(short) == 2, \"16-bit short assumed\");\n static_assert(sizeof(int) == 4, \"32-bit int assumed\");\n+static_assert(sizeof(unsigned) == 4, \"32-bit unsigned assumed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428328107",
      "id" : 428328107,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyODEwNw==",
      "original_commit_id" : "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
      "original_line" : 53,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/compat/assumptions.h",
      "position" : 4,
      "pull_request_review_id" : 415739999,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-20T21:50:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428328107",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428333857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428333857"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`unsigned` is a shorthand for `unsigned int`.",
      "commit_id" : "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
      "created_at" : "2020-05-20T22:03:42Z",
      "diff_hunk" : "@@ -50,6 +50,7 @@ static_assert(sizeof(double) == 8, \"64-bit double assumed\");\n //             code.\n static_assert(sizeof(short) == 2, \"16-bit short assumed\");\n static_assert(sizeof(int) == 4, \"32-bit int assumed\");\n+static_assert(sizeof(unsigned) == 4, \"32-bit unsigned assumed\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428333857",
      "id" : 428333857,
      "in_reply_to_id" : 428328107,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMzMzg1Nw==",
      "original_commit_id" : "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
      "original_line" : 53,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/compat/assumptions.h",
      "position" : 4,
      "pull_request_review_id" : 415746760,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-20T22:03:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428333857",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab\r\nNice cleanup. Checked that `nTime`'s (100000000) and `nServices` (`NODE_NONE`) initial value stays the same in all cases.",
      "created_at" : "2020-05-21T15:42:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19020#issuecomment-632165726",
      "id" : 632165726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19020",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjE2NTcyNg==",
      "updated_at" : "2020-05-21T15:42:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632165726",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
