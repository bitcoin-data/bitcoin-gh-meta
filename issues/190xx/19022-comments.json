[
   {
      "author_association" : "MEMBER",
      "body" : "This was presumably introduced in aab81720de237b258ed4e15f1b1831c11abf74f0",
      "created_at" : "2020-05-19T22:59:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-631131210",
      "id" : 631131210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTEzMTIxMA==",
      "updated_at" : "2020-05-19T22:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631131210",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r432540289"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432540289"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How about doing the generate call on its own line? newlines are free!",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-05-29T14:51:55Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r432540289",
      "id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0MDI4OQ==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 421028488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-29T14:57:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432540289",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r432546695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432546695"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That would require poisoning the namespace with a symbol name. Named arguments and functional programming ftw. Bracket are free! :rocket: ",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-05-29T15:01:41Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r432546695",
      "id" : 432546695,
      "in_reply_to_id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NjY5NQ==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 421037079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-29T15:01:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432546695",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> keep a static variable in generate() to ensure a new keypath is used for each call.\r\n\r\nYou mean a member variable? (Different nodes shouldn't influence each other)",
      "created_at" : "2020-05-29T15:03:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-636023437",
      "id" : 636023437,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjAyMzQzNw==",
      "updated_at" : "2020-05-29T15:03:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636023437",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r432551002"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432551002"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Really? You think 4-nested brackets are easier to read or are you just trolling?",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-05-29T15:08:52Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r432551002",
      "id" : 432551002,
      "in_reply_to_id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1MTAwMg==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 421042924,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-29T15:08:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432551002",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> You mean a member variable? (Different nodes shouldn't influence each other)\r\n\r\nYou're right. Should be a member variable.",
      "created_at" : "2020-05-29T15:12:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-636028177",
      "id" : 636028177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjAyODE3Nw==",
      "updated_at" : "2020-05-29T15:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636028177",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r432555055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432555055"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not trolling. 4 brackets is how I write code. :grimacing: \r\n\r\nhttps://github.com/bitcoin/bitcoin/blame/fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37/test/functional/mempool_accept.py#L162-L168",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-05-29T15:15:14Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r432555055",
      "id" : 432555055,
      "in_reply_to_id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1NTA1NQ==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 421048304,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-29T15:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432555055",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> utACK [fa2ca0c](https://github.com/bitcoin/bitcoin/commit/fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37)\r\n> \r\n> Perhaps a longer-term solution would be to change the `generate()` method in `TestNode`:\r\n> \r\n> * set an hd seed on the node instead of a private key in `import_deterministic_coinbase_privkeys()`\r\n> * use `generatetodescriptor` to generate to a key in the hd tree\r\n> * keep a static variable in  `generate()` to ensure a new keypath is used for each call.\r\n> \r\n> Could be a good first issue?\r\n\r\nI can work on this!",
      "created_at" : "2020-05-30T15:37:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-636347710",
      "id" : 636347710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjM0NzcxMA==",
      "updated_at" : "2020-05-30T15:37:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636347710",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/38899812?v=4",
         "events_url" : "https://api.github.com/users/glowang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glowang/followers",
         "following_url" : "https://api.github.com/users/glowang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glowang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glowang",
         "id" : 38899812,
         "login" : "glowang",
         "node_id" : "MDQ6VXNlcjM4ODk5ODEy",
         "organizations_url" : "https://api.github.com/users/glowang/orgs",
         "received_events_url" : "https://api.github.com/users/glowang/received_events",
         "repos_url" : "https://api.github.com/users/glowang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glowang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glowang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glowang"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice! I see that this method is lacking a comment to explain its motivation. The background the tests need deterministic keys is:\r\n\r\n* When the wallet is not compiled into Bitcoin Core, the tests should still be able to generate blocks. Blocks need to be generated to an address (or descriptor), so we need some information to derive those\r\n* When the wallet is compiled into Bitcoin Core (and mock-time is used), we want blocks to be generated deterministically in some tests. See for example `test/functional/data/rpc_getblockstats.json`\r\n* Finally, a minor side-effect, is that we don't need to cache the wallets directory in the functional test cache.\r\n\r\nJust make sure to preserve those use-cases.\r\n\r\nLet me know if you need any other pointers.",
      "created_at" : "2020-05-30T15:48:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-636349162",
      "id" : 636349162,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjM0OTE2Mg==",
      "updated_at" : "2020-05-30T15:48:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636349162",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433004019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433004019"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke  lol I see a couple of places with style like this, no wonder ð  ",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-06-01T00:57:11Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433004019",
      "id" : 433004019,
      "in_reply_to_id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAwNDAxOQ==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 421547231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-01T00:57:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433004019",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/38899812?v=4",
         "events_url" : "https://api.github.com/users/glowang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glowang/followers",
         "following_url" : "https://api.github.com/users/glowang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glowang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glowang",
         "id" : 38899812,
         "login" : "glowang",
         "node_id" : "MDQ6VXNlcjM4ODk5ODEy",
         "organizations_url" : "https://api.github.com/users/glowang/orgs",
         "received_events_url" : "https://api.github.com/users/glowang/received_events",
         "repos_url" : "https://api.github.com/users/glowang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glowang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glowang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glowang"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433012223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433012223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@glowang I'd definitely support any PRs to make them more readable :)",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-06-01T01:54:09Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433012223",
      "id" : 433012223,
      "in_reply_to_id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAxMjIyMw==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 421556968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-01T01:54:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433012223",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433200385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433200385"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Huh, is this generally considered to be less readable? If yes, I might change my style, but comparing the two:\r\n\r\n```py\r\nin_1 = 'foo'\r\nin_2 = 'bar'\r\nres = run(in_1, in_2)\r\n```\r\n\r\nvs\r\n\r\n```py\r\nres = run(\r\n  in_1='foo',\r\n  in_2='bar',\r\n)\r\n```\r\n\r\nThe latter one has a lower mental load because there is two less symbols in the surrounding scope. I can't find references, but I am pretty sure we had a bug in the tests because symbols were leaked from one test to the next test by accident.\r\n\r\nAlso, inlining promotes use of named arguments, which obviously promotes code readability. I am sure we had at least one bug due to not using named arguments.",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-06-01T12:17:42Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433200385",
      "id" : 433200385,
      "in_reply_to_id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIwMDM4NQ==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 421797786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-01T12:17:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433200385",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433256940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433256940"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This isn't an honest comparison. Nesting functions 4 deep inside is very different from the example you've given. It's also completely unrelated to whether functions are called with named or positional arguments.",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-06-01T14:09:47Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433256940",
      "id" : 433256940,
      "in_reply_to_id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI1Njk0MA==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 421875385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-01T14:09:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433256940",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you so much @MarcoFalke and @jnewbery !\r\n\r\n1.You mentioned that `Blocks need to be generated to an address (or descriptor), so we need some information to derive those`. I understand that you want to generate blocks to an address/descriptor, but what woud happen if the keys are not deterministic anyways? What benefits do we get from having information to derive them? Sorry if this is super obvious.\r\n\r\n2.I did a little research, but I'm not sure if I'm getting what you meant by `Do not cache the wallets directory in functional test cache`. Looks like this behavior has been enforced in test_framework.py, `os.rmdir(cache_path('wallets'))`. Is this what you mean? Is this the exact behavior we want to maintain?\r\n\r\n3.Additionally, I would like to make sure I understand the context & goal of this task:\r\n\r\n**Background**: feature_dbcrash test experienced intermittent failures due to the fact that `generate()` uses a deterministic address. Deterministic addresses don't work when a block is invalidated uniformly randomly _**(but why does invalid block not work well with deterministic addresses? Why does using a new address solve this problem?)**_. This has been worked around by calling the `getnewaddress()` function. \r\n\r\n**Goal**: we want to rewrite the generate() function to this logic:\r\n\r\n- If the wallet is compiled && mocktime is used: \r\n   - Blocks should be generated deterministically, like rpc_getblockstats.json\r\n- If the wallet is not compiled: \r\n   - Blocks are generated to an address or descriptor:\r\n         - Set an hd seed on the node instead of using `get_deterministic_priv_key().address` \r\n         - Use generatetodesriptor to generate keys from the seed\r\n         - Use a ember variable in generate() to ensure a new keypath is used\r\n\r\n",
      "created_at" : "2020-06-01T15:08:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-636912947",
      "id" : 636912947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjkxMjk0Nw==",
      "updated_at" : "2020-06-01T15:08:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636912947",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/38899812?v=4",
         "events_url" : "https://api.github.com/users/glowang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glowang/followers",
         "following_url" : "https://api.github.com/users/glowang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glowang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glowang",
         "id" : 38899812,
         "login" : "glowang",
         "node_id" : "MDQ6VXNlcjM4ODk5ODEy",
         "organizations_url" : "https://api.github.com/users/glowang/orgs",
         "received_events_url" : "https://api.github.com/users/glowang/received_events",
         "repos_url" : "https://api.github.com/users/glowang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glowang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glowang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glowang"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433294227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433294227"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The indentation @MarcoFalke  uses does help a lot, and I can see your point on reducing mental load now. ",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-06-01T15:12:49Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r433294227",
      "id" : 433294227,
      "in_reply_to_id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5NDIyNw==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 421926723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-01T15:12:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433294227",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/38899812?v=4",
         "events_url" : "https://api.github.com/users/glowang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glowang/followers",
         "following_url" : "https://api.github.com/users/glowang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glowang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glowang",
         "id" : 38899812,
         "login" : "glowang",
         "node_id" : "MDQ6VXNlcjM4ODk5ODEy",
         "organizations_url" : "https://api.github.com/users/glowang/orgs",
         "received_events_url" : "https://api.github.com/users/glowang/received_events",
         "repos_url" : "https://api.github.com/users/glowang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glowang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glowang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glowang"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Why does using a new address solve this problem?\r\n\r\nIf you call\r\n* generate\r\n* invalidateblock(best_block)\r\n* generate\r\n\r\nAnd all of this happens in the same second, then the two generated blocks will be completely identical in all fields of their struct. Thus, the second call to `generate` will fail because the generated block is already marked invalid.",
      "created_at" : "2020-06-01T15:26:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-636922831",
      "id" : 636922831,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjkyMjgzMQ==",
      "updated_at" : "2020-06-01T15:26:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636922831",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Looks like this behavior has been enforced in test_framework.py, os.rmdir(cache_path('wallets')). Is this what you mean? Is this the exact behavior we want to maintain?\r\n\r\nYes, I'd say so. It allows to simply cache the blockchain once instead of MAX_NODES datadirs (including the wallet dirs)\r\n\r\nAnd about your other questions: In general, the more deterministic a test is, the easier it is to reproduce failures.",
      "created_at" : "2020-06-01T16:11:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-636955543",
      "id" : 636955543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjk1NTU0Mw==",
      "updated_at" : "2020-06-01T16:11:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636955543",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r434974857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434974857"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree in the `in_1`, `in_2` example the second looks more clear, but I think thats mainly because we're using mocked out variable names. \r\n\r\nif it was something like\r\n```\r\nblockhash = getbestblockhash()\r\ncoinbase_txid = getblock(blockhash)['tx'][0]\r\nres = calculate_fee_amount(coinbase_txid, blockhash) \r\n```\r\nthat seems pretty clear to me. The variable naming is relevant for capturing intent. In this case you could just look at the `res=calculate..` line and get an idea of what's happening (because at first pass, you can assume the variables are named correctly.) \r\n\r\n--\r\n\r\nin regards to this code snippet, I'd find something like: \r\n```\r\nnum_blocks_to_create = min(10, current_height + 1 - self.nodes[3].getblockcount())\r\nnew_block_hashes = self.nodes[3].generatetoaddress(\r\n  nblocks = num_blocks_to_create,\r\n  # new address to avoid mining a block that has just been invalidated\r\n  address=self.nodes[3].getnewaddress(),\r\n)\r\nblock_hashes.extend(new_block_hashes)\r\n```\r\n\r\nsignificantly more clear than the current;\r\n```\r\nblock_hashes.extend(self.nodes[3].generatetoaddress(\r\n  nblocks=min(10, current_height + 1 - self.nodes[3].getblockcount()),\r\n  # new address to avoid mining a block that has just been invalidated\r\n  address=self.nodes[3].getnewaddress(),\r\n))\r\n```\r\n\r\nif I were proposing the code, I'd think about the variable names a bit more... but the information they can provide about the content can be _super_ useful, esp in untyped languages. I actually looked up the docs for `generatetoaddress` to clarify what was happening here to write up the alternative. \r\n\r\nComing from rubyland, this is pretty common practice for making code easier to parse. A quick google of \"self documenting code\" landed me on [this page](https://multi-programming.com/blog/self-documenting-code), where # 1 and # 2 are about extracting logic to abstract it behind a variable name (either via function or expression).\r\n\r\n--\r\n\r\nLol, lots of words. I want to share because when I come across the deeply nested functions in the functional tests, I find it difficult to parse and will often re-write them into more incremental chunks just to read what's happening.",
      "commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "created_at" : "2020-06-04T03:41:50Z",
      "diff_hunk" : "@@ -256,7 +256,11 @@ def run_test(self):\n             self.log.debug(\"Mining longer tip\")\n             block_hashes = []\n             while current_height + 1 > self.nodes[3].getblockcount():\n-                block_hashes.extend(self.nodes[3].generate(min(10, current_height + 1 - self.nodes[3].getblockcount())))\n+                block_hashes.extend(self.nodes[3].generatetoaddress(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#discussion_r434974857",
      "id" : 434974857,
      "in_reply_to_id" : 432540289,
      "line" : 259,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk3NDg1Nw==",
      "original_commit_id" : "fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37",
      "original_line" : 259,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_dbcrash.py",
      "position" : 5,
      "pull_request_review_id" : 424080717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19022",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-04T03:57:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/434974857",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "thank you for your answers!! I have some follow up questions ð \r\n\r\nIn your answer, there seems to be an emphasis of using `mock time` when the wallet is enabled, but not so important if we are only generating to address...is there a reason for that?  It seems that we set `mocktime` when we expect there is some time consuming processes (such as tx rebroadcast) & that we use `mocktime` to time travel.\r\n\r\nThe feature_crash.py test is using `generatetoaddress` for mining after this pr, so right now it is independent of wallet. Does this mean that this test scenario does not require a wallet to be enabled? Is there any harm if I pass in the -disablewallet param? \r\n\r\nIn the case that wallet is enabled & that we want to generate blocks deterministically, is it okay if we reuse the block data in rpc_getblockstats.json? \r\n\r\nIn the case that wallet is not enable, do you have any preference as to whether we should use `generatetodescriptor` or `generatetoaddress` ? @jnewbery asked specifically to use `generatetodescriptor` in his previous comment, but @MarcoFalke seemed to suggest that either is okay?\r\n\r\nThank you again ð \r\n",
      "created_at" : "2020-06-05T15:54:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-639590922",
      "id" : 639590922,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTU5MDkyMg==",
      "updated_at" : "2020-06-05T15:54:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639590922",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/38899812?v=4",
         "events_url" : "https://api.github.com/users/glowang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glowang/followers",
         "following_url" : "https://api.github.com/users/glowang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glowang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glowang",
         "id" : 38899812,
         "login" : "glowang",
         "node_id" : "MDQ6VXNlcjM4ODk5ODEy",
         "organizations_url" : "https://api.github.com/users/glowang/orgs",
         "received_events_url" : "https://api.github.com/users/glowang/received_events",
         "repos_url" : "https://api.github.com/users/glowang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glowang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glowang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glowang"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Don't worry too much about mocktime. This is just another dimension to achieve more determinism. It should be orthogonal to your changes. `rpc_getblockstats.json` was just an example. It shouldn't affect your changes.\r\n\r\nSometimes mocktime is used to \"speed up\" tests by telling them how much time has passed. In other cases, it is used to deterministically generate blocks. (The time ends up in the block header, see https://btcinformation.org/en/developer-reference#block-headers)\r\n\r\n> Is there any harm if I pass in the -disablewallet param?\r\n\r\nCurrently the test *does* require a wallet. However, it might be possible to remove that requirement.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/fa2ca0cbdde5c6c5e407ec037e52e3f6315a0b37/test/functional/feature_dbcrash.py#L73\r\n\r\n",
      "created_at" : "2020-06-05T16:32:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-639614373",
      "id" : 639614373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTYxNDM3Mw==",
      "updated_at" : "2020-06-05T16:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639614373",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I feel like maybe I am spinning my wheel for a bit...\r\n\r\nIf you got sometime to take a look and let me know if I am heading in the right direction, I would really appreciate it! https://github.com/bitcoin/bitcoin/pull/19297\r\n\r\n",
      "created_at" : "2020-06-16T15:38:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19022#issuecomment-644843482",
      "id" : 644843482,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NDg0MzQ4Mg==",
      "updated_at" : "2020-06-16T15:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644843482",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/38899812?v=4",
         "events_url" : "https://api.github.com/users/glowang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glowang/followers",
         "following_url" : "https://api.github.com/users/glowang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glowang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glowang",
         "id" : 38899812,
         "login" : "glowang",
         "node_id" : "MDQ6VXNlcjM4ODk5ODEy",
         "organizations_url" : "https://api.github.com/users/glowang/orgs",
         "received_events_url" : "https://api.github.com/users/glowang/received_events",
         "repos_url" : "https://api.github.com/users/glowang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glowang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glowang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glowang"
      }
   }
]
