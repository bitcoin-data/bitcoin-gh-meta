[
   {
      "author_association" : "NONE",
      "body" : "> I'm wondering why the compiler doesn't warn about trying to evaluate the result of a void-function-call in a non-trivial expression. I can't think of a situation where this would make any sense.\r\n\r\nI guess this happens because compilers support `return void;` in void function call, and `addUnchecked` returns `void`.\r\nIn any other case there would have been a warning :)",
      "created_at" : "2021-04-03T01:20:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21577#issuecomment-812772081",
      "id" : 812772081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMjc3MjA4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-03T01:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812772081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2641599?v=4",
         "events_url" : "https://api.github.com/users/Aristarkhov/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Aristarkhov/followers",
         "following_url" : "https://api.github.com/users/Aristarkhov/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Aristarkhov/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Aristarkhov",
         "id" : 2641599,
         "login" : "Aristarkhov",
         "node_id" : "MDQ6VXNlcjI2NDE1OTk=",
         "organizations_url" : "https://api.github.com/users/Aristarkhov/orgs",
         "received_events_url" : "https://api.github.com/users/Aristarkhov/received_events",
         "repos_url" : "https://api.github.com/users/Aristarkhov/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Aristarkhov/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Aristarkhov/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Aristarkhov"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The return isn't superfluous. It allows the compiler to enforce that the return types of the two identically named methods are identical.",
      "created_at" : "2021-04-03T05:55:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21577#issuecomment-812817714",
      "id" : 812817714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMjgxNzcxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-03T05:55:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812817714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The return isn't superfluous. It allows the compiler to enforce that the return types of the two identically named methods are identical.\r\n\r\nOh, now I get the point, I'm retreating my ACK then (though I still think it looks very confusing).",
      "created_at" : "2021-04-03T07:52:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21577#issuecomment-812830010",
      "id" : 812830010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMjgzMDAxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-03T07:52:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812830010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 4e41cee9f5a0690e831f130837f110a89c4cbb0b\r\n\r\nAt best, this is misleading for people reading the code.\r\n\r\n> The return isn't superfluous. It allows the compiler to enforce that the return types of the two identically named methods are identical.\r\n\r\nI don't agree with this, or the argument here https://github.com/bitcoin/bitcoin/pull/13774#discussion_r205856166:\r\n\r\n> Imagine that Chainstate::ResetBlockFailureFlags returns bool in the future. This prevents the code from compiling, whereas removing the return would happily compile and hide a potential bug, no?\r\n\r\nIf the inner addUnchecked is modified to change its return type, then it's perfectly fine for the outer addUnchecked to discard that return value. If the intent really isn't for the return value to be discarded, then the bug is not adding a `[[nodiscard]]` attribute.",
      "created_at" : "2021-04-03T08:40:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21577#issuecomment-812835469",
      "id" : 812835469,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMjgzNTQ2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-03T08:40:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812835469",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think the current code is fine, why the special treatment for type `void`? But the change is correct and I have no strong reason to ack/nack.\r\n\r\n> If the inner addUnchecked is modified to change its return type, then it's perfectly fine for the outer addUnchecked to discard that return value. If the intent really isn't for the return value to be discarded, then the bug is not adding a `[[nodiscard]]` attribute.\r\n\r\nAgree.",
      "created_at" : "2021-04-07T15:18:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21577#issuecomment-815000237",
      "id" : 815000237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxNTAwMDIzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-07T15:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/815000237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery \r\n> ... then the bug is not adding a `[[nodiscard]]` attribute.\r\n\r\nIs there a way to get a compiler to warn us about this bug? \r\nIf not, then the current code looks less fragile and safer.",
      "created_at" : "2021-05-23T11:02:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21577#issuecomment-846544180",
      "id" : 846544180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NjU0NDE4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-23T11:02:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/846544180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If not, then the current code looks less fragile and safer.\r\n\r\nI can't see how the proposed change in unsafe or fragile. Please can you explain how the change is unsafe?",
      "created_at" : "2021-06-03T16:18:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21577#issuecomment-853999836",
      "id" : 853999836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21577",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1Mzk5OTgzNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-03T16:18:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853999836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
