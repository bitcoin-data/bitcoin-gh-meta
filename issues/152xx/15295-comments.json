[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Very nice!\r\n\r\nRelated: #10364 (\"Feature request: Make Bitcoin libFuzzer-friendly and consider integration into the OSS-Fuzz project\"). Feel free to collect the $20 000 USD bounty :-)",
      "created_at" : "2019-01-30T21:22:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-459114272",
      "id" : 459114272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1OTExNDI3Mg==",
      "updated_at" : "2019-01-30T21:22:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459114272",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15134](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15134.html) (tests: Add a Travis ASan/LSan/UBSan job testing in a unsigned char environment (-funsigned-char) by practicalswift)\n* [#15063](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15063.html) (GUI: If BIP70 is disabled, attempt to fall back to BIP21 parsing by luke-jr)\n* [#10443](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10443.html) (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-01-30T22:30:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-459136152",
      "id" : 459136152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1OTEzNjE1Mg==",
      "updated_at" : "2019-02-11T15:43:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459136152",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can you please explain what you're adding hereÃ¢ÂÂ\r\nWill adding fuzzing to travis make the tests non-deterministic, by randomizing it? Or does it only verify the current corpus?",
      "created_at" : "2019-01-31T11:57:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-459318197",
      "id" : 459318197,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1OTMxODE5Nw==",
      "updated_at" : "2019-01-31T11:57:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459318197",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Indeed the script currently only supports running over all seeds exactly once",
      "created_at" : "2019-01-31T15:14:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-459380679",
      "id" : 459380679,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1OTM4MDY3OQ==",
      "updated_at" : "2019-01-31T15:14:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459380679",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I can't get fuzzing to work on macOS (not that I tried hard), so having it on Travis sounds like a safe idea, if only to ensure people don't accidentally break the build.",
      "created_at" : "2019-02-01T17:55:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-459809688",
      "id" : 459809688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1OTgwOTY4OA==",
      "updated_at" : "2019-02-01T17:56:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459809688",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r253651180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253651180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "PEP-8 tells us to do membership tests using `if X not in Y` instead of `if not X in Y` :-)",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-04T21:22:36Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Run fuzz test targets.\n+\"\"\"\n+\n+import argparse\n+import configparser\n+import os\n+import sys\n+import subprocess\n+import logging\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n+    parser.add_argument(\n+        \"-l\",\n+        \"--loglevel\",\n+        dest=\"loglevel\",\n+        default=\"INFO\",\n+        help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console.\",\n+    )\n+    parser.add_argument(\n+        '--export_coverage',\n+        action='store_true',\n+        help='If true, export coverage information to files in the seed corpus',\n+    )\n+    parser.add_argument(\n+        'corpi',\n+        metavar='dir_corpus',\n+        nargs='+',\n+        help='The seed corpus to run on (must contain subfolders for each fuzz target). Creates a coverage report when one corpus is given, otherwise merges any further corpi.',\n+    )\n+    args = parser.parse_args()\n+\n+    # Set up logging\n+    logging.basicConfig(\n+        format='%(message)s',\n+        level=int(args.loglevel) if args.loglevel.isdigit() else args.loglevel.upper(),\n+    )\n+\n+    # Read config generated by configure.\n+    config = configparser.ConfigParser()\n+    configfile = os.path.abspath(os.path.dirname(__file__)) + \"/../config.ini\"\n+    config.read_file(open(configfile, encoding=\"utf8\"))\n+\n+    # Build list of tests\n+    with open(os.path.join(config[\"environment\"][\"SRCDIR\"], 'src', 'Makefile.test.include'), encoding='utf-8') as makefile_test:\n+        test_list = []\n+        read_targets = False\n+        for line in makefile_test.readlines():\n+            line = line.strip().replace('test/fuzz/', '').replace(' \\\\', '')\n+            if read_targets:\n+                if not line:\n+                    break\n+                test_list.append(line)\n+                continue\n+\n+            if line == 'FUZZ_TARGETS =':\n+                read_targets = True\n+\n+    if not test_list:\n+        logging.error(\"No fuzz targets found\")\n+        sys.exit(1)\n+\n+    logging.info(\"Fuzz targets found: {}\".format(test_list))\n+\n+    if not config[\"components\"].getboolean(\"ENABLE_FUZZ\"):\n+        logging.error(\"Must have fuzz targets built\")\n+        sys.exit(1)\n+\n+    help_output = subprocess.run(\n+        args=[\n+            os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list[0]),\n+            '-help=1',\n+        ],\n+        check=True,\n+        stderr=subprocess.PIPE,\n+        universal_newlines=True,\n+    ).stderr\n+    if not \"libFuzzer\" in help_output:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r253651180",
      "id" : 253651180,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY1MTE4MA==",
      "original_commit_id" : "faa77d788095446ee22567fec83ad7f8e677fcd9",
      "original_position" : 83,
      "path" : "test/fuzz/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 199813334,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253651180",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r253651776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253651776"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why `#??` :-)",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-04T21:24:33Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Run fuzz test targets.\n+\"\"\"\n+\n+import argparse\n+import configparser\n+import os\n+import sys\n+import subprocess\n+import logging\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n+    parser.add_argument(\n+        \"-l\",\n+        \"--loglevel\",\n+        dest=\"loglevel\",\n+        default=\"INFO\",\n+        help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console.\",\n+    )\n+    parser.add_argument(\n+        '--export_coverage',\n+        action='store_true',\n+        help='If true, export coverage information to files in the seed corpus',\n+    )\n+    parser.add_argument(\n+        'corpi',\n+        metavar='dir_corpus',\n+        nargs='+',\n+        help='The seed corpus to run on (must contain subfolders for each fuzz target). Creates a coverage report when one corpus is given, otherwise merges any further corpi.',\n+    )\n+    args = parser.parse_args()\n+\n+    # Set up logging\n+    logging.basicConfig(\n+        format='%(message)s',\n+        level=int(args.loglevel) if args.loglevel.isdigit() else args.loglevel.upper(),\n+    )\n+\n+    # Read config generated by configure.\n+    config = configparser.ConfigParser()\n+    configfile = os.path.abspath(os.path.dirname(__file__)) + \"/../config.ini\"\n+    config.read_file(open(configfile, encoding=\"utf8\"))\n+\n+    # Build list of tests\n+    with open(os.path.join(config[\"environment\"][\"SRCDIR\"], 'src', 'Makefile.test.include'), encoding='utf-8') as makefile_test:\n+        test_list = []\n+        read_targets = False\n+        for line in makefile_test.readlines():\n+            line = line.strip().replace('test/fuzz/', '').replace(' \\\\', '')\n+            if read_targets:\n+                if not line:\n+                    break\n+                test_list.append(line)\n+                continue\n+\n+            if line == 'FUZZ_TARGETS =':\n+                read_targets = True\n+\n+    if not test_list:\n+        logging.error(\"No fuzz targets found\")\n+        sys.exit(1)\n+\n+    logging.info(\"Fuzz targets found: {}\".format(test_list))\n+\n+    if not config[\"components\"].getboolean(\"ENABLE_FUZZ\"):\n+        logging.error(\"Must have fuzz targets built\")\n+        sys.exit(1)\n+\n+    help_output = subprocess.run(\n+        args=[\n+            os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list[0]),\n+            '-help=1',\n+        ],\n+        check=True,\n+        stderr=subprocess.PIPE,\n+        universal_newlines=True,\n+    ).stderr\n+    if not \"libFuzzer\" in help_output:\n+        logging.error(\"Must be built with libFuzzer\")\n+        sys.exit(1)\n+\n+    if len(args.corpi) == 1:\n+        run_once(\n+            corpus=args.corpi[0],\n+            test_list=test_list,\n+            build_dir=config[\"environment\"][\"BUILDDIR\"],\n+            export_coverage=args.export_coverage,\n+        )\n+    else:\n+        merge(\n+            corpi=args.copri,\n+            test_list=test_list,\n+            build_dir=config[\"environment\"][\"BUILDDIR\"],\n+        )\n+\n+\n+def run_once(*, corpus, test_list, build_dir, export_coverage):\n+    for t in test_list:\n+        args = [\n+            os.path.join(build_dir, 'src', 'test', 'fuzz', t),\n+            '-runs=1',\n+            os.path.join(corpus, t),\n+        ]\n+        logging.debug('Run {} with args {}'.format(t, args))\n+        output = subprocess.run(args, check=True, stderr=subprocess.PIPE, universal_newlines=True).stderr\n+        logging.debug('Output: {}'.format(output))\n+        for l in output.splitlines():\n+            if 'INITED' in l:\n+                with open(os.path.join(corpus, t + '_coverage'), 'w', encoding='utf-8') as cov_file:\n+                    cov_file.write(l)\n+                    break\n+\n+\n+def merge(*, corpi, test_list, build_dir):\n+    corpus = corpi.pop(0)\n+    for t in test_list:\n+        args = [\n+            os.path.join(build_dir, 'src', 'test', 'fuzz', t),\n+            '-merge=1',\n+            '-runs=1',  #??",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r253651776",
      "id" : 253651776,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY1MTc3Ng==",
      "original_commit_id" : "faa77d788095446ee22567fec83ad7f8e677fcd9",
      "original_position" : 125,
      "path" : "test/fuzz/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 199814099,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253651776",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r253652041"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253652041"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`export_coverage` unused?",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-04T21:25:26Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Run fuzz test targets.\n+\"\"\"\n+\n+import argparse\n+import configparser\n+import os\n+import sys\n+import subprocess\n+import logging\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n+    parser.add_argument(\n+        \"-l\",\n+        \"--loglevel\",\n+        dest=\"loglevel\",\n+        default=\"INFO\",\n+        help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console.\",\n+    )\n+    parser.add_argument(\n+        '--export_coverage',\n+        action='store_true',\n+        help='If true, export coverage information to files in the seed corpus',\n+    )\n+    parser.add_argument(\n+        'corpi',\n+        metavar='dir_corpus',\n+        nargs='+',\n+        help='The seed corpus to run on (must contain subfolders for each fuzz target). Creates a coverage report when one corpus is given, otherwise merges any further corpi.',\n+    )\n+    args = parser.parse_args()\n+\n+    # Set up logging\n+    logging.basicConfig(\n+        format='%(message)s',\n+        level=int(args.loglevel) if args.loglevel.isdigit() else args.loglevel.upper(),\n+    )\n+\n+    # Read config generated by configure.\n+    config = configparser.ConfigParser()\n+    configfile = os.path.abspath(os.path.dirname(__file__)) + \"/../config.ini\"\n+    config.read_file(open(configfile, encoding=\"utf8\"))\n+\n+    # Build list of tests\n+    with open(os.path.join(config[\"environment\"][\"SRCDIR\"], 'src', 'Makefile.test.include'), encoding='utf-8') as makefile_test:\n+        test_list = []\n+        read_targets = False\n+        for line in makefile_test.readlines():\n+            line = line.strip().replace('test/fuzz/', '').replace(' \\\\', '')\n+            if read_targets:\n+                if not line:\n+                    break\n+                test_list.append(line)\n+                continue\n+\n+            if line == 'FUZZ_TARGETS =':\n+                read_targets = True\n+\n+    if not test_list:\n+        logging.error(\"No fuzz targets found\")\n+        sys.exit(1)\n+\n+    logging.info(\"Fuzz targets found: {}\".format(test_list))\n+\n+    if not config[\"components\"].getboolean(\"ENABLE_FUZZ\"):\n+        logging.error(\"Must have fuzz targets built\")\n+        sys.exit(1)\n+\n+    help_output = subprocess.run(\n+        args=[\n+            os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list[0]),\n+            '-help=1',\n+        ],\n+        check=True,\n+        stderr=subprocess.PIPE,\n+        universal_newlines=True,\n+    ).stderr\n+    if not \"libFuzzer\" in help_output:\n+        logging.error(\"Must be built with libFuzzer\")\n+        sys.exit(1)\n+\n+    if len(args.corpi) == 1:\n+        run_once(\n+            corpus=args.corpi[0],\n+            test_list=test_list,\n+            build_dir=config[\"environment\"][\"BUILDDIR\"],\n+            export_coverage=args.export_coverage,\n+        )\n+    else:\n+        merge(\n+            corpi=args.copri,\n+            test_list=test_list,\n+            build_dir=config[\"environment\"][\"BUILDDIR\"],\n+        )\n+\n+\n+def run_once(*, corpus, test_list, build_dir, export_coverage):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r253652041",
      "id" : 253652041,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY1MjA0MQ==",
      "original_commit_id" : "faa77d788095446ee22567fec83ad7f8e677fcd9",
      "original_position" : 102,
      "path" : "test/fuzz/test_runner.py",
      "position" : 101,
      "pull_request_review_id" : 199814472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253652041",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r254059942"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254059942"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-05T21:47:57Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Run fuzz test targets.\n+\"\"\"\n+\n+import argparse\n+import configparser\n+import os\n+import sys\n+import subprocess\n+import logging\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n+    parser.add_argument(\n+        \"-l\",\n+        \"--loglevel\",\n+        dest=\"loglevel\",\n+        default=\"INFO\",\n+        help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console.\",\n+    )\n+    parser.add_argument(\n+        '--export_coverage',\n+        action='store_true',\n+        help='If true, export coverage information to files in the seed corpus',\n+    )\n+    parser.add_argument(\n+        'corpi',\n+        metavar='dir_corpus',\n+        nargs='+',\n+        help='The seed corpus to run on (must contain subfolders for each fuzz target). Creates a coverage report when one corpus is given, otherwise merges any further corpi.',\n+    )\n+    args = parser.parse_args()\n+\n+    # Set up logging\n+    logging.basicConfig(\n+        format='%(message)s',\n+        level=int(args.loglevel) if args.loglevel.isdigit() else args.loglevel.upper(),\n+    )\n+\n+    # Read config generated by configure.\n+    config = configparser.ConfigParser()\n+    configfile = os.path.abspath(os.path.dirname(__file__)) + \"/../config.ini\"\n+    config.read_file(open(configfile, encoding=\"utf8\"))\n+\n+    # Build list of tests\n+    with open(os.path.join(config[\"environment\"][\"SRCDIR\"], 'src', 'Makefile.test.include'), encoding='utf-8') as makefile_test:\n+        test_list = []\n+        read_targets = False\n+        for line in makefile_test.readlines():\n+            line = line.strip().replace('test/fuzz/', '').replace(' \\\\', '')\n+            if read_targets:\n+                if not line:\n+                    break\n+                test_list.append(line)\n+                continue\n+\n+            if line == 'FUZZ_TARGETS =':\n+                read_targets = True\n+\n+    if not test_list:\n+        logging.error(\"No fuzz targets found\")\n+        sys.exit(1)\n+\n+    logging.info(\"Fuzz targets found: {}\".format(test_list))\n+\n+    if not config[\"components\"].getboolean(\"ENABLE_FUZZ\"):\n+        logging.error(\"Must have fuzz targets built\")\n+        sys.exit(1)\n+\n+    help_output = subprocess.run(\n+        args=[\n+            os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list[0]),\n+            '-help=1',\n+        ],\n+        check=True,\n+        stderr=subprocess.PIPE,\n+        universal_newlines=True,\n+    ).stderr\n+    if not \"libFuzzer\" in help_output:\n+        logging.error(\"Must be built with libFuzzer\")\n+        sys.exit(1)\n+\n+    if len(args.corpi) == 1:\n+        run_once(\n+            corpus=args.corpi[0],\n+            test_list=test_list,\n+            build_dir=config[\"environment\"][\"BUILDDIR\"],\n+            export_coverage=args.export_coverage,\n+        )\n+    else:\n+        merge(\n+            corpi=args.copri,\n+            test_list=test_list,\n+            build_dir=config[\"environment\"][\"BUILDDIR\"],\n+        )\n+\n+\n+def run_once(*, corpus, test_list, build_dir, export_coverage):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r254059942",
      "id" : 254059942,
      "in_reply_to_id" : 253652041,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDA1OTk0Mg==",
      "original_commit_id" : "faa77d788095446ee22567fec83ad7f8e677fcd9",
      "original_position" : 102,
      "path" : "test/fuzz/test_runner.py",
      "position" : 101,
      "pull_request_review_id" : 200320082,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254059942",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r254061787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254061787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Isn't corpora or corpuses the plural of corpus?\r\n\r\nPerhaps the least unexpected choice is to go with \"corpus\" instead of \"corpi\" here?",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-05T21:53:27Z",
      "diff_hunk" : "@@ -0,0 +1,136 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Run fuzz test targets.\n+\"\"\"\n+\n+import argparse\n+import configparser\n+import os\n+import sys\n+import subprocess\n+import logging\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n+    parser.add_argument(\n+        \"-l\",\n+        \"--loglevel\",\n+        dest=\"loglevel\",\n+        default=\"INFO\",\n+        help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console.\",\n+    )\n+    parser.add_argument(\n+        '--export_coverage',\n+        action='store_true',\n+        help='If true, export coverage information to files in the seed corpus',\n+    )\n+    parser.add_argument(\n+        'corpi',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r254061787",
      "id" : 254061787,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDA2MTc4Nw==",
      "original_commit_id" : "fa1d155cb67748da04c8ddb6877433a821f6f603",
      "original_position" : 31,
      "path" : "test/fuzz/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 200322390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254061787",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256582825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256582825"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`s/corpi/corgi`",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-13T20:48:18Z",
      "diff_hunk" : "@@ -0,0 +1,136 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Run fuzz test targets.\n+\"\"\"\n+\n+import argparse\n+import configparser\n+import os\n+import sys\n+import subprocess\n+import logging\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n+    parser.add_argument(\n+        \"-l\",\n+        \"--loglevel\",\n+        dest=\"loglevel\",\n+        default=\"INFO\",\n+        help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console.\",\n+    )\n+    parser.add_argument(\n+        '--export_coverage',\n+        action='store_true',\n+        help='If true, export coverage information to files in the seed corpus',\n+    )\n+    parser.add_argument(\n+        'corpi',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256582825",
      "id" : 256582825,
      "in_reply_to_id" : 254061787,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU4MjgyNQ==",
      "original_commit_id" : "fa1d155cb67748da04c8ddb6877433a821f6f603",
      "original_position" : 31,
      "path" : "test/fuzz/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 203439225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256582825",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256583336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256583336"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~~Why the build parameter change for this existing test run?~~\r\n\r\noh I see, only removing `--enable-fuzz` because it's separated out",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-13T20:49:47Z",
      "diff_hunk" : "@@ -100,7 +101,7 @@ jobs:\n         PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\"\n         DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n         GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-fuzz --enable-glibc-back-compat --enable-reduce-exports --enable-debug CXXFLAGS=\\\"-g0 -O2\\\"\"\n+        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CXXFLAGS=\\\"-g0 -O2\\\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256583336",
      "id" : 256583336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU4MzMzNg==",
      "original_commit_id" : "fa7ce81ee147b98def3406502e91630c5ebac776",
      "original_position" : 13,
      "path" : ".travis.yml",
      "position" : 13,
      "pull_request_review_id" : 203439859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256583336",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256591672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256591672"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it would be more readable to factor the \"get a list of fuzz targets\", for example, out to a function, this is one very long main function. ",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-13T21:15:23Z",
      "diff_hunk" : "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Run fuzz test targets.\n+\"\"\"\n+\n+import argparse\n+import configparser\n+import os\n+import sys\n+import subprocess\n+import logging\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n+    parser.add_argument(\n+        \"-l\",\n+        \"--loglevel\",\n+        dest=\"loglevel\",\n+        default=\"INFO\",\n+        help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console.\",\n+    )\n+    parser.add_argument(\n+        '--export_coverage',\n+        action='store_true',\n+        help='If true, export coverage information to files in the seed corpus',\n+    )\n+    parser.add_argument(\n+        'seed_dir',\n+        help='The seed corpus to run on (must contain subfolders for each fuzz target).',\n+    )\n+    parser.add_argument(\n+        'target',\n+        nargs='*',\n+        help='The target(s) to run. Default is to run all targets.',\n+    )\n+\n+    args = parser.parse_args()\n+\n+    # Set up logging\n+    logging.basicConfig(\n+        format='%(message)s',\n+        level=int(args.loglevel) if args.loglevel.isdigit() else args.loglevel.upper(),\n+    )\n+\n+    # Read config generated by configure.\n+    config = configparser.ConfigParser()\n+    configfile = os.path.abspath(os.path.dirname(__file__)) + \"/../config.ini\"\n+    config.read_file(open(configfile, encoding=\"utf8\"))\n+\n+    # Build list of tests",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256591672",
      "id" : 256591672,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU5MTY3Mg==",
      "original_commit_id" : "fa7ce81ee147b98def3406502e91630c5ebac776",
      "original_position" : 53,
      "path" : "test/fuzz/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 203450588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256591672",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256592268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256592268"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could check this immediately after reading the config, I guess, no need to do any of the other things then.",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-13T21:17:00Z",
      "diff_hunk" : "@@ -0,0 +1,128 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Run fuzz test targets.\n+\"\"\"\n+\n+import argparse\n+import configparser\n+import os\n+import sys\n+import subprocess\n+import logging\n+\n+\n+def main():\n+    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n+    parser.add_argument(\n+        \"-l\",\n+        \"--loglevel\",\n+        dest=\"loglevel\",\n+        default=\"INFO\",\n+        help=\"log events at this level and higher to the console. Can be set to DEBUG, INFO, WARNING, ERROR or CRITICAL. Passing --loglevel DEBUG will output all logs to console.\",\n+    )\n+    parser.add_argument(\n+        '--export_coverage',\n+        action='store_true',\n+        help='If true, export coverage information to files in the seed corpus',\n+    )\n+    parser.add_argument(\n+        'seed_dir',\n+        help='The seed corpus to run on (must contain subfolders for each fuzz target).',\n+    )\n+    parser.add_argument(\n+        'target',\n+        nargs='*',\n+        help='The target(s) to run. Default is to run all targets.',\n+    )\n+\n+    args = parser.parse_args()\n+\n+    # Set up logging\n+    logging.basicConfig(\n+        format='%(message)s',\n+        level=int(args.loglevel) if args.loglevel.isdigit() else args.loglevel.upper(),\n+    )\n+\n+    # Read config generated by configure.\n+    config = configparser.ConfigParser()\n+    configfile = os.path.abspath(os.path.dirname(__file__)) + \"/../config.ini\"\n+    config.read_file(open(configfile, encoding=\"utf8\"))\n+\n+    # Build list of tests\n+    with open(os.path.join(config[\"environment\"][\"SRCDIR\"], 'src', 'Makefile.test.include'), encoding='utf-8') as makefile_test:\n+        test_list_all = []\n+        read_targets = False\n+        for line in makefile_test.readlines():\n+            line = line.strip().replace('test/fuzz/', '').replace(' \\\\', '')\n+            if read_targets:\n+                if not line:\n+                    break\n+                test_list_all.append(line)\n+                continue\n+\n+            if line == 'FUZZ_TARGETS =':\n+                read_targets = True\n+\n+    if not test_list_all:\n+        logging.error(\"No fuzz targets found\")\n+        sys.exit(1)\n+\n+    logging.info(\"Fuzz targets found: {}\".format(test_list_all))\n+\n+    args.target = args.target or test_list_all  # By default run all\n+    test_list_error = list(set(args.target).difference(set(test_list_all)))\n+    if test_list_error:\n+        logging.error(\"Unknown fuzz targets selected: {}\".format(test_list_error))\n+    test_list_selection = list(set(test_list_all).intersection(set(args.target)))\n+    if not test_list_selection:\n+        logging.error(\"No fuzz targets selected\")\n+    logging.info(\"Fuzz targets selected: {}\".format(test_list_selection))\n+\n+    if not config[\"components\"].getboolean(\"ENABLE_FUZZ\"):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256592268",
      "id" : 256592268,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU5MjI2OA==",
      "original_commit_id" : "fa7ce81ee147b98def3406502e91630c5ebac776",
      "original_position" : 83,
      "path" : "test/fuzz/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 203451325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256592268",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256593081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256593081"
         }
      },
      "author_association" : "MEMBER",
      "body" : "no `export` for this one, but there is for `DIR_FUZZ_IN`, is that intentional?",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-13T21:19:23Z",
      "diff_hunk" : "@@ -5,6 +5,29 @@ A special test harness in `src/test/fuzz/` is provided for each fuzz target to\n provide an easy entry point for fuzzers and the like. In this document we'll\n describe how to use it with AFL and libFuzzer.\n \n+## Preparing fuzzing\n+\n+AFL needs an input directory with examples, and an output directory where it\n+will place examples that it found. These can be anywhere in the file system,\n+we'll define environment variables to make it easy to reference them.\n+\n+libFuzzer will use the input directory as output directory.\n+\n+Extract the example seeds (or other starting inputs) into the inputs\n+directory before starting fuzzing.\n+\n+```\n+git clone https://github.com/bitcoin-core/qa-assets\n+export DIR_FUZZ_IN=$PWD/qa-assets/fuzz_seed_corpus\n+```\n+\n+Only for AFL:\n+\n+```\n+mkdir outputs\n+AFLOUT=$PWD/outputs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r256593081",
      "id" : 256593081,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjU5MzA4MQ==",
      "original_commit_id" : "fa7ce81ee147b98def3406502e91630c5ebac776",
      "original_position" : 24,
      "path" : "doc/fuzzing.md",
      "position" : null,
      "pull_request_review_id" : 203452312,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256593081",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thx, done",
      "created_at" : "2019-02-13T22:13:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-463396871",
      "id" : 463396871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzM5Njg3MQ==",
      "updated_at" : "2019-02-13T22:13:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463396871",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b\r\n\r\nLet's get this merged :-)",
      "created_at" : "2019-02-14T08:09:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-463531840",
      "id" : 463531840,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzUzMTg0MA==",
      "updated_at" : "2019-02-14T08:09:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463531840",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would be nice if at least some person other than myself and travis could test this. Just copy-paste the commands in the readme on a linux machine and tell me your computer didn't crash or something.",
      "created_at" : "2019-02-14T16:45:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-463700235",
      "id" : 463700235,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzcwMDIzNQ==",
      "updated_at" : "2019-02-14T16:45:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463700235",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested changes (https://github.com/bitcoin/bitcoin/pull/15295/commits/fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b) to `doc/fuzzing.md` on `Linux 4.15.0-43-generic #46-Ubuntu SMP x86_64` with `afl-fuzz 2.52b`. Installed afl from scratch, rebuilt Bitcoin with requisite flags, and confirmed that running `afl-fuzz` with the `transaction_deserialize` works as intended.\r\n\r\nUsed new test_runner script which looks like an easy way to delegate to calling `src/test/fuzz/*`. Have yet to get any meaningful output back, but maybe this is intended?\r\n```\r\n$ ./test/fuzz/test_runner.py -l DEBUG ~/src/qa-assets/fuzz_seed_corpus transaction_deserialize\r\n\r\nFuzz targets found: ['address_deserialize', 'addrman_deserialize', 'banentry_deserialize', 'block_deserialize', 'blockheader_deserialize', 'blocklocator_deserialize', 'blockmerkleroot', 'blocktransactions_deserialize', 'blocktransactionsrequest_deserialize', 'blockundo_deserialize', 'bloomfilter_deserialize', 'coins_deserialize', 'diskblockindex_deserialize', 'inv_deserialize', 'messageheader_deserialize', 'netaddr_deserialize', 'service_deserialize', 'transaction_deserialize', 'txoutcompressor_deserialize', 'txundo_deserialize']\r\nFuzz targets selected: ['transaction_deserialize']\r\n```",
      "created_at" : "2019-02-14T20:34:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-463784121",
      "id" : 463784121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2Mzc4NDEyMQ==",
      "updated_at" : "2019-02-14T20:34:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463784121",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r257007108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257007108"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested and works when bitcoin is built with afl.",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-14T20:52:28Z",
      "diff_hunk" : "@@ -72,17 +72,22 @@ def main():\n         logging.error(\"No fuzz targets selected\")\n     logging.info(\"Fuzz targets selected: {}\".format(test_list_selection))\n \n-    help_output = subprocess.run(\n-        args=[\n-            os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list_selection[0]),\n-            '-help=1',\n-        ],\n-        check=True,\n-        stderr=subprocess.PIPE,\n-        universal_newlines=True,\n-    ).stderr\n-    if \"libFuzzer\" not in help_output:\n-        logging.error(\"Must be built with libFuzzer\")\n+    try:\n+        help_output = subprocess.run(\n+            args=[\n+                os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list_selection[0]),\n+                '-help=1',\n+            ],\n+            timeout=1,\n+            check=True,\n+            stderr=subprocess.PIPE,\n+            universal_newlines=True,\n+        ).stderr\n+        if \"libFuzzer\" not in help_output:\n+            logging.error(\"Must be built with libFuzzer\")\n+            sys.exit(1)\n+    except subprocess.TimeoutExpired:\n+        logging.error(\"subprocess timed out: Currently only libFuzzer is supported\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r257007108",
      "id" : 257007108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzAwNzEwOA==",
      "original_commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "original_position" : 30,
      "path" : "test/fuzz/test_runner.py",
      "position" : 90,
      "pull_request_review_id" : 203964238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:52:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257007108",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r257007375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257007375"
         }
      },
      "author_association" : "MEMBER",
      "body" : ":heart: ",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-14T20:53:13Z",
      "diff_hunk" : "@@ -72,17 +72,22 @@ def main():\n         logging.error(\"No fuzz targets selected\")\n     logging.info(\"Fuzz targets selected: {}\".format(test_list_selection))\n \n-    help_output = subprocess.run(\n-        args=[\n-            os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list_selection[0]),\n-            '-help=1',\n-        ],\n-        check=True,\n-        stderr=subprocess.PIPE,\n-        universal_newlines=True,\n-    ).stderr\n-    if \"libFuzzer\" not in help_output:\n-        logging.error(\"Must be built with libFuzzer\")\n+    try:\n+        help_output = subprocess.run(\n+            args=[\n+                os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list_selection[0]),\n+                '-help=1',\n+            ],\n+            timeout=1,\n+            check=True,\n+            stderr=subprocess.PIPE,\n+            universal_newlines=True,\n+        ).stderr\n+        if \"libFuzzer\" not in help_output:\n+            logging.error(\"Must be built with libFuzzer\")\n+            sys.exit(1)\n+    except subprocess.TimeoutExpired:\n+        logging.error(\"subprocess timed out: Currently only libFuzzer is supported\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r257007375",
      "id" : 257007375,
      "in_reply_to_id" : 257007108,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzAwNzM3NQ==",
      "original_commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "original_position" : 30,
      "path" : "test/fuzz/test_runner.py",
      "position" : 90,
      "pull_request_review_id" : 203964563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-14T20:53:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257007375",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK https://github.com/bitcoin/bitcoin/pull/15295/commits/fa535af92c179b0ffb9280e0b2dc5acfeb80964a. Rebuilt with libfuzzer and tested the command that previously failed with afl:\r\n```\r\n$ ./test/fuzz/test_runner.py -l DEBUG ~/src/qa-assets/fuzz_seed_corpus transaction_deserialize\r\n\r\nFuzz targets found: ['address_deserialize', 'addrman_deserialize', 'banentry_deserialize', 'block_deserialize', 'blockheader_deserialize', 'blocklocator_deserialize', 'blockmerkleroot', 'blocktransactions_deserialize', 'blocktransactionsrequest_deserialize', 'blockundo_deserialize', 'bloomfilter_deserialize', 'coins_deserialize', 'diskblockindex_deserialize', 'inv_deserialize', 'messageheader_deserialize', 'netaddr_deserialize', 'service_deserialize', 'transaction_deserialize', 'txoutcompressor_deserialize', 'txundo_deserialize']\r\nFuzz targets selected: ['transaction_deserialize']\r\nRun transaction_deserialize with args ['/home/james/src/bitcoin/src/test/fuzz/transaction_deserialize', '-runs=1', '/home/james/src/qa-assets/fuzz_seed_corpus/transaction_deserialize']\r\nOutput: INFO: Seed: 819372946\r\nINFO: Loaded 1 modules   (2002 inline 8-bit counters): 2002 [0x55b9cec15620, 0x55b9cec15df2),\r\nINFO: Loaded 1 PC tables (2002 PCs): 2002 [0x55b9cec15df8,0x55b9cec1db18),\r\nINFO:      295 files found in /home/james/src/qa-assets/fuzz_seed_corpus/transaction_deserialize\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 52575 bytes\r\nINFO: seed corpus: files: 295 min: 1b max: 52575b total: 491499b rss: 45Mb\r\n#296    INITED cov: 240 ft: 938 corp: 277/475Kb exec/s: 0 rss: 106Mb\r\n#296    DONE   cov: 240 ft: 938 corp: 277/475Kb exec/s: 0 rss: 106Mb\r\nDone 296 runs in 0 second(s)\r\n```\r\n\r\nWorth noting that I had to bump clang from 4. to 6. in order for the `-fsanitize=fuzzer` flags to work.",
      "created_at" : "2019-02-14T21:08:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#issuecomment-463797022",
      "id" : 463797022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15295",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2Mzc5NzAyMg==",
      "updated_at" : "2019-02-14T21:08:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463797022",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r259412395"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259412395"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"qa: Add test/fuzz/test_runner.py\" (fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b)\r\n\r\n@MarcoFalke  Is this no longer building test_bitcoin if ENABLE_FUZZ is true? I wouldn't expect ENABLE_FUZZ to affect this, but if this is correct it'd be helpful to have a comment here explaining what this is doing.",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-22T16:25:00Z",
      "diff_hunk" : "@@ -28,6 +27,8 @@ FUZZ_TARGETS = \\\n \n if ENABLE_FUZZ\n noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n+else\n+bin_PROGRAMS += test/test_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r259412395",
      "id" : 259412395,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTQxMjM5NQ==",
      "original_commit_id" : "fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b",
      "original_position" : 13,
      "path" : "src/Makefile.test.include",
      "position" : 13,
      "pull_request_review_id" : 206907315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-22T16:25:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259412395",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r259416865"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259416865"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, I think there is no reason to build `test_bitcoin` if you want to build the fuzz tests. Am I missing something?\r\n\r\nRegardless of that, it would result in linker errors later in the build process, since you can't link libfuzzer to something that has a main function.",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-22T16:35:48Z",
      "diff_hunk" : "@@ -28,6 +27,8 @@ FUZZ_TARGETS = \\\n \n if ENABLE_FUZZ\n noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n+else\n+bin_PROGRAMS += test/test_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r259416865",
      "id" : 259416865,
      "in_reply_to_id" : 259412395,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTQxNjg2NQ==",
      "original_commit_id" : "fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b",
      "original_position" : 13,
      "path" : "src/Makefile.test.include",
      "position" : 13,
      "pull_request_review_id" : 206912869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-22T16:35:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259416865",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r259430949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259430949"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh ok, I don't know really anything about fuzzing, and I assumed enabling a fuzzing option would just build some new binaries, not affect existing binaries in any way. But I guess due to autotools lack of support for side-by-side build configurations, ENABLE_FUZZ affects every existing binary we build, as well as building new binaries? Probably not worth adding a comment here just for `test_bitcoin` in this case.",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-22T17:08:47Z",
      "diff_hunk" : "@@ -28,6 +27,8 @@ FUZZ_TARGETS = \\\n \n if ENABLE_FUZZ\n noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n+else\n+bin_PROGRAMS += test/test_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r259430949",
      "id" : 259430949,
      "in_reply_to_id" : 259412395,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTQzMDk0OQ==",
      "original_commit_id" : "fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b",
      "original_position" : 13,
      "path" : "src/Makefile.test.include",
      "position" : 13,
      "pull_request_review_id" : 206929090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-22T17:08:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259430949",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r259455521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259455521"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, ideally it should disable all other binaries.\r\n\r\nCurrently we hack around that by specifying it manually:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/169dced9a42bd741b3265adee23e6a8d1f852227/.travis.yml#L146",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2019-02-22T18:16:09Z",
      "diff_hunk" : "@@ -28,6 +27,8 @@ FUZZ_TARGETS = \\\n \n if ENABLE_FUZZ\n noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n+else\n+bin_PROGRAMS += test/test_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r259455521",
      "id" : 259455521,
      "in_reply_to_id" : 259412395,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTQ1NTUyMQ==",
      "original_commit_id" : "fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b",
      "original_position" : 13,
      "path" : "src/Makefile.test.include",
      "position" : 13,
      "pull_request_review_id" : 206958237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "updated_at" : "2019-02-22T18:16:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259455521",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r539386647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539386647"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It is surprising that --enable-fuzz silently stops building the test binary, especially as config.log continues to claim that test_bitcoin is being built.",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2020-12-09T15:09:51Z",
      "diff_hunk" : "@@ -28,6 +27,8 @@ FUZZ_TARGETS = \\\n \n if ENABLE_FUZZ\n noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n+else\n+bin_PROGRAMS += test/test_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r539386647",
      "id" : 539386647,
      "in_reply_to_id" : 259412395,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM4NjY0Nw==",
      "original_commit_id" : "fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b",
      "original_line" : 31,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/Makefile.test.include",
      "position" : 13,
      "pull_request_review_id" : 548281640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-09T15:09:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539386647",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1351933?v=4",
         "events_url" : "https://api.github.com/users/apoelstra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/apoelstra/followers",
         "following_url" : "https://api.github.com/users/apoelstra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/apoelstra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/apoelstra",
         "id" : 1351933,
         "login" : "apoelstra",
         "node_id" : "MDQ6VXNlcjEzNTE5MzM=",
         "organizations_url" : "https://api.github.com/users/apoelstra/orgs",
         "received_events_url" : "https://api.github.com/users/apoelstra/received_events",
         "repos_url" : "https://api.github.com/users/apoelstra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/apoelstra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/apoelstra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r539393175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539393175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> It is surprising that --enable-fuzz silently stops building the test binary\r\n\r\nMight be fixed by #19388, which is blocked on #20560 . Though when building and linking with a fuzz engine, the test_bitcoin binary won't have any meaning. Not sure if it will even compile/link.\r\n\r\n> config.log continues to claim that test_bitcoin is being built.\r\n\r\nI don't really understand build systems, so if this is an issue, I hope that someone will fix it",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2020-12-09T15:17:17Z",
      "diff_hunk" : "@@ -28,6 +27,8 @@ FUZZ_TARGETS = \\\n \n if ENABLE_FUZZ\n noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n+else\n+bin_PROGRAMS += test/test_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r539393175",
      "id" : 539393175,
      "in_reply_to_id" : 259412395,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM5MzE3NQ==",
      "original_commit_id" : "fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b",
      "original_line" : 31,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/Makefile.test.include",
      "position" : 13,
      "pull_request_review_id" : 548290008,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-09T15:17:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539393175",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r539410631"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539410631"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'll open a PR to change config to output something like\r\n```\r\nconfigure:27478: checking whether to build test_bitcoin-qt\r\nconfigure:27481: result: no, because fuzzing is enabled\r\nconfigure:27499: checking whether to build test_bitcoin\r\nconfigure:27502: result: no, because fuzzing is enabled\r\n```\r\nIt's not really surprising that enabling fuzzing would break all the other binaries, I was just misled by the config output.",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2020-12-09T15:37:29Z",
      "diff_hunk" : "@@ -28,6 +27,8 @@ FUZZ_TARGETS = \\\n \n if ENABLE_FUZZ\n noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n+else\n+bin_PROGRAMS += test/test_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r539410631",
      "id" : 539410631,
      "in_reply_to_id" : 259412395,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQxMDYzMQ==",
      "original_commit_id" : "fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b",
      "original_line" : 31,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/Makefile.test.include",
      "position" : 13,
      "pull_request_review_id" : 548312009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-09T15:37:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539410631",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1351933?v=4",
         "events_url" : "https://api.github.com/users/apoelstra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/apoelstra/followers",
         "following_url" : "https://api.github.com/users/apoelstra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/apoelstra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/apoelstra",
         "id" : 1351933,
         "login" : "apoelstra",
         "node_id" : "MDQ6VXNlcjEzNTE5MzM=",
         "organizations_url" : "https://api.github.com/users/apoelstra/orgs",
         "received_events_url" : "https://api.github.com/users/apoelstra/received_events",
         "repos_url" : "https://api.github.com/users/apoelstra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/apoelstra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/apoelstra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r539728760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539728760"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/20609",
      "commit_id" : "fa535af92c179b0ffb9280e0b2dc5acfeb80964a",
      "created_at" : "2020-12-09T23:36:09Z",
      "diff_hunk" : "@@ -28,6 +27,8 @@ FUZZ_TARGETS = \\\n \n if ENABLE_FUZZ\n noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n+else\n+bin_PROGRAMS += test/test_bitcoin",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15295#discussion_r539728760",
      "id" : 539728760,
      "in_reply_to_id" : 259412395,
      "line" : 31,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcyODc2MA==",
      "original_commit_id" : "fa7ca8ef58bf3e3b91d1f5a67fa42008e63b1f7b",
      "original_line" : 31,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/Makefile.test.include",
      "position" : 13,
      "pull_request_review_id" : 548702741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15295",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-09T23:36:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539728760",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1351933?v=4",
         "events_url" : "https://api.github.com/users/apoelstra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/apoelstra/followers",
         "following_url" : "https://api.github.com/users/apoelstra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/apoelstra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/apoelstra",
         "id" : 1351933,
         "login" : "apoelstra",
         "node_id" : "MDQ6VXNlcjEzNTE5MzM=",
         "organizations_url" : "https://api.github.com/users/apoelstra/orgs",
         "received_events_url" : "https://api.github.com/users/apoelstra/received_events",
         "repos_url" : "https://api.github.com/users/apoelstra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/apoelstra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/apoelstra"
      }
   }
]
