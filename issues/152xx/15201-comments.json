[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2019-01-19T01:51:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15201#issuecomment-455738643",
      "id" : 455738643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15201",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTczODY0Mw==",
      "updated_at" : "2019-01-19T14:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455738643",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15201#discussion_r249250254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15201"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249250254"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why?",
      "commit_id" : "eea02be70ee37b845f2719b3c08e5baf4b6f51f6",
      "created_at" : "2019-01-19T16:45:44Z",
      "diff_hunk" : "@@ -2501,7 +2501,7 @@ void CConnman::Interrupt()\n     }\n }\n \n-void CConnman::Stop()\n+void CConnman::Stop() NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15201#discussion_r249250254",
      "id" : 249250254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI1MDI1NA==",
      "original_commit_id" : "e211626a6af2f21df076561876a15ee0557b23a4",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 194362251,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15201",
      "updated_at" : "2019-01-19T17:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249250254",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15201#discussion_r249250873"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15201"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249250873"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good question! I added a clarifying comment:\r\n\r\n```\r\n// TODO: Remove NO_THREAD_SAFETY_ANALYSIS. Lock cs_vNodes before reading the variable vNodes.\r\n//\r\n// When removing NO_THREAD_SAFETY_ANALYSIS be aware of the following lock order requirements:\r\n// * CheckForStaleTipAndEvictPeers locks cs_main before indirectly calling GetExtraOutboundCount\r\n//   which locks cs_vNodes.\r\n// * ProcessMessage locks cs_main and g_cs_orphans before indirectly calling ForEachNode which\r\n//   locks cs_vNodes.\r\n//\r\n// Thus the implicit locking order requirement is: (1) cs_main, (2) g_cs_orphans, (3) cs_vNodes.\r\n```\r\n\r\nThe problem here is that `cs_vNodes` needs to be locked before reading the variable `vNodes`.\r\n\r\nAdding such a lock in `CConnman::Stop` would be trivial, but we have to take into account the implicit locking order requirements that follow from other parts of the code. Getting a matching locking order here results in surprisingly invasive changes (at least when I did it!).",
      "commit_id" : "eea02be70ee37b845f2719b3c08e5baf4b6f51f6",
      "created_at" : "2019-01-19T17:04:46Z",
      "diff_hunk" : "@@ -2501,7 +2501,7 @@ void CConnman::Interrupt()\n     }\n }\n \n-void CConnman::Stop()\n+void CConnman::Stop() NO_THREAD_SAFETY_ANALYSIS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15201#discussion_r249250873",
      "id" : 249250873,
      "in_reply_to_id" : 249250254,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI1MDg3Mw==",
      "original_commit_id" : "e211626a6af2f21df076561876a15ee0557b23a4",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 194362914,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15201",
      "updated_at" : "2019-01-19T17:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249250873",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Feedback addressed! Please re-review :-)",
      "created_at" : "2019-02-07T21:55:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15201#issuecomment-461610126",
      "id" : 461610126,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15201",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MTYxMDEyNg==",
      "updated_at" : "2019-02-07T21:55:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461610126",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks! I am still somewhat skeptical about adding a lock annotation then working around it, but all in all I think the annotation has value because it still allows checking the other uses of the lock. It's also good to document the hairy situation with a comment.\r\n\r\nutACK eea02be70ee37b845f2719b3c08e5baf4b6f51f6",
      "created_at" : "2019-02-08T11:42:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15201#issuecomment-461777128",
      "id" : 461777128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15201",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MTc3NzEyOA==",
      "updated_at" : "2019-02-08T11:42:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461777128",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Adding the to-be-fixed data race for future reference:\r\n\r\nLine numbers as of bb68abe784b9fd49bddf38105d142a31ef0f9e77\r\n\r\n\r\n```\r\nWARNING: ThreadSanitizer: data race (pid=28633)\r\n  Write of size 8 at 0x7f94042f9328 by main thread (mutexes: write M132887):\r\n    #0 std::vector<CNode*, std::allocator<CNode*> >::_M_erase_at_end(CNode**) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_vector.h:1439 (bitcoind+0x0000005216ff)\r\n    #1 std::vector<CNode*, std::allocator<CNode*> >::clear() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_vector.h:1212 (bitcoind+0x0000005216ff)\r\n    #2 CConnman::Stop() /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/net.cpp:2351 (bitcoind+0x0000005216ff)\r\n    #3 Shutdown(InitInterfaces&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/init.cpp:223 (bitcoind+0x0000004c27e2)\r\n    #4 AppInit(int, char**) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:185 (bitcoind+0x0000004bd41a)\r\n    #5 main /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:201 (bitcoind+0x0000004bd41a)\r\n  Previous read of size 8 at 0x7f94042f9328 by thread T2 (mutexes: write M131465, write M131617):\r\n    #0 __normal_iterator /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_iterator.h:741 (bitcoind+0x00000051b128)\r\n    #1 std::vector<CNode*, std::allocator<CNode*> >::end() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_vector.h:566 (bitcoind+0x00000051b128)\r\n    #2 CConnman::GetExtraOutboundCount() /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/net.cpp:1648 (bitcoind+0x00000051b128)\r\n    #3 PeerLogicValidation::EvictExtraOutboundPeers(long) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/net_processing.cpp:3346 (bitcoind+0x00000055af44)\r\n    #4 PeerLogicValidation::CheckForStaleTipAndEvictPeers(Consensus::Params const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/net_processing.cpp:3408 (bitcoind+0x00000053cb1c)\r\n    #5 void std::_Mem_fn_base<void (PeerLogicValidation::*)(Consensus::Params const&), true>::operator()<Consensus::Params&, void>(PeerLogicValidation*, Consensus::Params&) const /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:600 (bitcoind+0x00000058b607)\r\n    #6 void std::_Bind<std::_Mem_fn<void (PeerLogicValidation::*)(Consensus::Params const&)> (PeerLogicValidation*, Consensus::Params)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1073 (bitcoind+0x00000058b607)\r\n    #7 void std::_Bind<std::_Mem_fn<void (PeerLogicValidation::*)(Consensus::Params const&)> (PeerLogicValidation*, Consensus::Params)>::operator()<, void>() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1131 (bitcoind+0x00000058b607)\r\n    #8 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (PeerLogicValidation::*)(Consensus::Params const&)> (PeerLogicValidation*, Consensus::Params)> >::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1871 (bitcoind+0x00000058b607)\r\n    #9 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:2267 (bitcoind+0x0000008070ff)\r\n    #10 Repeat(CScheduler*, std::function<void ()>, long) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/scheduler.cpp:121 (bitcoind+0x0000008070ff)\r\n    #11 void std::_Bind<void (*(CScheduler*, std::function<void ()>, long))(CScheduler*, std::function<void ()>, long)>::__call<void, , 0ul, 1ul, 2ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul, 2ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1073 (bitcoind+0x000000808406)\r\n    #12 void std::_Bind<void (*(CScheduler*, std::function<void ()>, long))(CScheduler*, std::function<void ()>, long)>::operator()<, void>() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1131 (bitcoind+0x000000808196)\r\n    #13 std::_Function_handler<void (), std::_Bind<void (*(CScheduler*, std::function<void ()>, long))(CScheduler*, std::function<void ()>, long)> >::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1871 (bitcoind+0x000000808196)\r\n    #14 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:2267 (bitcoind+0x0000008066c5)\r\n    #15 CScheduler::serviceQueue() /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/scheduler.cpp:82 (bitcoind+0x0000008066c5)\r\n    #16 void std::_Mem_fn_base<void (CScheduler::*)(), true>::operator()<, void>(CScheduler*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:600 (bitcoind+0x000000500e77)\r\n    #17 void std::_Bind<std::_Mem_fn<void (CScheduler::*)()> (CScheduler*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1073 (bitcoind+0x000000500e77)\r\n    #18 void std::_Bind<std::_Mem_fn<void (CScheduler::*)()> (CScheduler*)>::operator()<, void>() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1131 (bitcoind+0x000000500e77)\r\n    #19 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CScheduler::*)()> (CScheduler*)> >::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1871 (bitcoind+0x000000500e77)\r\n    #20 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:2267 (bitcoind+0x0000004eae97)\r\n    #21 void TraceThread<std::function<void ()> >(char const*, std::function<void ()>) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./util/system.h:340 (bitcoind+0x0000004eae97)\r\n    #22 void std::_Bind<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1073 (bitcoind+0x00000050139c)\r\n    #23 void std::_Bind<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()<, void>() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1131 (bitcoind+0x000000501305)\r\n    #24 boost::detail::thread_data<std::_Bind<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::run() /usr/include/boost/thread/detail/thread.hpp:116 (bitcoind+0x000000501305)\r\n    #25 boost::this_thread::interruption_point() <null> (libboost_thread.so.1.58.0+0x0000000115d4)\r\n  Location is heap block of size 328928 at 0x7f94042a9000 allocated by main thread:\r\n    #0 operator new(unsigned long) <null> (bitcoind+0x0000004ba2f3)\r\n    #1 AppInitMain(InitInterfaces&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/init.cpp:1335 (bitcoind+0x0000004da9a3)\r\n    #2 AppInit(int, char**) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:171 (bitcoind+0x0000004bcc96)\r\n    #3 main /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:201 (bitcoind+0x0000004bcc96)\r\n  Mutex M132887 (0x000000cd6550) created at:\r\n    #0 pthread_mutex_trylock <null> (bitcoind+0x0000004501e0)\r\n    #1 __gthread_mutex_trylock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/x86_64-linux-gnu/c++/5.4.0/bits/gthr-default.h:757 (bitcoind+0x0000004c17c2)\r\n    #2 __gthread_recursive_mutex_trylock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/x86_64-linux-gnu/c++/5.4.0/bits/gthr-default.h:816 (bitcoind+0x0000004c17c2)\r\n    #3 std::recursive_mutex::try_lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/mutex:187 (bitcoind+0x0000004c17c2)\r\n    #4 std::unique_lock<std::recursive_mutex>::try_lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/mutex:499 (bitcoind+0x0000004c17c2)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>, std::unique_lock<std::recursive_mutex> >::TryEnter(char const*, char const*, int) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./sync.h:138 (bitcoind+0x0000004c17c2)\r\n    #6 UniqueLock /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./sync.h:148 (bitcoind+0x0000004c17c2)\r\n    #7 Shutdown(InitInterfaces&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/init.cpp:200 (bitcoind+0x0000004c2711)\r\n    #8 AppInit(int, char**) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:185 (bitcoind+0x0000004bd41a)\r\n    #9 main /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:201 (bitcoind+0x0000004bd41a)\r\n  Mutex M131465 (0x000000cd6660) created at:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x0000004516e0)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/x86_64-linux-gnu/c++/5.4.0/bits/gthr-default.h:748 (bitcoind+0x0000004dd10c)\r\n    #2 __gthread_recursive_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/x86_64-linux-gnu/c++/5.4.0/bits/gthr-default.h:810 (bitcoind+0x0000004dd10c)\r\n    #3 std::recursive_mutex::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/mutex:176 (bitcoind+0x0000004dd10c)\r\n    #4 std::unique_lock<std::recursive_mutex>::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/mutex:485 (bitcoind+0x0000004dd10c)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>, std::unique_lock<std::recursive_mutex> >::Enter(char const*, char const*, int) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./sync.h:129 (bitcoind+0x0000004dd10c)\r\n    #6 UniqueLock /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./sync.h:150 (bitcoind+0x0000004dd10c)\r\n    #7 AppInitMain(InitInterfaces&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/init.cpp:1477 (bitcoind+0x0000004dd10c)\r\n    #8 AppInit(int, char**) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:171 (bitcoind+0x0000004bcc96)\r\n    #9 main /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:201 (bitcoind+0x0000004bcc96)\r\n  Mutex M131617 (0x7f94042f9350) created at:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0x0000004516e0)\r\n    #1 __gthread_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/x86_64-linux-gnu/c++/5.4.0/bits/gthr-default.h:748 (bitcoind+0x000000514ac3)\r\n    #2 __gthread_recursive_mutex_lock(pthread_mutex_t*) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/x86_64-linux-gnu/c++/5.4.0/bits/gthr-default.h:810 (bitcoind+0x000000514ac3)\r\n    #3 std::recursive_mutex::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/mutex:176 (bitcoind+0x000000514ac3)\r\n    #4 std::unique_lock<std::recursive_mutex>::lock() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/mutex:485 (bitcoind+0x000000514ac3)\r\n    #5 UniqueLock<AnnotatedMixin<std::recursive_mutex>, std::unique_lock<std::recursive_mutex> >::Enter(char const*, char const*, int) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./sync.h:129 (bitcoind+0x000000514ac3)\r\n    #6 UniqueLock /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./sync.h:150 (bitcoind+0x000000514ac3)\r\n    #7 CConnman::DisconnectNodes() /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/net.cpp:978 (bitcoind+0x000000514ac3)\r\n    #8 CConnman::ThreadSocketHandler() /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/net.cpp:1375 (bitcoind+0x000000518d67)\r\n    #9 void std::_Mem_fn_base<void (CConnman::*)(), true>::operator()<, void>(CConnman*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:600 (bitcoind+0x0000005349a7)\r\n    #10 void std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1073 (bitcoind+0x0000005349a7)\r\n    #11 void std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)>::operator()<, void>() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1131 (bitcoind+0x0000005349a7)\r\n    #12 std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (CConnman::*)()> (CConnman*)> >::_M_invoke(std::_Any_data const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1871 (bitcoind+0x0000005349a7)\r\n    #13 std::function<void ()>::operator()() const /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:2267 (bitcoind+0x0000004eae97)\r\n    #14 void TraceThread<std::function<void ()> >(char const*, std::function<void ()>) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./util/system.h:340 (bitcoind+0x0000004eae97)\r\n    #15 void std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1530 (bitcoind+0x000000534e82)\r\n    #16 std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/functional:1520 (bitcoind+0x000000534e82)\r\n    #17 std::thread::_Impl<std::_Bind_simple<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/thread:115 (bitcoind+0x000000534e82)\r\n    #18 std::this_thread::__sleep_for(std::chrono::duration<long, std::ratio<1l, 1l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> >) <null> (libstdc++.so.6+0x0000000b8c7f)\r\n  Thread T2 'bitcoin-schedul' (tid=28636, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0x00000043a5a6)\r\n    #1 boost::thread::start_thread_noexcept() <null> (libboost_thread.so.1.58.0+0x0000000102e8)\r\n    #2 thread<std::_Bind<void (*(const char *, std::function<void ()>))(const char *, std::function<void ()>)> &> /usr/include/boost/thread/detail/thread.hpp:266 (bitcoind+0x000000501102)\r\n    #3 boost::thread* boost::thread_group::create_thread<std::_Bind<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)> >(std::_Bind<void (*(char const*, std::function<void ()>))(char const*, std::function<void ()>)>) /usr/include/boost/thread/detail/thread_group.hpp:78 (bitcoind+0x0000004ead7c)\r\n    #4 AppInitMain(InitInterfaces&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/init.cpp:1284 (bitcoind+0x0000004da47e)\r\n    #5 AppInit(int, char**) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:171 (bitcoind+0x0000004bcc96)\r\n    #6 main /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/bitcoind.cpp:201 (bitcoind+0x0000004bcc96)\r\nSUMMARY: ThreadSanitizer: data race /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_vector.h:1439 in std::vector<CNode*, std::allocator<CNode*> >::_M_erase_at_end(CNode**)\r\n==================\r\nThreadSanitizer: reported 1 warnings",
      "created_at" : "2019-04-11T18:02:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15201#issuecomment-482229245",
      "id" : 482229245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15201",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjIyOTI0NQ==",
      "updated_at" : "2019-04-11T18:02:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482229245",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
