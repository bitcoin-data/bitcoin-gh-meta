[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [S3RK](https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1550888614) |\n| Concept ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/26728#pullrequestreview-1261822920) |\n| Approach ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/26728#pullrequestreview-1242740987) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27286](https://github.com/bitcoin/bitcoin/pull/27286) (wallet: Keep track of the wallet's own transaction outputs in memory by achow101)\n* [#26008](https://github.com/bitcoin/bitcoin/pull/26008) (wallet: cache IsMine scriptPubKeys to improve performance of descriptor wallets by achow101)\n* [#25907](https://github.com/bitcoin/bitcoin/pull/25907) (wallet: rpc to add automatically generated descriptors by achow101)\n* [#24914](https://github.com/bitcoin/bitcoin/pull/24914) (wallet: Load database records in a particular order by achow101)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add getxpub by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-12-19T22:31:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1358496197",
      "id" : 1358496197,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585Q-QHF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1358496197/reactions"
      },
      "updated_at" : "2023-05-17T07:26:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1358496197",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053153953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053153953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3d4e3b9cf3801a93d1a4af62994900b4f69f2edd\r\nI suggest renaming instances of `Pubkey` to `PubKey` to be consistent with `*PrivKey` functions.\r\n```suggestion\r\n    virtual void GetRootPubKey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;\r\n```",
      "commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "created_at" : "2022-12-20T10:23:50Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubkey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053153953",
      "id" : 1053153953,
      "line" : 208,
      "node_id" : "PRRC_kwDOABII584-xdqh",
      "original_commit_id" : "3d4e3b9cf3801a93d1a4af62994900b4f69f2edd",
      "original_line" : 208,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 9,
      "pull_request_review_id" : 1224244919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053153953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-20T10:46:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053153953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053162065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053162065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "be4f46edd8c7199b72d3646a1d13cb66d092e43e\r\nI suggest using an initialization list.",
      "commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "created_at" : "2022-12-20T10:32:22Z",
      "diff_hunk" : "@@ -332,6 +332,15 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n     return ret;\n }\n \n+CExtKey::CExtKey(const CExtPubKey& xpub, const CKey& key_in)\n+{\n+    nDepth = xpub.nDepth;\n+    std::copy(xpub.vchFingerprint, xpub.vchFingerprint + sizeof(xpub.vchFingerprint), vchFingerprint);\n+    nChild = xpub.nChild;\n+    chaincode = xpub.chaincode;\n+    key = key_in;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053162065",
      "id" : 1053162065,
      "line" : 342,
      "node_id" : "PRRC_kwDOABII584-xfpR",
      "original_commit_id" : "be4f46edd8c7199b72d3646a1d13cb66d092e43e",
      "original_line" : 342,
      "original_position" : 11,
      "original_start_line" : 335,
      "path" : "src/key.cpp",
      "position" : 11,
      "pull_request_review_id" : 1224244919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053162065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 335,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-20T10:46:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053162065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053171243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053171243"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3e53cc298ca1037ad2f52c65934a5e71b76f82bd\r\nCould be reduced to:\r\n\r\n```suggestion\r\n            bool ok = std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; });\r\n```",
      "commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "created_at" : "2022-12-20T10:41:34Z",
      "diff_hunk" : "@@ -971,6 +1087,106 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubkeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            bool ok = true;\n+            for (const auto& [dtype, count] : dtypes) {\n+                if (count != 2) {\n+                    ok = false;\n+                    break;\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053171243",
      "id" : 1053171243,
      "line" : 1151,
      "node_id" : "PRRC_kwDOABII584-xh4r",
      "original_commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "original_line" : 1151,
      "original_position" : 209,
      "original_start_line" : 1145,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 209,
      "pull_request_review_id" : 1224244919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053171243/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1145,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-20T10:46:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053171243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679048"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2022-12-20T19:35:23Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubkey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679048",
      "id" : 1053679048,
      "in_reply_to_id" : 1053153953,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-zd3I",
      "original_commit_id" : "3d4e3b9cf3801a93d1a4af62994900b4f69f2edd",
      "original_line" : 208,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1225032676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679048/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-20T19:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679048",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2022-12-20T19:35:27Z",
      "diff_hunk" : "@@ -332,6 +332,15 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n     return ret;\n }\n \n+CExtKey::CExtKey(const CExtPubKey& xpub, const CKey& key_in)\n+{\n+    nDepth = xpub.nDepth;\n+    std::copy(xpub.vchFingerprint, xpub.vchFingerprint + sizeof(xpub.vchFingerprint), vchFingerprint);\n+    nChild = xpub.nChild;\n+    chaincode = xpub.chaincode;\n+    key = key_in;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679088",
      "id" : 1053679088,
      "in_reply_to_id" : 1053162065,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-zd3w",
      "original_commit_id" : "be4f46edd8c7199b72d3646a1d13cb66d092e43e",
      "original_line" : 342,
      "original_position" : 11,
      "original_start_line" : 335,
      "path" : "src/key.cpp",
      "position" : null,
      "pull_request_review_id" : 1225032750,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679088/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-20T19:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679088",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2022-12-20T19:35:31Z",
      "diff_hunk" : "@@ -971,6 +1087,106 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubkeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            bool ok = true;\n+            for (const auto& [dtype, count] : dtypes) {\n+                if (count != 2) {\n+                    ok = false;\n+                    break;\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679126",
      "id" : 1053679126,
      "in_reply_to_id" : 1053171243,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-zd4W",
      "original_commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "original_line" : 1151,
      "original_position" : 209,
      "original_start_line" : 1145,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1225032805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679126/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-20T19:35:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1073247236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073247236"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This presupposes that we will and should allow changing active HD key for a given wallet. I'd like to better understand for what use-cases this is needed. ",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-18T08:47:57Z",
      "diff_hunk" : "@@ -250,6 +250,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended public key to be used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);\n+    //! The previous and current extended keys that are used for automatically generated descriptors\n+    std::map<CExtPubKey, CKey> m_hd_keys GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1073247236",
      "id" : 1073247236,
      "line" : 256,
      "node_id" : "PRRC_kwDOABII584_-HQE",
      "original_commit_id" : "abac3e3630aa6bdab825ff628fa9389c23eda417",
      "original_line" : 256,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 7,
      "pull_request_review_id" : 1253050078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073247236/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-18T08:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073247236",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1073249883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073249883"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Probably I don't follow, but it seems we don't need to add all descriptor keys as HD keys to the wallet",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-18T08:50:32Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; })) {\n+                xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+                if (desc_time > best_time) {\n+                    best_time = desc_time;\n+                    best_xpub = xpub;\n+                }\n+            }\n+        }\n+        if (best_time > 0) {\n+            pwallet->SetActiveHDKey(best_xpub);\n+        }\n+\n+        // Add hd keys\n+        for (const auto& [id_pair, key] : wss.m_descriptor_keys) {\n+            const auto& [desc_id, keyid] = id_pair;\n+\n+            const auto& it = xpubs.find(keyid);\n+            if (it == xpubs.end()) {\n+                continue;\n+            }\n+\n+            CExtKey extkey(it->second, key);\n+            pwallet->AddHDKey(extkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1073249883",
      "id" : 1073249883,
      "line" : 1167,
      "node_id" : "PRRC_kwDOABII584_-H5b",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1167,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 81,
      "pull_request_review_id" : 1253050078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073249883/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-18T08:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073249883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081278325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081278325"
         }
      },
      "author_association" : "MEMBER",
      "body" : "abac3e3630aa6bdab825ff628fa9389c23eda417 There's also the scenario where we generate a new HD key and mark the existing one inactive. We could at that point delete the old `HD(C)KEY` record, in which case `m_hd_key` could just hold one key. Not sure if that's much better. ",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T13:44:44Z",
      "diff_hunk" : "@@ -250,6 +250,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended public key to be used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);\n+    //! The previous and current extended keys that are used for automatically generated descriptors\n+    std::map<CExtPubKey, CKey> m_hd_keys GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081278325",
      "id" : 1081278325,
      "in_reply_to_id" : 1073247236,
      "line" : 256,
      "node_id" : "PRRC_kwDOABII585Acv91",
      "original_commit_id" : "abac3e3630aa6bdab825ff628fa9389c23eda417",
      "original_line" : 256,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 7,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081278325/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081278325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081289252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081289252"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: if the user downgrades the node, rotates the master key and then upgrades the node again, `ACTIVEHDKEY` would be pointing to the wrong place. So that's an argument to disallow opening in older wallets?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T13:52:09Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081289252",
      "id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585Acyok",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081289252/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081289252",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081559201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081559201"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93: this test will no longer work as advertised once this PR is in a release. Maybe drop the loop, define `node_23` and only use that one? (with a note to bump it to `node_24` if that's added).\r\n\r\nIf we drop the ability to downgrade (see my other comment), that reduces the need to test against multiple versions.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T16:59:00Z",
      "diff_hunk" : "@@ -325,5 +326,35 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+            for node in descriptor_nodes:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081559201",
      "id" : 1081559201,
      "line" : 331,
      "node_id" : "PRRC_kwDOABII585Ad0ih",
      "original_commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "original_line" : 331,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 14,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081559201/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081559201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081564640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081564640"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93 can you also test the upgrade of a locked wallet?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:03:54Z",
      "diff_hunk" : "@@ -325,5 +326,35 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+            for node in descriptor_nodes:\n+                # Make the test wallet\n+                node.createwallet(wallet_name=\"hdkeyupgrade\", descriptors=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081564640",
      "id" : 1081564640,
      "line" : 333,
      "node_id" : "PRRC_kwDOABII585Ad13g",
      "original_commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "original_line" : 333,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 16,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081564640/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081564640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081565832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081565832"
         }
      },
      "author_association" : "MEMBER",
      "body" : "21166afaa5106ff31aac3914ad117cff21a999d5: maybe move this repetitive stuff into a helper?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:05:00Z",
      "diff_hunk" : "@@ -297,6 +300,46 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    // hash pubkey/privkey to accelerate wallet load",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081565832",
      "id" : 1081565832,
      "line" : 310,
      "node_id" : "PRRC_kwDOABII585Ad2KI",
      "original_commit_id" : "21166afaa5106ff31aac3914ad117cff21a999d5",
      "original_line" : 310,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 28,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081565832/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081565832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081585278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081585278"
         }
      },
      "author_association" : "MEMBER",
      "body" : "561a8043c6fa41c8f3cdfa57272ca512b6d8ebb2: `CKey`'s `Load()` function already checks that the xpriv match the xpub (mostly). I think that makes the above hash check unnecessary. For good measure we could have a `Load()` function that takes a `CExtPubKey` instead of just a `CPubKey` so it can check the other data stored in the `xpub` too. ",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:19:55Z",
      "diff_hunk" : "@@ -782,6 +782,79 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssKey >> hash;\n             ssKey >> n;\n             pwallet->LockCoin(COutPoint(hash, n));\n+        } else if (strType == DBKeys::ACTIVEHDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssValue >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+            // TODO: Load extpub into the wallet\n+        } else if (strType == DBKeys::HDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssKey >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+\n+            CKey key;\n+            CPrivKey pkey;\n+            uint256 hash;\n+\n+            wss.nKeys++;\n+            ssValue >> pkey;\n+            ssValue >> hash;\n+\n+            // hash pubkey/privkey to accelerate wallet load\n+            std::vector<unsigned char> to_hash;\n+            to_hash.reserve(xpub.size() + pkey.size());\n+            to_hash.insert(to_hash.end(), xpub.begin(), xpub.end());\n+            to_hash.insert(to_hash.end(), pkey.begin(), pkey.end());\n+\n+            if (Hash(to_hash) != hash)\n+            {\n+                strErr = \"Error reading wallet database: CPubKey/CPrivKey corrupt\";\n+                return false;\n+            }\n+\n+            if (!key.Load(pkey, extpub.pubkey, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081585278",
      "id" : 1081585278,
      "line" : 827,
      "node_id" : "PRRC_kwDOABII585Ad65-",
      "original_commit_id" : "561a8043c6fa41c8f3cdfa57272ca512b6d8ebb2",
      "original_line" : 827,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 46,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081585278/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081585278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081590764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081590764"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a: a (future) sanity check may want to prevent calling `SetActiveHDKey` and `AddHDKey` in this order, especially since the latter can fail.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:23:06Z",
      "diff_hunk" : "@@ -3573,6 +3573,10 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         CExtKey master_key;\n         master_key.SetSeed(seed_key);\n \n+        // Store the master key as our active hd key\n+        SetActiveHDKey(master_key.Neuter());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081590764",
      "id" : 1081590764,
      "line" : 3596,
      "node_id" : "PRRC_kwDOABII585Ad8Ps",
      "original_commit_id" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a",
      "original_line" : 3577,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081590764/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081590764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081592726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081592726"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a: this function can fail, so let's not ignore the return value.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:24:45Z",
      "diff_hunk" : "@@ -3573,6 +3573,10 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         CExtKey master_key;\n         master_key.SetSeed(seed_key);\n \n+        // Store the master key as our active hd key\n+        SetActiveHDKey(master_key.Neuter());\n+        AddHDKey(master_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081592726",
      "id" : 1081592726,
      "line" : 3597,
      "node_id" : "PRRC_kwDOABII585Ad8uW",
      "original_commit_id" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a",
      "original_line" : 3578,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 6,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081592726/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081592726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081595596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081595596"
         }
      },
      "author_association" : "MEMBER",
      "body" : "95da2e9808c57a519023c017ca47d76ebd2632fd: Maybe log some final words...",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:26:51Z",
      "diff_hunk" : "@@ -809,6 +809,25 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n             }\n         }\n \n+        // Encrypt the HD keys\n+        assert(m_hd_crypted_keys.empty());\n+        for (const auto& [xpub, key] : m_hd_keys) {\n+            std::vector<unsigned char> crypted_secret;\n+            CKeyingMaterial secret(key.begin(), key.end());\n+            if (!EncryptSecret(_vMasterKey, secret, xpub.pubkey.GetHash(), crypted_secret)) {\n+                encrypted_batch->TxnAbort();\n+                delete encrypted_batch;\n+                encrypted_batch = nullptr;\n+                // We now probably have half of our keys encrypted in memory, and half not...\n+                // die and let the user reload the unencrypted wallet.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081595596",
      "id" : 1081595596,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII585Ad9bM",
      "original_commit_id" : "95da2e9808c57a519023c017ca47d76ebd2632fd",
      "original_line" : 822,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081595596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081595596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081598484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081598484"
         }
      },
      "author_association" : "MEMBER",
      "body" : "18ac74d29cf3f1a8c4f46c4d030968b5596e9b09: could use documentation, and clarification that this only works for master keys, not any regular xpub, since this function works by looking through `m_hd(_crypted)_keys` rather than perform derivations.\r\n\r\nAlternatively I might \"upgrade\" it in #22341 to perform derivation, since that's useful. But given the convention of \"hd key\" referring to a master key, a function that performs derivation should probably be called `GetExtendedKey()`",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:29:36Z",
      "diff_hunk" : "@@ -953,6 +953,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     bool LoadHDKey(const CExtPubKey& xpub, const CKey& key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool LoadHDCryptedKey(const CExtPubKey& xpub, const std::vector<unsigned char>& crypted_key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool AddHDKey(const CExtKey& extkey) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    std::optional<CExtKey> GetHDKey(const CExtPubKey& xpub) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081598484",
      "id" : 1081598484,
      "line" : 956,
      "node_id" : "PRRC_kwDOABII585Ad-IU",
      "original_commit_id" : "18ac74d29cf3f1a8c4f46c4d030968b5596e9b09",
      "original_line" : 956,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 4,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081598484/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081598484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081603914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081603914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason why you're putting this in `rpc/wallet.cpp` rather than `rpc/addresses.cpp` like in #23417?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:34:58Z",
      "diff_hunk" : "@@ -756,6 +756,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081603914",
      "id" : 1081603914,
      "line" : 759,
      "node_id" : "PRRC_kwDOABII585Ad_dK",
      "original_commit_id" : "436eab602f7d27ad325ebed60e69acbb6dbf2ef5",
      "original_line" : 759,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 4,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081603914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081603914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081605774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081605774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Duplicates are skipped (see 8b0af8a56ffe31edcd2ed98d795a63fd302ae67a).",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:36:57Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; })) {\n+                xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+                if (desc_time > best_time) {\n+                    best_time = desc_time;\n+                    best_xpub = xpub;\n+                }\n+            }\n+        }\n+        if (best_time > 0) {\n+            pwallet->SetActiveHDKey(best_xpub);\n+        }\n+\n+        // Add hd keys\n+        for (const auto& [id_pair, key] : wss.m_descriptor_keys) {\n+            const auto& [desc_id, keyid] = id_pair;\n+\n+            const auto& it = xpubs.find(keyid);\n+            if (it == xpubs.end()) {\n+                continue;\n+            }\n+\n+            CExtKey extkey(it->second, key);\n+            pwallet->AddHDKey(extkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081605774",
      "id" : 1081605774,
      "in_reply_to_id" : 1073249883,
      "line" : 1167,
      "node_id" : "PRRC_kwDOABII585Ad_6O",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1167,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 81,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081605774/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081605774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081607073"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081607073"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1877da9fb564fc6fa7b6c6bc3bcf63bdb29ace7b: I'd prefer a new `wallet_getxpub.py` test case that I can expand in #22341.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:38:16Z",
      "diff_hunk" : "@@ -147,7 +147,28 @@ def run_test(self):\n         else:\n             assert_equal(keypath[0:7], \"m/0'/1'\")\n \n-        if not self.options.descriptors:\n+        if self.options.descriptors:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081607073",
      "id" : 1081607073,
      "line" : 150,
      "node_id" : "PRRC_kwDOABII585AeAOh",
      "original_commit_id" : "1877da9fb564fc6fa7b6c6bc3bcf63bdb29ace7b",
      "original_line" : 150,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : 5,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081607073/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081607073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081608280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081608280"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6072b3964582e6883220f3af678675531299b444 nit: missing closing bracket",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:39:32Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081608280",
      "id" : 1081608280,
      "line" : 204,
      "node_id" : "PRRC_kwDOABII585AeAhY",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 204,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 5,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081608280/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081608280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081610989"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081610989"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6072b3964582e6883220f3af678675531299b444 Should this be plural `GetRootPubKeys`? Or maybe keep this function focussed and only return a single `CExtPubKey`?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:42:12Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubKey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081610989",
      "id" : 1081610989,
      "line" : 208,
      "node_id" : "PRRC_kwDOABII585AeBLt",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 208,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 9,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081610989/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081610989",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081614403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081614403"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6072b3964582e6883220f3af678675531299b444: why do we care about this, vs only getting a root key?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:45:19Z",
      "diff_hunk" : "@@ -146,6 +146,13 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    /** Return all (extended) public keys for this descriptor, including any from subdescriptors.\n+     *\n+     * @param[out] pubkeys Any public keys\n+     * @param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081614403",
      "id" : 1081614403,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585AeCBD",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 155,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 10,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081614403/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081614403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081620227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081620227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: this function can fail, and `SetActiveHDKey` should probably called last.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:50:11Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; })) {\n+                xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+                if (desc_time > best_time) {\n+                    best_time = desc_time;\n+                    best_xpub = xpub;\n+                }\n+            }\n+        }\n+        if (best_time > 0) {\n+            pwallet->SetActiveHDKey(best_xpub);\n+        }\n+\n+        // Add hd keys\n+        for (const auto& [id_pair, key] : wss.m_descriptor_keys) {\n+            const auto& [desc_id, keyid] = id_pair;\n+\n+            const auto& it = xpubs.find(keyid);\n+            if (it == xpubs.end()) {\n+                continue;\n+            }\n+\n+            CExtKey extkey(it->second, key);\n+            pwallet->AddHDKey(extkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081620227",
      "id" : 1081620227,
      "in_reply_to_id" : 1073249883,
      "line" : 1167,
      "node_id" : "PRRC_kwDOABII585AeDcD",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1167,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 81,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081620227/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081620227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081622126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081622126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: instead of this string parsing stuff, can we add some method to `Descriptor` to directly get what we need? Even an `enum` with descriptor types seems more clean. \r\n\r\nIf all we need is to find the active HD master key, why not limit the search to `pkh(`? That has the nice benefit of there not potentially being manually inserted descriptors that could be ambiguous).",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:51:55Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081622126",
      "id" : 1081622126,
      "line" : 1124,
      "node_id" : "PRRC_kwDOABII585AeD5u",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1124,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 38,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081622126/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081622126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081623995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081623995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: what do we do with `tr()` descriptors that have been generated since #22364?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:53:28Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081623995",
      "id" : 1081623995,
      "line" : 1092,
      "node_id" : "PRRC_kwDOABII585AeEW7",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1092,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 6,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081623995/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081623995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081631043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081631043"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: Why not limit ourselves to `GetActiveScriptPubKeyMans`? Not sure how useful it is to store older HD keys, and it does seem to add some complexity.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:59:24Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081631043",
      "id" : 1081631043,
      "line" : 1101,
      "node_id" : "PRRC_kwDOABII585AeGFD",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1101,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 15,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081631043/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081631043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081705702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081705702"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is exactly what I'm curious about. Should we allow to generate a new HD key for existing wallet? I'm trying to understand why someone would like to generate new HD key for existing wallet instead of just creating a new wallet?\r\n\r\n Or should we make a rule 1 wallet = 1 HD key. Which is much simpler to understand and manage.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T19:10:01Z",
      "diff_hunk" : "@@ -250,6 +250,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended public key to be used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);\n+    //! The previous and current extended keys that are used for automatically generated descriptors\n+    std::map<CExtPubKey, CKey> m_hd_keys GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081705702",
      "id" : 1081705702,
      "in_reply_to_id" : 1073247236,
      "line" : 256,
      "node_id" : "PRRC_kwDOABII585AeYTm",
      "original_commit_id" : "abac3e3630aa6bdab825ff628fa9389c23eda417",
      "original_line" : 256,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 7,
      "pull_request_review_id" : 1262443284,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081705702/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T19:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081705702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081708489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081708489"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Older node has no concept of master key for descriptors wallets, so it can't rotate the key. Can it?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T19:13:00Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081708489",
      "id" : 1081708489,
      "in_reply_to_id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585AeY_J",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1262448072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081708489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T19:13:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081708489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1082319264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082319264"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When it encrypts the wallet I think it generates a new set of descriptors based on a new master key.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-20T10:09:48Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1082319264",
      "id" : 1082319264,
      "in_reply_to_id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585AguGg",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1263267848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082319264/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T10:09:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082319264",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085882714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085882714"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, encrypting is the only way to rotate a master key currently.\r\n\r\nThe issue with changing this to a required flag is that it can no longer be an automatic upgrade. It will need to be an explicit upgrade.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-24T20:22:06Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085882714",
      "id" : 1085882714,
      "in_reply_to_id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585AuUFa",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1268239082,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085882714/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T20:22:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085882714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085927071"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085927071"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The third parameter in this call skips that check. We use the hash check instead because hashing is faster the ec mult.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:11:41Z",
      "diff_hunk" : "@@ -782,6 +782,79 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssKey >> hash;\n             ssKey >> n;\n             pwallet->LockCoin(COutPoint(hash, n));\n+        } else if (strType == DBKeys::ACTIVEHDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssValue >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+            // TODO: Load extpub into the wallet\n+        } else if (strType == DBKeys::HDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssKey >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+\n+            CKey key;\n+            CPrivKey pkey;\n+            uint256 hash;\n+\n+            wss.nKeys++;\n+            ssValue >> pkey;\n+            ssValue >> hash;\n+\n+            // hash pubkey/privkey to accelerate wallet load\n+            std::vector<unsigned char> to_hash;\n+            to_hash.reserve(xpub.size() + pkey.size());\n+            to_hash.insert(to_hash.end(), xpub.begin(), xpub.end());\n+            to_hash.insert(to_hash.end(), pkey.begin(), pkey.end());\n+\n+            if (Hash(to_hash) != hash)\n+            {\n+                strErr = \"Error reading wallet database: CPubKey/CPrivKey corrupt\";\n+                return false;\n+            }\n+\n+            if (!key.Load(pkey, extpub.pubkey, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085927071",
      "id" : 1085927071,
      "in_reply_to_id" : 1081585278,
      "line" : 802,
      "node_id" : "PRRC_kwDOABII585Aue6f",
      "original_commit_id" : "561a8043c6fa41c8f3cdfa57272ca512b6d8ebb2",
      "original_line" : 802,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 176,
      "pull_request_review_id" : 1268306116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085927071/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:11:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085927071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085935623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085935623"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nothing in particular, just seems related more to wallet level information rather than addresses.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:22:31Z",
      "diff_hunk" : "@@ -756,6 +756,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085935623",
      "id" : 1085935623,
      "in_reply_to_id" : 1081603914,
      "line" : 759,
      "node_id" : "PRRC_kwDOABII585AuhAH",
      "original_commit_id" : "436eab602f7d27ad325ebed60e69acbb6dbf2ef5",
      "original_line" : 759,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 4,
      "pull_request_review_id" : 1268318929,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085935623/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:22:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085935623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085956443"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085956443"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIRC I had a use for this in a different PR and this behavior was imported from there.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:32:16Z",
      "diff_hunk" : "@@ -146,6 +146,13 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    /** Return all (extended) public keys for this descriptor, including any from subdescriptors.\n+     *\n+     * @param[out] pubkeys Any public keys\n+     * @param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085956443",
      "id" : 1085956443,
      "in_reply_to_id" : 1081614403,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585AumFb",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 155,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 10,
      "pull_request_review_id" : 1268355604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085956443/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:32:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085956443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085968765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085968765"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> If all we need is to find the active HD master key, why not limit the search to `pkh(`? That has the nice benefit of there not potentially being manually inserted descriptors that could be ambiguous).\r\n\r\nUsers can still import `pkh(` descriptors. By checking all of the different types, we can be more sure about which key is active.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:43:00Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085968765",
      "id" : 1085968765,
      "in_reply_to_id" : 1081622126,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AupF9",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1124,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1268379151,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085968765/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:43:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085968765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085979072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085979072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The user may have imported other keys for some active spkms, so we'd be unable to determine the master if we only looked at the active ones.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:52:45Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085979072",
      "id" : 1085979072,
      "in_reply_to_id" : 1081631043,
      "line" : 1076,
      "node_id" : "PRRC_kwDOABII585AurnA",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1076,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 225,
      "pull_request_review_id" : 1268389963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085979072/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:52:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085979072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987224"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to test against node_v23",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:01:35Z",
      "diff_hunk" : "@@ -325,5 +326,35 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+            for node in descriptor_nodes:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987224",
      "id" : 1085987224,
      "in_reply_to_id" : 1081559201,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AutmY",
      "original_commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "original_line" : 331,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1268399581,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987224/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:01:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987277"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:01:41Z",
      "diff_hunk" : "@@ -325,5 +326,35 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+            for node in descriptor_nodes:\n+                # Make the test wallet\n+                node.createwallet(wallet_name=\"hdkeyupgrade\", descriptors=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987277",
      "id" : 1085987277,
      "in_reply_to_id" : 1081564640,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AutnN",
      "original_commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "original_line" : 333,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1268399686,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987277/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:01:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987277",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in a separate commit.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:01:51Z",
      "diff_hunk" : "@@ -297,6 +300,46 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    // hash pubkey/privkey to accelerate wallet load",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987392",
      "id" : 1085987392,
      "in_reply_to_id" : 1081565832,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AutpA",
      "original_commit_id" : "21166afaa5106ff31aac3914ad117cff21a999d5",
      "original_line" : 310,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1268399857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987392/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:01:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987678"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987678"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Reordered and added an `Assume` to `SetActiveHDKey`.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:02:12Z",
      "diff_hunk" : "@@ -3573,6 +3573,10 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         CExtKey master_key;\n         master_key.SetSeed(seed_key);\n \n+        // Store the master key as our active hd key\n+        SetActiveHDKey(master_key.Neuter());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987678",
      "id" : 1085987678,
      "in_reply_to_id" : 1081590764,
      "line" : 3599,
      "node_id" : "PRRC_kwDOABII585Autte",
      "original_commit_id" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a",
      "original_line" : 3599,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 34,
      "pull_request_review_id" : 1268400240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987678/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:02:21Z",
      "diff_hunk" : "@@ -3573,6 +3573,10 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         CExtKey master_key;\n         master_key.SetSeed(seed_key);\n \n+        // Store the master key as our active hd key\n+        SetActiveHDKey(master_key.Neuter());\n+        AddHDKey(master_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987787",
      "id" : 1085987787,
      "in_reply_to_id" : 1081592726,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AutvL",
      "original_commit_id" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a",
      "original_line" : 3578,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1268400409,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987787/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:02:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps something to do for a followup for all of the encrypt wallet failures.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:02:40Z",
      "diff_hunk" : "@@ -809,6 +809,25 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n             }\n         }\n \n+        // Encrypt the HD keys\n+        assert(m_hd_crypted_keys.empty());\n+        for (const auto& [xpub, key] : m_hd_keys) {\n+            std::vector<unsigned char> crypted_secret;\n+            CKeyingMaterial secret(key.begin(), key.end());\n+            if (!EncryptSecret(_vMasterKey, secret, xpub.pubkey.GetHash(), crypted_secret)) {\n+                encrypted_batch->TxnAbort();\n+                delete encrypted_batch;\n+                encrypted_batch = nullptr;\n+                // We now probably have half of our keys encrypted in memory, and half not...\n+                // die and let the user reload the unencrypted wallet.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987983",
      "id" : 1085987983,
      "in_reply_to_id" : 1081595596,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII585AutyP",
      "original_commit_id" : "95da2e9808c57a519023c017ca47d76ebd2632fd",
      "original_line" : 822,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 1268400717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987983/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:02:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988202"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a bit more to the comment for this group of functions.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:02:57Z",
      "diff_hunk" : "@@ -953,6 +953,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     bool LoadHDKey(const CExtPubKey& xpub, const CKey& key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool LoadHDCryptedKey(const CExtPubKey& xpub, const std::vector<unsigned char>& crypted_key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool AddHDKey(const CExtKey& extkey) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    std::optional<CExtKey> GetHDKey(const CExtPubKey& xpub) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988202",
      "id" : 1085988202,
      "in_reply_to_id" : 1081598484,
      "line" : 956,
      "node_id" : "PRRC_kwDOABII585Aut1q",
      "original_commit_id" : "18ac74d29cf3f1a8c4f46c4d030968b5596e9b09",
      "original_line" : 956,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 25,
      "pull_request_review_id" : 1268401027,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988202/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:02:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988333"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:03:06Z",
      "diff_hunk" : "@@ -147,7 +147,28 @@ def run_test(self):\n         else:\n             assert_equal(keypath[0:7], \"m/0'/1'\")\n \n-        if not self.options.descriptors:\n+        if self.options.descriptors:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988333",
      "id" : 1085988333,
      "in_reply_to_id" : 1081607073,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Aut3t",
      "original_commit_id" : "1877da9fb564fc6fa7b6c6bc3bcf63bdb29ace7b",
      "original_line" : 150,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 1268401191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988333/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:03:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988403"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:03:11Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988403",
      "id" : 1085988403,
      "in_reply_to_id" : 1081608280,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Aut4z",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 204,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1268401314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988403/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:03:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to plural.\r\n\r\nIt should return multiple to handle multisigs.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:03:30Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubKey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988707",
      "id" : 1085988707,
      "in_reply_to_id" : 1081610989,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Aut9j",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 208,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1268401995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988707/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085989103"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989103"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> instead of this string parsing stuff, can we add some method to `Descriptor` to directly get what we need? Even an `enum` with descriptor types seems more clean.\r\n\r\nI've changed it to use `OutputType` that apparently descriptors can report.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:04:05Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085989103",
      "id" : 1085989103,
      "in_reply_to_id" : 1081622126,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AuuDv",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1124,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1268403147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989103/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:04:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085989259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added checking for `tr()` descriptors.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:04:18Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085989259",
      "id" : 1085989259,
      "in_reply_to_id" : 1081623995,
      "line" : 1067,
      "node_id" : "PRRC_kwDOABII585AuuGL",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1067,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 216,
      "pull_request_review_id" : 1268403597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085991531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085991531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not entirely sure of the reasoning, but it's been requested as required feature.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:06:43Z",
      "diff_hunk" : "@@ -250,6 +250,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended public key to be used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);\n+    //! The previous and current extended keys that are used for automatically generated descriptors\n+    std::map<CExtPubKey, CKey> m_hd_keys GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085991531",
      "id" : 1085991531,
      "in_reply_to_id" : 1073247236,
      "line" : 256,
      "node_id" : "PRRC_kwDOABII585Auupr",
      "original_commit_id" : "abac3e3630aa6bdab825ff628fa9389c23eda417",
      "original_line" : 256,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 7,
      "pull_request_review_id" : 1268406631,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085991531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:06:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085991531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086349157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086349157"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The speed benefit seems pretty marginal when dealing with at most a dozen extended keys. It made more sense in the legacy wallet where we deal with thousands of keys in a pool.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-25T08:46:00Z",
      "diff_hunk" : "@@ -782,6 +782,79 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssKey >> hash;\n             ssKey >> n;\n             pwallet->LockCoin(COutPoint(hash, n));\n+        } else if (strType == DBKeys::ACTIVEHDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssValue >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+            // TODO: Load extpub into the wallet\n+        } else if (strType == DBKeys::HDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssKey >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+\n+            CKey key;\n+            CPrivKey pkey;\n+            uint256 hash;\n+\n+            wss.nKeys++;\n+            ssValue >> pkey;\n+            ssValue >> hash;\n+\n+            // hash pubkey/privkey to accelerate wallet load\n+            std::vector<unsigned char> to_hash;\n+            to_hash.reserve(xpub.size() + pkey.size());\n+            to_hash.insert(to_hash.end(), xpub.begin(), xpub.end());\n+            to_hash.insert(to_hash.end(), pkey.begin(), pkey.end());\n+\n+            if (Hash(to_hash) != hash)\n+            {\n+                strErr = \"Error reading wallet database: CPubKey/CPrivKey corrupt\";\n+                return false;\n+            }\n+\n+            if (!key.Load(pkey, extpub.pubkey, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086349157",
      "id" : 1086349157,
      "in_reply_to_id" : 1081585278,
      "line" : 802,
      "node_id" : "PRRC_kwDOABII585AwF9l",
      "original_commit_id" : "561a8043c6fa41c8f3cdfa57272ca512b6d8ebb2",
      "original_line" : 802,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 176,
      "pull_request_review_id" : 1268914851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086349157/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-25T08:46:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086349157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086351854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086351854"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If that's no longer the case I would prefer simplifying things. The Descriptor class is already a bit hard to read.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-25T08:48:45Z",
      "diff_hunk" : "@@ -146,6 +146,13 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    /** Return all (extended) public keys for this descriptor, including any from subdescriptors.\n+     *\n+     * @param[out] pubkeys Any public keys\n+     * @param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086351854",
      "id" : 1086351854,
      "in_reply_to_id" : 1081614403,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585AwGnu",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 155,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 10,
      "pull_request_review_id" : 1268918654,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086351854/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-25T08:48:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086351854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086953840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086953840"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We do actually use it in this PR to check whether a descriptor has any normal pubkeys in it. If it does, it cannot be a candidate for master hd key extraction.",
      "commit_id" : "5cd42d2feed4edc027e3b5eb861bffa0fee22dd2",
      "created_at" : "2023-01-25T17:38:41Z",
      "diff_hunk" : "@@ -146,6 +146,13 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    /** Return all (extended) public keys for this descriptor, including any from subdescriptors.\n+     *\n+     * @param[out] pubkeys Any public keys\n+     * @param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086953840",
      "id" : 1086953840,
      "in_reply_to_id" : 1081614403,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585AyZlw",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 155,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 10,
      "pull_request_review_id" : 1269826389,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086953840/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-25T17:38:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086953840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1089162369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089162369"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6bb3bee nit: `and tr()`",
      "commit_id" : "3d50555ec6d47f7ebdd1b74739f00a0385be1fab",
      "created_at" : "2023-01-27T16:18:41Z",
      "diff_hunk" : "@@ -1062,6 +1062,100 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+        std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}, {OutputType::BECH32M, 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1089162369",
      "id" : 1089162369,
      "line" : 1072,
      "node_id" : "PRRC_kwDOABII585A60yB",
      "original_commit_id" : "9ec69417b3ac88ebf6dc719b7571ea0cdb327e13",
      "original_line" : 1072,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 224,
      "pull_request_review_id" : 1273008737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089162369/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T14:57:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089162369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "At the 2023-01-27 IRC meeting, we discussed the key rotation aspect of this PR. The conclusion was that we could not think of a use case for key rotation that is not sufficiently covered by creating a new wallet.\r\n\r\nSince this PR does not introduce the ability for users to explicitly rotate keys, I don't think there's anything to change to meet this conclusion. Those updates will be in #25907.\r\n\r\nIt's currently possible to rotate keys by encrypting the wallet. Since this is a longstanding behavior that has several tests expecting this behavior, I've decided to leave it in. Removing this behavior has more issues than not introducing explicit key rotation in descriptor wallets. So I've decided to leave the PR as is.",
      "created_at" : "2023-02-10T20:57:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1426336389",
      "id" : 1426336389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585VBCqF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426336389/reactions"
      },
      "updated_at" : "2023-02-10T20:57:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426336389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We should add a warning in the release notes that, although you can safely downgrade the node, you should _not_ encrypt the wallet while using that older version. And add a test that shows what happens.",
      "created_at" : "2023-02-11T10:29:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1426688833",
      "id" : 1426688833,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585VCYtB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426688833/reactions"
      },
      "updated_at" : "2023-02-11T10:29:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426688833",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1105010018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1105010018"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "While you're touching, maybe a good idea to change to `std::vector<unsigned char, secure_allocator<unsigned char>>`?",
      "commit_id" : "0c4b2bc6878b0928e545a8f0468818e98e4aae33",
      "created_at" : "2023-02-13T20:59:52Z",
      "diff_hunk" : "@@ -66,6 +69,17 @@ const std::unordered_set<std::string> LEGACY_TYPES{CRYPTED_KEY, CSCRIPT, DEFAULT\n // WalletBatch\n //\n \n+template <typename P>\n+static uint256 PrivKeyChecksum(const CPrivKey& privkey, const P& pubkey)\n+{\n+    // hash pubkey/privkey to accelerate wallet load\n+    std::vector<unsigned char> to_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1105010018",
      "id" : 1105010018,
      "line" : 76,
      "node_id" : "PRRC_kwDOABII585B3R1i",
      "original_commit_id" : "0c4b2bc6878b0928e545a8f0468818e98e4aae33",
      "original_line" : 76,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 25,
      "pull_request_review_id" : 1296430598,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1105010018/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-13T20:59:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1105010018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/116917595?v=4",
         "events_url" : "https://api.github.com/users/john-moffett/events{/privacy}",
         "followers_url" : "https://api.github.com/users/john-moffett/followers",
         "following_url" : "https://api.github.com/users/john-moffett/following{/other_user}",
         "gists_url" : "https://api.github.com/users/john-moffett/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/john-moffett",
         "id" : 116917595,
         "login" : "john-moffett",
         "node_id" : "U_kgDOBvgFWw",
         "organizations_url" : "https://api.github.com/users/john-moffett/orgs",
         "received_events_url" : "https://api.github.com/users/john-moffett/received_events",
         "repos_url" : "https://api.github.com/users/john-moffett/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/john-moffett/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/john-moffett/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/john-moffett"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-02-27T18:32:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1446850239",
      "id" : 1446850239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585WPS6_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1446850239/reactions"
      },
      "updated_at" : "2023-02-27T18:32:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1446850239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Checked the rebase to 3d50555ec6d47f7ebdd1b74739f00a0385be1fab. I still have to study a14a7554a6 and 6bb3bee37e more.",
      "created_at" : "2023-03-01T14:54:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1450281652",
      "id" : 1450281652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585WcYq0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450281652/reactions"
      },
      "updated_at" : "2023-03-01T14:54:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450281652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1121931215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121931215"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Some suggestions after our chat:\r\n\r\n* let's move this into (a) helper function(s), so that `LoadWallet` remains somewhat readable\r\n  * `FindGlobalHDKeyAmongstDescriptors()`\r\n  * `SetGlobalHDKey()`\r\n* document this function, e.g. explain that it's trying to find the pattern of 3 or 4 descriptor pairs that use the same master key. Note how some might no longer be active because the user imported another descriptor and made it active. There might also be more than one set matching this pattern due to toggling encryption, so we pick the most recent one.\r\n* drop the `tr()` bit; it's not necessary, and it could cause a mismatch if a user did something like manually importing only the receive descriptor\r\n* document the meaning of `WALLET_FLAG_GLOBAL_HD_KEY`. It means we support the feature, but does not guarantee presence of an HD key.\r\n* add (a TODO for) method to the wallet tool to re-run the helper functions; this would be for advanced users who somehow ended up with a wallet not matching this pattern, but have repented, added the right descriptors, and now want the global HD key field set",
      "commit_id" : "3d50555ec6d47f7ebdd1b74739f00a0385be1fab",
      "created_at" : "2023-03-01T15:37:05Z",
      "diff_hunk" : "@@ -1059,6 +1059,100 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1121931215",
      "id" : 1121931215,
      "line" : 1068,
      "node_id" : "PRRC_kwDOABII585C30_P",
      "original_commit_id" : "6bb3bee37e90160155bed94d628648134fe40ef9",
      "original_line" : 1068,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 10,
      "pull_request_review_id" : 1320105973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121931215/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T15:37:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121931215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1126052875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126052875"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> add (a TODO for) method to the wallet tool to re-run the helper functions; this would be for advanced users who somehow ended up with a wallet not matching this pattern, but have repented, added the right descriptors, and now want the global HD key field set\r\n\r\n\r\nIs this really needed if we add support for `sethdseed` later?",
      "commit_id" : "3d50555ec6d47f7ebdd1b74739f00a0385be1fab",
      "created_at" : "2023-03-06T07:58:09Z",
      "diff_hunk" : "@@ -1059,6 +1059,100 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1126052875",
      "id" : 1126052875,
      "in_reply_to_id" : 1121931215,
      "line" : 1068,
      "node_id" : "PRRC_kwDOABII585DHjQL",
      "original_commit_id" : "6bb3bee37e90160155bed94d628648134fe40ef9",
      "original_line" : 1068,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 10,
      "pull_request_review_id" : 1325672583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126052875/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-06T07:58:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126052875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1137722557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137722557"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved it to a separate function, although I did not split it up into multiple as that does not seem to be actually useful. Also added some additional comments.",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-03-15T20:11:29Z",
      "diff_hunk" : "@@ -1059,6 +1059,100 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1137722557",
      "id" : 1137722557,
      "in_reply_to_id" : 1121931215,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D0ES9",
      "original_commit_id" : "6bb3bee37e90160155bed94d628648134fe40ef9",
      "original_line" : 1068,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1342352984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137722557/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-15T20:11:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137722557",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1152831466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1152831466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I meant, that we can write only the key for `best_xpub`. Why do we need to write all the candidates as well?",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-03-30T07:17:02Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; })) {\n+                xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+                if (desc_time > best_time) {\n+                    best_time = desc_time;\n+                    best_xpub = xpub;\n+                }\n+            }\n+        }\n+        if (best_time > 0) {\n+            pwallet->SetActiveHDKey(best_xpub);\n+        }\n+\n+        // Add hd keys\n+        for (const auto& [id_pair, key] : wss.m_descriptor_keys) {\n+            const auto& [desc_id, keyid] = id_pair;\n+\n+            const auto& it = xpubs.find(keyid);\n+            if (it == xpubs.end()) {\n+                continue;\n+            }\n+\n+            CExtKey extkey(it->second, key);\n+            pwallet->AddHDKey(extkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1152831466",
      "id" : 1152831466,
      "in_reply_to_id" : 1073249883,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ets_q",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1133,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1364471606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1152831466/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-30T07:17:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1152831466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Approach ACK.\r\n\r\nDoing a proper code review now. Have a question about the upgrade. What do you think we should do in the following situation?\r\n\r\n- Create a blank wallet with master branch\r\n- import 6 descriptors derived from the same key. `WALLET_FLAG_GLOBAL_HD_KEY` is not set and no master key \r\n- `getxpub` reports \"This wallet does not have an active xpub\"\r\n- reload the wallet. Upgrade code is triggered, it sets the flag and the master key\r\n\r\nThis will become even more confusing when/if we later introduce `addedseed` and/or `manual` wallets. I think it's better to reduce the amount of magic and only trigger upgrades for wallets created with older versions. Maybe we can set `WALLET_FLAG_GLOBAL_HD_KEY` for all new wallets even those that are blank?",
      "created_at" : "2023-03-30T07:27:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1489825161",
      "id" : 1489825161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585YzO2J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1489825161/reactions"
      },
      "updated_at" : "2023-03-30T07:27:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1489825161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155586506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155586506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "better\r\n```diff\r\n- if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\r\n+ if (tmpl.count(output_type.value()) == 0) {\r\n```\r\nor\r\n```diff\r\n- if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\r\n+ if (descs_keys[xpub].first.count(output_type.value()) == 0) {\r\n```",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T07:37:48Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155586506",
      "id" : 1155586506,
      "line" : 580,
      "node_id" : "PRRC_kwDOABII585E4NnK",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 580,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 59,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155586506/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155586506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155604123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155604123"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "naming nit: `desc_keys` and `descs_keys` are very easy to mix",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T07:54:57Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155604123",
      "id" : 1155604123,
      "line" : 548,
      "node_id" : "PRRC_kwDOABII585E4R6b",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 548,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155604123/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155604123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155609607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155609607"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do we want to check that we have exactly one `internal=true` and one `internal=false` descriptors?",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T07:59:13Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155609607",
      "id" : 1155609607,
      "line" : 528,
      "node_id" : "PRRC_kwDOABII585E4TQH",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 528,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 7,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155609607/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155609607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155610688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155610688"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: maybe good time to add typedef. I had a very hard time reading the signature of the fuction",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:00:18Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155610688",
      "id" : 1155610688,
      "line" : 538,
      "node_id" : "PRRC_kwDOABII585E4ThA",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 538,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 17,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155610688/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155610688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155615459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155615459"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "they don't have to be active\r\n```diff\r\n- // Find candidate active xpubs\r\n+ // Find candidate xpubs\r\n```",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:04:33Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155615459",
      "id" : 1155615459,
      "line" : 590,
      "node_id" : "PRRC_kwDOABII585E4Urj",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 590,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 69,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155615459/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155615459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155618170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155618170"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could clarify comment:\r\nFor all the candidate xpubs add corresponding private key if available",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:07:10Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155618170",
      "id" : 1155618170,
      "line" : 606,
      "node_id" : "PRRC_kwDOABII585E4VV6",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 606,
      "original_position" : 85,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 85,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155618170/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155618170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155623853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155623853"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "why do we need to erase it?",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:12:26Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155623853",
      "id" : 1155623853,
      "line" : 617,
      "node_id" : "PRRC_kwDOABII585E4Wut",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 617,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 96,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155623853/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155623853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155626611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155626611"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This requires compatibility between `WALLETDESCRIPTORCKEY` and `HDCKEY`. Should we document it somewhere?",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:15:05Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+        const auto& [pubkey, ckey] = key_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        LoadHDCryptedKey(it->second, ckey);\n+        batch.WriteHDCryptedKey(it->second, ckey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155626611",
      "id" : 1155626611,
      "line" : 629,
      "node_id" : "PRRC_kwDOABII585E4XZz",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 629,
      "original_position" : 108,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 108,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155626611/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155626611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161800943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161800943"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If they're no longer active, we don't know internalness.",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:05:23Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161800943",
      "id" : 1161800943,
      "in_reply_to_id" : 1155609607,
      "line" : 528,
      "node_id" : "PRRC_kwDOABII585FP6zv",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 528,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 7,
      "pull_request_review_id" : 1377668644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161800943/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161800943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161805097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161805097"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So they aren't repeatedly written when the same key shows up in multiple descriptors.",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:10:19Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161805097",
      "id" : 1161805097,
      "in_reply_to_id" : 1155623853,
      "line" : 617,
      "node_id" : "PRRC_kwDOABII585FP70p",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 617,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 96,
      "pull_request_review_id" : 1377675194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161805097/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:10:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161805097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161806010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161806010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The encrypted secrets are all in the same format for both legacy wallet keys, descriptor keys, and now hd ckeys. I suppose this could be documented somewhere, although it's not immediately obvious where.",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:11:30Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+        const auto& [pubkey, ckey] = key_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        LoadHDCryptedKey(it->second, ckey);\n+        batch.WriteHDCryptedKey(it->second, ckey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161806010",
      "id" : 1161806010,
      "in_reply_to_id" : 1155626611,
      "line" : 629,
      "node_id" : "PRRC_kwDOABII585FP8C6",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 629,
      "original_position" : 108,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 108,
      "pull_request_review_id" : 1377676657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161806010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:11:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161806010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810575"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:16:58Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810575",
      "id" : 1161810575,
      "in_reply_to_id" : 1155586506,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9KP",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 580,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377683610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810575/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:16:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810575",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:17:08Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810707",
      "id" : 1161810707,
      "in_reply_to_id" : 1155604123,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9MT",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 548,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377683811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810707/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:17:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810822"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810822"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:17:19Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810822",
      "id" : 1161810822,
      "in_reply_to_id" : 1155610688,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9OG",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 538,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377684010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810822/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:17:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:17:26Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810914",
      "id" : 1161810914,
      "in_reply_to_id" : 1155615459,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9Pi",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 590,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377684161,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:17:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161811025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161811025"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:17:34Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161811025",
      "id" : 1161811025,
      "in_reply_to_id" : 1155618170,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9RR",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 606,
      "original_position" : 85,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377684337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161811025/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:17:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161811025",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1162375326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162375326"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes this is nice to have. Since the key format could never change due to backward compatibility requirements, this is not an issue. You can resolve this comment.",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-04-11T06:55:18Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+        const auto& [pubkey, ckey] = key_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        LoadHDCryptedKey(it->second, ckey);\n+        batch.WriteHDCryptedKey(it->second, ckey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1162375326",
      "id" : 1162375326,
      "in_reply_to_id" : 1155626611,
      "line" : 623,
      "node_id" : "PRRC_kwDOABII585FSHCe",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 623,
      "original_position" : 108,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 108,
      "pull_request_review_id" : 1378559287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162375326/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T06:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162375326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1162378013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162378013"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess that's ok, but `AddHDKey` already has an early return for existing keys.",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-04-11T06:58:28Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1162378013",
      "id" : 1162378013,
      "in_reply_to_id" : 1155623853,
      "line" : 611,
      "node_id" : "PRRC_kwDOABII585FSHsd",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 611,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 96,
      "pull_request_review_id" : 1378563453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162378013/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T06:58:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162378013",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1196058973"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196058973"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: for the next ~~node~~test",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-05-17T07:25:49Z",
      "diff_hunk" : "@@ -332,5 +333,43 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+\n+            def check_hd_keyupgrade(wallet_name, passphrase=None):\n+                # Copy to master\n+                node_wallet_dir = os.path.join(node_v23.datadir, \"regtest\", \"wallets\", wallet_name)\n+                node_master_wallet_dir = os.path.join(node_master_wallets_dir, wallet_name)\n+                shutil.copytree(node_wallet_dir, node_master_wallet_dir)\n+\n+                # Checks\n+                node_master.loadwallet(wallet_name)\n+                wallet = node_master.get_wallet_rpc(wallet_name)\n+                if passphrase is not None:\n+                    wallet.walletpassphrase(passphrase, 10)\n+                descs = wallet.listdescriptors(True)\n+                xpub_info = wallet.getxpub(True)\n+                for desc in descs[\"descriptors\"]:\n+                    assert xpub_info[\"xprv\"] in desc[\"desc\"]\n+                wallet.unloadwallet()\n+\n+                # Copy back to older node and make sure it can be loaded\n+                shutil.rmtree(node_wallet_dir)\n+                shutil.copytree(node_master_wallet_dir, node_wallet_dir)\n+                node_v23.loadwallet(wallet_name)\n+                node_v23.unloadwallet(wallet_name)\n+\n+                # Remove wallet from master for next node",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1196058973",
      "id" : 1196058973,
      "line" : 362,
      "node_id" : "PRRC_kwDOABII585HSmld",
      "original_commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "original_line" : 362,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 38,
      "pull_request_review_id" : 1429990749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196058973/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-17T07:25:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196058973",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK c79539fc20d902b5f9e098cc996c4e27c8e5b8c5\r\n\r\nI plan to test this manually a bit later",
      "created_at" : "2023-05-17T07:26:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1550888614",
      "id" : 1550888614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585ccK6m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550888614/reactions"
      },
      "updated_at" : "2023-05-17T07:26:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550888614",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   }
]
