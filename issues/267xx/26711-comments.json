[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26933](https://github.com/bitcoin/bitcoin/pull/26933) (mempool: disallow txns under min relay fee, even in packages by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-12-16T11:27:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1354593703",
      "id" : 1354593703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26711",
      "node_id" : "IC_kwDOABII585QvXWn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1354593703/reactions"
      },
      "updated_at" : "2023-03-20T21:10:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1354593703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-01-11T13:47:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1378778140",
      "id" : 1378778140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26711",
      "node_id" : "IC_kwDOABII585SLnwc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1378778140/reactions"
      },
      "updated_at" : "2023-01-11T13:47:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1378778140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072139558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072139558"
         }
      },
      "author_association" : "MEMBER",
      "body" : "cb065422e58be7558e6c2ad9eadfa885bb48c708\r\nLet's add an Assume checking `tx == package.end()`?",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-17T12:20:04Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072139558",
      "id" : 1072139558,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_540m",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1251451996,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072139558/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-17T12:29:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072139558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072167416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072167416"
         }
      },
      "author_association" : "MEMBER",
      "body" : "cb065422e58be7558e6c2ad9eadfa885bb48c708\r\n\r\nWhat you're saying in the commit message is true only for `TxValidationResult::TX_MEMPOOL_POLICY` or `TxValidationResult::TX_MISSING_INPUTS`? In other failures, we won't validate the child for the second time (because it would trigger quit_early)\r\n\r\nWhat's even worse than a mistake in the commit message, you won't be able to catch other kinds of failures here (because you don't set `quit_early` here), so you might do some extra work which should have been avoided otherwise, no?",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-17T12:49:10Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072167416",
      "id" : 1072167416,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_5_n4",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1399,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 6,
      "pull_request_review_id" : 1251492911,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072167416/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-17T12:50:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072167416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072204405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072204405"
         }
      },
      "author_association" : "MEMBER",
      "body" : "cb065422e58be7558e6c2ad9eadfa885bb48c708\r\n\r\nAfter this change it's impossible to hit `quit_early=false` and `txns_package_eval.empty()`, which was possible before.\r\nIt means that even if everything was either (valid, already in the mempool, or invalid due to a subset of failures) â you will force the checks again? (before this change, it could have terminated early)\r\n\r\nMaybe related [to the other comment i left](https://github.com/bitcoin/bitcoin/pull/26711/commits/cb065422e58be7558e6c2ad9eadfa885bb48c708#r1072167416).",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-17T13:25:21Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072204405",
      "id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_6Ip1",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1251548165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072204405/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-17T13:25:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072204405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1073438932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073438932"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> After this change it's impossible to hit quit_early=false and txns_package_eval.empty(), which was possible before.\r\n\r\nRight, `quit_early=false && txns_package_eval.empty()` means everything so far has been valid or txid already in mempool.\r\n\r\n> It means that even if everything was either (valid, already in the mempool, or invalid due to a subset of failures) â you will force the checks again? (before this change, it could have terminated early)\r\n\r\nOk I will try to break down all the possibilities in this scenario. If we get to the child and `quit_early=false && txns_package_eval.empty()`, everything else has been valid, and we should validate the child. It doesn't matter if we do it inside or outside this loop, but it's better to only do it 1 time.\r\nThe child's result can be: valid, policy/missing inputs, or other failure. If txid already in mempool we would have already exited the loop.\r\n\r\nBefore the commit:\r\n- If valid: the tx was validated 1 time, inside the loop.\r\n- If policy/missing inputs: the tx was validated 2 times, both inside the loop and with `AcceptMultipleTransactions(txns_package_eval)` outside the loop.\r\n- If other failure: the tx was validated 1 time, inside the loop.\r\n\r\nRight after the loop, `quit_early || txns_package_eval.empty()` hits, but none of them terminated without validating the child. \r\n\r\nAfter the commit:\r\n- If valid: the tx is validated 1 time, outside the loop.\r\n- If policy/missing inputs: the tx is validated 1 time, outside the loop.\r\n- If other failure: the tx is validated 1 time, outside the loop.\r\n\r\nRight after the loop, `quit_early || txns_package_eval.empty()` does not hit. The tx is validated, and then the results returned. The function returns at a later line of code, but that doesn't mean more work was done.",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-18T11:53:24Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1073438932",
      "id" : 1073438932,
      "in_reply_to_id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_-2DU",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1253331561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073438932/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-18T11:53:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073438932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080563611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080563611"
         }
      },
      "author_association" : "MEMBER",
      "body" : "would help for reading clarity if nothing else, agreed",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T21:14:52Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080563611",
      "id" : 1080563611,
      "in_reply_to_id" : 1072139558,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaBeb",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080563611/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080563611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080581849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080581849"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Rest of this comment seems appropriate elsewhere now that its put in its own subroutine.\r\n",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T21:37:49Z",
      "diff_hunk" : "@@ -15,21 +15,8 @@\n #include <numeric>\n #include <unordered_set>\n \n-bool CheckPackage(const Package& txns, PackageValidationState& state)\n+bool IsSorted(const Package& txns)\n {\n-    const unsigned int package_count = txns.size();\n-\n-    if (package_count > MAX_PACKAGE_COUNT) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n-    }\n-\n-    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n-                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n-    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n-    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n-    }\n-\n     // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n     // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080581849",
      "id" : 1080581849,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaF7Z",
      "original_commit_id" : "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080581849/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080581849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080595370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080595370"
         }
      },
      "author_association" : "MEMBER",
      "body" : "While we're here: `CheckPackageWellFormed`",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T21:54:55Z",
      "diff_hunk" : "@@ -65,6 +56,26 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080595370",
      "id" : 1080595370,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaJOq",
      "original_commit_id" : "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "original_line" : 59,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080595370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080595370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080599515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080599515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/so/to/",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T21:58:32Z",
      "diff_hunk" : "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080599515",
      "id" : 1080599515,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaKPb",
      "original_commit_id" : "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "original_line" : 76,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080599515/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080599515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080602237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080602237"
         }
      },
      "author_association" : "MEMBER",
      "body" : "when calling Txns()",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-18T22:00:46Z",
      "diff_hunk" : "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:\n+     * - there are no conflicts\n+     * - the number of transactions is reasonable (e.g. within MAX_PACKAGE_COUNT)\n+     */\n+    Packageifier(const Package& txns);\n+    /** Returns the transactions, in ascending order of number of in-package ancestors. */\n+    Package Txns() const { return txns; }\n+    /** Get the ancestor subpackage for a transaction. */\n+    std::vector<CTransactionRef> GetAncestorSet(const CTransactionRef& tx);\n+    /** From now on, exclude these transactions from GetAncestorSet(). */\n+    void Exclude(const CTransactionRef& transaction);\n+    /** Mark a transaction as \"banned.\" From now on, if this transaction is present in the ancestor\n+     * set, return an empty vector instead. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080602237",
      "id" : 1080602237,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AaK59",
      "original_commit_id" : "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "original_line" : 98,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080602237/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080602237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081158729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081158729"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thank you for this elaborate analysis!\r\n\r\nSo in `if valid` and `if other failure` cases, it's not just inside vs outside the loop, right?\r\nBecause \"outside the loop\" also means re-validating other transactions, not just the child (`AcceptMultipleTransactions` call).\r\n(Note that I'm look only at the first commit so far)",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-19T11:51:24Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081158729",
      "id" : 1081158729,
      "in_reply_to_id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AcSxJ",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1261633680,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081158729/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T11:51:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081158729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081194260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081194260"
         }
      },
      "author_association" : "MEMBER",
      "body" : "879b55fa9da3688fb6b85e7f40f9778753a9102f\r\n\r\nAccording to this change, it should now be possible to hit `mempoolaccept_res.m_result_type == INVALID`, but only when [...].\r\n\r\nHowever, I don't see how the `AcceptPackageWrappingSingle` code change touches `mempoolaccept_res` at all. So it's unclear why the Assume is changed here.\r\n\r\n",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-19T12:24:51Z",
      "diff_hunk" : "@@ -1439,15 +1455,16 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID ||\n+               mempoolaccept_res.m_state.GetResult() == TxValidationResult::TX_MISSING_INPUTS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081194260",
      "id" : 1081194260,
      "line" : 1502,
      "node_id" : "PRRC_kwDOABII585AcbcU",
      "original_commit_id" : "879b55fa9da3688fb6b85e7f40f9778753a9102f",
      "original_line" : 1463,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 34,
      "pull_request_review_id" : 1261683617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081194260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T12:25:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081194260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081209483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081209483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What I'm talking about seems to be fixed in the next commit 879b55fa9da3688fb6b85e7f40f9778753a9102f.\r\nIf my understanding is correct, I'd suggest mentioning this in the commit message.",
      "commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "created_at" : "2023-01-19T12:41:23Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081209483",
      "id" : 1081209483,
      "in_reply_to_id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AcfKL",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 1261706834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081209483/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T12:41:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081209483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081549166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081549166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n     * Expects that:\r\n```",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T16:51:07Z",
      "diff_hunk" : "@@ -59,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081549166",
      "id" : 1081549166,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AdyFu",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 86,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081549166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081549166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081574207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081574207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe we can get rid of `quit_early` and have Packagifier contain a `HasBan` function?",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:12:54Z",
      "diff_hunk" : "@@ -1363,14 +1371,29 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     // the new transactions. This ensures we don't double-count transaction counts and sizes when\n     // checking ancestor/descendant limits, or double-count transaction fees for fee-related policy.\n     ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    const auto AcceptPackageWrappingSingle = [&](const std::vector<CTransactionRef>& subpackage)\n+        EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        AssertLockHeld(::cs_main);\n+        AssertLockHeld(m_pool.cs);\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapper;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapper.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapper, {{tx->GetWitnessHash(), single_res}});\n+    };\n+    Packageifier packageified(package);\n     // Results from individual validation. \"Nonfinal\" because if a transaction fails by itself but\n     // succeeds later (i.e. when evaluated with a fee-bumping child), the result changes (though not\n     // reflected in this map). If a transaction fails more than once, we want to return the first\n     // result, when it was considered on its own. So changes will only be from invalid -> valid.\n     std::map<uint256, MempoolAcceptResult> individual_results_nonfinal;\n     bool quit_early{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081574207",
      "id" : 1081574207,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ad4M_",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 1395,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081574207/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081574207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081588430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081588430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we change `GetAncestorSet` to an optional and store banned-ness, then we can use it to check if there is nothing left to be submitted directly by calling `txns_package_eval.empty()`.\r\n\r\n```suggestion\r\n    if (packageified.HasBan() || txns_package_eval.empty()) {\r\n```\r\n\r\nOr, if we keep GetAncestorSet as is, just do `txns_package_eval.empty()` only? It will be empty in both the cases where it has a banned input, or where all transactions have been excluded?\r\n\r\nThen we can just get rid of quit_early and don't need to track if we've banned anything?",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:20:49Z",
      "diff_hunk" : "@@ -1393,56 +1417,93 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             assert(iter != std::nullopt);\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n+            packageified.Exclude(tx);\n         } else {\n+            const auto subpackage = packageified.GetAncestorSet(tx);\n+            if (subpackage.empty()) {\n+                Assume(quit_early);\n+                // Quit early; this transaction depends on a \"banned\" tx (failed for a non-policy\n+                // and non-missing-inputs reason), so this transaction will be invalid due to\n+                // missing inputs.\n+                TxValidationState tx_state_quit_early;\n+                tx_state_quit_early.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"bad-txns-inputs-missingorspent\");\n+                individual_results_nonfinal.emplace(wtxid, MempoolAcceptResult::Failure(tx_state_quit_early));\n+                continue;\n+            }\n+            if (wtxid == child->GetWitnessHash()) {\n+                // Unless we're quitting early (child would have exited already since this is an\n+                // ancestor package), validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage);\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map.\n+            for (const auto& subpackage_tx : subpackage) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // Note that it's possible for transactions to have been submitted to the mempool even\n+            // if subpackage_result.m_state.IsInvalid(). If IsValid(), fine to move on.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. To minimize the amount of repeated work, unless the transaction fails\n+                    // due to feerate or missing inputs (its parent is a previous transaction in the\n+                    // package that failed due to feerate), don't run package validation. Note that this\n+                    // decision might not make sense if different types of packages are allowed in the\n+                    // future.  Continue individually validating the rest of the transactions, because\n+                    // some of them may still be valid.\n+                    quit_early = true;\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n     // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n+    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n+    // the other transactions in the package are as well. We check for the child by txid because\n+    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n+    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081588430",
      "id" : 1081588430,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ad7rO",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 1487,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1260782143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081588430/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:27:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081588430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081618834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081618834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Going with `IsPackageWellFormed` to follow the `Is*` pattern, if that's ok",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:49:01Z",
      "diff_hunk" : "@@ -65,6 +56,26 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081618834",
      "id" : 1081618834,
      "in_reply_to_id" : 1080595370,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeDGS",
      "original_commit_id" : "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "original_line" : 59,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1262313397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081618834/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:49:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081618834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081624953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081624953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added in the commit message that, specifically if the failure is policy or missing inputs, it was validated twice. Thanks",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:54:18Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081624953",
      "id" : 1081624953,
      "in_reply_to_id" : 1072167416,
      "line" : 1424,
      "node_id" : "PRRC_kwDOABII585AeEl5",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1424,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 94,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081624953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081624953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081625789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081625789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Only when calling `GetAncestorSet()`*, added comment that `Txns()` is unchanged.",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:55:01Z",
      "diff_hunk" : "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:\n+     * - there are no conflicts\n+     * - the number of transactions is reasonable (e.g. within MAX_PACKAGE_COUNT)\n+     */\n+    Packageifier(const Package& txns);\n+    /** Returns the transactions, in ascending order of number of in-package ancestors. */\n+    Package Txns() const { return txns; }\n+    /** Get the ancestor subpackage for a transaction. */\n+    std::vector<CTransactionRef> GetAncestorSet(const CTransactionRef& tx);\n+    /** From now on, exclude these transactions from GetAncestorSet(). */\n+    void Exclude(const CTransactionRef& transaction);\n+    /** Mark a transaction as \"banned.\" From now on, if this transaction is present in the ancestor\n+     * set, return an empty vector instead. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081625789",
      "id" : 1081625789,
      "in_reply_to_id" : 1080602237,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeEy9",
      "original_commit_id" : "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "original_line" : 98,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081625789/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081625789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081626065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081626065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:55:16Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081626065",
      "id" : 1081626065,
      "in_reply_to_id" : 1072139558,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeE3R",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081626065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081626065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thank you yes, it makes more sense to switch the commits around. Switched their order and made the commit messages more descriptive",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:56:14Z",
      "diff_hunk" : "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627149",
      "id" : 1081627149,
      "in_reply_to_id" : 1072204405,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFIN",
      "original_commit_id" : "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "original_line" : 1398,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627149/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:59:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627681"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops yes, I've removed this",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:56:36Z",
      "diff_hunk" : "@@ -1439,15 +1455,16 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID ||\n+               mempoolaccept_res.m_state.GetResult() == TxValidationResult::TX_MISSING_INPUTS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627681",
      "id" : 1081627681,
      "in_reply_to_id" : 1081194260,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFQh",
      "original_commit_id" : "879b55fa9da3688fb6b85e7f40f9778753a9102f",
      "original_line" : 1463,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627681/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628019"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved back to `IsPackageWellFormed()`",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:56:52Z",
      "diff_hunk" : "@@ -15,21 +15,8 @@\n #include <numeric>\n #include <unordered_set>\n \n-bool CheckPackage(const Package& txns, PackageValidationState& state)\n+bool IsSorted(const Package& txns)\n {\n-    const unsigned int package_count = txns.size();\n-\n-    if (package_count > MAX_PACKAGE_COUNT) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n-    }\n-\n-    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n-                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n-    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n-    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n-    }\n-\n     // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n     // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628019",
      "id" : 1081628019,
      "in_reply_to_id" : 1080581849,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFVz",
      "original_commit_id" : "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628019/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628019",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:56:57Z",
      "diff_hunk" : "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628126",
      "id" : 1081628126,
      "in_reply_to_id" : 1080599515,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFXe",
      "original_commit_id" : "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "original_line" : 76,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628126/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:57:02Z",
      "diff_hunk" : "@@ -59,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628217",
      "id" : 1081628217,
      "in_reply_to_id" : 1081549166,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFY5",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 86,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081629094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081629094"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea, got rid of quit_early and exists(). Using txns_package_eval std::nullopt or empty",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T17:57:48Z",
      "diff_hunk" : "@@ -1393,56 +1417,93 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             assert(iter != std::nullopt);\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n+            packageified.Exclude(tx);\n         } else {\n+            const auto subpackage = packageified.GetAncestorSet(tx);\n+            if (subpackage.empty()) {\n+                Assume(quit_early);\n+                // Quit early; this transaction depends on a \"banned\" tx (failed for a non-policy\n+                // and non-missing-inputs reason), so this transaction will be invalid due to\n+                // missing inputs.\n+                TxValidationState tx_state_quit_early;\n+                tx_state_quit_early.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"bad-txns-inputs-missingorspent\");\n+                individual_results_nonfinal.emplace(wtxid, MempoolAcceptResult::Failure(tx_state_quit_early));\n+                continue;\n+            }\n+            if (wtxid == child->GetWitnessHash()) {\n+                // Unless we're quitting early (child would have exited already since this is an\n+                // ancestor package), validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage);\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map.\n+            for (const auto& subpackage_tx : subpackage) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // Note that it's possible for transactions to have been submitted to the mempool even\n+            // if subpackage_result.m_state.IsInvalid(). If IsValid(), fine to move on.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. To minimize the amount of repeated work, unless the transaction fails\n+                    // due to feerate or missing inputs (its parent is a previous transaction in the\n+                    // package that failed due to feerate), don't run package validation. Note that this\n+                    // decision might not make sense if different types of packages are allowed in the\n+                    // future.  Continue individually validating the rest of the transactions, because\n+                    // some of them may still be valid.\n+                    quit_early = true;\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n     // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n+    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n+    // the other transactions in the package are as well. We check for the child by txid because\n+    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n+    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081629094",
      "id" : 1081629094,
      "in_reply_to_id" : 1081588430,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeFmm",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 1487,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262320655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081629094/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T17:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081629094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081632204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081632204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(was able to get rid of quit_early without `HasBan()`)",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-19T18:00:28Z",
      "diff_hunk" : "@@ -1363,14 +1371,29 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     // the new transactions. This ensures we don't double-count transaction counts and sizes when\n     // checking ancestor/descendant limits, or double-count transaction fees for fee-related policy.\n     ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    const auto AcceptPackageWrappingSingle = [&](const std::vector<CTransactionRef>& subpackage)\n+        EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        AssertLockHeld(::cs_main);\n+        AssertLockHeld(m_pool.cs);\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapper;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapper.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapper, {{tx->GetWitnessHash(), single_res}});\n+    };\n+    Packageifier packageified(package);\n     // Results from individual validation. \"Nonfinal\" because if a transaction fails by itself but\n     // succeeds later (i.e. when evaluated with a fee-bumping child), the result changes (though not\n     // reflected in this map). If a transaction fails more than once, we want to return the first\n     // result, when it was considered on its own. So changes will only be from invalid -> valid.\n     std::map<uint256, MempoolAcceptResult> individual_results_nonfinal;\n     bool quit_early{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081632204",
      "id" : 1081632204,
      "in_reply_to_id" : 1081574207,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AeGXM",
      "original_commit_id" : "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "original_line" : 1395,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1262329505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081632204/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081632204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082414267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082414267"
         }
      },
      "author_association" : "MEMBER",
      "body" : "036d2b07fb3ce404dd6787d8d0fe4e80c168fdf4\r\nThis `Assume` is orthogonal to the rest of the code changes (these changes don't touch `mempoolaccept_res`), so it's unclear why you remove it here.",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T11:57:39Z",
      "diff_hunk" : "@@ -1422,15 +1438,14 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082414267",
      "id" : 1082414267,
      "line" : 1429,
      "node_id" : "PRRC_kwDOABII585AhFS7",
      "original_commit_id" : "036d2b07fb3ce404dd6787d8d0fe4e80c168fdf4",
      "original_line" : 1429,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 32,
      "pull_request_review_id" : 1263465719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082414267/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T11:57:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082414267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082421842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082421842"
         }
      },
      "author_association" : "MEMBER",
      "body" : "4c4cea3856b1fa2a50de25847b19ae90c4263916\r\nnit: maybe it's better to use `HasConflicts`. Double-negation is harder to understand :)",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T12:03:44Z",
      "diff_hunk" : "@@ -65,6 +52,30 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)\n+{\n+    const unsigned int package_count = txns.size();\n+\n+    if (package_count > MAX_PACKAGE_COUNT) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n+    }\n+\n+    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n+                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n+    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n+    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n+    }\n+\n+    // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n+    // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and\n+    // fail on something less ambiguous (missing-inputs could also be an orphan or trying to\n+    // spend nonexistent coins).\n+    if (!IsSorted(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-sorted\");\n+    if (!HasNoConflicts(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"conflict-in-package\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082421842",
      "id" : 1082421842,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII585AhHJS",
      "original_commit_id" : "4c4cea3856b1fa2a50de25847b19ae90c4263916",
      "original_line" : 75,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : 77,
      "pull_request_review_id" : 1263473012,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082421842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:03:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082421842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082468542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082468542"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8764ecc566413b4974e030c596193e75ff39f746\r\nCan this result in an endless recursion, if txA spends txB and txB spends txA at the same time? Or possibly through txC. (similar in `IsAncestorPackage`)",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T12:37:29Z",
      "diff_hunk" : "@@ -92,3 +91,81 @@ bool IsChildWithParents(const Package& package)\n     return std::all_of(package.cbegin(), package.cend() - 1,\n                        [&input_txids](const auto& ptx) { return input_txids.count(ptx->GetHash()) > 0; });\n }\n+\n+// After calling visit() on a package tx, it's guaranteed to be in the ancestor_subsets map.\n+void Packageifier::visit(const CTransactionRef& curr_tx)\n+{\n+    const uint256& curr_txid = curr_tx->GetHash();\n+    if (ancestor_subsets.count(curr_txid) > 0) return;\n+    std::set<uint256> my_ancestors;\n+    my_ancestors.insert(curr_txid);\n+    for (const auto& input : curr_tx->vin) {\n+        auto parent_tx = txid_to_tx.find(input.prevout.hash);\n+        if (parent_tx == txid_to_tx.end()) continue;\n+        if (ancestor_subsets.count(parent_tx->first) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082468542",
      "id" : 1082468542,
      "line" : 105,
      "node_id" : "PRRC_kwDOABII585AhSi-",
      "original_commit_id" : "8764ecc566413b4974e030c596193e75ff39f746",
      "original_line" : 105,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : 32,
      "pull_request_review_id" : 1263514526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082468542/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T13:11:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082468542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082492810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082492810"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8764ecc566413b4974e030c596193e75ff39f746\r\nThe comment is incorrect: nullopt is returned, not empty vector.",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T12:54:31Z",
      "diff_hunk" : "@@ -62,4 +65,39 @@ bool IsPackageWellFormed(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions to exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082492810",
      "id" : 1082492810,
      "line" : 78,
      "node_id" : "PRRC_kwDOABII585AhYeK",
      "original_commit_id" : "8764ecc566413b4974e030c596193e75ff39f746",
      "original_line" : 78,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : 26,
      "pull_request_review_id" : 1263535150,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082492810/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:54:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082492810",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082507527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082507527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we have a cycle of transactions, SHA256 is broken, no? ð",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T13:04:42Z",
      "diff_hunk" : "@@ -92,3 +91,81 @@ bool IsChildWithParents(const Package& package)\n     return std::all_of(package.cbegin(), package.cend() - 1,\n                        [&input_txids](const auto& ptx) { return input_txids.count(ptx->GetHash()) > 0; });\n }\n+\n+// After calling visit() on a package tx, it's guaranteed to be in the ancestor_subsets map.\n+void Packageifier::visit(const CTransactionRef& curr_tx)\n+{\n+    const uint256& curr_txid = curr_tx->GetHash();\n+    if (ancestor_subsets.count(curr_txid) > 0) return;\n+    std::set<uint256> my_ancestors;\n+    my_ancestors.insert(curr_txid);\n+    for (const auto& input : curr_tx->vin) {\n+        auto parent_tx = txid_to_tx.find(input.prevout.hash);\n+        if (parent_tx == txid_to_tx.end()) continue;\n+        if (ancestor_subsets.count(parent_tx->first) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082507527",
      "id" : 1082507527,
      "in_reply_to_id" : 1082468542,
      "line" : 105,
      "node_id" : "PRRC_kwDOABII585AhcEH",
      "original_commit_id" : "8764ecc566413b4974e030c596193e75ff39f746",
      "original_line" : 105,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : 32,
      "pull_request_review_id" : 1263548159,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082507527/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T13:04:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082507527",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082586776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082586776"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You are right. Not sure if it's worth commenting. It's unlikely someone will violate this assumption (it would require big changes to Bitcoin), but it could save time to someone like me who forget about this property.",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-20T14:10:18Z",
      "diff_hunk" : "@@ -92,3 +91,81 @@ bool IsChildWithParents(const Package& package)\n     return std::all_of(package.cbegin(), package.cend() - 1,\n                        [&input_txids](const auto& ptx) { return input_txids.count(ptx->GetHash()) > 0; });\n }\n+\n+// After calling visit() on a package tx, it's guaranteed to be in the ancestor_subsets map.\n+void Packageifier::visit(const CTransactionRef& curr_tx)\n+{\n+    const uint256& curr_txid = curr_tx->GetHash();\n+    if (ancestor_subsets.count(curr_txid) > 0) return;\n+    std::set<uint256> my_ancestors;\n+    my_ancestors.insert(curr_txid);\n+    for (const auto& input : curr_tx->vin) {\n+        auto parent_tx = txid_to_tx.find(input.prevout.hash);\n+        if (parent_tx == txid_to_tx.end()) continue;\n+        if (ancestor_subsets.count(parent_tx->first) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082586776",
      "id" : 1082586776,
      "in_reply_to_id" : 1082468542,
      "line" : 105,
      "node_id" : "PRRC_kwDOABII585AhvaY",
      "original_commit_id" : "8764ecc566413b4974e030c596193e75ff39f746",
      "original_line" : 105,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : 32,
      "pull_request_review_id" : 1263655629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082586776/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T14:10:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082586776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1084899543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084899543"
         }
      },
      "author_association" : "MEMBER",
      "body" : "cea7dcf4388ad65436fcb98c7025b607708e09ab\r\nnit: worth changing `input_height` to `uint` too, maybe even with `const`?",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-24T07:43:06Z",
      "diff_hunk" : "@@ -171,7 +188,7 @@ struct TestChain100Setup : public TestingSetup {\n      * @param submit             Whether or not to submit to mempool\n      */\n     CMutableTransaction CreateValidMempoolTransaction(CTransactionRef input_transaction,\n-                                                      int input_vout,\n+                                                      uint32_t input_vout,\n                                                       int input_height,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1084899543",
      "id" : 1084899543,
      "line" : 192,
      "node_id" : "PRRC_kwDOABII585AqkDX",
      "original_commit_id" : "cea7dcf4388ad65436fcb98c7025b607708e09ab",
      "original_line" : 192,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 30,
      "pull_request_review_id" : 1266961348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084899543/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T07:43:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084899543",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1084935931"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084935931"
         }
      },
      "author_association" : "MEMBER",
      "body" : "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b\r\nConsider everything, including the child, to be valid.\r\nPreviously, the execution would terminate at `txns_package_eval.empty()` gate after the loop.\r\nAfter this commit, this won't passÂ âÂ and everything (other transactions) would be validated once again.",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-24T08:23:45Z",
      "diff_hunk" : "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1084935931",
      "id" : 1084935931,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Aqs77",
      "original_commit_id" : "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "original_line" : 1403,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 6,
      "pull_request_review_id" : 1267024821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084935931/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T08:33:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084935931",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1085014944"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085014944"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/commit/db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b\r\nShould say \"non-child transaction'",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-24T09:32:21Z",
      "diff_hunk" : "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1085014944",
      "id" : 1085014944,
      "line" : 1427,
      "node_id" : "PRRC_kwDOABII585ArAOg",
      "original_commit_id" : "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "original_line" : 1407,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 10,
      "pull_request_review_id" : 1267126406,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085014944/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T09:32:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085014944",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1085056132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085056132"
         }
      },
      "author_association" : "MEMBER",
      "body" : "936c7f170bc68ec583ae026ddbaf197ca6cd0792\r\nCould you help me understand how the latter condition can be possible for this transaction?",
      "commit_id" : "d74c446014e63c9ad27eb1e9dbf67bfd6af57f9e",
      "created_at" : "2023-01-24T10:03:37Z",
      "diff_hunk" : "@@ -1416,44 +1420,54 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 continue;\n             }\n             if (wtxid == child->GetWitnessHash()) {\n-                txns_package_eval.push_back(tx);\n-                Assume(txns_package_eval == subpackage.value());\n                 Assume(tx == package.back());\n                 // Unless we're quitting early, validate the child outside of this loop.\n                 break;\n             }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-                packageified.Exclude(tx);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. Tell the Packageifier that subsequent transactions depending on this one\n-                // should be skipped.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-                packageified.Ban(tx);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage.value());\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map. Note that it's possible for transactions to\n+            // have been submitted to the mempool even if subpackage_result.m_state.IsInvalid().\n+            for (const auto& subpackage_tx : subpackage.value()) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // If m_state is valid, we already processed each tx in the loop above.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. Tell the Packageifier that subsequent transactions depending on this one\n+                    // should be skipped.\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n-    // the other transactions in the package are as well. We check for the child by txid because\n-    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n-    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {\n+    const auto txns_package_eval{packageified.GetAncestorSet(child)};\n+    // If txns_package_eval is std::nullopt, the last tx's result was pre-filled with missing\n+    // inputs. If txns_package_eval is empty, all transactions have already passed.\n+    if (!txns_package_eval || txns_package_eval->empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1085056132",
      "id" : 1085056132,
      "line" : 1470,
      "node_id" : "PRRC_kwDOABII585ArKSE",
      "original_commit_id" : "936c7f170bc68ec583ae026ddbaf197ca6cd0792",
      "original_line" : 1470,
      "original_position" : 128,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 128,
      "pull_request_review_id" : 1267177090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085056132/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T10:03:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085056132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1085568911"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085568911"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I assume you're asking \"how can `txns_package_eval` be empty?\" \r\nIf all of the transactions were already in the mempool, they have each been `Exclude`'d. So `GetAncestorSet(child)` returns a vector of all the non-excluded ancestors, which is an empty vector.",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-24T16:21:04Z",
      "diff_hunk" : "@@ -1416,44 +1420,54 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 continue;\n             }\n             if (wtxid == child->GetWitnessHash()) {\n-                txns_package_eval.push_back(tx);\n-                Assume(txns_package_eval == subpackage.value());\n                 Assume(tx == package.back());\n                 // Unless we're quitting early, validate the child outside of this loop.\n                 break;\n             }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-                packageified.Exclude(tx);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. Tell the Packageifier that subsequent transactions depending on this one\n-                // should be skipped.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-                packageified.Ban(tx);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage.value());\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map. Note that it's possible for transactions to\n+            // have been submitted to the mempool even if subpackage_result.m_state.IsInvalid().\n+            for (const auto& subpackage_tx : subpackage.value()) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // If m_state is valid, we already processed each tx in the loop above.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. Tell the Packageifier that subsequent transactions depending on this one\n+                    // should be skipped.\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n-    // the other transactions in the package are as well. We check for the child by txid because\n-    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n-    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {\n+    const auto txns_package_eval{packageified.GetAncestorSet(child)};\n+    // If txns_package_eval is std::nullopt, the last tx's result was pre-filled with missing\n+    // inputs. If txns_package_eval is empty, all transactions have already passed.\n+    if (!txns_package_eval || txns_package_eval->empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1085568911",
      "id" : 1085568911,
      "in_reply_to_id" : 1085056132,
      "line" : 1467,
      "node_id" : "PRRC_kwDOABII585AtHeP",
      "original_commit_id" : "936c7f170bc68ec583ae026ddbaf197ca6cd0792",
      "original_line" : 1467,
      "original_position" : 128,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 166,
      "pull_request_review_id" : 1267825959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085568911/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-27T12:39:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085568911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090695044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090695044"
         }
      },
      "author_association" : "MEMBER",
      "body" : "- It will need to be cast to `int` anyway when we call `AddCoins()`. Maybe one day if we change `AddCoins()` ?\r\n- I don't think `const` is very meaningful since it's passed by value",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-30T14:26:31Z",
      "diff_hunk" : "@@ -171,7 +188,7 @@ struct TestChain100Setup : public TestingSetup {\n      * @param submit             Whether or not to submit to mempool\n      */\n     CMutableTransaction CreateValidMempoolTransaction(CTransactionRef input_transaction,\n-                                                      int input_vout,\n+                                                      uint32_t input_vout,\n                                                       int input_height,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090695044",
      "id" : 1090695044,
      "in_reply_to_id" : 1084899543,
      "line" : 192,
      "node_id" : "PRRC_kwDOABII585BAq-E",
      "original_commit_id" : "cea7dcf4388ad65436fcb98c7025b607708e09ab",
      "original_line" : 192,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 30,
      "pull_request_review_id" : 1275271720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090695044/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-30T14:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090695044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090716976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090716976"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, removed",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-30T14:44:14Z",
      "diff_hunk" : "@@ -1422,15 +1438,14 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090716976",
      "id" : 1090716976,
      "in_reply_to_id" : 1082414267,
      "line" : 1427,
      "node_id" : "PRRC_kwDOABII585BAwUw",
      "original_commit_id" : "036d2b07fb3ce404dd6787d8d0fe4e80c168fdf4",
      "original_line" : 1427,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 179,
      "pull_request_review_id" : 1275271720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090716976/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-30T14:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090716976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090726607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726607"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-30T14:51:25Z",
      "diff_hunk" : "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090726607",
      "id" : 1090726607,
      "in_reply_to_id" : 1085014944,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BAyrP",
      "original_commit_id" : "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "original_line" : 1407,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1275271720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726607/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-30T14:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090726927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726927"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, fixed",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-30T14:51:40Z",
      "diff_hunk" : "@@ -62,4 +65,39 @@ bool IsPackageWellFormed(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions to exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090726927",
      "id" : 1090726927,
      "in_reply_to_id" : 1082492810,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BAywP",
      "original_commit_id" : "8764ecc566413b4974e030c596193e75ff39f746",
      "original_line" : 78,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : null,
      "pull_request_review_id" : 1275271720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726927/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-30T14:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090727252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090727252"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've added a comment to visit()",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-30T14:51:52Z",
      "diff_hunk" : "@@ -92,3 +91,81 @@ bool IsChildWithParents(const Package& package)\n     return std::all_of(package.cbegin(), package.cend() - 1,\n                        [&input_txids](const auto& ptx) { return input_txids.count(ptx->GetHash()) > 0; });\n }\n+\n+// After calling visit() on a package tx, it's guaranteed to be in the ancestor_subsets map.\n+void Packageifier::visit(const CTransactionRef& curr_tx)\n+{\n+    const uint256& curr_txid = curr_tx->GetHash();\n+    if (ancestor_subsets.count(curr_txid) > 0) return;\n+    std::set<uint256> my_ancestors;\n+    my_ancestors.insert(curr_txid);\n+    for (const auto& input : curr_tx->vin) {\n+        auto parent_tx = txid_to_tx.find(input.prevout.hash);\n+        if (parent_tx == txid_to_tx.end()) continue;\n+        if (ancestor_subsets.count(parent_tx->first) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090727252",
      "id" : 1090727252,
      "in_reply_to_id" : 1082468542,
      "line" : 109,
      "node_id" : "PRRC_kwDOABII585BAy1U",
      "original_commit_id" : "8764ecc566413b4974e030c596193e75ff39f746",
      "original_line" : 109,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : 114,
      "pull_request_review_id" : 1275271720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090727252/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-30T14:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090727252",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090728980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090728980"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've changed it to `IsConsistent()`. I didn't want to change to `HasConflicts()` because that would require changing the function implementation to be opposite, and the `Is*` pattern seems to be good for readability",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-30T14:53:10Z",
      "diff_hunk" : "@@ -65,6 +52,30 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)\n+{\n+    const unsigned int package_count = txns.size();\n+\n+    if (package_count > MAX_PACKAGE_COUNT) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n+    }\n+\n+    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n+                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n+    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n+    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n+    }\n+\n+    // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n+    // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and\n+    // fail on something less ambiguous (missing-inputs could also be an orphan or trying to\n+    // spend nonexistent coins).\n+    if (!IsSorted(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-sorted\");\n+    if (!HasNoConflicts(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"conflict-in-package\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090728980",
      "id" : 1090728980,
      "in_reply_to_id" : 1082421842,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BAzQU",
      "original_commit_id" : "4c4cea3856b1fa2a50de25847b19ae90c4263916",
      "original_line" : 75,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1275271720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090728980/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-30T14:54:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090728980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090746878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090746878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's the opposite - we avoid re-validating things now.\r\n\r\n> Consider everything, including the child, to be valid.\r\n\r\nOk, we can break this down. Let's split it into 2 types of scenarios: non-CPFP case and CPFP case. In the CPFP case, the parent needs the child in order to pass.\r\n\r\n(1) Non-CPFP case\r\n(1a) Before this commit\r\nInside this loop, **validate** parent. The parent passes and is submitted to the mempool.\r\nThen, **validate** child. The child passes and is submitted.\r\nAfter the loop, we quit because `txns_package_eval.empty()`.\r\nHow many times we validated something: 2\r\n\r\n(1b) After this commit\r\nInside this loop, **validate** parent. The parent passes and is submitted to the mempool.\r\nInside this loop, at this condition, `txns_package_eval.push_back(child)` and break.\r\nAfter the loop, we **validate** using `AcceptPackageWrappingSingle({child})`.\r\nHow many times we validated something: 2\r\n\r\n(2) CPFP case\r\n(2a) Before this commit\r\nInside loop, **validate** parent. The parent fails due to too low fee. `txns_package_eval.push_back(parent)`.\r\nInside this loop, **validate** child. The child fails due to missing inputs. `txns_package_eval.push_back(child)`.\r\nAfter the loop, we **validate** using `AcceptPackageWrappingSingle({parent, child})`.\r\nHow many times we validated something: 3\r\n\r\n(2b) After this commit\r\nInside loop, **validate** parent. The parent fails due to too low fee. `txns_package_eval.push_back(parent)`.\r\nInside this loop, at this condition, `txns_package_eval.push_back(child)` and break.\r\nAfter the loop, we **validate** using `AcceptPackageWrappingSingle({parent, child})`.\r\nHow many times we validated something: 2",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-30T15:06:49Z",
      "diff_hunk" : "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090746878",
      "id" : 1090746878,
      "in_reply_to_id" : 1084935931,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BA3n-",
      "original_commit_id" : "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "original_line" : 1403,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1275349367,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090746878/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-30T15:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090746878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091627600"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091627600"
         }
      },
      "author_association" : "MEMBER",
      "body" : "132159cc6ae36da7697fcbb90bd5914e02a41386\r\nThis limit is never checked?",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T08:58:15Z",
      "diff_hunk" : "@@ -73,4 +76,41 @@ bool IsPackageWellFormed(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically (see IsSorted()). */\n+    Package txns;\n+    /** Map from txid to transaction for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Cache of the in-package ancestors for each transaction, indexed by txid. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Txids of transactions to exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Txids of transactions that are banned. Return nullopt from GetAncestorSet() if it contains\n+     * any of these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects:\n+     * - No duplicate transactions.\n+     * - No conflicts between transactions.\n+     * - txns is of reasonable size (e.g. below MAX_PACKAGE_COUNT) to limit recursion depth",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091627600",
      "id" : 1091627600,
      "line" : 101,
      "node_id" : "PRRC_kwDOABII585BEOpQ",
      "original_commit_id" : "132159cc6ae36da7697fcbb90bd5914e02a41386",
      "original_line" : 101,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : 38,
      "pull_request_review_id" : 1276742818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091627600/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T08:58:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091627600",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091678009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091678009"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thank you for helping me understand this. I understand you are right now. ",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T09:41:13Z",
      "diff_hunk" : "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091678009",
      "id" : 1091678009,
      "in_reply_to_id" : 1084935931,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BEa85",
      "original_commit_id" : "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "original_line" : 1403,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1276817245,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091678009/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T09:41:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091678009",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091696901"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091696901"
         }
      },
      "author_association" : "MEMBER",
      "body" : "93e976d98726040edf4070175c46fdc504aabff5\r\nwhy not ban here?",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T09:56:33Z",
      "diff_hunk" : "@@ -1409,20 +1427,18 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 // in package validation, because its fees should only be \"used\" once.\n                 assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n                 results_final.emplace(wtxid, single_res);\n+                packageified.Exclude(tx);\n             } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n                        single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n                 // Package validation policy only differs from individual policy in its evaluation\n                 // of feerate. For example, if a transaction fails here due to violation of a\n                 // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n+                // package. Tell the Packageifier that subsequent transactions depending on this one\n+                // should be skipped.\n                 quit_early = true;\n                 package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n+                packageified.Ban(tx);\n             } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091696901",
      "id" : 1091696901,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BEfkF",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1442,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 76,
      "pull_request_review_id" : 1276843630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091696901/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T10:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091696901",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091710042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091710042"
         }
      },
      "author_association" : "MEMBER",
      "body" : "93e976d98726040edf4070175c46fdc504aabff5\r\nDoes \"passed\" mean \"valid\" in this context?",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T10:08:17Z",
      "diff_hunk" : "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091710042",
      "id" : 1091710042,
      "line" : 1466,
      "node_id" : "PRRC_kwDOABII585BEixa",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1451,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 83,
      "pull_request_review_id" : 1276863562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091710042/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T10:08:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091710042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091768545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091768545"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T11:00:29Z",
      "diff_hunk" : "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091768545",
      "id" : 1091768545,
      "in_reply_to_id" : 1091710042,
      "line" : 1466,
      "node_id" : "PRRC_kwDOABII585BExDh",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1451,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 83,
      "pull_request_review_id" : 1276949724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091768545/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T11:00:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091768545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091783287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091783287"
         }
      },
      "author_association" : "MEMBER",
      "body" : "meant to be a precondition, so the caller should check it beforehand",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T11:15:44Z",
      "diff_hunk" : "@@ -73,4 +76,41 @@ bool IsPackageWellFormed(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically (see IsSorted()). */\n+    Package txns;\n+    /** Map from txid to transaction for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Cache of the in-package ancestors for each transaction, indexed by txid. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Txids of transactions to exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Txids of transactions that are banned. Return nullopt from GetAncestorSet() if it contains\n+     * any of these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects:\n+     * - No duplicate transactions.\n+     * - No conflicts between transactions.\n+     * - txns is of reasonable size (e.g. below MAX_PACKAGE_COUNT) to limit recursion depth",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091783287",
      "id" : 1091783287,
      "in_reply_to_id" : 1091627600,
      "line" : 101,
      "node_id" : "PRRC_kwDOABII585BE0p3",
      "original_commit_id" : "132159cc6ae36da7697fcbb90bd5914e02a41386",
      "original_line" : 101,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/policy/packages.h",
      "position" : 38,
      "pull_request_review_id" : 1276972386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091783287/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T11:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091783287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091786482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091786482"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Here, the tx failed for missing inputs or policy (i.e. possibly too low fee), so there is a chance of it becoming valid if later validated as a package.",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T11:18:56Z",
      "diff_hunk" : "@@ -1409,20 +1427,18 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 // in package validation, because its fees should only be \"used\" once.\n                 assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n                 results_final.emplace(wtxid, single_res);\n+                packageified.Exclude(tx);\n             } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n                        single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n                 // Package validation policy only differs from individual policy in its evaluation\n                 // of feerate. For example, if a transaction fails here due to violation of a\n                 // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n+                // package. Tell the Packageifier that subsequent transactions depending on this one\n+                // should be skipped.\n                 quit_early = true;\n                 package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n+                packageified.Ban(tx);\n             } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091786482",
      "id" : 1091786482,
      "in_reply_to_id" : 1091696901,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BE1by",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1442,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 76,
      "pull_request_review_id" : 1276972386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091786482/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T11:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091786482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091805721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091805721"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can't it be empty if the child is invalid? (`if (!subpackage) {` etc)",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T11:37:05Z",
      "diff_hunk" : "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091805721",
      "id" : 1091805721,
      "in_reply_to_id" : 1091710042,
      "line" : 1466,
      "node_id" : "PRRC_kwDOABII585BE6IZ",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1451,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 83,
      "pull_request_review_id" : 1277003729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091805721/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T11:37:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091805721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091824305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091824305"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`subpackage` has type `std::optional<std::vector<CTransactionRef>>`, so `!subpackage` means it is `std::nullopt`. empty vector means all transactions have been excluded.",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T11:56:32Z",
      "diff_hunk" : "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091824305",
      "id" : 1091824305,
      "in_reply_to_id" : 1091710042,
      "line" : 1466,
      "node_id" : "PRRC_kwDOABII585BE-qx",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1451,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 83,
      "pull_request_review_id" : 1277030536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091824305/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T11:57:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091824305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091853962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091853962"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm thinking about the following:\r\n- two transactions\r\n- `Ban(parent)`\r\n- `if (!subpackage) {` on the child iteration\r\n- `txns_package_eval.empty()` but nothing is \"valid\" (if that's what you mean by passed)\r\n\r\nMaybe you meant \"when `quit_early` is false, then [...]\" but I'm not sure.",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-01-31T12:26:45Z",
      "diff_hunk" : "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091853962",
      "id" : 1091853962,
      "in_reply_to_id" : 1091710042,
      "line" : 1466,
      "node_id" : "PRRC_kwDOABII585BFF6K",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1451,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 83,
      "pull_request_review_id" : 1277074727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091853962/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-31T12:26:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091853962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093055411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093055411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In that case, `if (!subpackage) {` hits on the child iteration, and its result is prefilled with the \"missing inputs\" failure. And then we have `!txns_package_eval`, not `txns_package_eval.empty()`.",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-02-01T10:47:16Z",
      "diff_hunk" : "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093055411",
      "id" : 1093055411,
      "in_reply_to_id" : 1091710042,
      "line" : 1466,
      "node_id" : "PRRC_kwDOABII585BJrOz",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1451,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 83,
      "pull_request_review_id" : 1278870652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093055411/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-01T10:47:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093055411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093057032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093057032"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Noting that we can remove the missing inputs condition from here, since we are validating subpackages now and nobody should have missing inputs unless there is a transaction missing",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-02-01T10:48:45Z",
      "diff_hunk" : "@@ -1379,39 +1402,69 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             assert(iter != std::nullopt);\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n+            packageified.Exclude(tx);\n         } else {\n-            // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-            } else {\n+            const auto subpackage = packageified.GetAncestorSet(tx);\n+            if (!subpackage) {\n+                // This transaction depends on a tx we will definitely not accept (failed for a\n+                // non-policy and non-missing-inputs reason). We already know that this transaction\n+                // will be invalid for at least one reason, i.e. a missing input. To minimize the\n+                // amount of repeated work, don't validate this tx. Just return missing inputs.\n+                TxValidationState tx_state_quit_early;\n+                tx_state_quit_early.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"bad-txns-inputs-missingorspent\");\n+                individual_results_nonfinal.emplace(wtxid, MempoolAcceptResult::Failure(tx_state_quit_early));\n+                // Don't quit too early. Other transactions may not necessarily depend on the same\n+                // parent, and should still be considered.\n+                continue;\n+            }\n+            if (wtxid == child->GetWitnessHash()) {\n+                Assume(tx == package.back());\n+                // Unless we're quitting early, validate the child outside of this loop.\n+                break;\n+            }\n+            // This transaction does not already exist in the mempool and is not the child.\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage.value());\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map. Note that it's possible for transactions to\n+            // have been submitted to the mempool even if subpackage_result.m_state.IsInvalid().\n+            for (const auto& subpackage_tx : subpackage.value()) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // If m_state is valid, we already processed each tx in the loop above.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093057032",
      "id" : 1093057032,
      "line" : 1449,
      "node_id" : "PRRC_kwDOABII585BJroI",
      "original_commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "original_line" : 1449,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 144,
      "pull_request_review_id" : 1278872989,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093057032/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-01T10:48:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093057032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093096405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093096405"
         }
      },
      "author_association" : "MEMBER",
      "body" : ">And then we have `!txns_package_eval`,\r\n\r\nSee the commit I'm referring to, `!txns_package_eval` is impossible there. I know that this inaccuracy goes away in the next commit, but w.r.t. 93e976d98726040edf4070175c46fdc504aabff5 this comment seems incorrect.",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-02-01T11:28:08Z",
      "diff_hunk" : "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093096405",
      "id" : 1093096405,
      "in_reply_to_id" : 1091710042,
      "line" : 1466,
      "node_id" : "PRRC_kwDOABII585BJ1PV",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1451,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 83,
      "pull_request_review_id" : 1278930308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093096405/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-01T11:28:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093096405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093134465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093134465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah I see. I can move this comment to the last commit.",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-02-01T12:08:05Z",
      "diff_hunk" : "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093134465",
      "id" : 1093134465,
      "in_reply_to_id" : 1091710042,
      "line" : 1466,
      "node_id" : "PRRC_kwDOABII585BJ-iB",
      "original_commit_id" : "93e976d98726040edf4070175c46fdc504aabff5",
      "original_line" : 1451,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 83,
      "pull_request_review_id" : 1278985853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093134465/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-01T12:08:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093134465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1136210879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136210879"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is just being moved here and I don't think this can overflow in practice, but the init value should be `int64_t{0}`, so maybe it would make sense to fix this somewhere within this PR. (searched the rest of the codebase after https://github.com/bitcoin/bitcoin/pull/27021#discussion_r1136136446).",
      "commit_id" : "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "created_at" : "2023-03-14T21:11:47Z",
      "diff_hunk" : "@@ -65,6 +52,30 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)\n+{\n+    const unsigned int package_count = txns.size();\n+\n+    if (package_count > MAX_PACKAGE_COUNT) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n+    }\n+\n+    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1136210879",
      "id" : 1136210879,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585DuTO_",
      "original_commit_id" : "4a4ae2f12837f3abe93a67bd490213f5a9e82d76",
      "original_line" : 63,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : 76,
      "pull_request_review_id" : 1340287122,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136210879/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-14T21:11:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136210879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1142230795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142230795"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah thanks!",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-03-20T14:44:17Z",
      "diff_hunk" : "@@ -65,6 +52,30 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)\n+{\n+    const unsigned int package_count = txns.size();\n+\n+    if (package_count > MAX_PACKAGE_COUNT) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n+    }\n+\n+    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1142230795",
      "id" : 1142230795,
      "in_reply_to_id" : 1136210879,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585EFQ8L",
      "original_commit_id" : "4a4ae2f12837f3abe93a67bd490213f5a9e82d76",
      "original_line" : 62,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/policy/packages.cpp",
      "position" : null,
      "pull_request_review_id" : 1348711897,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142230795/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-20T14:44:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142230795",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Marking as draft for now, will rebase on top of #26933",
      "created_at" : "2023-04-05T10:42:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1497279995",
      "id" : 1497279995,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26711",
      "node_id" : "IC_kwDOABII585ZPq37",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497279995/reactions"
      },
      "updated_at" : "2023-04-05T10:42:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497279995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182761583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182761583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this should assert that package is non-empty",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-05-02T16:10:58Z",
      "diff_hunk" : "@@ -39,6 +39,30 @@ inline CTransactionRef create_placeholder_tx(size_t num_inputs, size_t num_outpu\n     return MakeTransactionRef(mtx);\n }\n \n+// Context-free check that a package only contains a tx (the last tx in the package) with its\n+// ancestors. Not all of the tx's ancestors need to be present.\n+bool IsAncestorPackage(const Package& package)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182761583",
      "id" : 1182761583,
      "line" : 44,
      "node_id" : "PRRC_kwDOABII585Gf4Jv",
      "original_commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "original_line" : 44,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 6,
      "pull_request_review_id" : 1262442548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182761583/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-02T16:46:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182761583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182768590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182768590"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        for (int parent_idx{0}; parent_idx < 99; ++parent_idx) {\r\n```",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-05-02T16:17:37Z",
      "diff_hunk" : "@@ -63,10 +87,121 @@ BOOST_FIXTURE_TEST_CASE(package_sanitization_tests, TestChain100Setup)\n     }\n     BOOST_CHECK(package_too_large.size() <= MAX_PACKAGE_COUNT);\n     PackageValidationState state_too_large;\n-    BOOST_CHECK(!CheckPackage(package_too_large, state_too_large));\n+    BOOST_CHECK(!IsPackageWellFormed(package_too_large, state_too_large, /*require_sorted=*/true));\n     BOOST_CHECK_EQUAL(state_too_large.GetResult(), PackageValidationResult::PCKG_POLICY);\n     BOOST_CHECK_EQUAL(state_too_large.GetRejectReason(), \"package-too-large\");\n }\n+BOOST_FIXTURE_TEST_CASE(packageifier_tests, TestChain100Setup)\n+{\n+    CKey placeholder_key;\n+    placeholder_key.MakeNewKey(true);\n+    CScript spk = GetScriptForDestination(PKHash(placeholder_key.GetPubKey()));\n+    FastRandomContext det_rand{true};\n+    // Basic chain of 25 transactions\n+    {\n+        Package package;\n+        CTransactionRef last_tx = m_coinbase_txns[0];\n+        CKey signing_key = coinbaseKey;\n+        for (int i{0}; i < 24; ++i) {\n+            auto tx = MakeTransactionRef(CreateValidMempoolTransaction(last_tx, 0, 0, signing_key, spk, CAmount((49-i) * COIN), false));\n+            package.emplace_back(tx);\n+            last_tx = tx;\n+            if (i == 0) signing_key = placeholder_key;\n+        }\n+        BOOST_CHECK(!IsChildWithParents(package));\n+        BOOST_CHECK(IsAncestorPackage(package));\n+\n+        Package package_copy = package;\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        BOOST_CHECK(IsAncestorPackage(packageified.Txns()));\n+        for (auto i{0}; i < 24; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), i + 1);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(package[i])));\n+        }\n+        for (auto i{0}; i < 10; ++i) packageified.Exclude(package[i]);\n+        packageified.Ban(package[20]);\n+        for (auto i{11}; i < 20; ++i) {\n+            const auto& tx = package[i];\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(tx)->size(), i - 9);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(tx)));\n+        }\n+        for (auto i{20}; i < 24; ++i) {\n+            BOOST_CHECK(!packageified.GetAncestorSet(package[i]));\n+        }\n+    }\n+    // 99 Parents and 1 Child\n+    {\n+        Package package;\n+        CMutableTransaction child;\n+        for (int i{0}; i < 99; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182768590",
      "id" : 1182768590,
      "line" : 137,
      "node_id" : "PRRC_kwDOABII585Gf53O",
      "original_commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "original_line" : 137,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 92,
      "pull_request_review_id" : 1262442548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182768590/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-02T16:46:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182768590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182797698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182797698"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ordering between `package[i]` and `packageified.Txns()[i]` doesn't seem to be stable? The above shuffle is only \"undone\" by sorting by number of in-package ancestors when constructing the `AncestorPackage`, but of course all parents have the same value.",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-05-02T16:45:11Z",
      "diff_hunk" : "@@ -63,10 +87,121 @@ BOOST_FIXTURE_TEST_CASE(package_sanitization_tests, TestChain100Setup)\n     }\n     BOOST_CHECK(package_too_large.size() <= MAX_PACKAGE_COUNT);\n     PackageValidationState state_too_large;\n-    BOOST_CHECK(!CheckPackage(package_too_large, state_too_large));\n+    BOOST_CHECK(!IsPackageWellFormed(package_too_large, state_too_large, /*require_sorted=*/true));\n     BOOST_CHECK_EQUAL(state_too_large.GetResult(), PackageValidationResult::PCKG_POLICY);\n     BOOST_CHECK_EQUAL(state_too_large.GetRejectReason(), \"package-too-large\");\n }\n+BOOST_FIXTURE_TEST_CASE(packageifier_tests, TestChain100Setup)\n+{\n+    CKey placeholder_key;\n+    placeholder_key.MakeNewKey(true);\n+    CScript spk = GetScriptForDestination(PKHash(placeholder_key.GetPubKey()));\n+    FastRandomContext det_rand{true};\n+    // Basic chain of 25 transactions\n+    {\n+        Package package;\n+        CTransactionRef last_tx = m_coinbase_txns[0];\n+        CKey signing_key = coinbaseKey;\n+        for (int i{0}; i < 24; ++i) {\n+            auto tx = MakeTransactionRef(CreateValidMempoolTransaction(last_tx, 0, 0, signing_key, spk, CAmount((49-i) * COIN), false));\n+            package.emplace_back(tx);\n+            last_tx = tx;\n+            if (i == 0) signing_key = placeholder_key;\n+        }\n+        BOOST_CHECK(!IsChildWithParents(package));\n+        BOOST_CHECK(IsAncestorPackage(package));\n+\n+        Package package_copy = package;\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        BOOST_CHECK(IsAncestorPackage(packageified.Txns()));\n+        for (auto i{0}; i < 24; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), i + 1);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(package[i])));\n+        }\n+        for (auto i{0}; i < 10; ++i) packageified.Exclude(package[i]);\n+        packageified.Ban(package[20]);\n+        for (auto i{11}; i < 20; ++i) {\n+            const auto& tx = package[i];\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(tx)->size(), i - 9);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(tx)));\n+        }\n+        for (auto i{20}; i < 24; ++i) {\n+            BOOST_CHECK(!packageified.GetAncestorSet(package[i]));\n+        }\n+    }\n+    // 99 Parents and 1 Child\n+    {\n+        Package package;\n+        CMutableTransaction child;\n+        for (int i{0}; i < 99; ++i) {\n+            auto parent = MakeTransactionRef(CreateValidMempoolTransaction(m_coinbase_txns[i + 1],\n+                                             0, 0, coinbaseKey, spk, CAmount(49 * COIN), false));\n+            package.emplace_back(parent);\n+            child.vin.push_back(CTxIn(COutPoint(parent->GetHash(), 0)));\n+        }\n+        child.vout.push_back(CTxOut(4900 * COIN, spk));\n+        package.push_back(MakeTransactionRef(child));\n+\n+        Package package_copy(package);\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        for (auto i{0}; i < 99; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182797698",
      "id" : 1182797698,
      "line" : 150,
      "node_id" : "PRRC_kwDOABII585GgA-C",
      "original_commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "original_line" : 150,
      "original_position" : 105,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 105,
      "pull_request_review_id" : 1262442548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182797698/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-02T16:46:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182797698",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182968218"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182968218"
         }
      },
      "author_association" : "MEMBER",
      "body" : "under what situations does the \"representative tx\" not get filled, and why is `TX_MISSING_INPUTS` the right value to set?",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-05-02T19:30:26Z",
      "diff_hunk" : "@@ -558,6 +558,18 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Multiple transaction acceptance for transactions guaranteed to be an ancestor package and a CPFP.\n+     * If only 1 transaction exists in subpackage, calls AcceptSingleTransaction() with adjusted\n+     * ATMPArgs to avoid additional package policy restrictions like PackageMempoolChecks() and\n+     * disabled RBF. Also creates a PackageMempoolAcceptResult wrapping the result.\n+     * If multiple transactions exist in subpackage, calls AcceptMultipleTransactions() with the\n+     * provided ATMPArgs. Additionally, if the \"representative tx\" is not present in the result,\n+     * fills it in with TX_MISSING_INPUTS.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182968218",
      "id" : 1182968218,
      "line" : 568,
      "node_id" : "PRRC_kwDOABII585Ggqma",
      "original_commit_id" : "08a07c348d70907951a9225853976f9486665246",
      "original_line" : 568,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 12,
      "pull_request_review_id" : 1409760020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182968218/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-02T19:30:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182968218",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1183794878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183794878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "hmm I think the fuzzer was smart enough to give a coin with the same hash as the txid of a constructed transaction below, built on a different set of ancestors...\r\n\r\nI think hashing these bytes would defeat this since it can't generate a valid tx with that txid?",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-05-03T14:46:47Z",
      "diff_hunk" : "@@ -0,0 +1,52 @@\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+\n+#include <policy/packages.h>\n+\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+FUZZ_TARGET(ancestorpackage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<CTransactionRef> txns_in;\n+    // Avoid repeat coins, as they may cause transactions to conflict\n+    std::set<COutPoint> available_coins;\n+    for (auto i{0}; i < 100; ++i) {\n+        if (auto outpoint{ConsumeDeserializable<COutPoint>(fuzzed_data_provider)}) available_coins.insert(*outpoint);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1183794878",
      "id" : 1183794878,
      "line" : 20,
      "node_id" : "PRRC_kwDOABII585Gj0a-",
      "original_commit_id" : "7fd7cc3502411a523c860400ac9e9a9b3991a872",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/test/fuzz/ancestorpackage.cpp",
      "position" : 20,
      "pull_request_review_id" : 1411070467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183794878/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-03T14:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183794878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1185280732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1185280732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "or to be lazier, just set the initial utxos' prevout.n index to some impossibly high numbers to ever be generated",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-05-04T17:00:18Z",
      "diff_hunk" : "@@ -0,0 +1,52 @@\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+\n+#include <policy/packages.h>\n+\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+FUZZ_TARGET(ancestorpackage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<CTransactionRef> txns_in;\n+    // Avoid repeat coins, as they may cause transactions to conflict\n+    std::set<COutPoint> available_coins;\n+    for (auto i{0}; i < 100; ++i) {\n+        if (auto outpoint{ConsumeDeserializable<COutPoint>(fuzzed_data_provider)}) available_coins.insert(*outpoint);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1185280732",
      "id" : 1185280732,
      "in_reply_to_id" : 1183794878,
      "line" : 20,
      "node_id" : "PRRC_kwDOABII585GpfLc",
      "original_commit_id" : "7fd7cc3502411a523c860400ac9e9a9b3991a872",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/test/fuzz/ancestorpackage.cpp",
      "position" : 20,
      "pull_request_review_id" : 1413526891,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1185280732/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-04T17:00:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1185280732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1187734505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187734505"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this comment becomes a bit disconnected from the logic itself. ",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-05-08T18:04:54Z",
      "diff_hunk" : "@@ -1478,42 +1482,55 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 // parent, and should still be considered.\n                 continue;\n             }\n-            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+            if (wtxid == child->GetWitnessHash()) {\n                 Assume(tx == package.back());\n-                txns_package_eval.push_back(tx);\n                 // Unless we're quitting early, validate the child outside of this loop.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1187734505",
      "id" : 1187734505,
      "line" : 1455,
      "node_id" : "PRRC_kwDOABII585Gy2Pp",
      "original_commit_id" : "dd9d4f6fe86826ef01932734cb108e174c53476e",
      "original_line" : 1487,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 208,
      "pull_request_review_id" : 1417261502,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187734505/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-08T20:32:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187734505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1187848024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187848024"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I know what this means, but kinda... odd that `AncestorPackage` can be `!IsAncestorPackage`",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-05-08T20:09:22Z",
      "diff_hunk" : "@@ -1382,49 +1382,17 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Check that the package is well-formed. If it isn't, we won't try to validate any of the\n     // transactions and thus won't return any MempoolAcceptResults, just a package-wide error.\n-\n     // Context-free package checks.\n-    if (!IsPackageWellFormed(package, package_state_quit_early)) return PackageMempoolAcceptResult(package_state_quit_early, {});\n-\n-    // All transactions in the package must be a parent of the last transaction. This is just an\n-    // opportunity for us to fail fast on a context-free check without taking the mempool lock.\n-    if (!IsChildWithParents(package)) {\n-        package_state_quit_early.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-child-with-parents\");\n+    if (!package.empty() && !IsPackageWellFormed(package, package_state_quit_early, /*require_sorted=*/false)) {\n         return PackageMempoolAcceptResult(package_state_quit_early, {});\n     }\n-\n     AncestorPackage packageified(package);\n-    const auto& child = package.back();\n-    std::unordered_set<uint256, SaltedTxidHasher> unconfirmed_parent_txids;\n-    std::transform(package.cbegin(), package.cend() - 1,\n-                   std::inserter(unconfirmed_parent_txids, unconfirmed_parent_txids.end()),\n-                   [](const auto& tx) { return tx->GetHash(); });\n-\n-    // All child inputs must refer to a preceding package transaction or a confirmed UTXO. The only\n-    // way to verify this is to look up the child's inputs in our current coins view (not including\n-    // mempool), and enforce that all parents not present in the package be available at chain tip.\n-    // Since this check can bring new coins into the coins cache, keep track of these coins and\n-    // uncache them if we don't end up submitting this package to the mempool.\n-    const CCoinsViewCache& coins_tip_cache = m_active_chainstate.CoinsTip();\n-    for (const auto& input : child->vin) {\n-        if (!coins_tip_cache.HaveCoinInCache(input.prevout)) {\n-            args.m_coins_to_uncache.push_back(input.prevout);\n-        }\n-    }\n-    // Using the MemPoolAccept m_view cache allows us to look up these same coins faster later.\n-    // This should be connecting directly to CoinsTip, not to m_viewmempool, because we specifically\n-    // require inputs to be confirmed if they aren't in the package.\n-    m_view.SetBackend(m_active_chainstate.CoinsTip());\n-    const auto package_or_confirmed = [this, &unconfirmed_parent_txids](const auto& input) {\n-         return unconfirmed_parent_txids.count(input.prevout.hash) > 0 || m_view.HaveCoin(input.prevout);\n-    };\n-    if (!std::all_of(child->vin.cbegin(), child->vin.cend(), package_or_confirmed)) {\n-        package_state_quit_early.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-child-with-unconfirmed-parents\");\n+    if (!packageified.IsAncestorPackage()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1187848024",
      "id" : 1187848024,
      "line" : 1390,
      "node_id" : "PRRC_kwDOABII585GzR9Y",
      "original_commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "original_line" : 1390,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 125,
      "pull_request_review_id" : 1417261502,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187848024/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-08T20:32:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187848024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1187856431"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187856431"
         }
      },
      "author_association" : "MEMBER",
      "body" : "should just leave this example in in the positive sense of it being accepted?",
      "commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "created_at" : "2023-05-08T20:16:35Z",
      "diff_hunk" : "@@ -325,18 +324,11 @@ def test_submit_child_with_parents(self, num_parents, partial_submit):\n         self.generate(node, 1)\n \n     def test_submitpackage(self):\n-        node = self.nodes[0]\n-\n         self.log.info(\"Submitpackage valid packages with 1 child and some number of parents\")\n         for num_parents in [1, 2, 24]:\n             self.test_submit_child_with_parents(num_parents, False)\n             self.test_submit_child_with_parents(num_parents, True)\n \n-        self.log.info(\"Submitpackage only allows packages of 1 child with its parents\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1187856431",
      "id" : 1187856431,
      "line" : 335,
      "node_id" : "PRRC_kwDOABII585GzUAv",
      "original_commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "original_line" : 335,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : 19,
      "pull_request_review_id" : 1417261502,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187856431/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-08T20:32:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187856431",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190437947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437947"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Re-added",
      "commit_id" : "0cdb25a2392328afaad7651a0a407396b1922f17",
      "created_at" : "2023-05-10T22:12:26Z",
      "diff_hunk" : "@@ -325,18 +324,11 @@ def test_submit_child_with_parents(self, num_parents, partial_submit):\n         self.generate(node, 1)\n \n     def test_submitpackage(self):\n-        node = self.nodes[0]\n-\n         self.log.info(\"Submitpackage valid packages with 1 child and some number of parents\")\n         for num_parents in [1, 2, 24]:\n             self.test_submit_child_with_parents(num_parents, False)\n             self.test_submit_child_with_parents(num_parents, True)\n \n-        self.log.info(\"Submitpackage only allows packages of 1 child with its parents\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190437947",
      "id" : 1190437947,
      "in_reply_to_id" : 1187856431,
      "line" : 335,
      "node_id" : "PRRC_kwDOABII585G9KQ7",
      "original_commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "original_line" : 335,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "test/functional/rpc_packages.py",
      "position" : 19,
      "pull_request_review_id" : 1421439448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437947/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-10T22:12:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190437970"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437970"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah. Added some docs to the class (also mentioned BIP331) so maybe it's more clear? I used to call it `Packageifier` because it can potentially build a package out of any random list of transactions. But then it's weird because we packageify a `Package`. Open to naming improvements ð ",
      "commit_id" : "0cdb25a2392328afaad7651a0a407396b1922f17",
      "created_at" : "2023-05-10T22:12:28Z",
      "diff_hunk" : "@@ -1382,49 +1382,17 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Check that the package is well-formed. If it isn't, we won't try to validate any of the\n     // transactions and thus won't return any MempoolAcceptResults, just a package-wide error.\n-\n     // Context-free package checks.\n-    if (!IsPackageWellFormed(package, package_state_quit_early)) return PackageMempoolAcceptResult(package_state_quit_early, {});\n-\n-    // All transactions in the package must be a parent of the last transaction. This is just an\n-    // opportunity for us to fail fast on a context-free check without taking the mempool lock.\n-    if (!IsChildWithParents(package)) {\n-        package_state_quit_early.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-child-with-parents\");\n+    if (!package.empty() && !IsPackageWellFormed(package, package_state_quit_early, /*require_sorted=*/false)) {\n         return PackageMempoolAcceptResult(package_state_quit_early, {});\n     }\n-\n     AncestorPackage packageified(package);\n-    const auto& child = package.back();\n-    std::unordered_set<uint256, SaltedTxidHasher> unconfirmed_parent_txids;\n-    std::transform(package.cbegin(), package.cend() - 1,\n-                   std::inserter(unconfirmed_parent_txids, unconfirmed_parent_txids.end()),\n-                   [](const auto& tx) { return tx->GetHash(); });\n-\n-    // All child inputs must refer to a preceding package transaction or a confirmed UTXO. The only\n-    // way to verify this is to look up the child's inputs in our current coins view (not including\n-    // mempool), and enforce that all parents not present in the package be available at chain tip.\n-    // Since this check can bring new coins into the coins cache, keep track of these coins and\n-    // uncache them if we don't end up submitting this package to the mempool.\n-    const CCoinsViewCache& coins_tip_cache = m_active_chainstate.CoinsTip();\n-    for (const auto& input : child->vin) {\n-        if (!coins_tip_cache.HaveCoinInCache(input.prevout)) {\n-            args.m_coins_to_uncache.push_back(input.prevout);\n-        }\n-    }\n-    // Using the MemPoolAccept m_view cache allows us to look up these same coins faster later.\n-    // This should be connecting directly to CoinsTip, not to m_viewmempool, because we specifically\n-    // require inputs to be confirmed if they aren't in the package.\n-    m_view.SetBackend(m_active_chainstate.CoinsTip());\n-    const auto package_or_confirmed = [this, &unconfirmed_parent_txids](const auto& input) {\n-         return unconfirmed_parent_txids.count(input.prevout.hash) > 0 || m_view.HaveCoin(input.prevout);\n-    };\n-    if (!std::all_of(child->vin.cbegin(), child->vin.cend(), package_or_confirmed)) {\n-        package_state_quit_early.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-child-with-unconfirmed-parents\");\n+    if (!packageified.IsAncestorPackage()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190437970",
      "id" : 1190437970,
      "in_reply_to_id" : 1187848024,
      "line" : 1398,
      "node_id" : "PRRC_kwDOABII585G9KRS",
      "original_commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "original_line" : 1398,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 145,
      "pull_request_review_id" : 1421439477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437970/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-10T22:12:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437970",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438085"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438085"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Elaborated on the comment, hopefully it's better now",
      "commit_id" : "0cdb25a2392328afaad7651a0a407396b1922f17",
      "created_at" : "2023-05-10T22:12:42Z",
      "diff_hunk" : "@@ -1478,42 +1482,55 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 // parent, and should still be considered.\n                 continue;\n             }\n-            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+            if (wtxid == child->GetWitnessHash()) {\n                 Assume(tx == package.back());\n-                txns_package_eval.push_back(tx);\n                 // Unless we're quitting early, validate the child outside of this loop.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438085",
      "id" : 1190438085,
      "in_reply_to_id" : 1187734505,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585G9KTF",
      "original_commit_id" : "dd9d4f6fe86826ef01932734cb108e174c53476e",
      "original_line" : 1487,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1421439641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438085/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-10T22:12:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438085",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438226"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I think hashing these bytes would defeat this since it can't generate a valid tx with that txid?\r\n\r\nDid this one, thanks ð ",
      "commit_id" : "0cdb25a2392328afaad7651a0a407396b1922f17",
      "created_at" : "2023-05-10T22:12:59Z",
      "diff_hunk" : "@@ -0,0 +1,52 @@\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+\n+#include <policy/packages.h>\n+\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+FUZZ_TARGET(ancestorpackage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<CTransactionRef> txns_in;\n+    // Avoid repeat coins, as they may cause transactions to conflict\n+    std::set<COutPoint> available_coins;\n+    for (auto i{0}; i < 100; ++i) {\n+        if (auto outpoint{ConsumeDeserializable<COutPoint>(fuzzed_data_provider)}) available_coins.insert(*outpoint);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438226",
      "id" : 1190438226,
      "in_reply_to_id" : 1183794878,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585G9KVS",
      "original_commit_id" : "7fd7cc3502411a523c860400ac9e9a9b3991a872",
      "original_line" : 20,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/test/fuzz/ancestorpackage.cpp",
      "position" : null,
      "pull_request_review_id" : 1421439847,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438226/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-10T22:12:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Elaborated",
      "commit_id" : "0cdb25a2392328afaad7651a0a407396b1922f17",
      "created_at" : "2023-05-10T22:13:07Z",
      "diff_hunk" : "@@ -558,6 +558,18 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Multiple transaction acceptance for transactions guaranteed to be an ancestor package and a CPFP.\n+     * If only 1 transaction exists in subpackage, calls AcceptSingleTransaction() with adjusted\n+     * ATMPArgs to avoid additional package policy restrictions like PackageMempoolChecks() and\n+     * disabled RBF. Also creates a PackageMempoolAcceptResult wrapping the result.\n+     * If multiple transactions exist in subpackage, calls AcceptMultipleTransactions() with the\n+     * provided ATMPArgs. Additionally, if the \"representative tx\" is not present in the result,\n+     * fills it in with TX_MISSING_INPUTS.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438295",
      "id" : 1190438295,
      "in_reply_to_id" : 1182968218,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585G9KWX",
      "original_commit_id" : "08a07c348d70907951a9225853976f9486665246",
      "original_line" : 568,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1421439940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438295/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-10T22:13:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438618"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to always use `package[i]`, and added a comment about this unstable sort",
      "commit_id" : "0cdb25a2392328afaad7651a0a407396b1922f17",
      "created_at" : "2023-05-10T22:13:42Z",
      "diff_hunk" : "@@ -63,10 +87,121 @@ BOOST_FIXTURE_TEST_CASE(package_sanitization_tests, TestChain100Setup)\n     }\n     BOOST_CHECK(package_too_large.size() <= MAX_PACKAGE_COUNT);\n     PackageValidationState state_too_large;\n-    BOOST_CHECK(!CheckPackage(package_too_large, state_too_large));\n+    BOOST_CHECK(!IsPackageWellFormed(package_too_large, state_too_large, /*require_sorted=*/true));\n     BOOST_CHECK_EQUAL(state_too_large.GetResult(), PackageValidationResult::PCKG_POLICY);\n     BOOST_CHECK_EQUAL(state_too_large.GetRejectReason(), \"package-too-large\");\n }\n+BOOST_FIXTURE_TEST_CASE(packageifier_tests, TestChain100Setup)\n+{\n+    CKey placeholder_key;\n+    placeholder_key.MakeNewKey(true);\n+    CScript spk = GetScriptForDestination(PKHash(placeholder_key.GetPubKey()));\n+    FastRandomContext det_rand{true};\n+    // Basic chain of 25 transactions\n+    {\n+        Package package;\n+        CTransactionRef last_tx = m_coinbase_txns[0];\n+        CKey signing_key = coinbaseKey;\n+        for (int i{0}; i < 24; ++i) {\n+            auto tx = MakeTransactionRef(CreateValidMempoolTransaction(last_tx, 0, 0, signing_key, spk, CAmount((49-i) * COIN), false));\n+            package.emplace_back(tx);\n+            last_tx = tx;\n+            if (i == 0) signing_key = placeholder_key;\n+        }\n+        BOOST_CHECK(!IsChildWithParents(package));\n+        BOOST_CHECK(IsAncestorPackage(package));\n+\n+        Package package_copy = package;\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        BOOST_CHECK(IsAncestorPackage(packageified.Txns()));\n+        for (auto i{0}; i < 24; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), i + 1);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(package[i])));\n+        }\n+        for (auto i{0}; i < 10; ++i) packageified.Exclude(package[i]);\n+        packageified.Ban(package[20]);\n+        for (auto i{11}; i < 20; ++i) {\n+            const auto& tx = package[i];\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(tx)->size(), i - 9);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(tx)));\n+        }\n+        for (auto i{20}; i < 24; ++i) {\n+            BOOST_CHECK(!packageified.GetAncestorSet(package[i]));\n+        }\n+    }\n+    // 99 Parents and 1 Child\n+    {\n+        Package package;\n+        CMutableTransaction child;\n+        for (int i{0}; i < 99; ++i) {\n+            auto parent = MakeTransactionRef(CreateValidMempoolTransaction(m_coinbase_txns[i + 1],\n+                                             0, 0, coinbaseKey, spk, CAmount(49 * COIN), false));\n+            package.emplace_back(parent);\n+            child.vin.push_back(CTxIn(COutPoint(parent->GetHash(), 0)));\n+        }\n+        child.vout.push_back(CTxOut(4900 * COIN, spk));\n+        package.push_back(MakeTransactionRef(child));\n+\n+        Package package_copy(package);\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        for (auto i{0}; i < 99; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438618",
      "id" : 1190438618,
      "in_reply_to_id" : 1182797698,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585G9Kba",
      "original_commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "original_line" : 155,
      "original_position" : 105,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 110,
      "pull_request_review_id" : 1421440401,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438618/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-10T22:13:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438675"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Aha, thanks!",
      "commit_id" : "0cdb25a2392328afaad7651a0a407396b1922f17",
      "created_at" : "2023-05-10T22:13:49Z",
      "diff_hunk" : "@@ -39,6 +39,30 @@ inline CTransactionRef create_placeholder_tx(size_t num_inputs, size_t num_outpu\n     return MakeTransactionRef(mtx);\n }\n \n+// Context-free check that a package only contains a tx (the last tx in the package) with its\n+// ancestors. Not all of the tx's ancestors need to be present.\n+bool IsAncestorPackage(const Package& package)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438675",
      "id" : 1190438675,
      "in_reply_to_id" : 1182761583,
      "line" : 44,
      "node_id" : "PRRC_kwDOABII585G9KcT",
      "original_commit_id" : "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "original_line" : 44,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 6,
      "pull_request_review_id" : 1421440493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438675/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-10T22:13:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]
