[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11778435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11778435"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please don't use double conversions in places that currently use integer arithmetic.\nWe want to avoid using doubles wherever possible.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-18T17:00:39Z",
      "diff_hunk" : "@@ -731,7 +731,7 @@ void CoinControlDialog::updateView()\n \n             // amount\n             itemOutput->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, out.tx->vout[out.i].nValue));\n-            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n+            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(EncodeDouble(out.tx->vout[out.i].nValue.ToDouble())), 20, \" \")); // padding so that sorting works correctly",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11778435",
      "id" : 11778435,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzc4NDM1",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/qt/coincontroldialog.cpp",
      "position" : 74,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11778435/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11778435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To be clear, there are _a lot_ of changed lines across 64 files. But that is rather the point of this pull request - any side chain that changes the type for representing money from int64_t to something else has to change all these lines, thereby making it more difficult to share patches or rebase to keep the side chain up to date.\n\nOne of the few user visible changes that result from this is the use of strings instead of integers or doubles in the JSON-RPC.\n",
      "created_at" : "2014-04-18T17:01:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40824711",
      "id" : 40824711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODI0NzEx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40824711/reactions"
      },
      "updated_at" : "2014-04-18T17:01:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40824711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11778479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11778479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-18T17:01:59Z",
      "diff_hunk" : "@@ -158,7 +165,7 @@ class CTxOut\n         // need a CTxIn of at least 148 bytes to spend,\n         // so dust is a txout less than 546 satoshis \n         // with default nMinRelayTxFee.\n-        return ((nValue*1000)/(3*((int)GetSerializeSize(SER_DISK,0)+148)) < nMinRelayTxFee);\n+        return nValue.ToDouble() * (1000.0/3.0) / (GetSerializeSize(SER_DISK,0)+148) < nMinRelayTxFee.ToDouble();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11778479",
      "id" : 11778479,
      "line" : 167,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzc4NDc5",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/core.h",
      "position" : 54,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11778479/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11778479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11778610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11778610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it is better to keep the behavior consistent with uint64_t here.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-18T17:05:57Z",
      "diff_hunk" : "@@ -0,0 +1,86 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <stdint.h> // for int64_t\n+#include <string>\n+\n+#include \"money.h\"\n+#include \"util.h\"\n+\n+CMoney CMoney::FromString(const char* pszIn)\n+{\n+    std::string strWhole;\n+    CMoney nUnits = 0;\n+    const char* p = pszIn;\n+    while (isspace(*p))\n+        p++;\n+    for (; *p; p++)\n+    {\n+        if (*p == '.')\n+        {\n+            p++;\n+            int64_t nMult = CENT*10;\n+            while (isdigit(*p) && (nMult > 0))\n+            {\n+                nUnits += nMult * (*p++ - '0');\n+                nMult /= 10;\n+            }\n+            break;\n+        }\n+        if (isspace(*p))\n+            break;\n+        if (!isdigit(*p))\n+            throw invalid_money_format(pszIn);\n+        strWhole.insert(strWhole.end(), *p);\n+    }\n+    for (; *p; p++)\n+        if (!isspace(*p))\n+            throw invalid_money_format(pszIn);\n+    if (strWhole.size() > 10) // guard against 63 bit overflow\n+        throw money_overflow(pszIn);\n+    if (nUnits < 0 || nUnits > COIN)\n+        throw money_overflow(pszIn);\n+    int64_t nWhole = atoi64(strWhole);\n+    CMoney nValue = nWhole*COIN + nUnits;\n+\n+    return nValue;\n+}\n+\n+std::string CMoney::ToString(bool fPlus) const\n+{\n+    static const int64_t COIN_I64 = COIN;\n+    // Note: not using straight sprintf here because we do NOT want\n+    // localized number formatting.\n+    int64_t n_abs = (n > 0 ? n : -n);\n+    int64_t quotient = n_abs / COIN_I64;\n+    int64_t remainder = n_abs % COIN_I64;\n+    std::string str = strprintf(\"%d.%08d\", quotient, remainder);\n+\n+    // Right-trim excess zeros before the decimal point:\n+    int nTrim = 0;\n+    for (int i = str.size()-1; (str[i] == '0' && isdigit(str[i-2])); --i)\n+        ++nTrim;\n+    if (nTrim)\n+        str.erase(str.size()-nTrim, nTrim);\n+\n+    if (n < 0)\n+        str.insert((unsigned int)0, 1, '-');\n+    else if (fPlus && n > 0)\n+        str.insert((unsigned int)0, 1, '+');\n+    return str;\n+}\n+\n+const CMoney operator/(const CMoney& a, const CMoney& b)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11778610",
      "id" : 11778610,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzc4NjEw",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/money.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11778610/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11778610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Couldn't you accomplish mostly the same (but easier to review that behaviour is unchanged) with `typedef uint64_t CMoney` ?\n\nSure, for other chains the definition of CMoney may be more complex, but that's not our problem.\n",
      "created_at" : "2014-04-18T17:07:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40825133",
      "id" : 40825133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODI1MTMz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40825133/reactions"
      },
      "updated_at" : "2014-04-18T17:08:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40825133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj, no all the code which assumes CMoney is an integer would have to change (and there's quite a bit of that). This pull request only allows a specific subset of arithmetic functionality, and requires explicit casts (with rounding modes) to treat the money value as anything else. Explicit is better than implicit, especially when the point is to maintain code compatibility across implementations with different underlying types.\n",
      "created_at" : "2014-04-18T18:06:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40830227",
      "id" : 40830227,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODMwMjI3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40830227/reactions"
      },
      "updated_at" : "2014-04-18T18:06:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40830227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11783514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11783514"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This code necessarily has to have some sort of inexact conversion. That's rather the point -- we shouldn't be assuming that money calculations are integer arithmetic! So assume that CMoney is implemented using some sort of exact rational arithmetic bignum library. How do we then write code that converts CMoney into an (compact!) ASCII-comparable string, in a way that is code-compatible regardless of the underlying integer type?\n\nA reasonable compromise is what is implemented here -- reduce, if necessary, to the precision of a double and then use the newly added `EncodeDouble` to convert _that_ into a sortable `uint64_t`. Note that this is 100% consistent with current behavior in bitcoin - `double` provides 2^53 bits of precision, where `MoneyRange` constrains maximum value to less than 2^52.\n\nI respect the gut-instinct \"eww\" attached to floating point conversion. But in this case it's actually a reasonable compromise.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-18T19:15:30Z",
      "diff_hunk" : "@@ -731,7 +731,7 @@ void CoinControlDialog::updateView()\n \n             // amount\n             itemOutput->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, out.tx->vout[out.i].nValue));\n-            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n+            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(EncodeDouble(out.tx->vout[out.i].nValue.ToDouble())), 20, \" \")); // padding so that sorting works correctly",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11783514",
      "id" : 11783514,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzgzNTE0",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/qt/coincontroldialog.cpp",
      "position" : 74,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11783514/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11783514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11783560"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11783560"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Whoops, this was left over from a previous version of the patch that didn't have operator/() implemented for CMoney. There's some talk on IRC about getting rid of operator*() and operator/(), so the problem still remains however. This code will get reworked as part of that, if possible.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-18T19:17:18Z",
      "diff_hunk" : "@@ -158,7 +165,7 @@ class CTxOut\n         // need a CTxIn of at least 148 bytes to spend,\n         // so dust is a txout less than 546 satoshis \n         // with default nMinRelayTxFee.\n-        return ((nValue*1000)/(3*((int)GetSerializeSize(SER_DISK,0)+148)) < nMinRelayTxFee);\n+        return nValue.ToDouble() * (1000.0/3.0) / (GetSerializeSize(SER_DISK,0)+148) < nMinRelayTxFee.ToDouble();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11783560",
      "id" : 11783560,
      "line" : 167,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzgzNTYw",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/core.h",
      "position" : 54,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11783560/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11783560",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11783747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11783747"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Consistent in what way? With division resulting in truncation of sub-satoshi value? That doesn't make sense when CMoney is changed to use some divisible representation.\n\nI've audited the current code base. Nowhere is there consensus critical division going on, and I believe only the user-visible effects would be rounding in the `IsDust` calculation (see above).\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-18T19:23:06Z",
      "diff_hunk" : "@@ -0,0 +1,86 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <stdint.h> // for int64_t\n+#include <string>\n+\n+#include \"money.h\"\n+#include \"util.h\"\n+\n+CMoney CMoney::FromString(const char* pszIn)\n+{\n+    std::string strWhole;\n+    CMoney nUnits = 0;\n+    const char* p = pszIn;\n+    while (isspace(*p))\n+        p++;\n+    for (; *p; p++)\n+    {\n+        if (*p == '.')\n+        {\n+            p++;\n+            int64_t nMult = CENT*10;\n+            while (isdigit(*p) && (nMult > 0))\n+            {\n+                nUnits += nMult * (*p++ - '0');\n+                nMult /= 10;\n+            }\n+            break;\n+        }\n+        if (isspace(*p))\n+            break;\n+        if (!isdigit(*p))\n+            throw invalid_money_format(pszIn);\n+        strWhole.insert(strWhole.end(), *p);\n+    }\n+    for (; *p; p++)\n+        if (!isspace(*p))\n+            throw invalid_money_format(pszIn);\n+    if (strWhole.size() > 10) // guard against 63 bit overflow\n+        throw money_overflow(pszIn);\n+    if (nUnits < 0 || nUnits > COIN)\n+        throw money_overflow(pszIn);\n+    int64_t nWhole = atoi64(strWhole);\n+    CMoney nValue = nWhole*COIN + nUnits;\n+\n+    return nValue;\n+}\n+\n+std::string CMoney::ToString(bool fPlus) const\n+{\n+    static const int64_t COIN_I64 = COIN;\n+    // Note: not using straight sprintf here because we do NOT want\n+    // localized number formatting.\n+    int64_t n_abs = (n > 0 ? n : -n);\n+    int64_t quotient = n_abs / COIN_I64;\n+    int64_t remainder = n_abs % COIN_I64;\n+    std::string str = strprintf(\"%d.%08d\", quotient, remainder);\n+\n+    // Right-trim excess zeros before the decimal point:\n+    int nTrim = 0;\n+    for (int i = str.size()-1; (str[i] == '0' && isdigit(str[i-2])); --i)\n+        ++nTrim;\n+    if (nTrim)\n+        str.erase(str.size()-nTrim, nTrim);\n+\n+    if (n < 0)\n+        str.insert((unsigned int)0, 1, '-');\n+    else if (fPlus && n > 0)\n+        str.insert((unsigned int)0, 1, '+');\n+    return str;\n+}\n+\n+const CMoney operator/(const CMoney& a, const CMoney& b)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11783747",
      "id" : 11783747,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzgzNzQ3",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/money.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11783747/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11783747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm fine with a type to encapsulate the representation and arithmetic of monetary amounts, but does it really need to deal with conversion from/to human readable format too?\n\nEspecially since it's depended on by core, that feels like functionality that belongs on a higher level. Leaving that in util makes the impact of the patch smaller too.\n",
      "created_at" : "2014-04-18T20:41:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40842568",
      "id" : 40842568,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODQyNTY4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40842568/reactions"
      },
      "updated_at" : "2014-04-18T20:43:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40842568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11786105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11786105"
         }
      },
      "author_association" : "NONE",
      "body" : "But introducing double conversion is problematic for all coins that use more than 53 bits of precision, increasing the friction in sharing code and submitting code upstream. I think there are more coins which use integer representation with values beyond 2^53 than there are coins using alternative datatypes.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-18T20:42:44Z",
      "diff_hunk" : "@@ -731,7 +731,7 @@ void CoinControlDialog::updateView()\n \n             // amount\n             itemOutput->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, out.tx->vout[out.i].nValue));\n-            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n+            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(EncodeDouble(out.tx->vout[out.i].nValue.ToDouble())), 20, \" \")); // padding so that sorting works correctly",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11786105",
      "id" : 11786105,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzg2MTA1",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/qt/coincontroldialog.cpp",
      "position" : 74,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11786105/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11786105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4348296?v=4",
         "events_url" : "https://api.github.com/users/leofidus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leofidus/followers",
         "following_url" : "https://api.github.com/users/leofidus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leofidus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leofidus",
         "id" : 4348296,
         "login" : "leofidus",
         "node_id" : "MDQ6VXNlcjQzNDgyOTY=",
         "organizations_url" : "https://api.github.com/users/leofidus/orgs",
         "received_events_url" : "https://api.github.com/users/leofidus/received_events",
         "repos_url" : "https://api.github.com/users/leofidus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leofidus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leofidus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leofidus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11786866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11786866"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The only metric of \"more coins (existing)\" that I think we should care about here is how much useful code and fixes their contributors have submitted upstream.  By that metric no such other coins exist, AFAIK.\n\nReally I don't care for this whole pull as a compatibility with other forks thing: Its interesting upstream because it increases type-safety for values.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-18T21:04:19Z",
      "diff_hunk" : "@@ -731,7 +731,7 @@ void CoinControlDialog::updateView()\n \n             // amount\n             itemOutput->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, out.tx->vout[out.i].nValue));\n-            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n+            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(EncodeDouble(out.tx->vout[out.i].nValue.ToDouble())), 20, \" \")); // padding so that sorting works correctly",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11786866",
      "id" : 11786866,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzg2ODY2",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/qt/coincontroldialog.cpp",
      "position" : 74,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11786866/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11786866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK from me. I don't think this passes the cost-to-review-for-correctness versus potential-benefit-for-Bitcoin test.\n",
      "created_at" : "2014-04-18T21:24:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40845857",
      "id" : 40845857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODQ1ODU3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40845857/reactions"
      },
      "updated_at" : "2014-04-18T21:24:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40845857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11788020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11788020"
         }
      },
      "author_association" : "NONE",
      "body" : "I agree that the change has value for Bitcoin, I'm simply saying that because interoperability is the stated goal of the PR it looks preferable not to break existing interoperability.\n\nIt seems more reasonable to me to use the much simpler\n\n```\nout.tx->vout[out.i].nValue.ToInt64()\n```\n\ninstead of\n\n```\nEncodeDouble(out.tx->vout[out.i].nValue.ToDouble())\n```\n\nin Bitcoin and use the more complicated version only in implementations which actually implement sub-satoshi precision. That would also remove the entire EncodeDouble function from Bitcoin code, reducing the overall code size.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-18T21:37:47Z",
      "diff_hunk" : "@@ -731,7 +731,7 @@ void CoinControlDialog::updateView()\n \n             // amount\n             itemOutput->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, out.tx->vout[out.i].nValue));\n-            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n+            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(EncodeDouble(out.tx->vout[out.i].nValue.ToDouble())), 20, \" \")); // padding so that sorting works correctly",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11788020",
      "id" : 11788020,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzg4MDIw",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/qt/coincontroldialog.cpp",
      "position" : 74,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11788020/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11788020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4348296?v=4",
         "events_url" : "https://api.github.com/users/leofidus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leofidus/followers",
         "following_url" : "https://api.github.com/users/leofidus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leofidus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leofidus",
         "id" : 4348296,
         "login" : "leofidus",
         "node_id" : "MDQ6VXNlcjQzNDgyOTY=",
         "organizations_url" : "https://api.github.com/users/leofidus/orgs",
         "received_events_url" : "https://api.github.com/users/leofidus/received_events",
         "repos_url" : "https://api.github.com/users/leofidus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leofidus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leofidus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leofidus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11791855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11791855"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@gmaxwell, it's hard for there to be meaningful contributions back when most alts are stuck on ancient versions of the code base! But even without contribution back, minimizing the code difference between alts makes it easier for maintainers to rebase against newer versions of Bitcoin Core, which increases the security of the greater crypto currency ecosystem. But as you say, the greatest contribution to bitcoin specifically is enforcing some type safety for monetary values.\n\n@leofidus, I'm not sure you understand what this change does or the context in which the code executes, as using `ToInt64()` would not fix the problem and would in fact make it worse. That's alright; let's walk through it:\n\nThe original line of code above fills in a hidden column with the left-padded string representation of the output's value, in units of 1e-8 bitcoin. So for example, three outputs with the values 5btc, 0.2btc, and 1mbtc would have the following values for this field:\n\n```\n000000500000000\n000000020000000\n000000000100000\n```\n\nWhen you request a numeric sort based on the output value field, what it actually does is do a string sort over this hidden field, which is why the left-padding is necessary. (I've used '0' as the padding character just for clarity's sake on Github, whereas the code actually uses ' ' [space].)\n\nNow there are two Bitcoin-specific assumptions here: (1) monetary values are integers, and (2) no output will ever have more than 15 digits of absolute precision. These are not universally valid assumptions, and either or both of them might be invalidated on a side chain. Side chains don't exist yet so we must look to alts for examples: Dogecoin and Freicoin invalidate one and both, respectfully.\n\nOne of the goals of this pull request is to minimize the number of lines of code which are sensitive to these assumptions, and to make the format assumptions explicit when it is necessary (e.g. `ToInt64()`). So if we do not assume that CMoney is implemented with an integer, and that the dynamic range of monetary values may be more than 15 decimal digits on an absolute scale, how do we still carry out this string-sorting hack for the GUI tables?\n\nWhat the updated code does is use another cool little hack: it turns out that because IEEE floating point is designed in a particular way, you can sort non-negative floats or doubles as if they were integers and get the same result. There's a little bit of bit-flipping magic that makes this work for negative values as well, and that's what `EncodeDouble` does. So the new code does this:\n1. It converts from whatever the native CMoney format is to 64-bit IEEE floating point, in the process rounding to approximately 16 decimal digits of precision - this is safe to do for bitcoin values in non-consensus code, since `MoneyRange` restrictions ensure this is a 1:1 function with stable round-trip transformations, at least without FPU bugs or weird, atypical, non-default compiler optimizations.\n2. It uses the new utility function `EncodeDouble` to map the `double` to `uint64_t` in another 1:1 transformation, doing some bit-flipping magic so for any non-NaN floating point values a and b, if `a < b` then `EncodeDouble(a) < EncodeDouble(b)`.\n3. It then does the exact same print-integer-with-left-padding trick to fill the column, except it pads to 20 bytes instead of 15 to capture the entire range of `uint64_t`.\n\nFor the above values, it results in the following columns:\n\n```\n13960540253593796608\n13939505956204314624\n13904980397738950656\n```\n\nIt's less human readable, but it's a hidden field and an implementation detail. Note that the values are still in descending order. The end result is that no matter the internal representation of CMoney, the hidden column will be filled with a twenty-character string representation of the value, which preserves sorting order for up to 16 decimal digits of _relative_ precision. This is in every way better than the current implementation, and fully generic - it does not care what internal representation is used.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-19T01:47:15Z",
      "diff_hunk" : "@@ -731,7 +731,7 @@ void CoinControlDialog::updateView()\n \n             // amount\n             itemOutput->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, out.tx->vout[out.i].nValue));\n-            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n+            itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(EncodeDouble(out.tx->vout[out.i].nValue.ToDouble())), 20, \" \")); // padding so that sorting works correctly",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11791855",
      "id" : 11791855,
      "line" : 734,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzkxODU1",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/qt/coincontroldialog.cpp",
      "position" : 74,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11791855/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11791855",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa util.h is loaded by core.cpp. I have no problem reverting that change, if that is the consensus decision. I just thought it was cleaner this way.\n",
      "created_at" : "2014-04-19T02:03:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40858061",
      "id" : 40858061,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODU4MDYx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40858061/reactions"
      },
      "updated_at" : "2014-04-19T02:03:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40858061",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11791919"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11791919"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Actually I'm going to push back on this one. Now that I've eliminated division of monetary values, this is not so trivial to implement. You have your choice of `ToInt64()` and `ToDouble()`, and assuming no bias about the underlying format I would argue that `ToDouble()` is the correct choice here - keep as many bits of precision for the comparison as possible.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-04-19T02:06:31Z",
      "diff_hunk" : "@@ -158,7 +165,7 @@ class CTxOut\n         // need a CTxIn of at least 148 bytes to spend,\n         // so dust is a txout less than 546 satoshis \n         // with default nMinRelayTxFee.\n-        return ((nValue*1000)/(3*((int)GetSerializeSize(SER_DISK,0)+148)) < nMinRelayTxFee);\n+        return nValue.ToDouble() * (1000.0/3.0) / (GetSerializeSize(SER_DISK,0)+148) < nMinRelayTxFee.ToDouble();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r11791919",
      "id" : 11791919,
      "line" : 167,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzkxOTE5",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/core.h",
      "position" : 54,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11791919/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T00:49:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/11791919",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@gavinandresen is there anything I could do along the lines of additional tests to make it easier to be confident that it's correct?\n",
      "created_at" : "2014-04-19T04:32:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40860516",
      "id" : 40860516,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODYwNTE2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40860516/reactions"
      },
      "updated_at" : "2014-04-19T04:52:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40860516",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "How far do we want to go to facilitate altcoins? Well, I'm fine if it is a matter of renaming types, but not if it gives us more maintenance or testing overhead.\n\nHence I'd suggest splitting this up.\n- I like the idea of using a \"money\" type. Changing this throughout the source code will result in a lot of line changes, but is easy to review. Defining a typedef for `uint64_t` would be the straightforward way. This will already do most of the work of making code easier to port over without adding code.\n- Changing around the edge-cases where CMoney is treated as int: we don't _need_ to change these in Bitcoin. If it's a small change in the GUI code, I'm fine with it if it makes it easier to use the GUI for altcoins. **But** in the core/ consensus code: keep the code as-is. Altcoins most likely don't want to literally take changes there over anyway.\n\nI also agree with @sipa. Don't put formatting on the number type. I'm in favor of separating data and operations on it.\n",
      "created_at" : "2014-04-19T06:36:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40862444",
      "id" : 40862444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODYyNDQ0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40862444/reactions"
      },
      "updated_at" : "2014-04-19T06:38:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40862444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj I think you are underestimating the importance of semantic explicitness and type safety here. A simple `typedef int64_t CMoney` would leave a half-dozen lines of code scattered around the project which have in-built assumptions about the integer properties of the money type, and worse leave open the possibility of new hidden dependencies being introduced undetected. That's the key aspect of this pull request, and really the only thing which makes it interesting: adding a semantically explicit, generic, and type checked API as an interface to the underlying money type. I could split it into separate commits if you it is deemed necessary for review.\n\nRegarding formatting, I'm not sure I understand. Aren't `FormatMoney` and `ParseMoney` the exceptions in the code base? Most other types have a `ToString` method and use serialization methods for reading data structures out of streams -- `ParseMoney` isn't the same thing exactly, but the analogy is close. Having `toString()` and static `fromString()` methods is generally good C++ conventions, and a common pattern in frameworks like Qt.\n\nMaybe it does belong in `util.cpp`. I just want to understand the reasoning better.\n",
      "created_at" : "2014-04-19T07:54:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40863488",
      "id" : 40863488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODYzNDg4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40863488/reactions"
      },
      "updated_at" : "2014-04-19T07:54:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40863488",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A ToString() method is useful for debugging, but I don't think it should be used for interaction with humans. Even for conversion of data types like CKey or CKeyId there is a separate module (base58) for conversion to the human form.\n\nWe're not quite there yet, but I like to see the code evolve to a point where we can split off a \"core data structures\" library, which only contains definitions for structures used by the protocol and their serializations. That includes serialize, core, protocol, just the data types from script (not verification/signing), and if committed UTXOs become normative, also part of coins. No logging, no fee policy constants, and preferably no dependencies at all.\n",
      "created_at" : "2014-04-19T08:57:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40864463",
      "id" : 40864463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODY0NDYz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40864463/reactions"
      },
      "updated_at" : "2014-04-19T08:57:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40864463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@maaku I'll only accept this if the introduced money type has _exactly_ the same behavior as int64_t. Defining division to be different, for example, or rounding, is not acceptable. If you insist on using a class that's possible (and can also be straightforward), but it's somewhat harder to verify than a simple typedef. \n\nHaving a few lines scattered around the code that assume that the money type is integer is fine. For bitcoin this will never change. I'm sorry to say, but making it easier for altcoins to merge our code changes is not high on my priority list. I'm okay with renaming types but not anything that has more risk or stresses our already very limited testing and review capacity.\n",
      "created_at" : "2014-04-19T11:11:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40866928",
      "id" : 40866928,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODY2OTI4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40866928/reactions"
      },
      "updated_at" : "2014-04-19T11:11:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40866928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I would be very happy if multiple altcoins would do things like changing the money type :D\n",
      "created_at" : "2014-04-19T21:30:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40881237",
      "id" : 40881237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwODgxMjM3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40881237/reactions"
      },
      "updated_at" : "2014-04-19T21:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40881237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The debugging/user-string distinction makes sense.\n\nI reverted FormatMoney() and ParseMoney() back into util.cpp, squashed the followon commits, and broke the original commit in two: the first commit does the int64_t -> CMoney change, the second adds type safety by making CMoney a separate class.\n",
      "created_at" : "2014-04-21T23:32:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-40988854",
      "id" : 40988854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwOTg4ODU0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40988854/reactions"
      },
      "updated_at" : "2014-04-21T23:33:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/40988854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I have added documentation about EncodeDouble, and moved the CompressAmount / DecompressAmount code to money.cpp, where it is used by a new CCompressedMoney type, as per comments from sipa. I have also added some basic tests of the EncodeDouble / DecodeDouble routines.\n",
      "created_at" : "2014-04-22T19:36:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-41084275",
      "id" : 41084275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMDg0Mjc1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41084275/reactions"
      },
      "updated_at" : "2014-04-22T19:36:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/41084275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I still don't like invoking rounding code (which, imho, is human-machine conversion stuff, not consensus code, even if it's some special mode for that purpose) from within core data structures. Can't you add an IMPLEMENT_SERIALIZE to CMoney itself, which in Bitcoin's implementation just serializes as int64_t, and READWRITE(nAmount) as before in CTxOut?\n",
      "created_at" : "2014-05-23T15:29:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44025773",
      "id" : 44025773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDI1Nzcz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44025773/reactions"
      },
      "updated_at" : "2014-05-23T15:29:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44025773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13005249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13005249"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Might it make sense to turn this into a CMoney::CheckRange() ?\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-05-23T15:46:52Z",
      "diff_hunk" : "@@ -15,8 +15,8 @@\n class CTransaction;\n \n /** No amount larger than this (in satoshi) is valid */\n-static const int64_t MAX_MONEY = 21000000 * COIN;\n-inline bool MoneyRange(int64_t nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n+static const CMoney MAX_MONEY = 21000000 * COIN;\n+inline bool MoneyRange(const CMoney& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13005249",
      "id" : 13005249,
      "line" : 19,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDA1MjQ5",
      "original_commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "original_line" : null,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/core.h",
      "position" : 7,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13005249/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T15:46:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13005249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13005280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13005280"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I have little problem with using floating-point for policy rules like this.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-05-23T15:47:41Z",
      "diff_hunk" : "@@ -158,7 +165,7 @@ class CTxOut\n         // need a CTxIn of at least 148 bytes to spend,\n         // so dust is a txout less than 546 satoshis \n         // with default nMinRelayTxFee.\n-        return ((nValue*1000)/(3*((int)GetSerializeSize(SER_DISK,0)+148)) < nMinRelayTxFee);\n+        return nValue.ToDouble() * (1000.0/3.0) / (GetSerializeSize(SER_DISK,0)+148) < nMinRelayTxFee.ToDouble();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13005280",
      "id" : 13005280,
      "line" : 167,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDA1Mjgw",
      "original_commit_id" : "41015bb2edcd714e6cf49f43dc70d8a971d06f21",
      "original_line" : null,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/core.h",
      "position" : 54,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13005280/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T15:47:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13005280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There is no rounding code. I stripped all that out; for Bitcoin, conversion to either int64_t or double is lossless and round-trip (although the consensus risk for double is higher due to poor FPU or compiler optimization, and should not be used in consensus code). The ROUND_X modes are present for future-proofing purposes, to ensure that if/when CMoney is changed from integer to some other numeric type, the then lossy conversions to int64_t or double are performed correctly. ROUND_SIGNAL, which is what is used in the consensus code, is a non-rounding mode with the semantics: \"do not round under any circumstances, if the value is not lovelessly and round-trip serializable into the target type, throw an exception.\" Actual rounding modes are only specified for human-machine interface code (e.g. GUI, RPC api) and non-consensus code (e.g. transaction priority).\n\nAbout serialization, the issue is that how it gets serialized could depend on context. In particular, serialization to int64_t will always be done in some cases, such as bitcoin-compatible nVersion=1 transactions for pegging. So when serializing an output you will need to know nVersion and sometimes inclusion height of the transaction in order to make a decision about serialization format.\n\nSo anyway, that's why CTxOut needs to be the way it is, but maybe there is use for native serialization in some contexts.. I haven't thought too much about that. It wouldn't be difficult to add an IMPLEMENT_SERIALIZE to CMoney. The reason it is not there is so that if someone tries such a READWRITE(nValue), they'll get an error and realize they have to think about these things ;)\n",
      "created_at" : "2014-05-23T17:00:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44035781",
      "id" : 44035781,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDM1Nzgx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44035781/reactions"
      },
      "updated_at" : "2014-05-23T17:02:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44035781",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13008475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13008475"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good suggestion. It'll increase the review burden, but is much cleaner.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-05-23T17:00:52Z",
      "diff_hunk" : "@@ -15,8 +15,8 @@\n class CTransaction;\n \n /** No amount larger than this (in satoshi) is valid */\n-static const int64_t MAX_MONEY = 21000000 * COIN;\n-inline bool MoneyRange(int64_t nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n+static const CMoney MAX_MONEY = 21000000 * COIN;\n+inline bool MoneyRange(const CMoney& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13008475",
      "id" : 13008475,
      "line" : 19,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDA4NDc1",
      "original_commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "original_line" : null,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/core.h",
      "position" : 7,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13008475/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T17:00:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13008475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13009053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13009053"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See #3959 and commit 3aa50118ca8cc8972d1c6b6dffe10963ceb86b7d where I represent fees with a CFeeRate class. It is not type-correct to express fees (which are money-per-transaction-size) as CMoney.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-05-23T17:14:12Z",
      "diff_hunk" : "@@ -781,12 +781,12 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     return true;\n }\n \n-int64_t GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode)\n+CMoney GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13009053",
      "id" : 13009053,
      "line" : 784,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDA5MDUz",
      "original_commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "original_line" : null,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : 26,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13009053/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T17:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13009053",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "On Fri, May 23, 2014 at 7:00 PM, Mark Friedenbach\nnotifications@github.comwrote:\n\n> There is no rounding code. I stripped all that out; for Bitcoin,\n> conversion to either int64_t or double is lossless and round-trip. The\n> ROUND_X modes are present for future-proofing purposes, to ensure that\n> if/when CMoney is changed from integer to some other numeric type, the then\n> lossy conversions to int64_t or double are performed correctly.\n> ROUND_SIGNAL, which is what is used in the consensus code, is a\n> non-rounding mode with the semantics: \"do not round under any\n> circumstances, if the value is not lovelessly and round-trip serializable\n> into the target type, throw an exception.\" Actual rounding modes are only\n> specified for human-machine interface code (e.g. GUI, RPC api) and\n> non-consensus code (e.g. transaction priority).\n> \n> Yes, that's my problem. We're mixing code that should utility stuff into\n> consensus core headers. It's just engineering, but IMHO the one purpose of\n> CMoney should be to encapsulate the arithmetic semantics and serialization.\n> But in the actual one place where serialization of values is done, you\n> bypass the serialization that could be encapsulated there.\n\nSaying that serializing a CTxOut requires invoking some utility to\nforcefully cast the encapsulated money type to an int64 and then\nserializing that is for me pretty much undoing the single nicest advantage\nCMoney could have.\n\n> About serialization, the issue is that how it gets serialized could depend\n> on context. In particular, serialization to int64_t will always be done in\n> some cases, such as bitcoin-compatible nVersion=1 transactions for pegging.\n> So when serializing an output you will need to know nVersion and sometimes\n> inclusion height of the transaction in order to make a decision about\n> serialization format.\n> \n> So pass the CTxOut's or CTransactions nVersion to the serialization code\n> (it has an nVersion argument in all its arguments!), and have CMoney use\n> that to decide how to serialize.\n> \n> So anyway, that's why CTxOut needs to be the way it is, but maybe there is\n> use for native serialization in some contexts.. I haven't thought too much\n> about that. It wouldn't be difficult to add an IMPLEMENT_SERIALIZE to\n> CMoney. The reason it is not there is so that if someone tries such a\n> READWRITE(nValue), they'll get an error and realize they have to think\n> about these things ;)\n> \n> Ok then use a separate wrapper like CMoneyCompressor for that, which\n> perhaps takes the CTransaction's nVersion as an argument.\n\nI'm just saying: if we're introducing a type for encapsulating money\nsemantics in a separate module, let's get all responsibilities in there.\n",
      "created_at" : "2014-05-23T17:14:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44037146",
      "id" : 44037146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDM3MTQ2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44037146/reactions"
      },
      "updated_at" : "2014-05-23T17:14:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44037146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13009403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13009403"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the heads-up. I'll avoid basing pull-requests on top of pull-requests, but as soon as #3959 gets merged I'll merge accordingly.\n",
      "commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "created_at" : "2014-05-23T17:22:45Z",
      "diff_hunk" : "@@ -781,12 +781,12 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     return true;\n }\n \n-int64_t GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode)\n+CMoney GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#discussion_r13009403",
      "id" : 13009403,
      "line" : 784,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDA5NDAz",
      "original_commit_id" : "fc1cd73d0ff73e26da2548193c630b3b8a4d630b",
      "original_line" : null,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : 26,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4067",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13009403/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-05-23T17:22:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/13009403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok a CMoneyCompressor-like class (CTxOutValueSerializer?) seems like a reasonable compromise. A little messy because it'll need the transaction metadata inside the txout serializer, but I'll see if I can make it work in a clean way.\n",
      "created_at" : "2014-05-23T17:25:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44038213",
      "id" : 44038213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDM4MjEz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44038213/reactions"
      },
      "updated_at" : "2014-05-23T17:25:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44038213",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hmm, yeah agree. Putting responsibility about knowledge of transaction versions in money.\\* isn't very clean. But the inherent problem is that they can't be cleanly separated if they're dependent on each other. Right now, however, this is not a problem in Bitcoin, and my reason for liking this is modularization - not future compatibility with things that Bitcoin itself are unlikely to do.\n",
      "created_at" : "2014-05-23T17:30:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44038726",
      "id" : 44038726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDM4NzI2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44038726/reactions"
      },
      "updated_at" : "2014-05-23T17:30:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44038726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "To be honest I'm still not enthusiastic to merge this at all. As I've said before, it sounds like a overdesign for something that we don't need in bitcoin.\n",
      "created_at" : "2014-05-23T17:38:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44039579",
      "id" : 44039579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDM5NTc5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44039579/reactions"
      },
      "updated_at" : "2014-05-23T17:38:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44039579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree with @laanwj -- NACK on merging this from me, doesn't pass my cost-to-review versus benefit-to-the-codebase test.\n",
      "created_at" : "2014-05-23T18:22:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44044065",
      "id" : 44044065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDQ0MDY1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44044065/reactions"
      },
      "updated_at" : "2014-05-23T18:22:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44044065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj @gavinandresen This solves actual ongoing maintenance problems being encountered by people using the bitcoin code base today, and is good software engineering for bitcoin. If your only opinion is it lacking in your own review prioritization criteria, that's fine. But please save the NACK for code that you actively want to prevent from being adopted in bitcoin, lest that word lose all meaning. Or am I misunderstanding your intent?\n\nThis patch may not fix any of your own problems or pet issues, but it has significant impact on mine and others. It is solving real-world maintenance headaches that are resulting in unnecessarily divergent and less-frequently updated code bases and provides type safety to help prevent future consensus-risk logic errors.\n",
      "created_at" : "2014-05-23T18:44:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44046632",
      "id" : 44046632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDQ2NjMy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44046632/reactions"
      },
      "updated_at" : "2014-05-23T18:44:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44046632",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@maaku So if the codebases were less diverged we might expect to see you working upstream more? :)\n",
      "created_at" : "2014-05-23T19:25:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44050739",
      "id" : 44050739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDUwNzM5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44050739/reactions"
      },
      "updated_at" : "2014-05-23T19:25:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44050739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@gmaxwell, that's the whole point!\nOn May 23, 2014 12:25 PM, \"Gregory Maxwell\" notifications@github.com\nwrote:\n\n> @maaku https://github.com/maaku So if the codebases were less diverged\n> we might expect to see you working upstream more? :)\n> \n> â\n> Reply to this email directly or view it on GitHubhttps://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44050739\n> .\n",
      "created_at" : "2014-05-23T19:29:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44051134",
      "id" : 44051134,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDUxMTM0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44051134/reactions"
      },
      "updated_at" : "2014-05-23T19:29:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44051134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Speaking as a maintainer of a alto implementation, strong NACK. I'd hate to find out we accidentally added a consensus critical difference from standard into semantics that mattered; changing alto implementations to in turn match those semantics would be difficult and convoluted, especially on stuff like python where each level of abstraction has a significant performance cost. Why change what isn't broken for the sake of non-bitcoin projects?\n\nNow making a money_value_t typedef is fine and useful for type safety, but only because that doesn't change behaviour. \n",
      "created_at" : "2014-05-24T10:18:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44083226",
      "id" : 44083226,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgzMjI2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083226/reactions"
      },
      "updated_at" : "2014-05-24T10:18:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "(s/alto/alt/, stupid android keyboard)\n",
      "created_at" : "2014-05-24T10:19:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44083244",
      "id" : 44083244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgzMjQ0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083244/reactions"
      },
      "updated_at" : "2014-05-24T10:19:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@petertodd It seems we agree. I've said so too - a typedef is fine with me. Let's pull the first commit only, which does just that.\n",
      "created_at" : "2014-05-24T10:28:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44083430",
      "id" : 44083430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgzNDMw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083430/reactions"
      },
      "updated_at" : "2014-05-24T10:28:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj ACK on a typedef. \n\nIts worth remembering with optional changes like this that if we create a fork accidentally miners alone end up losing something like $50k/hour, and the reputation of Bitcoin will take a hit. (particularly given the reasons for making this change) I've already spoken to mining pools that stick with 0.8 because they consider the 0.9 changes to be risky; no sense giving them even more reasons to worry. \n",
      "created_at" : "2014-05-24T10:36:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44083588",
      "id" : 44083588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgzNTg4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083588/reactions"
      },
      "updated_at" : "2014-05-24T10:36:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There are two very different questions here.\n\nOne question is whether this is a net improvement to the codebase - independent of the risk. In my opinion, it is, if it actually encapsulated certain responsibilities out of other code. If it helps forked codebases contribute upstream, that's a nice extra benefit.\n\nHowever, If there is any doubt at all that this might introduce consensus changes, I don't think anyone would even think about merging. If not enough people consider that proven, it will have to wait. If people consider it not worth the review time, it may not be merged at all ever - that's just cost vs. benefits.\n\nAnyway, ACK on a typedef. Let's see where we go from there.\n",
      "created_at" : "2014-05-24T10:44:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44083746",
      "id" : 44083746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDgzNzQ2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083746/reactions"
      },
      "updated_at" : "2014-05-24T10:44:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44083746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The typedef doesn't solve the problem of the code making assumptions about the type being an int64 (which is the encapsulation/readability improvement that would directly benefit bitcoin). But merging a typedef would be simpler and it would help a little bit with forked codebases.\nAnother PR replacing the typedef with a full class should be easier to read once the typedef is merged. So, yes, it probably makes sense to separate this PR in two given the fact that the first part is much easier to accept.\n",
      "created_at" : "2014-05-24T11:37:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44084729",
      "id" : 44084729,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDg0NzI5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44084729/reactions"
      },
      "updated_at" : "2014-05-24T11:37:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44084729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@petertodd or anyone else, please point to a single line of code that introduces consensus risk. This patch in no way changes the user- or network-visible behavior of the client It was very carefully constructed with precisely that goal in mind. CMoney is still int64, just wrapped in a class! You'll see in the PR history that I've removed features such as operator/() which were safe but less obviously so.\n\nMaking CMoney a typedef has zero type safety benefits. Sorry, but that's how C++ works. It will be treated exactly the same by the compiler as before. Merging just the first commit is better than nothing, and helps me considerably. But _all_ of the direct type safety benefits to bitcoin are in the 2nd commit, and so I strongly recommend reviewing it.\n",
      "created_at" : "2014-05-24T14:25:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44088718",
      "id" : 44088718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDg4NzE4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44088718/reactions"
      },
      "updated_at" : "2014-05-24T14:53:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44088718",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@maaku In Bitcoin even subtle compiler bugs lead to consensus problems; _any_ change is risky. For me to properly review the CMoney class - specifically the idea that it's \"just\" int64 wrapped in a class - would require me to get out the C++ standard and actually check that there isn't any obscure gotchas.\n\nAgain, this is a change primarily for the benefit of other currencies, not Bitcoin. Why should we take that risk just so much smaller alts - or commercial ventures with non-public business plans in the case of sidechains - can benefit? (note how you've included rounding modes, yet they aren't used in the Bitcoin code) We're the ones with tens of thousands of dollars an hour downtime costs.\n",
      "created_at" : "2014-05-24T14:45:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44089198",
      "id" : 44089198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDg5MTk4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44089198/reactions"
      },
      "updated_at" : "2014-05-24T14:45:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44089198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Since some altcoins seem to benefit from this change, maybe they can merge this first and incorperate it in their next client version. After some production experience, it might be easier to accept this change here.\n",
      "created_at" : "2014-05-24T15:17:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44090299",
      "id" : 44090299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDkwMjk5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44090299/reactions"
      },
      "updated_at" : "2014-05-24T15:17:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44090299",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4348296?v=4",
         "events_url" : "https://api.github.com/users/leofidus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leofidus/followers",
         "following_url" : "https://api.github.com/users/leofidus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leofidus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leofidus",
         "id" : 4348296,
         "login" : "leofidus",
         "node_id" : "MDQ6VXNlcjQzNDgyOTY=",
         "organizations_url" : "https://api.github.com/users/leofidus/orgs",
         "received_events_url" : "https://api.github.com/users/leofidus/received_events",
         "repos_url" : "https://api.github.com/users/leofidus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leofidus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leofidus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leofidus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "By encapsulating functionality this increases the quality, maintainability, readability and future extensibility of bitcoin. \n\"Improve bitcoin's divisibility would be a trivial hardfork if it's required in the future\" I have read and written this sentence many times and this PR would actually make it true.\nAbout \"any change is risky therefore any change is bad by default\", maybe we shouldn't had refactored anything and just left almost everything on the main \"module\" where it used to be, maybe we shouldn't have decoupled the initial GUI stuff from the rest of the code, maybe we shouldn't separate the wallet from the core to avoid \"consensus risks\".\nGood software engineering practices? Oh, no, those are risky...\nSorry for the sarcasm. Can we go back to concrete criticisms of the changes instead of arguing with vague \"any change is risky\" arguments?\n\n@leofidus In the case of Freicoin, the main problem is to rebase the few technical changes it has on top of every new bitcoin release. If Freicoin accepts this change but bitcoin doesn't, the rebase won't get any simpler, probably worse. Maybe if bitcoin accepts the typedef, Freicoin can deploy the class version before bitcoin does, but I'm not sure that will be very useful since Freicoin would actually implement another version of the class, not the one equivalent to int64 that bitcoin would use. \n",
      "created_at" : "2014-05-24T16:49:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44092832",
      "id" : 44092832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDkyODMy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44092832/reactions"
      },
      "updated_at" : "2014-05-24T16:49:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44092832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jtimon @leofidus Actually Freicoin has effectively had this change since the first code was written almost two years ago, although we use the GMP mpq_class directly instead of encapsulating it in CMoney, but the result is the same. Any upstream (bitcoin) change which deals with monetary values -- which is just about everything except network code -- results in a merge conflict and requires manual intervention. Likewise any Freicoin changes we want to move upstream require manual editing and re-testing, which is a barrier to all-volunteer efforts.\n",
      "created_at" : "2014-05-24T17:17:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44093553",
      "id" : 44093553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDkzNTUz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44093553/reactions"
      },
      "updated_at" : "2014-05-24T17:17:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44093553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jtimon > \"Improve bitcoin's divisibility would be a trivial hardfork if it's required in the future\" I have read and written this sentence many times and this PR would actually make it true.\n\nBy the time Bitcoin is worth the 6x or so orders of magnitude more required to make a divisibility hardfork necessary, changing CMoney would be the least of our worries with regard to a divisibility upgrade.\n\nAs for \"good software engineering practices\", consensus-critical code has very different good practices than normal code. Separating the wallet code - which shouldn't change consensus behavior - from the consensus critical code was a good idea, albeit one that needed to be very carefully evaluated. Making a CMoney class _might_ be a good idea, but there's no need to rush it; a simple typedef is a conservative change that probably will have no impacts. I understand that you want a much less conservative change for your own reasons - Freicoin - but there's simply no reason why the rest of the Bitcoin community should take on risk for your benefit.\n\nRemember that the fact that Freicoin has done this change a long while ago does _not_ help in testing the actual concern, which is that a CMoney class may have different consensus critical behavior to int64. To test that you'd have to actually test the transition period between having int64 and CMoney; Freicoin never did that.\n",
      "created_at" : "2014-05-25T13:32:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44133288",
      "id" : 44133288,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTMzMjg4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44133288/reactions"
      },
      "updated_at" : "2014-05-25T13:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44133288",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree that defining a money type is somewhat 'better software engineering' when looked at it some ways. But I see the future of Bitcoin Core as just Bitcoin Core, not 'Altcoin Core'.\n\nEventually I want to enshrine the Bitcoin-specific consensus code in a library that as is as small and independent as possible and completely specific to Bitcoin. Altcoins can create their own consensus libraries. I expect there to be little or no code sharing between these. The consensus code does not need to be general.\n\nFor this goal I think _inside the consensus code_ it is good to have more low-level concreteness, not more abstractions. Recently we already went from the CBigNum type to well-defined, concrete uint256/uint160/CScriptNum types.\n\n**However** in the rest of the code that interfaces with client applications (RPC), or the user, or provides some other interface, a more abstract interface that isolates from the specific representation of money inside the system is useful.\n",
      "created_at" : "2014-05-25T13:58:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44133815",
      "id" : 44133815,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTMzODE1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44133815/reactions"
      },
      "updated_at" : "2014-05-25T13:58:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44133815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Since it seems that nobody would oppose to the innocuous typedef change, I think that probably it would be wise to separate that (which is not that interesting IMO but could be easily accepted) from the class approach to encapsulate serialization and arithmetic, which is clearly much more controversial. \nI also think that the second commit/PR would be easier to review if it was separated in smaller and more clear commits.\n\nPlease tell me if I'm going off-topic or I should move this to the mailing list, I'm trying to understand the reasoning better since I feel it can help me with my own pull requests.\nAlthough I don't understand @laanwj's argument that an abstraction on top of the low-level well-defined int64 type is risky or undesirable in consensus code, I can understand how changes that could potentially accept consensus are risky and therefore we must be more conservative about them, even if I disagree with the \"this is completely useless for bitcoin and only useful for altchains\" claim.\n\nOn the other hand, I don't understand the \"review-costs\" arguments. If someone doesn't have time to review certain change or doesn't think it's a priority to do so, that's completely understandable. Not reviewing a PR for this reason and leaving it in limbo is one thing. But justifying a NACK to \"cut review costs\" seems at the very least premature to me.\nMaybe I'm missing something, but ideally NACKs should be in the form of: \"This should never be merged becase A and B break X, Y and Z\", \"This would be more acceptable by also implementing tests X, Y and Z\" or \"this PR doesn't seem complete without also implementing A, B and C\". The more concrete the objections are, the less frustrating it is for the developer trying to contribute and the more educational for the contributor or in general to other potential contributors reading the pull requests with the objective of educating themselves on how to properly try to contribute.\n\nAgain, my apologies if this is not the place for these later observations. \n",
      "created_at" : "2014-05-25T19:27:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44143221",
      "id" : 44143221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTQzMjIx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44143221/reactions"
      },
      "updated_at" : "2014-05-25T19:28:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44143221",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Am I understanding this correctly that leaving consensus-code unmodified (or typedef'ed) and introducing CMoney in the rest of the codebase would be a compromise which would help everyone (bitcoin has no fork risk but better modularization, freicoin has less work merging changes)? I can at least say that that version would benefit Dogecoin, which would mean that you would also get more help from us testing it.\n",
      "created_at" : "2014-05-25T19:44:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44143664",
      "id" : 44143664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTQzNjY0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44143664/reactions"
      },
      "updated_at" : "2014-05-25T19:44:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44143664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4348296?v=4",
         "events_url" : "https://api.github.com/users/leofidus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leofidus/followers",
         "following_url" : "https://api.github.com/users/leofidus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leofidus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leofidus",
         "id" : 4348296,
         "login" : "leofidus",
         "node_id" : "MDQ6VXNlcjQzNDgyOTY=",
         "organizations_url" : "https://api.github.com/users/leofidus/orgs",
         "received_events_url" : "https://api.github.com/users/leofidus/received_events",
         "repos_url" : "https://api.github.com/users/leofidus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leofidus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leofidus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leofidus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jtimon It's not so much about 'review costs', because review will almost certainly not find all bugs/inconsistencies. It is the costs of some unexpected change causing a fork. Years after Satoshi left people are still finding small unexpected cases in the consensus code.\n\nJust that no one can point them out from glancing at the code doesn't mean that no problems exist. Making the code (maybe) a bit more readable and consistent is just not worth that. I hope you understand. If the potential benefits don't outweigh the potential trouble no one wants to take the risk to merge it, and a NACK is in order. That's better than keeping it in limbo forever, IMO.\n\n@leofidus Yes if this could be done only outside the consensus code, it would be acceptable. That'd require an interface layer between the consensus code and the rest, which would be a good thing anyway. It is aligned with the goal of making a consensus library.\n",
      "created_at" : "2014-05-25T20:28:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-44144658",
      "id" : 44144658,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MTQ0NjU4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44144658/reactions"
      },
      "updated_at" : "2014-05-25T20:28:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/44144658",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/p4067_fc1cd73d0ff73e26da2548193c630b3b8a4d630b/ for test log.\n\nThis pull does not merge cleanly onto current master\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "created_at" : "2014-06-23T11:12:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-46831162",
      "id" : 46831162,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODMxMTYy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46831162/reactions"
      },
      "updated_at" : "2014-06-23T11:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/46831162",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=4",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "node_id" : "MDQ6VXNlcjIxMTA5MDc=",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing this in favor of #4234.\n",
      "created_at" : "2014-08-19T09:15:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-52608727",
      "id" : 52608727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNjA4NzI3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/52608727/reactions"
      },
      "updated_at" : "2014-08-19T09:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/52608727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "After #4234 has been merged, a rebased version of this should be much easier to review.\n",
      "created_at" : "2014-10-02T00:32:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-57562963",
      "id" : 57562963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTYyOTYz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57562963/reactions"
      },
      "updated_at" : "2014-10-02T00:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57562963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jtimon You could save yourself the trouble. As I've said multiple times (also above here), I'm willing to go as far as type-defing the money type. That's what we did, so as far as I'm concerned this issue is now closed.\n",
      "created_at" : "2014-10-02T08:01:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-57595698",
      "id" : 57595698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTk1Njk4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57595698/reactions"
      },
      "updated_at" : "2014-10-02T08:01:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57595698",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe this goes too far, but wouldn't be nice to have a class and convert the functions in utilmoneystr to methods of that class? \nMaybe just moving that to amount.o would be enough?\n",
      "created_at" : "2014-10-02T18:43:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-57681371",
      "id" : 57681371,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NjgxMzcx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57681371/reactions"
      },
      "updated_at" : "2014-10-02T18:43:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57681371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "At least please keep core data structure definition and human interaction separate. So no, don't move any utilmoneystr to amount.o or CAmount - that would imply having everything using any core datastructure at all depend on that conversion code.\n",
      "created_at" : "2014-10-02T18:49:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-57682830",
      "id" : 57682830,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NjgyODMw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57682830/reactions"
      },
      "updated_at" : "2014-10-02T18:49:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57682830",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm for keeping the data type and operations such as formatting on it decoupled. Especially as formatting could be done in different ways, depending on the context, it's not an innate property of the type, and indeed not necessary by all clients.\n",
      "created_at" : "2014-10-02T18:56:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4067#issuecomment-57685514",
      "id" : 57685514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4067",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3Njg1NTE0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57685514/reactions"
      },
      "updated_at" : "2014-10-02T18:56:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/57685514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
