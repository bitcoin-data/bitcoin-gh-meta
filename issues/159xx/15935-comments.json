[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19561 (refactor: Pass ArgsManager into functions that register args by S3RK)\n* #19471 (util: Make default arg values more specific by hebasto)\n* #19461 (multiprocess: Add bitcoin-gui -ipcconnect option by ryanofsky)\n* #17127 (util: Correct permissions for datadir and wallets subdir by hebasto)\n* #15937 (Add loadwallet and createwallet load_on_startup options by ryanofsky)\n* #15936 (Unify bitcoin-qt and bitcoind persistent settings by ryanofsky)\n* #11082 (Add new bitcoin_rw.conf file that is used for settings modified by this software itself by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.<!--2502f1a698b3751726fa55edcda76cd3-->\n\n### Coverage\n\n| Coverage  | Change ([pull 15935](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/15935/total.coverage/index.html), 8932b6eca8c024905823f7c21f424a3da024bc72) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html), 597d2f905ecab4fe2c64bba13f8e76e0075b2f9f)   |\n|-----------|-------------------------|--------------------|\n| Lines     | -0.0402 %            | 90.8980 %        |\n| Functions | -0.0155 %            | 85.7548 %        |\n| Branches  | -0.0263 %            | 52.0202 %        |\n\n<sup>Updated at: 2020-07-22T10:37:55.716811.</sup>\n",
      "created_at" : "2019-05-02T00:43:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-488521738",
      "id" : 488521738,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODUyMTczOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T03:33:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488521738",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "NACK, this is redundant with #11082 which is a better solution.",
      "created_at" : "2019-05-02T12:09:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-488648120",
      "id" : 488648120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODY0ODEyMA==",
      "updated_at" : "2019-05-02T12:09:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488648120",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-488648120\r\n\r\nJust as background, the settings file is not supposed to replace the config file. The settings file is supposed to replace some [`QSettings`](https://doc.qt.io/qt-5/qsettings.html) uses in `bitcoin-qt`, implementing type-safe persistent storage, and sharing this functionality with `bitcoind`, so settings modified at runtime will be stored in a common place regardless of whether you're using the GUI or a plain RPC interface. (You can see in 0ab41dd770c1f13983df528b111cfc8a51fe016a from #15936 how this works in the GUI or in 04c80c40df9fc6f4734ba238ea7f65607cf88089 from #15937 how this can be used in an RPC.)\r\n\r\n> this is redundant with #11082 which is a better solution.\r\n\r\nEvery solution has some tradeoffs, and I'm sure you can elaborate more on advantages of #11082 compared to this. But here are what I see as nice things about this approach:\r\n\r\n- Standard format. The `bitcoin.conf` format works pretty well as a manual configuration mechanism. But the format is unspecified and unstable, and less appealing for use as persistent key/value store compared to JSON which is well understood and supported by many tools and libraries.\r\n\r\n- Uniformity of representation. Since `bitcoin.conf` files are meant to be written by people and parsed by software, it's reasonable for them to provide many ways to do things like represent true/false values (`foo=1` `foo=` `foo=23` `foo=-1`, `nofoo=0` for true / `foo=0` `nofoo=1` `foo=false` for false), or to strip whitespace. But for a file that is meant to be round-trip read and written by software, only accepting plain `true` `false` keywords as bools and not mangling strings is a better way to avoid complexity, configuration errors, and software bugs.\r\n\r\n- Flexibility of representation. `bitcoin.conf` format can't currently represent strings with pound (`#`) or newline characters or strings with various types of whitespace. It can also only awkwardly represent lists by repeating settings (so there is no distinction between a non-list value and a single-element list). I think these things are likely to cause bugs, unnecessary limitations, headaches, and extra boilerplate in application-level code that reads and writes settings.\r\n\r\n- Maintainability. JSON for all that's good and bad about it is stable and usable enough and isn't going to change. Even writing this PR didn't require adding new parsing or formatting code. By contrast, #11082 not only adds new code right now to parse and generate `bitcoin_rw.conf` files, but will also require more work on an ongoing basis whenever the `bitcoin.conf` format is extended, because any new change will now require roundtrip support. (For example if we added an escaping mechanism it would require new code to escape values in addition to new code parsing escapes.)\r\n\r\nThis PR is also not mutually exclusive with #11082. I don't know exactly what features you wanted to implement on top of #11082, but if you are thinking of new features different from #15936 and #13937 that call for injecting settings into a human-edited config file, nothing in this PR should get in the way of that.\r\n\r\nThere were some other issues I had with #11082 when I reviewed it (adding a new `bitcoin.conf` parser instead of extending the existing one, and concerns about init order and inconsistent interpretation of network sections in `bitcoin.conf` and `bitcoin_rw.conf`), but those issues were specific to the implementation and not inherent to the approach.",
      "created_at" : "2019-05-08T20:35:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-490641194",
      "id" : 490641194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY0MTE5NA==",
      "updated_at" : "2019-05-08T20:35:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490641194",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\n> Standard format. The bitcoin.conf format works pretty well as a manual configuration mechanism. But the format is unspecified and unstable, and less appealing for use as persistent key/value store compared to JSON which is well understood and supported by many tools and libraries.\r\n\r\nI strongly agree with that.",
      "created_at" : "2019-05-18T10:58:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-493668134",
      "id" : 493668134,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzY2ODEzNA==",
      "updated_at" : "2019-05-18T10:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493668134",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "INI is a standard format, supported by at least as many tools and libraries for longer. It has been working fine for bitcoin.conf and rwconf for years now.\r\n\r\nJSON, on the other hand, is fragile, doesn't allow users to add comments, and is currently supposed to only be used for the JSON-RPC/REST interfaces of Core.\r\n\r\nThe only thing to gain over the current INI format would be to avoid rewriting the entire file for changes. JSON doesn't get us that (nor anything else).",
      "created_at" : "2019-05-18T19:52:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-493702800",
      "id" : 493702800,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzcwMjgwMA==",
      "updated_at" : "2019-05-18T19:52:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493702800",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-07-02T18:36:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-507796445",
      "id" : 507796445,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzc5NjQ0NQ==",
      "updated_at" : "2019-07-02T18:36:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/507796445",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept NACK from me too for much the same reasons @luke-jr gives. JSON's fine for a human-readable wire format where programs in different languages need to exchange data (ie, RPC), but it's not a great configuration language at all. I don't think \"the settings file is not supposed to replace the config file\" will hold up -- @jnewbery's already suggesting this be used for user configuration in 16248, eg.",
      "created_at" : "2019-07-03T03:45:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-507926130",
      "id" : 507926130,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzkyNjEzMA==",
      "updated_at" : "2019-07-03T03:45:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/507926130",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-507926130\r\n\r\nI can make a more complete response later but I think the quote \"the settings file is not supposed to replace the config file\" is not being understood correctly. I'm using \"config\" there to refer to static configuration and \"settings\" to refer to dynamic configuration (based on bitcoin.conf, which is static, and QSettings, which is dynamic, in current code).\r\n\r\nMy thought is that more advanced command-line / linux type users will want to sit down and write out their configurations in text files with comments, but less advanced users will not be editing text files and will be happy if preferences they set through gui or rpc interfaces are just persisted in a simple format without support for comments. I can write more but @ajtowns, it would be helpful to me if you could say how you would want GUI and runtime settings to be stored ideally (for example, the list of wallets to load on startup).",
      "created_at" : "2019-07-03T10:34:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-508038978",
      "id" : 508038978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwODAzODk3OA==",
      "updated_at" : "2019-07-03T10:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508038978",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky I think it would make sense to do any of:\r\n\r\n * just keep doing what we're already doing\r\n * switch to a different machine-readable format that can do key-value store but isn't tied to the gui (eg bdb, serialize.h, sqlite)\r\n * have a limited machine-updatable version of our human-readable config format (luke's PR roughly)\r\n * switch to a new format (eg toml, yaml, json5/hjson/hocon, etc) for our human-readable static config, and use the same format (or a restricted version of it) for the machine-modifiable dynamic/persistent config\r\n\r\nIf we stuck with a primarily machine-readable format, having a \"dumpsettings\" / \"loadsettings\" RPC pair that translated that to and from the bitcoin.conf ini-format could be workable for people who want to play with persistent settings outside of the GUI (eg, playing with settings in the gui to get something that seems to work right, then wanting to copy some of them to bitcoind on a different computer).\r\n\r\nI don't think it's realistic to treat json as a \"machine-readable format\" for case 2 because it's both human readable and more powerful than our ini-format so it's an obvious hammer to pick up for static configuration cases where the ini-format is awkward, cf https://github.com/bitcoin/bitcoin/pull/16248#issuecomment-507801090 and https://github.com/bitcoin/bitcoin/pull/16248#issuecomment-507958226 . Maybe we want to make bitcoin.conf json (or a supserset of json), but that ought to be a separate discussion.\r\n\r\nHope that makes sense",
      "created_at" : "2019-07-03T13:07:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-508085274",
      "id" : 508085274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwODA4NTI3NA==",
      "updated_at" : "2019-07-03T13:07:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508085274",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ajtowns, it sounds like your opinion is basically the same as Luke's, and a concrete thing maybe we all would be happy with would be a PR that stores persistent GUI and application settings in an INI file instead of a JSON file.\r\n\r\nIf I am understanding correctly, you are not any citing direct advantages to the INI format for storing dynamic settings, but instead you're making more of a slippery slope precautionary argument: that if we add a way to represent new settings in JSON form, it will encourage creation of ever more complex settings that can be conveniently represented as JSON lists and objects that will be easy to manipulate with GUIs and dynamic configuration, but will be impossible or awkward to represent in INI format. And therefore as a result, even though the settings.json file is intended to be only machine edited, users will end up modifying it anyway and wind up putting settings in a read-write file without comments, that would be more appropriately stored in a read-only file with comments. Let me know if I have this wrong, or if you do think INI format is a better format for dynamic configuration than the JSON format for other reasons that I have not understood.\r\n\r\nBut to follow up, would you be happy with a PR like this one puts settings in a `bitcoin_rw.conf` file with a big warning on top?\r\n\r\n```ini\r\n# bitcoin_rw.conf: Dynamic settings for Bitcoin Core data directory\r\n#\r\n# Warning: DO NOT EDIT this file. Settings in this file can be overridden at\r\n# runtime and comments will be lost. Instead, to statically configure the\r\n# bitcoin node and wallet, create a bitcoin.conf file with the desired settings.\r\n\r\nproxy=host:123\r\nprune=2861\r\nwallet=wallet1\r\nwallet=wallet2\r\n```\r\n\r\ninstead of the current `settings.json` file:\r\n\r\n```json\r\n{\r\n    \"proxy\": \"host:123\",\r\n    \"prune\": 2861,\r\n    \"wallet\": [\"wallet1\", \"wallet2\"]\r\n}\r\n```\r\n\r\nI will respond to other alternatives you suggested, but I think they are all have deficiencies\r\n\r\n> just keep doing what we're already doing\r\n\r\nThe status quo is that we're storing dynamic settings in the registry on windows, in \r\nin `$HOME/.config/Bitcoin/Bitcoin-Qt.conf` files on linux and `$HOME/Library/Preferences` plist files on Mac OS, and that dynamic settings are not tied to the datadir, and not shared between bitcoind and bitcoin-qt. I think this is unfortunate and want to fix this problem before adding support for more dynamic settings.\r\n\r\n> switch to a different machine-readable format that can do key-value store but isn't tied to the gui (eg bdb, serialize.h, sqlite)\r\n\r\nI'm not sure what advantages you see in this approach compared to the current PR, other than that the settings files would be less accessible, so advanced users would be more encouraged to create static configurations where appropriate. I don't mean to be unfair, but I think we could get the same benefit with less code by just tweaking the current PR and having it save `settings.json.gz` or `settings.json.rot13` files that would also be a pain in the ass to edit.\r\n\r\n> have a limited machine-updatable version of our human-readable config format (luke's PR roughly)\r\n\r\nI do think our current format is pretty terrible (stupid about bool, and lists, can't represent strings containing `#`, etc, see previous comments) and I have other specific issues with Luke's PR (again see previous comments). But I could live with this approach and I will attempt to implement it if this PR is dead or going nowhere.\r\n\r\n> switch to a new format (eg toml, yaml, json5/hjson/hocon, etc) for our human-readable static config, and use the same format (or a restricted version of it) for the machine-modifiable dynamic/persistent config\r\n\r\nAs far as I can see (please correct me if I'm mistaken) all of these formats have 0 advantages over plain JSON for dynamic configuration, and very few advantages over current INI format for static configuration, and would trigger lots of bikeshedding, and require new parsing code. I think the major advantage of this over PR _all_ your suggested alternatives but especially this one, is that it's ridiculously simple and requires no new parsing code at all: 70675c3e4975203ad6222ba2b00c83b4e4213793",
      "created_at" : "2019-07-03T14:39:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-508121996",
      "id" : 508121996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwODEyMTk5Ng==",
      "updated_at" : "2019-07-03T14:39:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508121996",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @ajtowns, it sounds like your opinion is basically the same as Luke's, and a concrete thing maybe we all would be happy with would be a PR that stores persistent GUI and application settings in an INI file instead of a JSON file.\r\n\r\nYeah; the benefit of that approach that the json one doesn't have is that you can just cut and paste lines that the gui has created into your permanent bitcoin.conf directly.\r\n\r\n> But to follow up, would you be happy with a PR like this one puts settings in a `bitcoin_rw.conf` file with a big warning on top?\r\n\r\nI think a warning makes sense.\r\n\r\n> The status quo is that we're storing dynamic settings in the registry on windows, in\r\n> in `$HOME/.config/Bitcoin/Bitcoin-Qt.conf` files on linux and `$HOME/Library/Preferences` plist files on Mac OS, and that dynamic settings are not tied to the datadir, and not shared between bitcoind and bitcoin-qt. I think this is unfortunate and want to fix this problem before adding support for more dynamic settings.\r\n\r\nA different approach would be to say \"bitcoin-qt has dynamic settings -- it has a GUI that lets you do dynamic things\" and \"bitcoind does not have dynamic settings\", and decide that's the way it's meant to be. Not having dynamic settings means that if you \"shutdown and restart\" you're back to a clean slate which can be good, and could be appropriate for a gui-less daemon. If so, it could just be enough to have some way of viewing/exporting the current dynamic settings from the gui, so you can paste them into your bitcoin.conf. Not really advocating this, but I think it's actually workable.\r\n\r\n> > switch to a different machine-readable format that can do key-value store but isn't tied to the gui (eg bdb, serialize.h, sqlite) \r\n>\r\n> I'm not sure what advantages you see in this approach compared to the current PR, other than that the settings files would be less accessible, so advanced users would be more encouraged to create static configurations where appropriate.\r\n\r\nIt's more that if you've got \"settings.json\" or \"bitcoin_rw.conf\" sitting around, people are going to go \"ah, great, I see what's going on\" and edit it. If they see an sqlite file, they might fire up sqlite, but it'll have a schema so they'll only be able to touch it in fairly sensible ways. If they see a serialize.h or bdb file, they probably won't touch it, but if they do it'll be using tools that will probably get it right and likely won't be surprised if things break. With a .json (or .json.gz or .ini) they're going to go \"oh cool! look what i found!\" and fire up notepad and mess around, and you need to give detailed error messages to help them find their mistakes and manage expectations so they're not terribly surprised when their formatting/comments/ordering/additions disappear or otherwise get mangled.\r\n\r\nUsing sqlite would get the \"avoid rewriting the entire file for changes\" benefit for whatever that's worth.\r\n\r\n> > have a limited machine-updatable version of our human-readable config format (luke's PR roughly)\r\n> \r\n> I do think our current format is pretty terrible (stupid about bool, and lists, can't represent strings containing `#`, etc, see previous comments)\r\n\r\nI don't disagree, but if that's the problem, let's actually work on it and improve the actual config format. But:\r\n\r\n> As far as I can see (please correct me if I'm mistaken) all of these formats [toml, yaml, json5/hjson/hocon, etc] have 0 advantages over plain JSON for dynamic configuration, and very few advantages over current INI format for static configuration, and would trigger lots of bikeshedding, and require new parsing code. \r\n\r\nThey'd all also require some special handling for upgrading from today's bitcoin.conf to whatever the future one is, which seems like a pain too. But if the conclusion there is \"our custom ini stuff is what's best for bitcoin.conf\" then I don't think it makes sense to complain about how terrible our current format is, if it's still the best we can do.\r\n\r\n> and I have other specific issues with Luke's PR (again see previous comments)\r\n\r\nSure. I suppose I'm obliged to review that PR now too...\r\n\r\n> I think the major advantage of this over PR _all_ your suggested alternatives but especially this one, is that it's ridiculously simple and requires no new parsing code at all\r\n\r\nIf it's the wrong thing, it doesn't really matter how easy it is...",
      "created_at" : "2019-07-03T16:06:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-508156827",
      "id" : 508156827,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwODE1NjgyNw==",
      "updated_at" : "2019-07-03T16:06:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/508156827",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> But I could live with this approach and I will attempt to implement it if this PR is dead or going nowhere.\r\n\r\nNote that this PR was discussed in an IRC meeting here: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2019/bitcoin-core-dev.2019-01-10-19.00.log.html#l-175\r\n\r\nSeveral contributors there were in favour of this approach because it's less code (@jonasschnelli , @jimpo , @jamesob , @laanwj ). As far as I'm concerned that means this approach still has far more concept ACKs than NACKs (but any of those contributors should speak up if they've changed their minds).",
      "created_at" : "2019-07-10T09:11:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-509979967",
      "id" : 509979967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTk3OTk2Nw==",
      "updated_at" : "2019-07-10T09:11:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/509979967",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Note this PR didn't exist yet at the time of the IRC discussion. In any case, I tend to be more interested in reasoning behind NACKs, and how specific concerns can be addressed, than just their gut level responses. For example, Luke seemed to be concerned with comments and comment preservation in the dynamic configuration file, which could be addressed with code to read/write the dynamic configuration in ini format instead of json format. AJ seemed skeptical of dynamic configuration for bitcoind in general, and I definitely think there should be a way to turn off dynamic configuration (gray out dynamic configuration in gui, return errors from RPCs that would try to save a persistent setting).",
      "created_at" : "2019-07-10T11:24:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-510021419",
      "id" : 510021419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMDAyMTQxOQ==",
      "updated_at" : "2019-07-10T11:24:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510021419",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">Several contributors there were in favour of this approach because it's less code\r\n\r\nBut it's not really. UniValue is more code than updating the INI file. And until now, we have had a policy (that IMO we should keep) to only use UniValue in the JSON-RPC code.",
      "created_at" : "2019-07-10T11:30:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-510023127",
      "id" : 510023127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMDAyMzEyNw==",
      "updated_at" : "2019-07-10T11:30:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510023127",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> we have had a policy (that IMO we should keep) to only use UniValue in the JSON-RPC code\r\n\r\n@luke-jr, I think I've heard of this policy before, but maybe didn't take it seriously. Does it come from an objection to the JSON format, or problems with the univalue implementation, or something else? I wouldn't want univalue to used in application code (in wallet code or consensus code) because string lookups and variant typing lead to c++ code that's verbose, messy, and fragile. But at an API layer, or for accessing config data, univalue seems pretty well-suited, so I wonder what the concerns about it are or were.",
      "created_at" : "2019-07-10T12:02:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-510032259",
      "id" : 510032259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMDAzMjI1OQ==",
      "updated_at" : "2019-07-10T12:02:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510032259",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nRationale:\r\n\r\n> Standard format. The bitcoin.conf format works pretty well as a manual configuration mechanism. But the format is unspecified and unstable, and less appealing for use as persistent key/value store compared to JSON which is well understood and supported by many tools and libraries.",
      "created_at" : "2019-07-10T15:58:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-510122585",
      "id" : 510122585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMDEyMjU4NQ==",
      "updated_at" : "2019-07-10T15:58:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510122585",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think `bitcoin.conf` is easier to use than a json file by scripting languages.\r\nIt is easy to add one line to bitcoin.conf, but adding one node to a json file? It requires additional dependencies.",
      "created_at" : "2019-07-26T03:55:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-515299233",
      "id" : 515299233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTI5OTIzMw==",
      "updated_at" : "2019-07-26T03:55:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515299233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@NicolasDorier, can you clarify your use case? `settings.json` does not replace `bitcoin.conf` and should not be used for static configuration. It replaces QSettings (see #15936) and is used for dynamic configuration. It's database of settings updated dynamically while bitcoin is running, similar to peers.dat or fee_estimates.dat, only it happens to be in a human readable format.",
      "created_at" : "2019-07-26T04:42:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-515306463",
      "id" : 515306463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTMwNjQ2Mw==",
      "updated_at" : "2019-07-26T04:42:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515306463",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky ah ok then this make sense. I was worried that some configuration thing start becoming spread in different files in different format, but this is not the case here.",
      "created_at" : "2019-07-26T07:56:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-515350760",
      "id" : 515350760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTM1MDc2MA==",
      "updated_at" : "2019-07-26T07:56:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515350760",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Software should be modifying bitcoin_rw.conf/settings.json, not  bitcoin.conf",
      "created_at" : "2019-07-26T12:43:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-515435882",
      "id" : 515435882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTQzNTg4Mg==",
      "updated_at" : "2019-07-26T12:43:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515435882",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Software should be modifying bitcoin_rw.conf/settings.json, not bitcoin.conf\r\n\r\nIt makes sense for deployment software to generate and modify bitcoin.conf files. Specifically configuration software like ansible, package managers like nix or guix, build scripts like docker files, should all be setting up their deployments through bitcoin.conf. Managing static software configurations is a big part of what these tools do and why they exist.\r\n\r\nFor bitcoin_rw.conf/settings.json, there are some exceptions I could think of, but mainly I think the only tool that will want to write these files is bitcoin itself. Partly this is due to safety, because with features like #15936 and #15937, settings can change any time while bitcoin is running, so external programs trying to modify these files could see their updates lost. But more importantly, a major motivation for wanting to add dynamic settings is to provide new, less cumbersome ways of updating settings than the raw file system. A user is less likely to screw up something like pruning when the way to enable it is to type a command like `bitcoin-cli config prune 3gb`, and get instant error checking and feedback, than to have to locate their datadir, open a text editor, make changes without running afoul of ini sections syntax and precedence rules, stop bitcoin, restart bitcoin, and check the logs to verify their changes picked up.\r\n\r\nBitcoin isn't pure server software that only needs static configuration, and it isn't pure application software that only needs dynamic configuration. It's P2P software that should support both static and dynamic configuration for different use cases. My expectation is that server admins and advanced users will use bitcoin.conf just like now and always, and for a lot of them to disable dynamic configuration. I would expect more typical users to have no bitcoin.conf file, or only a minimal one from their distro or package manager, and to manage settings through GUI and command interfaces without editing text files.",
      "created_at" : "2019-07-26T17:23:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-515534538",
      "id" : 515534538,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTUzNDUzOA==",
      "updated_at" : "2019-07-26T17:24:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515534538",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The base PR #15934 is merged. Looking forward to reviewing this once it's rebased!",
      "created_at" : "2019-11-11T23:06:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-552657675",
      "id" : 552657675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MjY1NzY3NQ==",
      "updated_at" : "2019-11-11T23:06:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552657675",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\n>    - Standard format. The `bitcoin.conf` format works pretty well as a manual configuration mechanism. But the format is unspecified and unstable, and less appealing for use as persistent key/value store compared to JSON which is well understood and supported by many tools and libraries.\r\n\r\nThere are many JSON standards (e.g., ISO/IEC 21778, ECMA-404). Could we point the one which UniValue complies to?",
      "created_at" : "2020-01-13T09:14:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-573569801",
      "id" : 573569801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MzU2OTgwMQ==",
      "updated_at" : "2020-01-14T07:09:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/573569801",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this PR goes into the right direction and it has a few concept ACKs. @ryanofsky: can you take it out of the draft mode to get final reviews?",
      "created_at" : "2020-05-29T07:28:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-635810266",
      "id" : 635810266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNTgxMDI2Ng==",
      "updated_at" : "2020-05-29T07:28:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635810266",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r435743918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435743918"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These logprints are currently going nowhere because `InitLogging()` is called after `ReadSettingsFile()`. Not saying it is a problem.",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-06-05T07:40:27Z",
      "diff_hunk" : "@@ -372,6 +373,86 @@ bool ArgsManager::IsArgSet(const std::string& strArg) const\n     return !GetSetting(strArg).isNull();\n }\n \n+static bool GetSettingsPath(fs::path* filepath = nullptr, bool temp = false)\n+{\n+    if (gArgs.IsArgNegated(\"-settings\")) return false;\n+    if (filepath) {\n+        std::string settings = gArgs.GetArg(\"-settings\", BITCOIN_SETTINGS_FILENAME);\n+        *filepath = fs::absolute(temp ? settings + \".tmp\" : settings, GetDataDir(/* net_specific= */ true));\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::EnableSettingsFile()\n+{\n+    return GetSettingsPath();\n+}\n+\n+bool ArgsManager::ReadSettingsFile()\n+{\n+    fsbridge::ifstream file;\n+    fs::path filepath;\n+    if (!GetSettingsPath(&filepath, /* temp= */ false)) return true;\n+    file.open(filepath);\n+    if (!file.is_open()) return true; // Ok for file not to exist.\n+\n+    util::SettingsValue in;\n+    if (!in.read(std::string{std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>()})) {\n+        LogPrintf(\"Error: Unable to parse settings file %s\\n\", filepath.string());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r435743918",
      "id" : 435743918,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0MzkxOA==",
      "original_commit_id" : "6c6846cd58e33108887cea4e2a1127a56e8c7d67",
      "original_line" : 401,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 425064866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435743918",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r435744301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435744301"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Without further PRs, this part is dead code,... would it at least make sense to add a test for it?",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-06-05T07:41:15Z",
      "diff_hunk" : "@@ -372,6 +373,86 @@ bool ArgsManager::IsArgSet(const std::string& strArg) const\n     return !GetSetting(strArg).isNull();\n }\n \n+static bool GetSettingsPath(fs::path* filepath = nullptr, bool temp = false)\n+{\n+    if (gArgs.IsArgNegated(\"-settings\")) return false;\n+    if (filepath) {\n+        std::string settings = gArgs.GetArg(\"-settings\", BITCOIN_SETTINGS_FILENAME);\n+        *filepath = fs::absolute(temp ? settings + \".tmp\" : settings, GetDataDir(/* net_specific= */ true));\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::EnableSettingsFile()\n+{\n+    return GetSettingsPath();\n+}\n+\n+bool ArgsManager::ReadSettingsFile()\n+{\n+    fsbridge::ifstream file;\n+    fs::path filepath;\n+    if (!GetSettingsPath(&filepath, /* temp= */ false)) return true;\n+    file.open(filepath);\n+    if (!file.is_open()) return true; // Ok for file not to exist.\n+\n+    util::SettingsValue in;\n+    if (!in.read(std::string{std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>()})) {\n+        LogPrintf(\"Error: Unable to parse settings file %s\\n\", filepath.string());\n+        return false;\n+    }\n+    if (file.fail()) {\n+        LogPrintf(\"Error reading settings file %s\\n\", filepath.string());\n+        return false;\n+    }\n+    file.close();\n+\n+    if (!in.isObject()) {\n+        LogPrintf(\"Error: Settings file %s is not in expected key-value format.\\n\", filepath.string());\n+        return false;\n+    }\n+\n+    LOCK(cs_args);\n+    m_settings.rw_settings.clear();\n+    const std::vector<std::string>& keys = in.getKeys();\n+    const std::vector<UniValue>& values = in.getValues();\n+    for (size_t i = 0; i < keys.size(); ++i) {\n+        m_settings.rw_settings.emplace(keys[i], values[i]);\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::WriteSettingsFile() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r435744301",
      "id" : 435744301,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0NDMwMQ==",
      "original_commit_id" : "6c6846cd58e33108887cea4e2a1127a56e8c7d67",
      "original_line" : 425,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 425065377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/435744301",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reviewed the code and it looks good.\r\nTo merge this on its own, I think it would require some tests and, because this is read only currently, it should be mentioned in the `init.cpp` help as well as in the `files.md` (where the read-only note can be removed once something like #15936 is merged).",
      "created_at" : "2020-06-05T07:43:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-639315409",
      "id" : 639315409,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTMxNTQwOQ==",
      "updated_at" : "2020-06-05T07:49:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639315409",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r436190126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436190126"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r435743918\r\n\r\n> These logprints are currently going nowhere because `InitLogging()` is called after `ReadSettingsFile()`. Not saying it is a problem.\r\n\r\nGood catch, errors are returned now",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-06-05T22:21:27Z",
      "diff_hunk" : "@@ -372,6 +373,86 @@ bool ArgsManager::IsArgSet(const std::string& strArg) const\n     return !GetSetting(strArg).isNull();\n }\n \n+static bool GetSettingsPath(fs::path* filepath = nullptr, bool temp = false)\n+{\n+    if (gArgs.IsArgNegated(\"-settings\")) return false;\n+    if (filepath) {\n+        std::string settings = gArgs.GetArg(\"-settings\", BITCOIN_SETTINGS_FILENAME);\n+        *filepath = fs::absolute(temp ? settings + \".tmp\" : settings, GetDataDir(/* net_specific= */ true));\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::EnableSettingsFile()\n+{\n+    return GetSettingsPath();\n+}\n+\n+bool ArgsManager::ReadSettingsFile()\n+{\n+    fsbridge::ifstream file;\n+    fs::path filepath;\n+    if (!GetSettingsPath(&filepath, /* temp= */ false)) return true;\n+    file.open(filepath);\n+    if (!file.is_open()) return true; // Ok for file not to exist.\n+\n+    util::SettingsValue in;\n+    if (!in.read(std::string{std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>()})) {\n+        LogPrintf(\"Error: Unable to parse settings file %s\\n\", filepath.string());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r436190126",
      "id" : 436190126,
      "in_reply_to_id" : 435743918,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5MDEyNg==",
      "original_commit_id" : "6c6846cd58e33108887cea4e2a1127a56e8c7d67",
      "original_line" : 401,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 425660265,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436190126",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r436190153"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436190153"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r435744301\r\n\r\n> Without further PRs, this part is dead code,... would it at least make sense to add a test for it?\r\n\r\nAdded a write call and tests",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-06-05T22:21:33Z",
      "diff_hunk" : "@@ -372,6 +373,86 @@ bool ArgsManager::IsArgSet(const std::string& strArg) const\n     return !GetSetting(strArg).isNull();\n }\n \n+static bool GetSettingsPath(fs::path* filepath = nullptr, bool temp = false)\n+{\n+    if (gArgs.IsArgNegated(\"-settings\")) return false;\n+    if (filepath) {\n+        std::string settings = gArgs.GetArg(\"-settings\", BITCOIN_SETTINGS_FILENAME);\n+        *filepath = fs::absolute(temp ? settings + \".tmp\" : settings, GetDataDir(/* net_specific= */ true));\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::EnableSettingsFile()\n+{\n+    return GetSettingsPath();\n+}\n+\n+bool ArgsManager::ReadSettingsFile()\n+{\n+    fsbridge::ifstream file;\n+    fs::path filepath;\n+    if (!GetSettingsPath(&filepath, /* temp= */ false)) return true;\n+    file.open(filepath);\n+    if (!file.is_open()) return true; // Ok for file not to exist.\n+\n+    util::SettingsValue in;\n+    if (!in.read(std::string{std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>()})) {\n+        LogPrintf(\"Error: Unable to parse settings file %s\\n\", filepath.string());\n+        return false;\n+    }\n+    if (file.fail()) {\n+        LogPrintf(\"Error reading settings file %s\\n\", filepath.string());\n+        return false;\n+    }\n+    file.close();\n+\n+    if (!in.isObject()) {\n+        LogPrintf(\"Error: Settings file %s is not in expected key-value format.\\n\", filepath.string());\n+        return false;\n+    }\n+\n+    LOCK(cs_args);\n+    m_settings.rw_settings.clear();\n+    const std::vector<std::string>& keys = in.getKeys();\n+    const std::vector<UniValue>& values = in.getValues();\n+    for (size_t i = 0; i < keys.size(); ++i) {\n+        m_settings.rw_settings.emplace(keys[i], values[i]);\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::WriteSettingsFile() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r436190153",
      "id" : 436190153,
      "in_reply_to_id" : 435744301,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5MDE1Mw==",
      "original_commit_id" : "6c6846cd58e33108887cea4e2a1127a56e8c7d67",
      "original_line" : 425,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 425660265,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/436190153",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r438931087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438931087"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this should mention that the file is not to be manually created or modified.",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-06-11T16:53:09Z",
      "diff_hunk" : "@@ -414,6 +414,7 @@ void SetupServerArgs(NodeContext& node)\n             \"(default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, >=%u = automatically prune block files to stay under the specified target size in MiB)\", MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-reindex\", \"Rebuild chain state and block index from the blk*.dat files on disk\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-reindex-chainstate\", \"Rebuild chain state from the currently indexed blocks. When in pruning mode or if blocks on disk might be corrupted, use full -reindex instead.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-settings=<file>\", strprintf(\"Specify path to read-write settings file for storage of persistent settings. Can be disabled with -nosettings. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_SETTINGS_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r438931087",
      "id" : 438931087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzMTA4Nw==",
      "original_commit_id" : "81c2e91ca90ba11bdd15f7fca871683a39636f35",
      "original_line" : 417,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 429103830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/438931087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r441118585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441118585"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r438931087\r\n\r\n> I think this should mention that the file is not to be manually created or modified.\r\n\r\nMentioned with pointer to bitcoin.conf instead",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-06-16T20:21:48Z",
      "diff_hunk" : "@@ -414,6 +414,7 @@ void SetupServerArgs(NodeContext& node)\n             \"(default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, >=%u = automatically prune block files to stay under the specified target size in MiB)\", MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-reindex\", \"Rebuild chain state and block index from the blk*.dat files on disk\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-reindex-chainstate\", \"Rebuild chain state from the currently indexed blocks. When in pruning mode or if blocks on disk might be corrupted, use full -reindex instead.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-settings=<file>\", strprintf(\"Specify path to read-write settings file for storage of persistent settings. Can be disabled with -nosettings. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_SETTINGS_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r441118585",
      "id" : 441118585,
      "in_reply_to_id" : 438931087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExODU4NQ==",
      "original_commit_id" : "81c2e91ca90ba11bdd15f7fca871683a39636f35",
      "original_line" : 417,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 431861673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441118585",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 15b93eeea3e7077f3a8151ac7ec15c0bb07cb3a7",
      "created_at" : "2020-06-18T16:34:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-646150425",
      "id" : 646150425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NjE1MDQyNQ==",
      "updated_at" : "2020-06-18T16:34:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646150425",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-06-21T10:25:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-647109169",
      "id" : 647109169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzEwOTE2OQ==",
      "updated_at" : "2020-06-21T10:25:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647109169",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-06-21T17:15:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-647155982",
      "id" : 647155982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzE1NTk4Mg==",
      "updated_at" : "2020-06-21T17:15:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647155982",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 15b93eeea3e7077f3a8151ac7ec15c0bb07cb3a7 -> 6ec69d5e6573b620a7c7a5a9ab39a71061a063f1 ([`pr/rwset.12`](https://github.com/ryanofsky/bitcoin/commits/pr/rwset.12) -> [`pr/rwset.13`](https://github.com/ryanofsky/bitcoin/commits/pr/rwset.13), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/rwset.12-rebase..pr/rwset.13)) due to conflict with #19200",
      "created_at" : "2020-06-25T21:23:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-649825040",
      "id" : 649825040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0OTgyNTA0MA==",
      "updated_at" : "2020-06-25T21:23:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649825040",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 6ec69d5e6573b620a7c7a5a9ab39a71061a063f1",
      "created_at" : "2020-06-29T15:46:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-651204491",
      "id" : 651204491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MTIwNDQ5MQ==",
      "updated_at" : "2020-06-29T15:46:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651204491",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-07-11T08:36:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-657016086",
      "id" : 657016086,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzAxNjA4Ng==",
      "updated_at" : "2020-07-11T08:36:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657016086",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 6ec69d5e6573b620a7c7a5a9ab39a71061a063f1 -> dfe59647232a53011d6831d246bd3a01fffa96b8 ([`pr/rwset.13`](https://github.com/ryanofsky/bitcoin/commits/pr/rwset.13) -> [`pr/rwset.14`](https://github.com/ryanofsky/bitcoin/commits/pr/rwset.14), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/rwset.13-rebase..pr/rwset.14)) due to conflict with #19474",
      "created_at" : "2020-07-11T10:21:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-657035446",
      "id" : 657035446,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzAzNTQ0Ng==",
      "updated_at" : "2020-07-11T10:21:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657035446",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The many *reasons* for rejecting it remain...\r\n\r\n* Adds a THIRD config system for no reason (Note that QSettings can never be fully removed)\r\n* Difficult for users to edit the new config file (JSON doesn't support comments, even if prettified)\r\n* Impossible to edit externally while the node is running (any changes would just get written over)\r\n* Adds complexity for developers (where to put each new setting? multiple systems??)\r\n* Better alternative already exists and is well-tested (in Knots) for years (#11082, rwconf)\r\n* Introduces UniValue into non-RPC code modules\r\n",
      "created_at" : "2020-07-11T22:28:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-657139770",
      "id" : 657139770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzEzOTc3MA==",
      "updated_at" : "2020-07-11T22:28:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657139770",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453291201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453291201"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I think this would be clearer as \"File is not written to by the software and must be created manually.",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-12T09:18:04Z",
      "diff_hunk" : "@@ -50,14 +50,15 @@ Subdirectory       | File(s)               | Description\n `indexes/blockfilter/basic/`    | `fltrNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Blockfilter index filters for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n `wallets/`         |                       | [Contains wallets](#multi-wallet-environment); can be specified by `-walletdir` option; if `wallets/` subdirectory does not exist, a wallet resides in the data directory\n `./`               | `banlist.dat`         | Stores the IPs/subnets of banned nodes\n-`./`               | `bitcoin.conf`        | Contains [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`; can be specified by `-conf` option\n+`./`               | `bitcoin.conf`        | User-defined [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`. File is read-only and must be created manually. Path can be specified by `-conf` option",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453291201",
      "id" : 453291201,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTIwMQ==",
      "original_commit_id" : "dfe59647232a53011d6831d246bd3a01fffa96b8",
      "original_line" : 53,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/files.md",
      "position" : null,
      "pull_request_review_id" : 446861054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453291201",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453291296"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453291296"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: the comment above (\"Forced config > command line > ...\") should be updated.",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-12T09:19:06Z",
      "diff_hunk" : "@@ -32,6 +34,10 @@ static void MergeSettings(const Settings& settings, const std::string& section,\n     if (auto* values = FindKey(settings.command_line_options, name)) {\n         fn(SettingsSpan(*values), Source::COMMAND_LINE);\n     }\n+    // Merge in the read-write settings",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453291296",
      "id" : 453291296,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI5MTI5Ng==",
      "original_commit_id" : "dfe59647232a53011d6831d246bd3a01fffa96b8",
      "original_line" : 37,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/util/settings.cpp",
      "position" : 27,
      "pull_request_review_id" : 446861054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453291296",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453610616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453610616"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453291201\r\n\r\n> nit: I think this would be clearer as \"File is not written to by the software and must be created manually.\r\n\r\nThanks, used your suggestion",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-13T12:23:46Z",
      "diff_hunk" : "@@ -50,14 +50,15 @@ Subdirectory       | File(s)               | Description\n `indexes/blockfilter/basic/`    | `fltrNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Blockfilter index filters for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n `wallets/`         |                       | [Contains wallets](#multi-wallet-environment); can be specified by `-walletdir` option; if `wallets/` subdirectory does not exist, a wallet resides in the data directory\n `./`               | `banlist.dat`         | Stores the IPs/subnets of banned nodes\n-`./`               | `bitcoin.conf`        | Contains [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`; can be specified by `-conf` option\n+`./`               | `bitcoin.conf`        | User-defined [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`. File is read-only and must be created manually. Path can be specified by `-conf` option",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453610616",
      "id" : 453610616,
      "in_reply_to_id" : 453291201,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYxMDYxNg==",
      "original_commit_id" : "dfe59647232a53011d6831d246bd3a01fffa96b8",
      "original_line" : 53,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/files.md",
      "position" : null,
      "pull_request_review_id" : 447200373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453610616",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453610673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453610673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453291296\r\n\r\n> nit: the comment above (\"Forced config > command line > ...\") should be updated.\r\n\r\nThanks, updated",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-13T12:23:54Z",
      "diff_hunk" : "@@ -32,6 +34,10 @@ static void MergeSettings(const Settings& settings, const std::string& section,\n     if (auto* values = FindKey(settings.command_line_options, name)) {\n         fn(SettingsSpan(*values), Source::COMMAND_LINE);\n     }\n+    // Merge in the read-write settings",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453610673",
      "id" : 453610673,
      "in_reply_to_id" : 453291296,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYxMDY3Mw==",
      "original_commit_id" : "dfe59647232a53011d6831d246bd3a01fffa96b8",
      "original_line" : 37,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/util/settings.cpp",
      "position" : 27,
      "pull_request_review_id" : 447200373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453610673",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reACK 7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "created_at" : "2020-07-13T13:07:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-657549772",
      "id" : 657549772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzU0OTc3Mg==",
      "updated_at" : "2020-07-13T13:07:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657549772",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-657139770\r\n\r\n> * Adds a THIRD config system for no reason \r\n\r\nThis PR allows #15936 to completely replace QSettings as a source of bitcoin node and wallet settings. There are three sources of node and wallet settings currently (runtime command line settings, stored QSettings, and static bitcoin.conf settings), and there will be 3 sources after this PR and #15936.\r\n\r\n> (Note that QSettings can never be fully removed)\r\n\r\nNot sure why it couldn't be removed, but I think QSettings is a reasonable place to store gui specific settings like window positions, and to have a datadir override. I think we all agree QSettings is not a good place to store node or wallet settings, though.\r\n\r\n> * Difficult for users to edit the new config file (JSON doesn't support comments, even if prettified)\r\n\r\nI think this is an advantage, not a disadvantage, but I'd be curious if there are specific use-cases where it is a disadvantage.\r\n\r\nI think current bitcoin.conf file is good place for static settings. These settings can be provided by distros and packages, and created by more advanced users who are comfortable creating text files, learning a syntax, writing comments, and may want to integrate with their bitcoin configs with version control systems like git, or configurationÂ management systems like ansible.\r\n\r\nThe settings.json file is not intended to be another source of static settings. It is intended to be a storage location for dynamic settings. I don't think users should have to edit text files and start and stop their nodes just so they they can save few settings. They should be able to update settings with real-time error checking using simple GUI and RPC interfaces. I think it's good that the saved settings format doesn't encourage comments or manual editing, because comments for dynamic settings will get outdated as settings are updated, and we don't need an alternative to bitcoin.conf for manual editing.\r\n\r\n> * Impossible to edit externally while the node is running (any changes would just get written over)\r\n\r\nThis is not the case in this PR which just loads and saves settings on startup. #15937 does overwrite settings, though. I think this is fine, but if a different behavior like merging settings is more appropriate, it'd be easy to implement there. Again I think it would be useful to know some specific use cases where this would be a good idea.\r\n\r\n> * Adds complexity for developers (where to put each new setting? multiple systems??)\r\n\r\nSettings from command line, bitcoin.conf, and settings.json are all merged so I don't think there is a concern about where to put settings. Unclear what the specific concern or demand is here.\r\n\r\n> * Better alternative already exists and is well-tested (in Knots) for years (#11082, rwconf)\r\n\r\nI reviewed #11082 in detail (https://github.com/bitcoin/bitcoin/pull/11082#pullrequestreview-186204085) and wrote this PR to be a more robust alternative. I think knots can pretty easily stay backwards compatible by loading the ini file and calling WriteSettings, if that's the specific concern.\r\n\r\n> * Introduces UniValue into non-RPC code modules\r\n\r\nAgain I see this as an advantage not a disadvantage. If there is a new settings source, there has to be some new API for reading and writing settings. UniValue for all its quirks is a reasonable way of passing settings values around a simple API. It's easier to use, higher level, and more flexible than the new api from #11082:\r\n\r\n```c++\r\n  void ModifyRWConfigFile(const std::map<std::string, std::string>& settings_to_change);\r\n  void ModifyRWConfigFile(const std::string& setting_to_change, const std::string& new_value);\r\n  void EraseRWConfigFile();\r\n```\r\n\r\nUniValue is also familiar and already used in thousands of lines of bitcoin code.\r\n\r\nAnother nice side effect of using UniValue is that it avoids the need to add [new parsing code](https://github.com/luke-jr/bitcoin/blob/78bc86711a8e6ef3e43402c42d84874161ad0033/src/util/system.cpp#L932-L1092), partially duplicating [existing parsing code](https://github.com/bitcoin/bitcoin/blob/d52bfc49161721fd55b9312549b3da674da387fe/src/util/system.cpp#L670-L713) that will need to be kept in sync. I also think it's possible that as [well tested](https://github.com/luke-jr/bitcoin/blob/78bc86711a8e6ef3e43402c42d84874161ad0033/src/test/util_tests.cpp#L2178-L2315) as the #11082 new parsing code may be, UniValue probably has better test coverage and has been through more testing for correctness and vulnerabilities at this point, like the test suite I added https://github.com/jgarzik/univalue/pull/30.\r\n\r\nUniValue also has support for list settings, which the #11082 API does not support. And it does not mangle strings. It has no problem with `#` or `\\n` characters.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at" : "2020-07-13T14:02:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-657580058",
      "id" : 657580058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzU4MDA1OA==",
      "updated_at" : "2020-07-13T14:02:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657580058",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456907433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456907433"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ced5588a7815de2d1b2e08ebd9979fa29ac0d3f2\r\n```suggestion\r\n    const std::vector<SettingsValue>& in_values = in.getValues();\r\n```",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-19T13:13:02Z",
      "diff_hunk" : "@@ -49,6 +50,62 @@ static void MergeSettings(const Settings& settings, const std::string& section,\n }\n } // namespace\n \n+bool ReadSettings(const fs::path& path, std::map<std::string, SettingsValue>& values, std::vector<std::string>& errors)\n+{\n+    values.clear();\n+    errors.clear();\n+\n+    fsbridge::ifstream file;\n+    file.open(path);\n+    if (!file.is_open()) return true; // Ok for file not to exist.\n+\n+    SettingsValue in;\n+    if (!in.read(std::string{std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>()})) {\n+        errors.emplace_back(strprintf(\"Unable to parse settings file %s\", path.string()));\n+        return false;\n+    }\n+\n+    if (file.fail()) {\n+        errors.emplace_back(strprintf(\"Failed reading settings file %s\", path.string()));\n+        return false;\n+    }\n+    file.close();\n+\n+    if (!in.isObject()) {\n+        errors.emplace_back(strprintf(\"Found non-object value %s in settings file %s\", in.write(), path.string()));\n+        return false;\n+    }\n+\n+    const std::vector<std::string>& in_keys = in.getKeys();\n+    const std::vector<UniValue>& in_values = in.getValues();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456907433",
      "id" : 456907433,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkwNzQzMw==",
      "original_commit_id" : "ced5588a7815de2d1b2e08ebd9979fa29ac0d3f2",
      "original_line" : 80,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/util/settings.cpp",
      "position" : null,
      "pull_request_review_id" : 451130716,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456907433",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456908798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456908798"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n`./`               | `bitcoin.conf`        | User-defined read-only [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`. File must be created manually. Path can be specified by `-conf` option\r\n```",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-19T13:26:16Z",
      "diff_hunk" : "@@ -50,14 +50,15 @@ Subdirectory       | File(s)               | Description\n `indexes/blockfilter/basic/`    | `fltrNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Blockfilter index filters for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n `wallets/`         |                       | [Contains wallets](#multi-wallet-environment); can be specified by `-walletdir` option; if `wallets/` subdirectory does not exist, a wallet resides in the data directory\n `./`               | `banlist.dat`         | Stores the IPs/subnets of banned nodes\n-`./`               | `bitcoin.conf`        | Contains [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`; can be specified by `-conf` option\n+`./`               | `bitcoin.conf`        | User-defined [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`. File is not written to by the software and must be created manually. Path can be specified by `-conf` option",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456908798",
      "id" : 456908798,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkwODc5OA==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 53,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/files.md",
      "position" : 5,
      "pull_request_review_id" : 451131730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456908798",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456909017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456909017"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n`./`               | `settings.json`       | Read-write settings set through GUI or RPC interfaces, augmenting manual settings from [bitcoin.conf](bitcoin-conf.md). File is created automatically if read-write settings storage is not disabled with `-nosettings` option. Path can be specified with `-settings` option\r\n```",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-19T13:28:39Z",
      "diff_hunk" : "@@ -50,14 +50,15 @@ Subdirectory       | File(s)               | Description\n `indexes/blockfilter/basic/`    | `fltrNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Blockfilter index filters for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n `wallets/`         |                       | [Contains wallets](#multi-wallet-environment); can be specified by `-walletdir` option; if `wallets/` subdirectory does not exist, a wallet resides in the data directory\n `./`               | `banlist.dat`         | Stores the IPs/subnets of banned nodes\n-`./`               | `bitcoin.conf`        | Contains [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`; can be specified by `-conf` option\n+`./`               | `bitcoin.conf`        | User-defined [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`. File is not written to by the software and must be created manually. Path can be specified by `-conf` option\n `./`               | `bitcoind.pid`        | Stores the process ID (PID) of `bitcoind` or `bitcoin-qt` while running; created at start and deleted on shutdown; can be specified by `-pid` option\n `./`               | `debug.log`           | Contains debug information and general logging generated by `bitcoind` or `bitcoin-qt`; can be specified by `-debuglogfile` option\n `./`               | `fee_estimates.dat`   | Stores statistics used to estimate minimum transaction fees and priorities required for confirmation\n `./`               | `guisettings.ini.bak` | Backup of former [GUI settings](#gui-settings) after `-resetguisettings` option is used\n `./`               | `mempool.dat`         | Dump of the mempool's transactions\n `./`               | `onion_private_key`   | Cached Tor hidden service private key for `-listenonion` option\n `./`               | `peers.dat`           | Peer IP address database (custom format)\n+`./`               | `settings.json`        | Read-write settings set though GUI or RPC interfaces, augmenting manual settings from bitcoin.conf. File is created automatically if read-write setting storage is not disabled with `-nosettings` option. Path can be specified with `-settings` option",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456909017",
      "id" : 456909017,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkwOTAxNw==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 61,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "doc/files.md",
      "position" : null,
      "pull_request_review_id" : 451131730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456909017",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456909268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456909268"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify path to read-only configuration file. Relative path will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\r\n```",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-19T13:30:43Z",
      "diff_hunk" : "@@ -397,7 +397,7 @@ void SetupServerArgs(NodeContext& node)\n #endif\n     gArgs.AddArg(\"-blockreconstructionextratxn=<n>\", strprintf(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Automatic broadcast and rebroadcast of any transactions from inbound peers is disabled, unless the peer has the 'forcerelay' permission. RPC transactions are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify path to read-only configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456909268",
      "id" : 456909268,
      "line" : 400,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkwOTI2OA==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 400,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 5,
      "pull_request_review_id" : 451131730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456909268",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456910735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456910735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    gArgs.AddArg(\"-settings=<file>\", strprintf(\"Specify path to read-write settings data file. Can be disabled with -nosettings. File is written at runtime and not meant to be edited by user (use %s instead for custom settings). Relative path will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME, BITCOIN_SETTINGS_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\r\n```",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-19T13:45:14Z",
      "diff_hunk" : "@@ -418,6 +418,7 @@ void SetupServerArgs(NodeContext& node)\n             \"(default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, >=%u = automatically prune block files to stay under the specified target size in MiB)\", MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-reindex\", \"Rebuild chain state and block index from the blk*.dat files on disk\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-reindex-chainstate\", \"Rebuild chain state from the currently indexed blocks. When in pruning mode or if blocks on disk might be corrupted, use full -reindex instead.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-settings=<file>\", strprintf(\"Specify path to dynamic settings data file. Can be disabled with -nosettings. File is written at runtime and not meant to be edited by users (use %s instead for custom settings). Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME, BITCOIN_SETTINGS_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456910735",
      "id" : 456910735,
      "line" : 421,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMDczNQ==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 421,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 13,
      "pull_request_review_id" : 451131730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456910735",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456911842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456911842"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This function template is not used in this PR.",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-19T13:55:13Z",
      "diff_hunk" : "@@ -333,6 +334,39 @@ class ArgsManager\n      */\n     Optional<unsigned int> GetArgFlags(const std::string& name) const;\n \n+    /**\n+     * Read and update settings file with saved settings. This needs to be\n+     * called after SelectParams() because the settings file location is\n+     * network-specific.\n+     */\n+    bool InitSettings(std::string& error);\n+\n+    /**\n+     * Get settings file path, or return false if read-write settings were\n+     * disabled with -nosettings.\n+     */\n+    bool GetSettingsPath(fs::path* filepath = nullptr, bool temp = false) const;\n+\n+    /**\n+     * Read settings file. Push errors to vector, or log them if null.\n+     */\n+    bool ReadSettingsFile(std::vector<std::string>* errors = nullptr);\n+\n+    /**\n+     * Write settings file. Push errors to vector, or log them if null.\n+     */\n+    bool WriteSettingsFile(std::vector<std::string>* errors = nullptr) const;\n+\n+    /**\n+     * Access settings with lock held.\n+     */\n+    template <typename Fn>\n+    void LockSettings(Fn&& fn)\n+    {\n+        LOCK(cs_args);\n+        fn(m_settings);\n+    }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456911842",
      "id" : 456911842,
      "line" : 369,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTg0Mg==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 369,
      "original_position" : 44,
      "original_start_line" : 360,
      "path" : "src/util/system.h",
      "position" : 44,
      "pull_request_review_id" : 451131730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : 360,
      "start_side" : "RIGHT",
      "updated_at" : "2020-07-22T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456911842",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458069668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458069668"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456907433\r\n\r\n> [ced5588](https://github.com/bitcoin/bitcoin/commit/ced5588a7815de2d1b2e08ebd9979fa29ac0d3f2)\r\n\r\nThanks, updated\r\n",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-21T12:49:42Z",
      "diff_hunk" : "@@ -49,6 +50,62 @@ static void MergeSettings(const Settings& settings, const std::string& section,\n }\n } // namespace\n \n+bool ReadSettings(const fs::path& path, std::map<std::string, SettingsValue>& values, std::vector<std::string>& errors)\n+{\n+    values.clear();\n+    errors.clear();\n+\n+    fsbridge::ifstream file;\n+    file.open(path);\n+    if (!file.is_open()) return true; // Ok for file not to exist.\n+\n+    SettingsValue in;\n+    if (!in.read(std::string{std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>()})) {\n+        errors.emplace_back(strprintf(\"Unable to parse settings file %s\", path.string()));\n+        return false;\n+    }\n+\n+    if (file.fail()) {\n+        errors.emplace_back(strprintf(\"Failed reading settings file %s\", path.string()));\n+        return false;\n+    }\n+    file.close();\n+\n+    if (!in.isObject()) {\n+        errors.emplace_back(strprintf(\"Found non-object value %s in settings file %s\", in.write(), path.string()));\n+        return false;\n+    }\n+\n+    const std::vector<std::string>& in_keys = in.getKeys();\n+    const std::vector<UniValue>& in_values = in.getValues();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458069668",
      "id" : 458069668,
      "in_reply_to_id" : 456907433,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2OTY2OA==",
      "original_commit_id" : "ced5588a7815de2d1b2e08ebd9979fa29ac0d3f2",
      "original_line" : 80,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/util/settings.cpp",
      "position" : null,
      "pull_request_review_id" : 452419662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458069668",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070196"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456908798\r\n\r\nThis is different than John's suggestion https://github.com/bitcoin/bitcoin/pull/15935#discussion_r453610616, and maybe is stale. Can follow up with new suggestion or give a rationale if a change is needed here.",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-21T12:50:33Z",
      "diff_hunk" : "@@ -50,14 +50,15 @@ Subdirectory       | File(s)               | Description\n `indexes/blockfilter/basic/`    | `fltrNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Blockfilter index filters for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n `wallets/`         |                       | [Contains wallets](#multi-wallet-environment); can be specified by `-walletdir` option; if `wallets/` subdirectory does not exist, a wallet resides in the data directory\n `./`               | `banlist.dat`         | Stores the IPs/subnets of banned nodes\n-`./`               | `bitcoin.conf`        | Contains [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`; can be specified by `-conf` option\n+`./`               | `bitcoin.conf`        | User-defined [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`. File is not written to by the software and must be created manually. Path can be specified by `-conf` option",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070196",
      "id" : 458070196,
      "in_reply_to_id" : 456908798,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3MDE5Ng==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 53,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/files.md",
      "position" : 5,
      "pull_request_review_id" : 452419662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070196",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070279"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456909017\r\n\r\nThanks, updated\r\n",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-21T12:50:41Z",
      "diff_hunk" : "@@ -50,14 +50,15 @@ Subdirectory       | File(s)               | Description\n `indexes/blockfilter/basic/`    | `fltrNNNNN.dat`<sup>[\\[2\\]](#note2)</sup> | Blockfilter index filters for the basic filtertype; *optional*, used if `-blockfilterindex=basic`\n `wallets/`         |                       | [Contains wallets](#multi-wallet-environment); can be specified by `-walletdir` option; if `wallets/` subdirectory does not exist, a wallet resides in the data directory\n `./`               | `banlist.dat`         | Stores the IPs/subnets of banned nodes\n-`./`               | `bitcoin.conf`        | Contains [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`; can be specified by `-conf` option\n+`./`               | `bitcoin.conf`        | User-defined [configuration settings](bitcoin-conf.md) for `bitcoind` or `bitcoin-qt`. File is not written to by the software and must be created manually. Path can be specified by `-conf` option\n `./`               | `bitcoind.pid`        | Stores the process ID (PID) of `bitcoind` or `bitcoin-qt` while running; created at start and deleted on shutdown; can be specified by `-pid` option\n `./`               | `debug.log`           | Contains debug information and general logging generated by `bitcoind` or `bitcoin-qt`; can be specified by `-debuglogfile` option\n `./`               | `fee_estimates.dat`   | Stores statistics used to estimate minimum transaction fees and priorities required for confirmation\n `./`               | `guisettings.ini.bak` | Backup of former [GUI settings](#gui-settings) after `-resetguisettings` option is used\n `./`               | `mempool.dat`         | Dump of the mempool's transactions\n `./`               | `onion_private_key`   | Cached Tor hidden service private key for `-listenonion` option\n `./`               | `peers.dat`           | Peer IP address database (custom format)\n+`./`               | `settings.json`        | Read-write settings set though GUI or RPC interfaces, augmenting manual settings from bitcoin.conf. File is created automatically if read-write setting storage is not disabled with `-nosettings` option. Path can be specified with `-settings` option",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070279",
      "id" : 458070279,
      "in_reply_to_id" : 456909017,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3MDI3OQ==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 61,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "doc/files.md",
      "position" : null,
      "pull_request_review_id" : 452419662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070279",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070363"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456909268\r\n\r\nNot changing \"paths\" to \"path\" because it would be an unrelated change and inconsistent with other entries here. I think it may also be less grammatical.\r\n",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-21T12:50:50Z",
      "diff_hunk" : "@@ -397,7 +397,7 @@ void SetupServerArgs(NodeContext& node)\n #endif\n     gArgs.AddArg(\"-blockreconstructionextratxn=<n>\", strprintf(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Automatic broadcast and rebroadcast of any transactions from inbound peers is disabled, unless the peer has the 'forcerelay' permission. RPC transactions are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify path to read-only configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070363",
      "id" : 458070363,
      "in_reply_to_id" : 456909268,
      "line" : 400,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3MDM2Mw==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 400,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 5,
      "pull_request_review_id" : 452419662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070363",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070424"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456910735\r\n\r\nCould change \"users\" to \"user\" but this seems slightly worse\r\n",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-21T12:50:58Z",
      "diff_hunk" : "@@ -418,6 +418,7 @@ void SetupServerArgs(NodeContext& node)\n             \"(default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, >=%u = automatically prune block files to stay under the specified target size in MiB)\", MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-reindex\", \"Rebuild chain state and block index from the blk*.dat files on disk\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-reindex-chainstate\", \"Rebuild chain state from the currently indexed blocks. When in pruning mode or if blocks on disk might be corrupted, use full -reindex instead.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-settings=<file>\", strprintf(\"Specify path to dynamic settings data file. Can be disabled with -nosettings. File is written at runtime and not meant to be edited by users (use %s instead for custom settings). Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME, BITCOIN_SETTINGS_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070424",
      "id" : 458070424,
      "in_reply_to_id" : 456910735,
      "line" : 421,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3MDQyNA==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 421,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 13,
      "pull_request_review_id" : 452419662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070424",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070505"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r456911842\r\n\r\n> This function template is not used in this PR.\r\n\r\nRight, it is used by #15936 and #15937",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-21T12:51:06Z",
      "diff_hunk" : "@@ -333,6 +334,39 @@ class ArgsManager\n      */\n     Optional<unsigned int> GetArgFlags(const std::string& name) const;\n \n+    /**\n+     * Read and update settings file with saved settings. This needs to be\n+     * called after SelectParams() because the settings file location is\n+     * network-specific.\n+     */\n+    bool InitSettings(std::string& error);\n+\n+    /**\n+     * Get settings file path, or return false if read-write settings were\n+     * disabled with -nosettings.\n+     */\n+    bool GetSettingsPath(fs::path* filepath = nullptr, bool temp = false) const;\n+\n+    /**\n+     * Read settings file. Push errors to vector, or log them if null.\n+     */\n+    bool ReadSettingsFile(std::vector<std::string>* errors = nullptr);\n+\n+    /**\n+     * Write settings file. Push errors to vector, or log them if null.\n+     */\n+    bool WriteSettingsFile(std::vector<std::string>* errors = nullptr) const;\n+\n+    /**\n+     * Access settings with lock held.\n+     */\n+    template <typename Fn>\n+    void LockSettings(Fn&& fn)\n+    {\n+        LOCK(cs_args);\n+        fn(m_settings);\n+    }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458070505",
      "id" : 458070505,
      "in_reply_to_id" : 456911842,
      "line" : 369,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3MDUwNQ==",
      "original_commit_id" : "7b129c849b4e3dae1e6f54c8d395f57a2c248388",
      "original_line" : 369,
      "original_position" : 44,
      "original_start_line" : 360,
      "path" : "src/util/system.h",
      "position" : 44,
      "pull_request_review_id" : 452419662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : 360,
      "start_side" : "RIGHT",
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458070505",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK b25ed47202a3c2f47f1c35629901ac9afc7453a1\r\n\r\nIt feels like this is ready for merge if @hebasto @achow101 and @meshcollider re-ACKed",
      "created_at" : "2020-07-21T13:30:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-661862653",
      "id" : 661862653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MTg2MjY1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-21T13:30:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/661862653",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK b25ed47202a3c2f47f1c35629901ac9afc7453a1",
      "created_at" : "2020-07-21T16:17:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-661958713",
      "id" : 661958713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MTk1ODcxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-21T16:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/661958713",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458619533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458619533"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why? Either this is redundant because this is already called when `file` goes out of scope, or it should be called before `file.fail()` (in cause you want to check for some kind of failure)",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-22T08:20:21Z",
      "diff_hunk" : "@@ -49,6 +55,62 @@ static void MergeSettings(const Settings& settings, const std::string& section,\n }\n } // namespace\n \n+bool ReadSettings(const fs::path& path, std::map<std::string, SettingsValue>& values, std::vector<std::string>& errors)\n+{\n+    values.clear();\n+    errors.clear();\n+\n+    fsbridge::ifstream file;\n+    file.open(path);\n+    if (!file.is_open()) return true; // Ok for file not to exist.\n+\n+    SettingsValue in;\n+    if (!in.read(std::string{std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>()})) {\n+        errors.emplace_back(strprintf(\"Unable to parse settings file %s\", path.string()));\n+        return false;\n+    }\n+\n+    if (file.fail()) {\n+        errors.emplace_back(strprintf(\"Failed reading settings file %s\", path.string()));\n+        return false;\n+    }\n+    file.close();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458619533",
      "id" : 458619533,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYxOTUzMw==",
      "original_commit_id" : "b25ed47202a3c2f47f1c35629901ac9afc7453a1",
      "original_line" : 77,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/util/settings.cpp",
      "position" : null,
      "pull_request_review_id" : 453097605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458619533",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458620301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458620301"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: Should say PACKAGE_NAME, but that seems a bit too verbose. Might as well remove\r\n\r\n```suggestion\r\n//! Stored settings. This struct combines settings from the command line,\r\n```",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-22T08:21:42Z",
      "diff_hunk" : "@@ -24,19 +26,31 @@ namespace util {\n //!       https://github.com/bitcoin/bitcoin/pull/15934/files#r337691812)\n using SettingsValue = UniValue;\n \n-//! Stored bitcoin settings. This struct combines settings from the command line\n-//! and a read-only configuration file.\n+//! Stored bitcoin settings. This struct combines settings from the command line,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458620301",
      "id" : 458620301,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyMDMwMQ==",
      "original_commit_id" : "b25ed47202a3c2f47f1c35629901ac9afc7453a1",
      "original_line" : 29,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/util/settings.h",
      "position" : null,
      "pull_request_review_id" : 453097605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458620301",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458621072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458621072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "any reason to add dead code?",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-22T08:23:00Z",
      "diff_hunk" : "@@ -372,6 +373,84 @@ bool ArgsManager::IsArgSet(const std::string& strArg) const\n     return !GetSetting(strArg).isNull();\n }\n \n+bool ArgsManager::InitSettings(std::string& error)\n+{\n+    if (!GetSettingsPath()) {\n+        return true; // Do nothing if settings file disabled.\n+    }\n+\n+    std::vector<std::string> errors;\n+    if (!ReadSettingsFile(&errors)) {\n+        error = strprintf(\"Failed loading settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        return false;\n+    }\n+    if (!WriteSettingsFile(&errors)) {\n+        error = strprintf(\"Failed saving settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::GetSettingsPath(fs::path* filepath, bool temp) const\n+{\n+    if (IsArgNegated(\"-settings\")) {\n+        return false;\n+    }\n+    if (filepath) {\n+        std::string settings = GetArg(\"-settings\", BITCOIN_SETTINGS_FILENAME);\n+        *filepath = fs::absolute(temp ? settings + \".tmp\" : settings, GetDataDir(/* net_specific= */ true));\n+    }\n+    return true;\n+}\n+\n+static void SaveErrors(const std::vector<std::string> errors, std::vector<std::string>* error_out)\n+{\n+    for (const auto& error : errors) {\n+        if (error_out) {\n+            error_out->emplace_back(error);\n+        } else {\n+            LogPrintf(\"%s\\n\", error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458621072",
      "id" : 458621072,
      "line" : 412,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyMTA3Mg==",
      "original_commit_id" : "b25ed47202a3c2f47f1c35629901ac9afc7453a1",
      "original_line" : 412,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 48,
      "pull_request_review_id" : 453097605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458621072",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458709446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458709446"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/15935/total.coverage/src/util/system.cpp.gcov.html#412\r\n\r\nMy preference would be to not pass the erros as ptr, but as reference",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-22T10:59:10Z",
      "diff_hunk" : "@@ -372,6 +373,84 @@ bool ArgsManager::IsArgSet(const std::string& strArg) const\n     return !GetSetting(strArg).isNull();\n }\n \n+bool ArgsManager::InitSettings(std::string& error)\n+{\n+    if (!GetSettingsPath()) {\n+        return true; // Do nothing if settings file disabled.\n+    }\n+\n+    std::vector<std::string> errors;\n+    if (!ReadSettingsFile(&errors)) {\n+        error = strprintf(\"Failed loading settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        return false;\n+    }\n+    if (!WriteSettingsFile(&errors)) {\n+        error = strprintf(\"Failed saving settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::GetSettingsPath(fs::path* filepath, bool temp) const\n+{\n+    if (IsArgNegated(\"-settings\")) {\n+        return false;\n+    }\n+    if (filepath) {\n+        std::string settings = GetArg(\"-settings\", BITCOIN_SETTINGS_FILENAME);\n+        *filepath = fs::absolute(temp ? settings + \".tmp\" : settings, GetDataDir(/* net_specific= */ true));\n+    }\n+    return true;\n+}\n+\n+static void SaveErrors(const std::vector<std::string> errors, std::vector<std::string>* error_out)\n+{\n+    for (const auto& error : errors) {\n+        if (error_out) {\n+            error_out->emplace_back(error);\n+        } else {\n+            LogPrintf(\"%s\\n\", error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458709446",
      "id" : 458709446,
      "in_reply_to_id" : 458621072,
      "line" : 412,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcwOTQ0Ng==",
      "original_commit_id" : "b25ed47202a3c2f47f1c35629901ac9afc7453a1",
      "original_line" : 412,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 48,
      "pull_request_review_id" : 453210683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458709446",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458711399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458711399"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also, as an idea to add test coverage in the future, the failure cases that are not logic errors could be tested in the two touched files. https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/15935/total.coverage/src/util/settings.cpp.gcov.html",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-22T11:03:09Z",
      "diff_hunk" : "@@ -372,6 +373,84 @@ bool ArgsManager::IsArgSet(const std::string& strArg) const\n     return !GetSetting(strArg).isNull();\n }\n \n+bool ArgsManager::InitSettings(std::string& error)\n+{\n+    if (!GetSettingsPath()) {\n+        return true; // Do nothing if settings file disabled.\n+    }\n+\n+    std::vector<std::string> errors;\n+    if (!ReadSettingsFile(&errors)) {\n+        error = strprintf(\"Failed loading settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        return false;\n+    }\n+    if (!WriteSettingsFile(&errors)) {\n+        error = strprintf(\"Failed saving settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::GetSettingsPath(fs::path* filepath, bool temp) const\n+{\n+    if (IsArgNegated(\"-settings\")) {\n+        return false;\n+    }\n+    if (filepath) {\n+        std::string settings = GetArg(\"-settings\", BITCOIN_SETTINGS_FILENAME);\n+        *filepath = fs::absolute(temp ? settings + \".tmp\" : settings, GetDataDir(/* net_specific= */ true));\n+    }\n+    return true;\n+}\n+\n+static void SaveErrors(const std::vector<std::string> errors, std::vector<std::string>* error_out)\n+{\n+    for (const auto& error : errors) {\n+        if (error_out) {\n+            error_out->emplace_back(error);\n+        } else {\n+            LogPrintf(\"%s\\n\", error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458711399",
      "id" : 458711399,
      "in_reply_to_id" : 458621072,
      "line" : 412,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxMTM5OQ==",
      "original_commit_id" : "b25ed47202a3c2f47f1c35629901ac9afc7453a1",
      "original_line" : 412,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 48,
      "pull_request_review_id" : 453213143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:18:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458711399",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458779953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458779953"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458619533\r\n\r\n> why? Either this is redundant because this is already called when `file` goes out of scope, or it should be called before `file.fail()` (in cause you want to check for some kind of failure)\r\n\r\nJust freeing a resource that's no longer needed, added comment\r\n",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-22T13:12:08Z",
      "diff_hunk" : "@@ -49,6 +55,62 @@ static void MergeSettings(const Settings& settings, const std::string& section,\n }\n } // namespace\n \n+bool ReadSettings(const fs::path& path, std::map<std::string, SettingsValue>& values, std::vector<std::string>& errors)\n+{\n+    values.clear();\n+    errors.clear();\n+\n+    fsbridge::ifstream file;\n+    file.open(path);\n+    if (!file.is_open()) return true; // Ok for file not to exist.\n+\n+    SettingsValue in;\n+    if (!in.read(std::string{std::istreambuf_iterator<char>(file), std::istreambuf_iterator<char>()})) {\n+        errors.emplace_back(strprintf(\"Unable to parse settings file %s\", path.string()));\n+        return false;\n+    }\n+\n+    if (file.fail()) {\n+        errors.emplace_back(strprintf(\"Failed reading settings file %s\", path.string()));\n+        return false;\n+    }\n+    file.close();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458779953",
      "id" : 458779953,
      "in_reply_to_id" : 458619533,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc3OTk1Mw==",
      "original_commit_id" : "b25ed47202a3c2f47f1c35629901ac9afc7453a1",
      "original_line" : 77,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/util/settings.cpp",
      "position" : null,
      "pull_request_review_id" : 453301768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:21:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458779953",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458780065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458780065"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458620301\r\n\r\n> style-nit: Should say PACKAGE_NAME, but that seems a bit too verbose. Might as well remove\r\n\r\nThanks, updated",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-22T13:12:19Z",
      "diff_hunk" : "@@ -24,19 +26,31 @@ namespace util {\n //!       https://github.com/bitcoin/bitcoin/pull/15934/files#r337691812)\n using SettingsValue = UniValue;\n \n-//! Stored bitcoin settings. This struct combines settings from the command line\n-//! and a read-only configuration file.\n+//! Stored bitcoin settings. This struct combines settings from the command line,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458780065",
      "id" : 458780065,
      "in_reply_to_id" : 458620301,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc4MDA2NQ==",
      "original_commit_id" : "b25ed47202a3c2f47f1c35629901ac9afc7453a1",
      "original_line" : 29,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/util/settings.h",
      "position" : null,
      "pull_request_review_id" : 453301768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:21:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458780065",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458780165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458780165"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458621072\r\n\r\n> any reason to add dead code?\r\n\r\nThis is used in #15936 and #15937. Added test to quell LCOV.",
      "commit_id" : "9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8",
      "created_at" : "2020-07-22T13:12:27Z",
      "diff_hunk" : "@@ -372,6 +373,84 @@ bool ArgsManager::IsArgSet(const std::string& strArg) const\n     return !GetSetting(strArg).isNull();\n }\n \n+bool ArgsManager::InitSettings(std::string& error)\n+{\n+    if (!GetSettingsPath()) {\n+        return true; // Do nothing if settings file disabled.\n+    }\n+\n+    std::vector<std::string> errors;\n+    if (!ReadSettingsFile(&errors)) {\n+        error = strprintf(\"Failed loading settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        return false;\n+    }\n+    if (!WriteSettingsFile(&errors)) {\n+        error = strprintf(\"Failed saving settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool ArgsManager::GetSettingsPath(fs::path* filepath, bool temp) const\n+{\n+    if (IsArgNegated(\"-settings\")) {\n+        return false;\n+    }\n+    if (filepath) {\n+        std::string settings = GetArg(\"-settings\", BITCOIN_SETTINGS_FILENAME);\n+        *filepath = fs::absolute(temp ? settings + \".tmp\" : settings, GetDataDir(/* net_specific= */ true));\n+    }\n+    return true;\n+}\n+\n+static void SaveErrors(const std::vector<std::string> errors, std::vector<std::string>* error_out)\n+{\n+    for (const auto& error : errors) {\n+        if (error_out) {\n+            error_out->emplace_back(error);\n+        } else {\n+            LogPrintf(\"%s\\n\", error);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#discussion_r458780165",
      "id" : 458780165,
      "in_reply_to_id" : 458621072,
      "line" : 412,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc4MDE2NQ==",
      "original_commit_id" : "b25ed47202a3c2f47f1c35629901ac9afc7453a1",
      "original_line" : 412,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/util/system.cpp",
      "position" : 48,
      "pull_request_review_id" : 453301768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15935",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-22T13:21:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/458780165",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sorry for causing another force push. Only changes were comment and test related.\r\n\r\nApproach re-ACK 9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8 ð¾\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nApproach re-ACK 9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8 ð¾\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUib/Av/Xc5gqDLuaziBgKQFpjDzCaVlaBH+BI5UjULzIL6ql9F0kCXzwHU1l/2P\r\n4yFXMCzjjUUR2w6Qb/NJzVIYJYFoyU4kDu5E01nuMu/pvtfqnQ20/Zc2GTo5Sqd3\r\n9X5DN5xFGU6nUZmmWfsTriQzugrjaYkYPONzk4LyaIpd8i+iZnPf6Tfyu46XnTv6\r\nr+vyxGMhRdOJpl0lzQPnVAnBpHGnxKfv268edwgYmBJxRXKsMCYzk0nrIO8bBbwm\r\nhDMhMqf1pvwvehM6OURESXk6o+TeGqJ37sXxJBHO8TrXUzOfmmvmET4z3JNV5qCx\r\n4LqTkKhPSWQ/DjR7h8VCFkijfGadVbIPGztqeBpLnVORdaBvWwv6oRvLWLxl0f7Y\r\nVv9LD6bW6jTFum+ALVO4mUW9E0CzpN7zTQ0OERTXZXWw8fHW5+le+CFNmIRjVFOO\r\np4dvMwlFOW0ECMx06LuLOg00D7Eec59MRk30rG6yposECwthJd3eDX7in/tUWI1A\r\ne4MKLdVZ\r\n=dJtQ\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `6253e88b8270f1f8ad8dbba3415a37830e223905d1d01c5eb3c11cee6b400cfb  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401086253e88b8270f1f8ad8dbba3415a37830e223905d1d01c5eb3c11cee6b400cfbf010e9c6d9123e899d944380581f3504f06c08fff0107450eab59a1c199d25fefe1729f64e5508f1045f1928caf0084f6eaf0cbcdac0340083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff01081b196206f495ab488aef29a0b54e5e908f1045f1928c8f008e8d9012f24d105ae0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff01086140802efdb99668fceef70fc50536908f1045f1928c8f008e53b1cd6d2c8ea060083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010dc7ea99e8cc03beb87335fdfb2d5941008f1045f1928caf0086336eb081c698e460083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "created_at" : "2020-07-23T06:06:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-662834432",
      "id" : 662834432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MjgzNDQzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T06:06:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662834432",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 9c69cfe4c54e38edd2f54303be2f8a53dcf5bad8\r\n\r\nOnly changes are comments and an additional test file.\r\n\r\nNow that we have multiple ACKs, can we save style nits for a follow-up please?",
      "created_at" : "2020-07-23T10:17:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-662928143",
      "id" : 662928143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MjkyODE0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T10:17:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662928143",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  If there's a use-case for removing unrecognized settings in this PR, I'd be curious to hear what it is\r\n\r\nThe same reason that unrecognized settings from the config file or command line are rejected",
      "created_at" : "2020-07-23T18:26:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-663162396",
      "id" : 663162396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzE2MjM5Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T18:26:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663162396",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15935#pullrequestreview-453097605\r\n\r\n> It looks like this file is append-only, with the effect that deprecated or renamed settings will stay there forever\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-663162396\r\n\r\n> > If there's a use-case for removing unrecognized settings in this PR, I'd be curious to hear what it is\r\n> \r\n> The same reason that unrecognized settings from the config file or command line are rejected\r\n\r\nThanks for clarifying. I thought you were asking to remove unrecognized settings, not reject them with a fatal error. I would like it to be possible to define settings that will be rejected as errors (see `-require` idea below), but I don't think every unrecognized setting should be rejected as an error. Doing this would make any datadir with newer settings unloadable with older versions of bitcoin. There would be some justification for this kind of strictness with `bitcoin.conf` settings (we are less strict currently, just warning to debug.log), but it would be bad to be this strict with `settings.json` because unlike `bitcoin.conf`, `settings.json` isn't created or meant to be edited by users, so it should be able to handle version upgrades and downgrades smoothly without manual intervention.\r\n\r\nThat said, I think there are some possible future improvments:\r\n\r\n- It would be good to log `Warning: unrecognized setting 'foo' in settings.json is being ignored` or similar debug messages to make it easier to notice unrecognized settings even if they will not be fatal errors.\r\n\r\n- It would be good to add a `-require=<feature>` command-line / `bitcoin.conf` / `settings.json` option to support cases where users or developers really do want to prevent a particular datadir or configuration being loaded by a `bitcoind` that is too old or was built with features disabled. Useful feature values could be `-require=wallet` to cause an init error if bitcoin was built without wallet support, `-require=zmq` to error if there's no zmq support, `-require=wallet-compatible-db` to error if bitcoin doesn't support writing bdb 4.8 wallets, `-require=wallet-sqlite` to error if it doesn't support reading sqlite wallets, or various other feature strings. Other feature strings that might make sense (I don't know) could be things like `-require=addrv2` or `-require=wtxid-relay` or `-require=taproot` or `-require=muhash`, to refuse bitcoind startup if the binary doesn't support these things.\r\n\r\n- If or when individual bitcoin settings are deprecated and removed in the future, it would probably be good write code to strip them from `settings.json` so they don't stick around forever.\r\n\r\n",
      "created_at" : "2020-07-24T14:27:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-663566209",
      "id" : 663566209,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzU2NjIwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-24T14:27:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663566209",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed my feedback in #19624 ",
      "created_at" : "2020-07-30T08:53:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15935#issuecomment-666238539",
      "id" : 666238539,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15935",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjIzODUzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T08:53:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666238539",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
