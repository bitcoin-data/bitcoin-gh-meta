[
   {
      "author_association" : "MEMBER",
      "body" : "utACK fac174e\r\n\r\n```shell\r\n$ merge 15920\r\n[pull/15920/local-merge d4663cc6a] Merge #15920: lint: Check that all wallet args are hidden\r\n Date: Mon Apr 29 20:50:41 2019 +0800\r\n#15920 lint: Check that all wallet args are hidden into master\r\n* fac174e2d lint: Check that all wallet args are hidden (MarcoFalke) (pull/15920/head)\r\n\r\nDropping you on a shell so you can try building/testing the merged source.\r\nRun 'git diff HEAD~' to show the changes being merged.\r\nType 'exit' when done.\r\n\r\nbash-3.2$ git revert 765d5890be\r\n[pull/15920/local-merge c8412b746] Revert \"Bugfix: dummywallet: Add -ignorepartialspends to list of ignored wallet options\"\r\n 1 file changed, 1 deletion(-)\r\n\r\nbash-3.2$ test/lint/check-doc.py\r\nArgs used        : 175\r\nArgs documented  : 183\r\nArgs undocumented: 0\r\nset()\r\nArgs unknown     : 8\r\n{'-zmqpubhashtxhwm', '-zmqpubrawtxhwm', '-zmqpubhashtx', '-zmqpubrawblock', '-zmqpubrawblockhwm', '-zmqpubrawtx', '-zmqpubhashblockhwm', '-zmqpubhashblock'}\r\nTraceback (most recent call last):\r\n  File \"test/lint/check-doc.py\", line 66, in <module>\r\n    main()\r\n  File \"test/lint/check-doc.py\", line 62, in main\r\n    lint_missing_hidden_wallet_args()\r\n  File \"test/lint/check-doc.py\", line 57, in lint_missing_hidden_wallet_args\r\n    assert 0, \"Please add {} to the hidden args in DummyWalletInit::AddWalletOptions\".format(hidden_missing)\r\nAssertionError: Please add {'-avoidpartialspends'} to the hidden args in DummyWalletInit::AddWalletOptions\r\n\r\nbash-3.2$ git revert c8412b746\r\n[pull/15920/local-merge c40e287ad] Revert \"Revert \"Bugfix: dummywallet: Add -ignorepartialspends to list of ignored wallet options\"\"\r\n 1 file changed, 1 insertion(+)\r\n\r\nbash-3.2$ test/lint/check-doc.py\r\nArgs used        : 175\r\nArgs documented  : 183\r\nArgs undocumented: 0\r\nset()\r\nArgs unknown     : 8\r\n{'-zmqpubhashblockhwm', '-zmqpubrawtxhwm', '-zmqpubhashblock', '-zmqpubhashtx', '-zmqpubrawblockhwm', '-zmqpubrawblock', '-zmqpubrawtx', '-zmqpubhashtxhwm'}\r\n```",
      "created_at" : "2019-04-29T12:59:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15920#issuecomment-487569490",
      "id" : 487569490,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15920",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzU2OTQ5MA==",
      "updated_at" : "2019-04-29T12:59:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487569490",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "tACK fac174e2d17e06b63aa5eb20b404af00d38db26e\r\n\r\nVery nice to have a linter making sure that reviewers never have to think about this ever again :-)\r\n\r\n@fanquake Out of curiosity: what `merge` alias/script (`merge 15920` in your the shell session you posted) do you use to easily check out the PR locally? I've written such an alias/script myself for my needs but I'd rather use a less hacky packaged alias/script if available :-)",
      "created_at" : "2019-04-29T13:09:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15920#issuecomment-487573111",
      "id" : 487573111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15920",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzU3MzExMQ==",
      "updated_at" : "2019-04-29T13:11:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487573111",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift It's the [github-merge.py](https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/github-merge.py) script in `contrib/devtools`.",
      "created_at" : "2019-04-29T13:23:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15920#issuecomment-487577912",
      "id" : 487577912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15920",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzU3NzkxMg==",
      "updated_at" : "2019-04-29T13:23:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487577912",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift Linters are NOT a substitute for proper review!",
      "created_at" : "2019-04-30T04:23:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15920#issuecomment-487817569",
      "id" : 487817569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15920",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzgxNzU2OQ==",
      "updated_at" : "2019-04-30T04:23:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487817569",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr No, obviously not. Linters complement proper human review. Ideally they catch errors before any human review takes place.\r\n",
      "created_at" : "2019-04-30T08:10:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15920#issuecomment-487856324",
      "id" : 487856324,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15920",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Nzg1NjMyNA==",
      "updated_at" : "2019-04-30T08:10:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487856324",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
