[
   {
      "author_association" : "MEMBER",
      "body" : "~This is built on #15141. Only commit _[validation] Add CValidationState subclasses_ onwards are for review in this PR.~\r\n\r\n#15141 is merged. This is ready for review.",
      "created_at" : "2019-04-29T16:53:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-487657620",
      "id" : 487657620,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzY1NzYyMA==",
      "updated_at" : "2019-05-30T15:06:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487657620",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-29T17:14:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-487665138",
      "id" : 487665138,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzY2NTEzOA==",
      "updated_at" : "2019-04-29T17:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487665138",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\n\r\nI'd like to see `Invalid` and ilk return void instead of always false, and clean up the call sites correspondingly. This adds a  lines here and there, but I think it improves the readability of the code to see a false literal returned explicitly.\r\n\r\nI also somewhat think that ideally there should be a third state class which handles Corruption cases for 'system state' or something. This covers the notion that the issue is not the fault of the block or the transaction, it is an issue with our local state or implementation. Not sure it's worth the churn though, two is already a huge improvement.",
      "created_at" : "2019-04-30T05:58:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-487829136",
      "id" : 487829136,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzgyOTEzNg==",
      "updated_at" : "2019-04-30T05:58:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487829136",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-04-30T19:33:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-488085122",
      "id" : 488085122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODA4NTEyMg==",
      "updated_at" : "2019-04-30T19:33:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488085122",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I also somewhat think that ideally there should be a third state class which handles Corruption cases for 'system state' or something. This covers the notion that the issue is not the fault of the block or the transaction,\r\n\r\nThe current split is more about \"what was being tested\" not \"what was at fault\" -- that's easy to deal with via types, because you know what's being tested at compile time; but you don't know what's going to have been at fault at compile time, so I think dealing with that via the type system (ie as a third state class) wouldn't work.",
      "created_at" : "2019-05-03T00:02:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-488873982",
      "id" : 488873982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODg3Mzk4Mg==",
      "updated_at" : "2019-05-03T00:02:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488873982",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17268](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17268.html) (Epoch Mempool by JeremyRubin)\n* [#17037](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17037.html) (Testschains: Many regtests with different genesis and default datadir by jtimon)\n* [#16981](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16981.html) (Improve runtime performance of --reindex by LarryRuane)\n* [#16974](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16974.html) (Walk pindexBestHeader back to ChainActive().Tip() if it is invalid by TheBlueMatt)\n* [#16658](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16658.html) (validation: Rename CheckInputs to CheckInputScripts by jnewbery)\n* [#16333](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16333.html) (test: Set BIP34Height = 2 for regtest by MarcoFalke)\n* [#13533](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13533.html) ([tests] Reduced number of validations in tx_validationcache_tests by lucash-dev)\n* [#10443](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10443.html) (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-05-04T19:58:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-489360735",
      "id" : 489360735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTM2MDczNQ==",
      "updated_at" : "2019-10-26T23:49:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489360735",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r281706562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281706562"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`first_invalid` has been dropped, right? :-)",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-07T16:01:02Z",
      "diff_hunk" : "@@ -228,7 +229,7 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n  * @param[out] ppindex If set, the pointer will be set to point to the last new block index object for the given headers\n  * @param[out] first_invalid First header that fails validation, if one exists",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r281706562",
      "id" : 281706562,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTcwNjU2Mg==",
      "original_commit_id" : "4b4d08115519d1c3e3c105383d34141fa325b128",
      "original_position" : 19,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 234611280,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281706562",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-05-08T21:06:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-490499729",
      "id" : 490499729,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDQ5OTcyOQ==",
      "updated_at" : "2019-05-08T21:06:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490499729",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased: 8d88c8608",
      "created_at" : "2019-05-08T21:07:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-490651253",
      "id" : 490651253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY1MTI1Mw==",
      "updated_at" : "2019-05-08T21:07:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490651253",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r282250123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282250123"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good catch. Fixed.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-08T21:07:38Z",
      "diff_hunk" : "@@ -228,7 +229,7 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n  * @param[out] ppindex If set, the pointer will be set to point to the last new block index object for the given headers\n  * @param[out] first_invalid First header that fails validation, if one exists",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r282250123",
      "id" : 282250123,
      "in_reply_to_id" : 281706562,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MjI1MDEyMw==",
      "original_commit_id" : "4b4d08115519d1c3e3c105383d34141fa325b128",
      "original_position" : 19,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 235293506,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282250123",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed @practicalswift's comment: b4c8f0079059772f1bb662820c5cce8dab66237d",
      "created_at" : "2019-05-08T21:08:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-490651419",
      "id" : 490651419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY1MTQxOQ==",
      "updated_at" : "2019-05-08T21:08:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490651419",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r282468808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282468808"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: `*` is not aligned quite right\r\n\r\n```suggestion\r\n  * TODO: remove support for BIP 61 reject messages.\r\n```",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-09T12:46:54Z",
      "diff_hunk" : "@@ -12,24 +12,17 @@\n #include <primitives/transaction.h>\n #include <primitives/block.h>\n \n-/** \"reject\" message codes */\n-static const unsigned char REJECT_MALFORMED = 0x01;\n+/** A reject code must be provided for P2P reject messages. Just always send REJECT_INVALID\n+ *  TODO: remove support for BIP 61 reject messages.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r282468808",
      "id" : 282468808,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MjQ2ODgwOA==",
      "original_commit_id" : "b4c8f0079059772f1bb662820c5cce8dab66237d",
      "original_position" : 7,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 235566952,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282468808",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/425166?v=4",
         "events_url" : "https://api.github.com/users/flack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/flack/followers",
         "following_url" : "https://api.github.com/users/flack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/flack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/flack",
         "id" : 425166,
         "login" : "flack",
         "node_id" : "MDQ6VXNlcjQyNTE2Ng==",
         "organizations_url" : "https://api.github.com/users/flack/orgs",
         "received_events_url" : "https://api.github.com/users/flack/received_events",
         "repos_url" : "https://api.github.com/users/flack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/flack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/flack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/flack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r282520548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282520548"
         }
      },
      "author_association" : "MEMBER",
      "body" : "thanks. Fixed!",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-09T14:46:58Z",
      "diff_hunk" : "@@ -12,24 +12,17 @@\n #include <primitives/transaction.h>\n #include <primitives/block.h>\n \n-/** \"reject\" message codes */\n-static const unsigned char REJECT_MALFORMED = 0x01;\n+/** A reject code must be provided for P2P reject messages. Just always send REJECT_INVALID\n+ *  TODO: remove support for BIP 61 reject messages.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r282520548",
      "id" : 282520548,
      "in_reply_to_id" : 282468808,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MjUyMDU0OA==",
      "original_commit_id" : "b4c8f0079059772f1bb662820c5cce8dab66237d",
      "original_position" : 7,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 235635450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282520548",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-05-14T13:00:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-492227333",
      "id" : 492227333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MjIyNzMzMw==",
      "updated_at" : "2019-05-14T13:00:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/492227333",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2019-05-16T15:45:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-493122379",
      "id" : 493122379,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzEyMjM3OQ==",
      "updated_at" : "2019-05-16T15:45:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493122379",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-05-17T15:49:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-493503029",
      "id" : 493503029,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzUwMzAyOQ==",
      "updated_at" : "2019-05-17T15:49:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493503029",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2019-05-20T15:09:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-494028352",
      "id" : 494028352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5NDAyODM1Mg==",
      "updated_at" : "2019-05-20T15:09:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/494028352",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2019-05-23T21:07:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-495385456",
      "id" : 495385456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5NTM4NTQ1Ng==",
      "updated_at" : "2019-05-23T21:07:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/495385456",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288708634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288708634"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (1faf0c4b0120995b4361d38ca0cc0114e633955d)\r\n\r\nIt seems error prone that calls to `FromTxValidationState` and `Invalid` might actually change the state from invalid to valid. I wonder if both of these methods should start off asserting that `m_result == NONE` to reduce the risk that a previously invalid transaction or block is later treated as valid.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-29T18:27:42Z",
      "diff_hunk" : "@@ -135,12 +133,57 @@ class CValidationState {\n     bool IsError() const {\n         return mode == MODE_ERROR;\n     }\n-    ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n     std::string GetRejectReason() const { return strRejectReason; }\n     std::string GetDebugMessage() const { return strDebugMessage; }\n };\n \n+class TxValidationState : public ValidationState {\n+private:\n+    TxValidationResult m_result;\n+public:\n+    bool Invalid(TxValidationResult result, bool ret = false,\n+                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+                 const std::string &_strDebugMessage=\"\") {\n+        m_result = result;\n+        return ValidationState::Invalid(ret, _chRejectCode, _strRejectReason, _strDebugMessage);\n+    }\n+    TxValidationResult GetResult() const { return m_result; }\n+};\n+\n+class BlockValidationState : public ValidationState {\n+private:\n+    BlockValidationResult m_result;\n+public:\n+    bool Invalid(BlockValidationResult result, bool ret = false,\n+                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+                 const std::string &_strDebugMessage=\"\") {\n+        m_result = result;\n+        return ValidationState::Invalid(ret, _chRejectCode, _strRejectReason, _strDebugMessage);\n+    }\n+    BlockValidationResult GetResult() const { return m_result; }\n+    void FromTxValidationState(TxValidationState tx_state) {\n+        switch (tx_state.GetResult()) {\n+        case TxValidationResult::NONE:\n+        case TxValidationResult::TX_NOT_STANDARD:\n+        case TxValidationResult::TX_MEMPOOL_POLICY:\n+            m_result = BlockValidationResult::NONE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288708634",
      "id" : 288708634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODcwODYzNA==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 180,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 243440362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288708634",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288711702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288711702"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (1faf0c4b0120995b4361d38ca0cc0114e633955d)\r\n\r\nI might be missing something but it seems like the previous code is rewriting TX_NOT_STANDARD to CONSENSUS and the new code in FromTxValidationState would rewrite it to NONE.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-29T18:34:50Z",
      "diff_hunk" : "@@ -2019,25 +2012,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n-                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n-                    // but we can't return that, as it's not defined for a block, so\n-                    // we reset the reason flag to CONSENSUS here.\n-                    // In the event of a future soft-fork, we may need to\n-                    // consider whether rewriting to CONSENSUS or\n-                    // RECENT_CONSENSUS_CHANGE would be more appropriate.\n-                    state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288711702",
      "id" : 288711702,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODcxMTcwMg==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 454,
      "path" : "src/validation.cpp",
      "position" : 494,
      "pull_request_review_id" : 243440362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288711702",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288715120"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288715120"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (1faf0c4b0120995b4361d38ca0cc0114e633955d)\r\n\r\nWhy the change from BLOCK_INVALID_HEADER to CONSENSUS here?",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-29T18:42:53Z",
      "diff_hunk" : "@@ -3265,23 +3254,23 @@ static bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationSta\n         // MapBlockIndex.\n         CBlockIndex* pcheckpoint = GetLastCheckpoint(params.Checkpoints());\n         if (pcheckpoint && nHeight < pcheckpoint->nHeight)\n-            return state.Invalid(ValidationInvalidReason::BLOCK_CHECKPOINT, error(\"%s: forked chain older than last checkpoint (height %d)\", __func__, nHeight), REJECT_CHECKPOINT, \"bad-fork-prior-to-checkpoint\");\n+            return state.Invalid(BlockValidationResult::BLOCK_CHECKPOINT, error(\"%s: forked chain older than last checkpoint (height %d)\", __func__, nHeight), REJECT_CHECKPOINT, \"bad-fork-prior-to-checkpoint\");\n     }\n \n     // Check timestamp against prev\n     if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n-        return state.Invalid(ValidationInvalidReason::BLOCK_INVALID_HEADER, false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n \n     // Check timestamp\n     if (block.GetBlockTime() > nAdjustedTime + MAX_FUTURE_BLOCK_TIME)\n-        return state.Invalid(ValidationInvalidReason::BLOCK_TIME_FUTURE, false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n+        return state.Invalid(BlockValidationResult::BLOCK_BAD_TIME, false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n \n     // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n     // check for version 2, 3 and 4 upgrades\n     if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n        (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n        (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n-            return state.Invalid(ValidationInvalidReason::BLOCK_INVALID_HEADER, false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288715120",
      "id" : 288715120,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODcxNTEyMA==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 719,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 243440362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288715120",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288718619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288718619"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (1faf0c4b0120995b4361d38ca0cc0114e633955d)\r\n\r\nThis should say TxValidationResult instead of TxValidationInvalidReason",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-29T18:51:27Z",
      "diff_hunk" : "@@ -1437,18 +1436,18 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                         CScriptCheck check2(coin.out, tx, i,\n                                 flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, cacheSigStore, &txdata);\n                         if (check2())\n-                            return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n+                            return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n                     }\n                     // MANDATORY flag failures correspond to\n-                    // ValidationInvalidReason::CONSENSUS. Because CONSENSUS\n+                    // TxValidationInvalidReason::CONSENSUS. Because CONSENSUS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288718619",
      "id" : 288718619,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODcxODYxOQ==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 338,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 243440362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288718619",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288722379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288722379"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (1faf0c4b0120995b4361d38ca0cc0114e633955d)\r\n\r\nNote to other reviewers: This first commit is huge and can be easier to start reviewing if you revert the rote, mechanical changes:\r\n\r\n```sh\r\ngit checkout 1faf0c4b0120995b4361d38ca0cc0114e633955d\r\ngit grep -l ValidationState | xargs sed -i 's/BlockValidationState\\|TxValidationState/CValidationState/g'\r\ngit grep -l ValidationResult | xargs sed -i 's/BlockValidationResult\\|TxValidationResult/ValidationInvalidReason/g'\r\ngit grep -l MaybePunish | xargs sed -i 's/MaybePunishNode\\(ForBlock\\|ForTx\\)/MaybePunishNode/g'\r\ngit diff HEAD^\r\n```\r\n\r\nAfter that it's possible to easily see the mechanical changes with:\r\n\r\n```sh\r\ngit log -p -n1 -U0 --word-diff-regex=. 1faf0c4b0120995b4361d38ca0cc0114e633955d\r\n```",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-29T19:01:21Z",
      "diff_hunk" : "@@ -39,7 +39,7 @@ static void AssembleBlock(benchmark::State& state)\n         LOCK(::cs_main); // Required for ::AcceptToMemoryPool.\n \n         for (const auto& txr : txs) {\n-            CValidationState state;\n+            TxValidationState state;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288722379",
      "id" : 288722379,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODcyMjM3OQ==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 5,
      "path" : "src/bench/block_assemble.cpp",
      "position" : 6,
      "pull_request_review_id" : 243440362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288722379",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288878476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288878476"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That looks wrong to me too. Might be clearer to tell `CheckInputs()` which validation rules are consensus vs standardness though?",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T06:54:12Z",
      "diff_hunk" : "@@ -2019,25 +2012,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n-                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n-                    // but we can't return that, as it's not defined for a block, so\n-                    // we reset the reason flag to CONSENSUS here.\n-                    // In the event of a future soft-fork, we may need to\n-                    // consider whether rewriting to CONSENSUS or\n-                    // RECENT_CONSENSUS_CHANGE would be more appropriate.\n-                    state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r288878476",
      "id" : 288878476,
      "in_reply_to_id" : 288711702,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODg3ODQ3Ng==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 454,
      "path" : "src/validation.cpp",
      "position" : 494,
      "pull_request_review_id" : 243651249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288878476",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289028051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289028051"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove Reject Code from ValidationState\" (a3076817588a642b4de107dc96a76ea8939070df)\r\n\r\nIt might clearer to return an entirely new code instead of REJECT_INVALID. Calling transactions invalid when they just have low fees or are nonstandard seems to stretch the definition of invalid.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T14:56:23Z",
      "diff_hunk" : "@@ -12,20 +12,13 @@\n #include <primitives/transaction.h>\n #include <primitives/block.h>\n \n-/** \"reject\" message codes */\n-static const unsigned char REJECT_MALFORMED = 0x01;\n+/** A reject code must be provided for P2P reject messages. Just always send REJECT_INVALID\n+  * TODO: remove support for BIP 61 reject messages.\n+  */\n static const unsigned char REJECT_INVALID = 0x10;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289028051",
      "id" : 289028051,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTAyODA1MQ==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 9,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 243843522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289028051",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289031186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289031186"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove Reject Code from ValidationState\" (a3076817588a642b4de107dc96a76ea8939070df)\r\n\r\nCan you add a comment about what why BLOCK_MISSING_PREV and BLOCK_CACHED_INVALID are special here? Missing prev case seems to make sense and I see that the cached_invalid case isn't changing behavior, but I don't understand it.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T15:03:28Z",
      "diff_hunk" : "@@ -1249,9 +1248,11 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const BlockValidatio\n     std::map<uint256, std::pair<NodeId, bool>>::iterator it = mapBlockSource.find(hash);\n \n     if (state.IsInvalid()) {\n-        // Don't send reject message with code 0 or an internal reject code.\n-        if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n-            CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n+        // Send reject messages for invalid blocks",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289031186",
      "id" : 289031186,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTAzMTE4Ng==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 15,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 243843522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289031186",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289033939"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289033939"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove Reject Code from ValidationState\" (a3076817588a642b4de107dc96a76ea8939070df):\r\n\r\nNote: IIUC, there is no change in behavior here because previous `state.GetRejectCode() < REJECT_INTERNAL` condition was always true. REJECT_HIGHFEE is never triggered for p2p transactions.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T15:10:06Z",
      "diff_hunk" : "@@ -2603,8 +2604,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             LogPrint(BCLog::MEMPOOLREJ, \"%s from peer=%d was not accepted: %s\\n\", tx.GetHash().ToString(),\n                 pfrom->GetId(),\n                 FormatStateMessage(state));\n-            if (enable_bip61 && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) { // Never send AcceptToMemoryPool's internal codes over P2P\n-                connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),\n+            if (enable_bip61 && state.IsInvalid()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289033939",
      "id" : 289033939,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTAzMzkzOQ==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 56,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 243843522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289033939",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289034715"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289034715"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove Reject Code from ValidationState\" (a3076817588a642b4de107dc96a76ea8939070df)\r\n\r\nUnintentional change? Doesn't serve an obvious purpose.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T15:12:03Z",
      "diff_hunk" : "@@ -588,28 +588,28 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n     // Coinbase is only valid in a block, not as a loose transaction\n     if (tx.IsCoinBase())\n-        return state.Invalid(TxValidationResult::CONSENSUS, false, REJECT_INVALID, \"coinbase\");\n+        return state.Invalid(TxValidationResult::CONSENSUS, false, \"coinbase\");\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n-    std::string reason;\n+    std::string reason {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289034715",
      "id" : 289034715,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTAzNDcxNQ==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 9,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 243843522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289034715",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289036289"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289036289"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove Reject Code from ValidationState\" (a3076817588a642b4de107dc96a76ea8939070df)\r\n\r\nCode predates this commit, but TX_MEMPOOL_POLICY would seem to make more sense here than TX_NOT_STANDARD. It might be good to add a comment if using TX_NOT_STANDARD is important here, since it's not the obvious choice.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T15:15:41Z",
      "diff_hunk" : "@@ -735,22 +735,22 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         unsigned int nSize = entry.GetTxSize();\n \n         if (nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST)\n-            return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\",\n+            return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false, \"bad-txns-too-many-sigops\",\n                 strprintf(\"%d\", nSigOpsCost));\n \n         CAmount mempoolRejectFee = pool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);\n         if (!bypass_limits && mempoolRejectFee > 0 && nModifiedFees < mempoolRejectFee) {\n-            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", strprintf(\"%d < %d\", nModifiedFees, mempoolRejectFee));\n+            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, false, \"mempool min fee not met\", strprintf(\"%d < %d\", nModifiedFees, mempoolRejectFee));\n         }\n \n         // No transactions are allowed below minRelayTxFee except from disconnected blocks\n         if (!bypass_limits && nModifiedFees < ::minRelayTxFee.GetFee(nSize)) {\n-            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, false, REJECT_INSUFFICIENTFEE, \"min relay fee not met\", strprintf(\"%d < %d\", nModifiedFees, ::minRelayTxFee.GetFee(nSize)));\n+            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, false, \"min relay fee not met\", strprintf(\"%d < %d\", nModifiedFees, ::minRelayTxFee.GetFee(nSize)));\n         }\n \n         if (nAbsurdFee && nFees > nAbsurdFee)\n             return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289036289",
      "id" : 289036289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTAzNjI4OQ==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 97,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 243843522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289036289",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289038543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289038543"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For `FromTxValidationState()` should we assert that `tx_state.GetResult()` does not return `TX_NOT_STANDARD` or `TX_MEMPOOL_POLICY`? This should only be called from block validation code, where transactions shouldn't fail for standardness or policy reasons.\r\n\r\nI don't think `Invalid()` can change state from invalid to valid: `m_mode` is either kept as `MODE_ERROR` or changed to `MODE_INVALID`. Can you point out where I'm wrong?",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T15:20:59Z",
      "diff_hunk" : "@@ -135,12 +133,57 @@ class CValidationState {\n     bool IsError() const {\n         return mode == MODE_ERROR;\n     }\n-    ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n     std::string GetRejectReason() const { return strRejectReason; }\n     std::string GetDebugMessage() const { return strDebugMessage; }\n };\n \n+class TxValidationState : public ValidationState {\n+private:\n+    TxValidationResult m_result;\n+public:\n+    bool Invalid(TxValidationResult result, bool ret = false,\n+                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+                 const std::string &_strDebugMessage=\"\") {\n+        m_result = result;\n+        return ValidationState::Invalid(ret, _chRejectCode, _strRejectReason, _strDebugMessage);\n+    }\n+    TxValidationResult GetResult() const { return m_result; }\n+};\n+\n+class BlockValidationState : public ValidationState {\n+private:\n+    BlockValidationResult m_result;\n+public:\n+    bool Invalid(BlockValidationResult result, bool ret = false,\n+                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+                 const std::string &_strDebugMessage=\"\") {\n+        m_result = result;\n+        return ValidationState::Invalid(ret, _chRejectCode, _strRejectReason, _strDebugMessage);\n+    }\n+    BlockValidationResult GetResult() const { return m_result; }\n+    void FromTxValidationState(TxValidationState tx_state) {\n+        switch (tx_state.GetResult()) {\n+        case TxValidationResult::NONE:\n+        case TxValidationResult::TX_NOT_STANDARD:\n+        case TxValidationResult::TX_MEMPOOL_POLICY:\n+            m_result = BlockValidationResult::NONE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289038543",
      "id" : 289038543,
      "in_reply_to_id" : 288708634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTAzODU0Mw==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 180,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 243857716,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289038543",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289040293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289040293"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T15:24:56Z",
      "diff_hunk" : "@@ -1437,18 +1436,18 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                         CScriptCheck check2(coin.out, tx, i,\n                                 flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, cacheSigStore, &txdata);\n                         if (check2())\n-                            return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n+                            return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n                     }\n                     // MANDATORY flag failures correspond to\n-                    // ValidationInvalidReason::CONSENSUS. Because CONSENSUS\n+                    // TxValidationInvalidReason::CONSENSUS. Because CONSENSUS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289040293",
      "id" : 289040293,
      "in_reply_to_id" : 288718619,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTA0MDI5Mw==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 338,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 243860087,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289040293",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289042306"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289042306"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks Russ. I've added that review tip to the PR description.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T15:29:28Z",
      "diff_hunk" : "@@ -39,7 +39,7 @@ static void AssembleBlock(benchmark::State& state)\n         LOCK(::cs_main); // Required for ::AcceptToMemoryPool.\n \n         for (const auto& txr : txs) {\n-            CValidationState state;\n+            TxValidationState state;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289042306",
      "id" : 289042306,
      "in_reply_to_id" : 288722379,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTA0MjMwNg==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 5,
      "path" : "src/bench/block_assemble.cpp",
      "position" : 6,
      "pull_request_review_id" : 243862769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289042306",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289045019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289045019"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm just saying that this seems error prone, not that there currently is an error. Adding asserts to check the previous state and ensure that calling these methods never changes it from invalid to valid seems like an easy change that could prevent a serious bug. But I could be wrong about this. Maybe it wouldn't be an easy change or wouldn't be helpful in preventing bugs.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T15:35:38Z",
      "diff_hunk" : "@@ -135,12 +133,57 @@ class CValidationState {\n     bool IsError() const {\n         return mode == MODE_ERROR;\n     }\n-    ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n     std::string GetRejectReason() const { return strRejectReason; }\n     std::string GetDebugMessage() const { return strDebugMessage; }\n };\n \n+class TxValidationState : public ValidationState {\n+private:\n+    TxValidationResult m_result;\n+public:\n+    bool Invalid(TxValidationResult result, bool ret = false,\n+                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+                 const std::string &_strDebugMessage=\"\") {\n+        m_result = result;\n+        return ValidationState::Invalid(ret, _chRejectCode, _strRejectReason, _strDebugMessage);\n+    }\n+    TxValidationResult GetResult() const { return m_result; }\n+};\n+\n+class BlockValidationState : public ValidationState {\n+private:\n+    BlockValidationResult m_result;\n+public:\n+    bool Invalid(BlockValidationResult result, bool ret = false,\n+                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+                 const std::string &_strDebugMessage=\"\") {\n+        m_result = result;\n+        return ValidationState::Invalid(ret, _chRejectCode, _strRejectReason, _strDebugMessage);\n+    }\n+    BlockValidationResult GetResult() const { return m_result; }\n+    void FromTxValidationState(TxValidationState tx_state) {\n+        switch (tx_state.GetResult()) {\n+        case TxValidationResult::NONE:\n+        case TxValidationResult::TX_NOT_STANDARD:\n+        case TxValidationResult::TX_MEMPOOL_POLICY:\n+            m_result = BlockValidationResult::NONE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289045019",
      "id" : 289045019,
      "in_reply_to_id" : 288708634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTA0NTAxOQ==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 180,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 243866248,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289045019",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289086882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289086882"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In fact, I think I should just remove this method entirely. `FromTxValidationState()` is only called from three places and in each case we want the `BlockValidationState.m_result` to be set to `CONSENSUS`.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T17:19:22Z",
      "diff_hunk" : "@@ -135,12 +133,57 @@ class CValidationState {\n     bool IsError() const {\n         return mode == MODE_ERROR;\n     }\n-    ValidationInvalidReason GetReason() const { return m_reason; }\n     unsigned int GetRejectCode() const { return chRejectCode; }\n     std::string GetRejectReason() const { return strRejectReason; }\n     std::string GetDebugMessage() const { return strDebugMessage; }\n };\n \n+class TxValidationState : public ValidationState {\n+private:\n+    TxValidationResult m_result;\n+public:\n+    bool Invalid(TxValidationResult result, bool ret = false,\n+                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+                 const std::string &_strDebugMessage=\"\") {\n+        m_result = result;\n+        return ValidationState::Invalid(ret, _chRejectCode, _strRejectReason, _strDebugMessage);\n+    }\n+    TxValidationResult GetResult() const { return m_result; }\n+};\n+\n+class BlockValidationState : public ValidationState {\n+private:\n+    BlockValidationResult m_result;\n+public:\n+    bool Invalid(BlockValidationResult result, bool ret = false,\n+                 unsigned int _chRejectCode=0, const std::string &_strRejectReason=\"\",\n+                 const std::string &_strDebugMessage=\"\") {\n+        m_result = result;\n+        return ValidationState::Invalid(ret, _chRejectCode, _strRejectReason, _strDebugMessage);\n+    }\n+    BlockValidationResult GetResult() const { return m_result; }\n+    void FromTxValidationState(TxValidationState tx_state) {\n+        switch (tx_state.GetResult()) {\n+        case TxValidationResult::NONE:\n+        case TxValidationResult::TX_NOT_STANDARD:\n+        case TxValidationResult::TX_MEMPOOL_POLICY:\n+            m_result = BlockValidationResult::NONE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289086882",
      "id" : 289086882,
      "in_reply_to_id" : 288708634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTA4Njg4Mg==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 180,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 243919272,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289086882",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289087527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289087527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, this is a bug (and a very bad one!) I'm going to remove the `FromTxValidationState()` method entirely and just set the `BlockValidationState.m_result` through a call to `Invalid()` (see https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289086882).",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T17:21:05Z",
      "diff_hunk" : "@@ -2019,25 +2012,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n-                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n-                    // but we can't return that, as it's not defined for a block, so\n-                    // we reset the reason flag to CONSENSUS here.\n-                    // In the event of a future soft-fork, we may need to\n-                    // consider whether rewriting to CONSENSUS or\n-                    // RECENT_CONSENSUS_CHANGE would be more appropriate.\n-                    state.Invalid(ValidationInvalidReason::CONSENSUS, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289087527",
      "id" : 289087527,
      "in_reply_to_id" : 288711702,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTA4NzUyNw==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 454,
      "path" : "src/validation.cpp",
      "position" : 494,
      "pull_request_review_id" : 243920088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289087527",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289185259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289185259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No idea. Fixed!",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T21:45:14Z",
      "diff_hunk" : "@@ -3265,23 +3254,23 @@ static bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationSta\n         // MapBlockIndex.\n         CBlockIndex* pcheckpoint = GetLastCheckpoint(params.Checkpoints());\n         if (pcheckpoint && nHeight < pcheckpoint->nHeight)\n-            return state.Invalid(ValidationInvalidReason::BLOCK_CHECKPOINT, error(\"%s: forked chain older than last checkpoint (height %d)\", __func__, nHeight), REJECT_CHECKPOINT, \"bad-fork-prior-to-checkpoint\");\n+            return state.Invalid(BlockValidationResult::BLOCK_CHECKPOINT, error(\"%s: forked chain older than last checkpoint (height %d)\", __func__, nHeight), REJECT_CHECKPOINT, \"bad-fork-prior-to-checkpoint\");\n     }\n \n     // Check timestamp against prev\n     if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n-        return state.Invalid(ValidationInvalidReason::BLOCK_INVALID_HEADER, false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n+        return state.Invalid(BlockValidationResult::BLOCK_INVALID_HEADER, false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n \n     // Check timestamp\n     if (block.GetBlockTime() > nAdjustedTime + MAX_FUTURE_BLOCK_TIME)\n-        return state.Invalid(ValidationInvalidReason::BLOCK_TIME_FUTURE, false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n+        return state.Invalid(BlockValidationResult::BLOCK_BAD_TIME, false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n \n     // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n     // check for version 2, 3 and 4 upgrades\n     if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n        (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n        (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n-            return state.Invalid(ValidationInvalidReason::BLOCK_INVALID_HEADER, false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289185259",
      "id" : 289185259,
      "in_reply_to_id" : 288715120,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTE4NTI1OQ==",
      "original_commit_id" : "1faf0c4b0120995b4361d38ca0cc0114e633955d",
      "original_position" : 719,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 244046100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289185259",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289191664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289191664"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure if that's possible. The BIP61 reject codes are defined here: https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki#reject_version_codes.\r\n\r\nI hope we'll remove REJECT messages soon (https://github.com/bitcoin/bitcoin/pull/15437)",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-05-30T22:08:00Z",
      "diff_hunk" : "@@ -12,20 +12,13 @@\n #include <primitives/transaction.h>\n #include <primitives/block.h>\n \n-/** \"reject\" message codes */\n-static const unsigned char REJECT_MALFORMED = 0x01;\n+/** A reject code must be provided for P2P reject messages. Just always send REJECT_INVALID\n+  * TODO: remove support for BIP 61 reject messages.\n+  */\n static const unsigned char REJECT_INVALID = 0x10;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289191664",
      "id" : 289191664,
      "in_reply_to_id" : 289028051,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTE5MTY2NA==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 9,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 244054393,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289191664",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @ryanofsky and @ajtowns . I've addressed all the feedback on commit _CValidationState subclasses_.",
      "created_at" : "2019-05-30T22:09:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-497503677",
      "id" : 497503677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5NzUwMzY3Nw==",
      "updated_at" : "2019-05-30T22:09:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/497503677",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2019-06-05T11:12:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-499041078",
      "id" : 499041078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTA0MTA3OA==",
      "updated_at" : "2019-06-05T11:12:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499041078",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291185888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291185888"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (b31987c45045cc26ca7867d9d8aa645f5d36b5e6)\r\n\r\nThe previous name BLOCK_TIME_FUTURE seems more descriptive than BLOCK_BAD_TIME. It's nice how it says more specifically how the time is bad.\r\n",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-06T13:36:35Z",
      "diff_hunk" : "@@ -61,57 +57,57 @@ enum class ValidationInvalidReason {\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n      * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class BlockValidationResult {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    BLOCK_CACHED_INVALID,    //!< this object was cached as being invalid, but we don't know why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291185888",
      "id" : 291185888,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTE4NTg4OA==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 84,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 246572242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291185888",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291531592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291531592"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (b31987c45045cc26ca7867d9d8aa645f5d36b5e6)\r\n\r\nAny reason this comment is being deleted? It's little vague, but I think it's just saying that this function bans peers, and that TxRelayMayResultInDisconnect tries to avoid being banned by peers, so a change here might require a change there.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-07T10:10:28Z",
      "diff_hunk" : "@@ -973,38 +973,34 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n  * banning/disconnecting us. We use this to determine which unaccepted\n  * transactions from a whitelisted peer that we can safely relay.\n  */\n-static bool TxRelayMayResultInDisconnect(const CValidationState& state)\n-{\n-    assert(IsTransactionReason(state.GetReason()));\n-    return state.GetReason() == ValidationInvalidReason::CONSENSUS;\n+static bool TxRelayMayResultInDisconnect(const TxValidationState& state) {\n+    return state.GetResult() == TxValidationResult::CONSENSUS;\n }\n \n /**\n- * Potentially ban a node based on the contents of a CValidationState object\n+ * Potentially ban a node based on the contents of a BlockValidationState object\n  *\n  * @param[in] via_compact_block: this bool is passed in because net_processing should\n  * punish peers differently depending on whether the data was provided in a compact\n  * block message or not. If the compact block had a valid header, but contained invalid\n  * txs, the peer should not be punished. See BIP 152.\n  *\n  * @return Returns true if the peer was punished (probably disconnected)\n- *\n- * Changes here may need to be reflected in TxRelayMayResultInDisconnect().",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291531592",
      "id" : 291531592,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTUzMTU5Mg==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 23,
      "path" : "src/net_processing.cpp",
      "position" : 23,
      "pull_request_review_id" : 246572242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291531592",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291534439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291534439"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (b31987c45045cc26ca7867d9d8aa645f5d36b5e6)\r\n\r\nspelling ConnectBlock",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-07T10:19:03Z",
      "diff_hunk" : "@@ -1876,25 +1871,19 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n-                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n-                    // but we can't return that, as it's not defined for a block, so\n-                    // we reset the reason flag to CONSENSUS here.\n-                    // In the event of a future soft-fork, we may need to\n-                    // consider whether rewriting to CONSENSUS or\n-                    // RECENT_CONSENSUS_CHANGE would be more appropriate.\n-                    state.Invalid(ValidationInvalidReason::CONSENSUS, false,\n-                              state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\n-                }\n+            TxValidationState tx_state;\n+            if (!CheckInputs(tx, tx_state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                // Any transaction validation failure in ConectBlock is a block consensus failure",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291534439",
      "id" : 291534439,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTUzNDQzOQ==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 403,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 246572242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291534439",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291534635"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291534635"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (b31987c45045cc26ca7867d9d8aa645f5d36b5e6)\r\n\r\nspelling ConnectBlock",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-07T10:19:40Z",
      "diff_hunk" : "@@ -1839,20 +1838,16 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         if (!tx.IsCoinBase())\n         {\n             CAmount txfee = 0;\n-            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n-                if (!IsBlockReason(state.GetReason())) {\n-                    // CheckTxInputs may return MISSING_INPUTS or\n-                    // PREMATURE_SPEND but we can't return that, as it's not\n-                    // defined for a block, so we reset the reason flag to\n-                    // CONSENSUS here.\n-                    state.Invalid(ValidationInvalidReason::CONSENSUS, false,\n-                            state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\n-                }\n+            TxValidationState tx_state;\n+            if (!Consensus::CheckTxInputs(tx, tx_state, view, pindex->nHeight, txfee)) {\n+                // Any transaction validation failure in ConectBlock is a block consensus failure",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291534635",
      "id" : 291534635,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTUzNDYzNQ==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 356,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 246572242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291534635",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291535754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291535754"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (b31987c45045cc26ca7867d9d8aa645f5d36b5e6)\r\n\r\nTo be sure, is there no change in behavior here because IsBlockReason would always return false if CheckTxInputs set failed with any reason other than CONSENSUS? Or is there no change in behavior for some other reason? Or is there a actually a change in some cases?\r\n\r\nRelated question: Is it a problem going forward that TxValidationResult::RECENT_CONSENSUS_CHANGE will be translated to BlockValidationResult::CONSENSUS_CHANGE instead of BlockValidationResult::RECENT_CONSENSUS_CHANGE?",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-07T10:23:38Z",
      "diff_hunk" : "@@ -1839,20 +1838,16 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         if (!tx.IsCoinBase())\n         {\n             CAmount txfee = 0;\n-            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n-                if (!IsBlockReason(state.GetReason())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291535754",
      "id" : 291535754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTUzNTc1NA==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 346,
      "path" : "src/validation.cpp",
      "position" : 434,
      "pull_request_review_id" : 246572242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291535754",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291538099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291538099"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (b31987c45045cc26ca7867d9d8aa645f5d36b5e6)\r\n\r\nSimilar questions here as for the CheckTxInputs check above. What's the explanation for why there's no change in behavior here? Would CheckInputs never set reasons other than CONSENSUS and TX_NOT_STANDARD?\r\n\r\nAnd is it a problem that the recent_consensus code will be translated to just consensus?",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-07T10:31:03Z",
      "diff_hunk" : "@@ -1876,25 +1871,19 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291538099",
      "id" : 291538099,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTUzODA5OQ==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 391,
      "path" : "src/validation.cpp",
      "position" : 487,
      "pull_request_review_id" : 246572242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291538099",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291545634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291545634"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (b31987c45045cc26ca7867d9d8aa645f5d36b5e6)\r\n\r\nSimilar questions here as for the ConnectBlock checks above. What's the explanation for why there's no change in behavior here? Would CheckTransaction never set a reason besides CONSENSUS? Is it a problem that the recent_consensus code will be translated to just consensus?",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-07T10:59:33Z",
      "diff_hunk" : "@@ -2980,28 +2969,32 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n+        return state.Invalid(BlockValidationResult::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n+        return state.Invalid(BlockValidationResult::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n+            return state.Invalid(BlockValidationResult::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291545634",
      "id" : 291545634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTU0NTYzNA==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 601,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 247033493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291545634",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291556494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291556494"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15921#discussion_r289028051\r\n\r\nIn commit \"[validation] Remove Reject Code from ValidationState\" (22be379c54eb03e77803b0bbd8270082452d8fff)\r\n\r\nIt seems like this commit changing p2p codes would make more sense as a separate PR (maybe based on this PR) not mixed in with all the refactoring changes in this PR. Someone could be indifferent to the refactoring changes but want to raise an issue with the p2p change, or vice versa, so it'd be nice if any discussions would happen in separate places.\r\n\r\nAlso, I think the text in the commit message should be a release note.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-07T11:41:26Z",
      "diff_hunk" : "@@ -12,20 +12,13 @@\n #include <primitives/transaction.h>\n #include <primitives/block.h>\n \n-/** \"reject\" message codes */\n-static const unsigned char REJECT_MALFORMED = 0x01;\n+/** A reject code must be provided for P2P reject messages. Just always send REJECT_INVALID\n+  * TODO: remove support for BIP 61 reject messages.\n+  */\n static const unsigned char REJECT_INVALID = 0x10;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291556494",
      "id" : 291556494,
      "in_reply_to_id" : 289028051,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTU1NjQ5NA==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 9,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 247033493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291556494",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291802797"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291802797"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove error() calls from Invalid() calls\" (1550f781fc0a86fd318883512a7104d018cf7c56)\r\n\r\nIs it intentional to drop the `ERROR:` prefix here and elsewhere in this PR?\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/5d2ccf0ce9ca1571c650a69319fb9c1e0b626ecb/src/util/system.h#L60-L65\r\n\r\nIf so, it would be good to mention the change in behavior in the commit message, and maybe in release notes.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-08T10:47:44Z",
      "diff_hunk" : "@@ -1799,8 +1799,8 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         for (const auto& tx : block.vtx) {\n             for (size_t o = 0; o < tx->vout.size(); o++) {\n                 if (view.HaveCoin(COutPoint(tx->GetHash(), o))) {\n-                    return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): tried to overwrite transaction\"),\n-                                     \"bad-txns-BIP30\");\n+                    LogPrintf(\"ConnectBlock(): tried to overwrite transaction\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291802797",
      "id" : 291802797,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTgwMjc5Nw==",
      "original_commit_id" : "1550f781fc0a86fd318883512a7104d018cf7c56",
      "original_position" : 6,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 247363648,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291802797",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291803779"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291803779"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove unused first_invalid parameter from ProcessNewBlockHeaders()\" (3b578fdca854d230592023baf5ef7863ead317b6)\r\n\r\nNote: it looks like the last place a `first_invalid` output value was actually used was removed in 7df16e70e67c753c871797ce947ea09d7cb0e519 from #15141",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-08T11:23:59Z",
      "diff_hunk" : "@@ -229,9 +229,8 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n  * @param[out] state This may be set to an Error state if any error occurred processing them\n  * @param[in]  chainparams The params for the chain we want to connect to\n  * @param[out] ppindex If set, the pointer will be set to point to the last new block index object for the given headers\n- * @param[out] first_invalid First header that fails validation, if one exists",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291803779",
      "id" : 291803779,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTgwMzc3OQ==",
      "original_commit_id" : "3b578fdca854d230592023baf5ef7863ead317b6",
      "original_position" : 4,
      "path" : "src/validation.h",
      "position" : 21,
      "pull_request_review_id" : 247364588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291803779",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291804116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291804116"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove fMissingInputs from AcceptToMemoryPool()\" (b7e1600e4df926da35b1664c32911d909899dd44)\r\n\r\nShould remove the \"missing inputs\" argument instead of \"txn replaced\" here.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-08T11:37:18Z",
      "diff_hunk" : "@@ -152,7 +152,7 @@ class LockImpl : public Chain::Lock, public UniqueLock<CCriticalSection>\n     bool submitToMemoryPool(const CTransactionRef& tx, CAmount absurd_fee, TxValidationState& state) override\n     {\n         LockAssertion lock(::cs_main);\n-        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291804116",
      "id" : 291804116,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTgwNDExNg==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 5,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 247364588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291804116",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291804277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291804277"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove fMissingInputs from AcceptToMemoryPool()\" (b7e1600e4df926da35b1664c32911d909899dd44)\r\n\r\nThis is not a change in behavior, but it seems strange that err_string is not set in this case. It would be good to add a comment if this is intentional, because otherwise it seems like a bug.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-08T11:41:52Z",
      "diff_hunk" : "@@ -30,16 +30,15 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n     if (!fHaveMempool && !fHaveChain) {\n         // push to local node and sync with wallets\n         TxValidationState state;\n-        bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, std::move(tx), &fMissingInputs,\n+        if (!AcceptToMemoryPool(mempool, state, std::move(tx),\n                                 nullptr /* plTxnReplaced */, false /* bypass_limits */, highfee)) {\n             if (state.IsInvalid()) {\n+                if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291804277",
      "id" : 291804277,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTgwNDI3Nw==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 9,
      "path" : "src/node/transaction.cpp",
      "position" : 16,
      "pull_request_review_id" : 247364588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291804277",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291804420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291804420"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Remove fMissingInputs from AcceptToMemoryPool()\" (b7e1600e4df926da35b1664c32911d909899dd44)\r\n\r\nSeems like a bug here. It looks like this pushKV will overwrite the value set by the pushKV call added above, making it have no effect. If this is fixed, maybe the python tests below don't have to change.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-08T11:49:35Z",
      "diff_hunk" : "@@ -920,19 +920,19 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n     result_0.pushKV(\"txid\", tx_hash.GetHex());\n \n     TxValidationState state;\n-    bool missing_inputs;\n     bool test_accept_res;\n     {\n         LOCK(cs_main);\n-        test_accept_res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+        test_accept_res = AcceptToMemoryPool(mempool, state, std::move(tx),\n             nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, /* test_accept */ true);\n     }\n     result_0.pushKV(\"allowed\", test_accept_res);\n     if (!test_accept_res) {\n         if (state.IsInvalid()) {\n+            if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS) {\n+                result_0.pushKV(\"reject-reason\", \"missing-inputs\");\n+            }\n             result_0.pushKV(\"reject-reason\", strprintf(\"%s\", state.GetRejectReason()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291804420",
      "id" : 291804420,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTgwNDQyMA==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 18,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 247364588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291804420",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291823953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291823953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good catch.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-09T01:28:11Z",
      "diff_hunk" : "@@ -30,16 +30,15 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n     if (!fHaveMempool && !fHaveChain) {\n         // push to local node and sync with wallets\n         TxValidationState state;\n-        bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, std::move(tx), &fMissingInputs,\n+        if (!AcceptToMemoryPool(mempool, state, std::move(tx),\n                                 nullptr /* plTxnReplaced */, false /* bypass_limits */, highfee)) {\n             if (state.IsInvalid()) {\n+                if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291823953",
      "id" : 291823953,
      "in_reply_to_id" : 291804277,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTgyMzk1Mw==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 9,
      "path" : "src/node/transaction.cpp",
      "position" : 16,
      "pull_request_review_id" : 247386926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291823953",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291824033"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291824033"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just one more case where univalue should have different modifiers.\r\n\r\nAnyway looks like it's should be in ` else { ... }` block.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-06-09T01:33:38Z",
      "diff_hunk" : "@@ -920,19 +920,19 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n     result_0.pushKV(\"txid\", tx_hash.GetHex());\n \n     TxValidationState state;\n-    bool missing_inputs;\n     bool test_accept_res;\n     {\n         LOCK(cs_main);\n-        test_accept_res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+        test_accept_res = AcceptToMemoryPool(mempool, state, std::move(tx),\n             nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, /* test_accept */ true);\n     }\n     result_0.pushKV(\"allowed\", test_accept_res);\n     if (!test_accept_res) {\n         if (state.IsInvalid()) {\n+            if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS) {\n+                result_0.pushKV(\"reject-reason\", \"missing-inputs\");\n+            }\n             result_0.pushKV(\"reject-reason\", strprintf(\"%s\", state.GetRejectReason()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r291824033",
      "id" : 291824033,
      "in_reply_to_id" : 291804420,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MTgyNDAzMw==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 18,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 247386926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/291824033",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r299230759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/299230759"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Happy to see that `Invalid`'s parameter-declaration-clause has been cleaned-up.\r\n\r\nPerhaps you can take it one step further and also remove the two empty string default arguments here and in `TxValidationState::Invalid(..)` and `BlockValidationState::Invalid(..)`? As far as I can tell `Invalid` is always called with a reason and debug message (the way it should be called).",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-01T21:50:34Z",
      "diff_hunk" : "@@ -61,84 +46,101 @@ enum class ValidationInvalidReason {\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n      * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  */\n+enum class BlockValidationResult {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    BLOCK_CACHED_INVALID,    //!< this block was cached as being invalid and we didn't store the reason why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+};\n+\n \n-inline bool IsBlockReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::CACHED_INVALID ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_HEADER ||\n-           r == ValidationInvalidReason::BLOCK_MUTATED ||\n-           r == ValidationInvalidReason::BLOCK_MISSING_PREV ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_PREV ||\n-           r == ValidationInvalidReason::BLOCK_TIME_FUTURE ||\n-           r == ValidationInvalidReason::BLOCK_CHECKPOINT;\n-}\n \n-/** Capture information about block/transaction validation */\n-class CValidationState {\n+/** Base class for capturing information about block/transaction validation. This is subclassed\n+ *  by TxValidationState and BlockValidationState for validation information on transactions\n+ *  and blocks respectively. */\n+class ValidationState {\n private:\n     enum mode_state {\n         MODE_VALID,   //!< everything ok\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n-    } mode;\n-    ValidationInvalidReason m_reason;\n-    std::string strRejectReason;\n-    unsigned int chRejectCode;\n-    std::string strDebugMessage;\n-public:\n-    CValidationState() : mode(MODE_VALID), m_reason(ValidationInvalidReason::NONE), chRejectCode(0) {}\n-    bool Invalid(ValidationInvalidReason reasonIn, bool ret = false,\n-            unsigned int chRejectCodeIn=0, const std::string &strRejectReasonIn=\"\",\n-            const std::string &strDebugMessageIn=\"\") {\n-        m_reason = reasonIn;\n-        chRejectCode = chRejectCodeIn;\n-        strRejectReason = strRejectReasonIn;\n-        strDebugMessage = strDebugMessageIn;\n-        if (mode == MODE_ERROR)\n-            return ret;\n-        mode = MODE_INVALID;\n-        return ret;\n+    } m_mode;\n+    std::string m_reject_reason;\n+    std::string m_debug_message;\n+protected:\n+    void Invalid(const std::string &reject_reason=\"\",\n+                 const std::string &debug_message=\"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r299230759",
      "id" : 299230759,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTIzMDc1OQ==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 147,
      "path" : "src/consensus/validation.h",
      "position" : 136,
      "pull_request_review_id" : 256578516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/299230759",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r299230821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/299230821"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure if you consider `ValidationState` to be an abstract base class that should not be instantiated directly, but if you do perhaps you could add a pure virtual destructor to protect against this.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-01T21:50:47Z",
      "diff_hunk" : "@@ -61,84 +46,101 @@ enum class ValidationInvalidReason {\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n      * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  */\n+enum class BlockValidationResult {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    BLOCK_CACHED_INVALID,    //!< this block was cached as being invalid and we didn't store the reason why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+};\n+\n \n-inline bool IsBlockReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::CACHED_INVALID ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_HEADER ||\n-           r == ValidationInvalidReason::BLOCK_MUTATED ||\n-           r == ValidationInvalidReason::BLOCK_MISSING_PREV ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_PREV ||\n-           r == ValidationInvalidReason::BLOCK_TIME_FUTURE ||\n-           r == ValidationInvalidReason::BLOCK_CHECKPOINT;\n-}\n \n-/** Capture information about block/transaction validation */\n-class CValidationState {\n+/** Base class for capturing information about block/transaction validation. This is subclassed\n+ *  by TxValidationState and BlockValidationState for validation information on transactions\n+ *  and blocks respectively. */\n+class ValidationState {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r299230821",
      "id" : 299230821,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTIzMDgyMQ==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 118,
      "path" : "src/consensus/validation.h",
      "position" : 109,
      "pull_request_review_id" : 256578516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/299230821",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Not critical, but nice to have since we are tidying things up here:\r\n\r\nIn this PR the return type of `ValidationState::Invalid` method has been changed to `void`.\r\n\r\nPerhaps you can also change the return type of `ValidationState::Error`, `TxValidationState ::Invalid`, `BlockValidationState::Invalid` methods to `void`? \r\n\r\nI don't think it is the responsibility of these methods to return `false` and make assumptions on behalf of the code at the call site.",
      "created_at" : "2019-07-02T13:26:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-507676087",
      "id" : 507676087,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzY3NjA4Nw==",
      "updated_at" : "2019-07-02T13:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/507676087",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on master: https://github.com/bitcoin/bitcoin/compare/b7e1600e4df926da35b1664c32911d909899dd44..d79797b61ef986f6457235febdf5797a68683ad1\r\n\r\nI still have to address all of Russ's feedback.",
      "created_at" : "2019-07-18T18:49:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-512941146",
      "id" : 512941146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMjk0MTE0Ng==",
      "updated_at" : "2019-07-18T18:49:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512941146",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096212"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wanted to get all of these changes into the same PR. All the commits touch the same lines, so splitting the changes across multiple PRs means more rebasing for other PRs. However, what you say makes sense - I shouldn't mix P2P changes with a refactor.\r\n\r\nI've removed this commit from the branch, so this PR should be basically a refactor with very minor logging/error message changes.\r\n\r\nThe removal of Reject Code from the ValidationState object can wait until we remove REJECT messages entirely (https://github.com/bitcoin/bitcoin/pull/15437).",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T20:15:00Z",
      "diff_hunk" : "@@ -12,20 +12,13 @@\n #include <primitives/transaction.h>\n #include <primitives/block.h>\n \n-/** \"reject\" message codes */\n-static const unsigned char REJECT_MALFORMED = 0x01;\n+/** A reject code must be provided for P2P reject messages. Just always send REJECT_INVALID\n+  * TODO: remove support for BIP 61 reject messages.\n+  */\n static const unsigned char REJECT_INVALID = 0x10;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096212",
      "id" : 305096212,
      "in_reply_to_id" : 289028051,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTA5NjIxMg==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 9,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 263883385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096212",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've removed the _[validation] Remove Reject Code from ValidationState_ commit from this PR (https://github.com/bitcoin/bitcoin/compare/d79797b61ef986f6457235febdf5797a68683ad1..47380ebccfb426d3cfbb44b901dafbbde839559b). See https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096212 for reason.",
      "created_at" : "2019-07-18T20:15:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-512970717",
      "id" : 512970717,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMjk3MDcxNw==",
      "updated_at" : "2019-07-18T20:15:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512970717",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No longer part of this PR.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T20:16:15Z",
      "diff_hunk" : "@@ -588,28 +588,28 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n     // Coinbase is only valid in a block, not as a loose transaction\n     if (tx.IsCoinBase())\n-        return state.Invalid(TxValidationResult::CONSENSUS, false, REJECT_INVALID, \"coinbase\");\n+        return state.Invalid(TxValidationResult::CONSENSUS, false, \"coinbase\");\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n-    std::string reason;\n+    std::string reason {};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096666",
      "id" : 305096666,
      "in_reply_to_id" : 289034715,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTA5NjY2Ng==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 9,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 263883953,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096666",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096781"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No longer part of this PR.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T20:16:31Z",
      "diff_hunk" : "@@ -1249,9 +1248,11 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const BlockValidatio\n     std::map<uint256, std::pair<NodeId, bool>>::iterator it = mapBlockSource.find(hash);\n \n     if (state.IsInvalid()) {\n-        // Don't send reject message with code 0 or an internal reject code.\n-        if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n-            CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n+        // Send reject messages for invalid blocks",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096781",
      "id" : 305096781,
      "in_reply_to_id" : 289031186,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTA5Njc4MQ==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 15,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 263884092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096781",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096830"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096830"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No longer part of this PR.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T20:16:40Z",
      "diff_hunk" : "@@ -2603,8 +2604,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             LogPrint(BCLog::MEMPOOLREJ, \"%s from peer=%d was not accepted: %s\\n\", tx.GetHash().ToString(),\n                 pfrom->GetId(),\n                 FormatStateMessage(state));\n-            if (enable_bip61 && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) { // Never send AcceptToMemoryPool's internal codes over P2P\n-                connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),\n+            if (enable_bip61 && state.IsInvalid()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096830",
      "id" : 305096830,
      "in_reply_to_id" : 289033939,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTA5NjgzMA==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 56,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 263884167,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096830",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096904"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No longer part of this PR.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T20:16:53Z",
      "diff_hunk" : "@@ -735,22 +735,22 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         unsigned int nSize = entry.GetTxSize();\n \n         if (nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST)\n-            return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\",\n+            return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false, \"bad-txns-too-many-sigops\",\n                 strprintf(\"%d\", nSigOpsCost));\n \n         CAmount mempoolRejectFee = pool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);\n         if (!bypass_limits && mempoolRejectFee > 0 && nModifiedFees < mempoolRejectFee) {\n-            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", strprintf(\"%d < %d\", nModifiedFees, mempoolRejectFee));\n+            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, false, \"mempool min fee not met\", strprintf(\"%d < %d\", nModifiedFees, mempoolRejectFee));\n         }\n \n         // No transactions are allowed below minRelayTxFee except from disconnected blocks\n         if (!bypass_limits && nModifiedFees < ::minRelayTxFee.GetFee(nSize)) {\n-            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, false, REJECT_INSUFFICIENTFEE, \"min relay fee not met\", strprintf(\"%d < %d\", nModifiedFees, ::minRelayTxFee.GetFee(nSize)));\n+            return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, false, \"min relay fee not met\", strprintf(\"%d < %d\", nModifiedFees, ::minRelayTxFee.GetFee(nSize)));\n         }\n \n         if (nAbsurdFee && nFees > nAbsurdFee)\n             return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305096904",
      "id" : 305096904,
      "in_reply_to_id" : 289036289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTA5NjkwNA==",
      "original_commit_id" : "a3076817588a642b4de107dc96a76ea8939070df",
      "original_position" : 97,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 263884257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305096904",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305098449"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305098449"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Reverted. This PR was based on an earlier version of 15141, which I guess had the name BLOCK_BAD_TIME.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T20:21:14Z",
      "diff_hunk" : "@@ -61,57 +57,57 @@ enum class ValidationInvalidReason {\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n      * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class BlockValidationResult {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    BLOCK_CACHED_INVALID,    //!< this object was cached as being invalid, but we don't know why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305098449",
      "id" : 305098449,
      "in_reply_to_id" : 291185888,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTA5ODQ0OQ==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 84,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 263886276,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305098449",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305099507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305099507"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Because this function is to decide whether to punish a peer for a bad block. The function below is to decide whether to punish a peer for a bad tx. Changes to that function need to be reflected in `TxRelayMayResultInDisconnect()` since they're both concerned with txs.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T20:24:03Z",
      "diff_hunk" : "@@ -973,38 +973,34 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n  * banning/disconnecting us. We use this to determine which unaccepted\n  * transactions from a whitelisted peer that we can safely relay.\n  */\n-static bool TxRelayMayResultInDisconnect(const CValidationState& state)\n-{\n-    assert(IsTransactionReason(state.GetReason()));\n-    return state.GetReason() == ValidationInvalidReason::CONSENSUS;\n+static bool TxRelayMayResultInDisconnect(const TxValidationState& state) {\n+    return state.GetResult() == TxValidationResult::CONSENSUS;\n }\n \n /**\n- * Potentially ban a node based on the contents of a CValidationState object\n+ * Potentially ban a node based on the contents of a BlockValidationState object\n  *\n  * @param[in] via_compact_block: this bool is passed in because net_processing should\n  * punish peers differently depending on whether the data was provided in a compact\n  * block message or not. If the compact block had a valid header, but contained invalid\n  * txs, the peer should not be punished. See BIP 152.\n  *\n  * @return Returns true if the peer was punished (probably disconnected)\n- *\n- * Changes here may need to be reflected in TxRelayMayResultInDisconnect().",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305099507",
      "id" : 305099507,
      "in_reply_to_id" : 291531592,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTA5OTUwNw==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 23,
      "path" : "src/net_processing.cpp",
      "position" : 23,
      "pull_request_review_id" : 263887651,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305099507",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305100417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305100417"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T20:26:35Z",
      "diff_hunk" : "@@ -1876,25 +1871,19 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n-                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n-                    // but we can't return that, as it's not defined for a block, so\n-                    // we reset the reason flag to CONSENSUS here.\n-                    // In the event of a future soft-fork, we may need to\n-                    // consider whether rewriting to CONSENSUS or\n-                    // RECENT_CONSENSUS_CHANGE would be more appropriate.\n-                    state.Invalid(ValidationInvalidReason::CONSENSUS, false,\n-                              state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\n-                }\n+            TxValidationState tx_state;\n+            if (!CheckInputs(tx, tx_state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                // Any transaction validation failure in ConectBlock is a block consensus failure",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305100417",
      "id" : 305100417,
      "in_reply_to_id" : 291534439,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTEwMDQxNw==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 403,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 263888833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305100417",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305100443"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305100443"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T20:26:40Z",
      "diff_hunk" : "@@ -1839,20 +1838,16 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         if (!tx.IsCoinBase())\n         {\n             CAmount txfee = 0;\n-            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n-                if (!IsBlockReason(state.GetReason())) {\n-                    // CheckTxInputs may return MISSING_INPUTS or\n-                    // PREMATURE_SPEND but we can't return that, as it's not\n-                    // defined for a block, so we reset the reason flag to\n-                    // CONSENSUS here.\n-                    state.Invalid(ValidationInvalidReason::CONSENSUS, false,\n-                            state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\n-                }\n+            TxValidationState tx_state;\n+            if (!Consensus::CheckTxInputs(tx, tx_state, view, pindex->nHeight, txfee)) {\n+                // Any transaction validation failure in ConectBlock is a block consensus failure",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305100443",
      "id" : 305100443,
      "in_reply_to_id" : 291534635,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTEwMDQ0Mw==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 356,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 263888872,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305100443",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305130523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305130523"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Take a look at `CheckTxInputs()`. Prior to this commit, if it returned false, then `state.m_reason` could be set to:\r\n\r\n- `TX_MISSING_INPUTS`\r\n- `TX_PREMATURE_SPEND`\r\n- `CONSENSUS`\r\n\r\nIn all cases, that would be converted to `CONSENSUS`, so this is not a change in behaviour.\r\n\r\n> Is it a problem going forward that TxValidationResult::RECENT_CONSENSUS_CHANGE will be translated to BlockValidationResult::CONSENSUS_CHANGE instead of BlockValidationResult::RECENT_CONSENSUS_CHANGE?\r\n\r\nI don't think so. Anyone introducing `RECENT_CONSENSUS_CHANGE` should verify that it gets properly propagated up the call stack.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T21:53:29Z",
      "diff_hunk" : "@@ -1839,20 +1838,16 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         if (!tx.IsCoinBase())\n         {\n             CAmount txfee = 0;\n-            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n-                if (!IsBlockReason(state.GetReason())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305130523",
      "id" : 305130523,
      "in_reply_to_id" : 291535754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTEzMDUyMw==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 346,
      "path" : "src/validation.cpp",
      "position" : 434,
      "pull_request_review_id" : 263927447,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305130523",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305131125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305131125"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Would CheckInputs never set reasons other than CONSENSUS and TX_NOT_STANDARD?\r\n\r\nExactly correct.\r\n\r\n> And is it a problem that the recent_consensus code will be translated to just consensus?\r\n\r\nAs above. Any PR that introduces recent_consensus should include tests to make sure it does what it's supposed to.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T21:55:40Z",
      "diff_hunk" : "@@ -1876,25 +1871,19 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305131125",
      "id" : 305131125,
      "in_reply_to_id" : 291538099,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTEzMTEyNQ==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 391,
      "path" : "src/validation.cpp",
      "position" : 487,
      "pull_request_review_id" : 263928257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305131125",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305132168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305132168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Would CheckTransaction never set a reason besides CONSENSUS?\r\n\r\nCorrect - CheckTransaction only ever sets `CONSENSUS`.\r\n\r\n> Is it a problem that the recent_consensus\r\n\r\nas above",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T21:59:19Z",
      "diff_hunk" : "@@ -2980,28 +2969,32 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n+        return state.Invalid(BlockValidationResult::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n+        return state.Invalid(BlockValidationResult::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n+            return state.Invalid(BlockValidationResult::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305132168",
      "id" : 305132168,
      "in_reply_to_id" : 291545634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTEzMjE2OA==",
      "original_commit_id" : "b31987c45045cc26ca7867d9d8aa645f5d36b5e6",
      "original_position" : 601,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 263929602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305132168",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305134736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305134736"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can't remember whether it was intentional or not. I've re-added the `ERROR: ` prefix so there's no change in logging behaviour.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T22:08:52Z",
      "diff_hunk" : "@@ -1799,8 +1799,8 @@ bool CChainState::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         for (const auto& tx : block.vtx) {\n             for (size_t o = 0; o < tx->vout.size(); o++) {\n                 if (view.HaveCoin(COutPoint(tx->GetHash(), o))) {\n-                    return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): tried to overwrite transaction\"),\n-                                     \"bad-txns-BIP30\");\n+                    LogPrintf(\"ConnectBlock(): tried to overwrite transaction\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305134736",
      "id" : 305134736,
      "in_reply_to_id" : 291802797,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTEzNDczNg==",
      "original_commit_id" : "1550f781fc0a86fd318883512a7104d018cf7c56",
      "original_position" : 6,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 263932787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305134736",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305135189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305135189"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T22:10:32Z",
      "diff_hunk" : "@@ -152,7 +152,7 @@ class LockImpl : public Chain::Lock, public UniqueLock<CCriticalSection>\n     bool submitToMemoryPool(const CTransactionRef& tx, CAmount absurd_fee, TxValidationState& state) override\n     {\n         LockAssertion lock(::cs_main);\n-        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305135189",
      "id" : 305135189,
      "in_reply_to_id" : 291804116,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTEzNTE4OQ==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 5,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 263933356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305135189",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305136560"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305136560"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It was intentional to maintain existing behaviour, but you're right that it looks odd and buggy to anyone reading the code now. Rather than write a comment explaining that I'm maintaining existing behaviour, I'm just going to set `err_string` in all cases.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T22:15:40Z",
      "diff_hunk" : "@@ -30,16 +30,15 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n     if (!fHaveMempool && !fHaveChain) {\n         // push to local node and sync with wallets\n         TxValidationState state;\n-        bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, std::move(tx), &fMissingInputs,\n+        if (!AcceptToMemoryPool(mempool, state, std::move(tx),\n                                 nullptr /* plTxnReplaced */, false /* bypass_limits */, highfee)) {\n             if (state.IsInvalid()) {\n+                if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305136560",
      "id" : 305136560,
      "in_reply_to_id" : 291804277,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTEzNjU2MA==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 9,
      "path" : "src/node/transaction.cpp",
      "position" : 16,
      "pull_request_review_id" : 263935041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305136560",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305143245"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305143245"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd like to remove the optional parameters, but there are many calls to `Invalid()` that don't set a debug message.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T22:43:05Z",
      "diff_hunk" : "@@ -61,84 +46,101 @@ enum class ValidationInvalidReason {\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n      * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  */\n+enum class BlockValidationResult {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    BLOCK_CACHED_INVALID,    //!< this block was cached as being invalid and we didn't store the reason why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+};\n+\n \n-inline bool IsBlockReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::CACHED_INVALID ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_HEADER ||\n-           r == ValidationInvalidReason::BLOCK_MUTATED ||\n-           r == ValidationInvalidReason::BLOCK_MISSING_PREV ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_PREV ||\n-           r == ValidationInvalidReason::BLOCK_TIME_FUTURE ||\n-           r == ValidationInvalidReason::BLOCK_CHECKPOINT;\n-}\n \n-/** Capture information about block/transaction validation */\n-class CValidationState {\n+/** Base class for capturing information about block/transaction validation. This is subclassed\n+ *  by TxValidationState and BlockValidationState for validation information on transactions\n+ *  and blocks respectively. */\n+class ValidationState {\n private:\n     enum mode_state {\n         MODE_VALID,   //!< everything ok\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n-    } mode;\n-    ValidationInvalidReason m_reason;\n-    std::string strRejectReason;\n-    unsigned int chRejectCode;\n-    std::string strDebugMessage;\n-public:\n-    CValidationState() : mode(MODE_VALID), m_reason(ValidationInvalidReason::NONE), chRejectCode(0) {}\n-    bool Invalid(ValidationInvalidReason reasonIn, bool ret = false,\n-            unsigned int chRejectCodeIn=0, const std::string &strRejectReasonIn=\"\",\n-            const std::string &strDebugMessageIn=\"\") {\n-        m_reason = reasonIn;\n-        chRejectCode = chRejectCodeIn;\n-        strRejectReason = strRejectReasonIn;\n-        strDebugMessage = strDebugMessageIn;\n-        if (mode == MODE_ERROR)\n-            return ret;\n-        mode = MODE_INVALID;\n-        return ret;\n+    } m_mode;\n+    std::string m_reject_reason;\n+    std::string m_debug_message;\n+protected:\n+    void Invalid(const std::string &reject_reason=\"\",\n+                 const std::string &debug_message=\"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305143245",
      "id" : 305143245,
      "in_reply_to_id" : 299230759,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTE0MzI0NQ==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 147,
      "path" : "src/consensus/validation.h",
      "position" : 136,
      "pull_request_review_id" : 263943116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305143245",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305146828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305146828"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done. Thanks for the review!",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T22:59:24Z",
      "diff_hunk" : "@@ -61,84 +46,101 @@ enum class ValidationInvalidReason {\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n      * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  */\n+enum class BlockValidationResult {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    BLOCK_CACHED_INVALID,    //!< this block was cached as being invalid and we didn't store the reason why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+};\n+\n \n-inline bool IsBlockReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::CACHED_INVALID ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_HEADER ||\n-           r == ValidationInvalidReason::BLOCK_MUTATED ||\n-           r == ValidationInvalidReason::BLOCK_MISSING_PREV ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_PREV ||\n-           r == ValidationInvalidReason::BLOCK_TIME_FUTURE ||\n-           r == ValidationInvalidReason::BLOCK_CHECKPOINT;\n-}\n \n-/** Capture information about block/transaction validation */\n-class CValidationState {\n+/** Base class for capturing information about block/transaction validation. This is subclassed\n+ *  by TxValidationState and BlockValidationState for validation information on transactions\n+ *  and blocks respectively. */\n+class ValidationState {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305146828",
      "id" : 305146828,
      "in_reply_to_id" : 299230821,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTE0NjgyOA==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 118,
      "path" : "src/consensus/validation.h",
      "position" : 109,
      "pull_request_review_id" : 263947431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305146828",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I believe I've now addressed all comments. This should be ready for review.\r\n\r\n@l2a5b1\r\n> Perhaps you can also change the return type of ValidationState::Error, TxValidationState ::Invalid, BlockValidationState::Invalid methods to void?\r\n\r\nSeems like a reasonable change, but I'd rather not expand this PR even more. It's already making a lot of changes.",
      "created_at" : "2019-07-18T23:01:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-513024794",
      "id" : 513024794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMzAyNDc5NA==",
      "updated_at" : "2019-07-18T23:01:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513024794",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305158010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305158010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wow, that's an embarrassing bug. I think I just misread the `pushKVs` as early returns. Thanks for catching!\r\n\r\nYes, the fix here is to put this code in an `else` block. Done.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-07-18T23:55:02Z",
      "diff_hunk" : "@@ -920,19 +920,19 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n     result_0.pushKV(\"txid\", tx_hash.GetHex());\n \n     TxValidationState state;\n-    bool missing_inputs;\n     bool test_accept_res;\n     {\n         LOCK(cs_main);\n-        test_accept_res = AcceptToMemoryPool(mempool, state, std::move(tx), &missing_inputs,\n+        test_accept_res = AcceptToMemoryPool(mempool, state, std::move(tx),\n             nullptr /* plTxnReplaced */, false /* bypass_limits */, max_raw_tx_fee, /* test_accept */ true);\n     }\n     result_0.pushKV(\"allowed\", test_accept_res);\n     if (!test_accept_res) {\n         if (state.IsInvalid()) {\n+            if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS) {\n+                result_0.pushKV(\"reject-reason\", \"missing-inputs\");\n+            }\n             result_0.pushKV(\"reject-reason\", strprintf(\"%s\", state.GetRejectReason()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305158010",
      "id" : 305158010,
      "in_reply_to_id" : 291804420,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTE1ODAxMA==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 18,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 263960785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305158010",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the bad rebase in validation_block_tests.cpp.",
      "created_at" : "2019-07-18T23:55:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-513037026",
      "id" : 513037026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMzAzNzAyNg==",
      "updated_at" : "2019-07-18T23:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513037026",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2019-07-19T19:57:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-513358160",
      "id" : 513358160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMzM1ODE2MA==",
      "updated_at" : "2019-07-19T19:57:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513358160",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-07-27T11:13:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-515676278",
      "id" : 515676278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTY3NjI3OA==",
      "updated_at" : "2019-07-27T11:13:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515676278",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on master. This is now based on #17004. Please review that first.",
      "created_at" : "2019-10-01T22:37:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-537261168",
      "id" : 537261168,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNzI2MTE2OA==",
      "updated_at" : "2019-10-01T22:37:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537261168",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15921#pullrequestreview-247365826\r\n\r\n> Conditional utACK [b7e1600](https://github.com/bitcoin/bitcoin/commit/b7e1600e4df926da35b1664c32911d909899dd44) if a few comments are addressed\r\n\r\nIt's been a while, but this is next on my review list after 16341 (giant achow keyman pr), so I didn't forget about this. It may help to add \"**Based on  #15437 and #17004**\" to the top of the PR description to make this seem less big and show other reviewers where to look first.",
      "created_at" : "2019-10-02T14:28:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-537519003",
      "id" : 537519003,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNzUxOTAwMw==",
      "updated_at" : "2019-10-02T14:28:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537519003",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r332602177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332602177"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (907ef02667b6c224df1457b67b7d7950cd58494f)\r\n\r\nA previous version of this commit changed \"something\" to \"a transaction\" and \"object\" to \"tx\". Would be nice to keep these changes.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-08T16:08:57Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@\n /** A \"reason\" why something was invalid, suitable for determining whether the\n   * provider of the object should be banned/ignored/disconnected/etc.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r332602177",
      "id" : 332602177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjYwMjE3Nw==",
      "original_commit_id" : "907ef02667b6c224df1457b67b7d7950cd58494f",
      "original_position" : 2,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 298880373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332602177",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r332605565"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332605565"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (907ef02667b6c224df1457b67b7d7950cd58494f)\r\n\r\nCould s/ValidationInvalidReason/TxValidationResult/ here like previous versions of this commit",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-08T16:16:06Z",
      "diff_hunk" : "@@ -1547,7 +1546,7 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                 CScriptCheck check2(coin.out, tx, i,\n                         flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, cacheSigStore, &txdata);\n                 if (check2())\n-                    return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n+                    return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n             }\n             // MANDATORY flag failures correspond to\n             // ValidationInvalidReason::CONSENSUS. Because CONSENSUS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r332605565",
      "id" : 332605565,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjYwNTU2NQ==",
      "original_commit_id" : "907ef02667b6c224df1457b67b7d7950cd58494f",
      "original_position" : 328,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 298880373,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332605565",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r332717532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332717532"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-08T20:29:04Z",
      "diff_hunk" : "@@ -15,7 +15,7 @@\n /** A \"reason\" why something was invalid, suitable for determining whether the\n   * provider of the object should be banned/ignored/disconnected/etc.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r332717532",
      "id" : 332717532,
      "in_reply_to_id" : 332602177,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjcxNzUzMg==",
      "original_commit_id" : "907ef02667b6c224df1457b67b7d7950cd58494f",
      "original_position" : 2,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 299029582,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332717532",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r332717563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332717563"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fixed",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-08T20:29:07Z",
      "diff_hunk" : "@@ -1547,7 +1546,7 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                 CScriptCheck check2(coin.out, tx, i,\n                         flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, cacheSigStore, &txdata);\n                 if (check2())\n-                    return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n+                    return state.Invalid(TxValidationResult::TX_NOT_STANDARD, false, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n             }\n             // MANDATORY flag failures correspond to\n             // ValidationInvalidReason::CONSENSUS. Because CONSENSUS",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r332717563",
      "id" : 332717563,
      "in_reply_to_id" : 332605565,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjcxNzU2Mw==",
      "original_commit_id" : "907ef02667b6c224df1457b67b7d7950cd58494f",
      "original_position" : 328,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 299029620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332717563",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @ryanofsky . I've addressed both of your comments.",
      "created_at" : "2019-10-08T20:29:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-539690190",
      "id" : 539690190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzOTY5MDE5MA==",
      "updated_at" : "2019-10-08T20:29:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539690190",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased. Still depends on #17004, so please review that PR first.",
      "created_at" : "2019-10-09T14:14:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-540020284",
      "id" : 540020284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MDAyMDI4NA==",
      "updated_at" : "2019-10-09T14:14:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540020284",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r335106673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335106673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[validation] Add CValidationState subclasses\" (b885aec88a627363bf6771c941e855fa735145c6)\r\n\r\nIs it intentional to drop the `fScriptChecks && ` condition above?",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-15T18:21:24Z",
      "diff_hunk" : "@@ -2136,25 +2131,19 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (fScriptChecks && !CheckInputs(tx, state, view, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n-                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n-                    // but we can't return that, as it's not defined for a block, so\n-                    // we reset the reason flag to CONSENSUS here.\n-                    // In the event of a future soft-fork, we may need to\n-                    // consider whether rewriting to CONSENSUS or\n-                    // RECENT_CONSENSUS_CHANGE would be more appropriate.\n-                    state.Invalid(ValidationInvalidReason::CONSENSUS, false,\n-                              state.GetRejectReason(), state.GetDebugMessage());\n-                }\n+            TxValidationState tx_state;\n+            if (!CheckInputs(tx, tx_state, view, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r335106673",
      "id" : 335106673,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTEwNjY3Mw==",
      "original_commit_id" : "b885aec88a627363bf6771c941e855fa735145c6",
      "original_position" : 451,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 302106084,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335106673",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r335125629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335125629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "eeek. Good catch. This was a bad rebase (and would have broken `-assumevalid` if it'd been merged).",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-15T19:03:34Z",
      "diff_hunk" : "@@ -2136,25 +2131,19 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(BlockValidationResult::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (fScriptChecks && !CheckInputs(tx, state, view, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n-                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n-                    // but we can't return that, as it's not defined for a block, so\n-                    // we reset the reason flag to CONSENSUS here.\n-                    // In the event of a future soft-fork, we may need to\n-                    // consider whether rewriting to CONSENSUS or\n-                    // RECENT_CONSENSUS_CHANGE would be more appropriate.\n-                    state.Invalid(ValidationInvalidReason::CONSENSUS, false,\n-                              state.GetRejectReason(), state.GetDebugMessage());\n-                }\n+            TxValidationState tx_state;\n+            if (!CheckInputs(tx, tx_state, view, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r335125629",
      "id" : 335125629,
      "in_reply_to_id" : 335106673,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTEyNTYyOQ==",
      "original_commit_id" : "b885aec88a627363bf6771c941e855fa735145c6",
      "original_position" : 451,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 302130729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335125629",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the bad rebase pointed out by @ryanofsky (https://github.com/bitcoin/bitcoin/pull/15921#discussion_r335106673): https://github.com/bitcoin/bitcoin/compare/6fec91c1212c41698d1c9464379d17627cccf42a..b68a33829827c51048784a6f83f8acea3351d3c0",
      "created_at" : "2019-10-15T19:06:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-542359905",
      "id" : 542359905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjM1OTkwNQ==",
      "updated_at" : "2019-10-15T19:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542359905",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased: https://github.com/bitcoin/bitcoin/compare/b68a33829827c51048784a6f83f8acea3351d3c0..735e86fac20adee2c42e34ee382aaea95fbdbbb3",
      "created_at" : "2019-10-15T19:20:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-542364989",
      "id" : 542364989,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjM2NDk4OQ==",
      "updated_at" : "2019-10-15T19:20:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542364989",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the rereview @ryanofsky !",
      "created_at" : "2019-10-15T19:47:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-542375333",
      "id" : 542375333,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjM3NTMzMw==",
      "updated_at" : "2019-10-15T19:47:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542375333",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-23T10:49:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-545385426",
      "id" : 545385426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTM4NTQyNg==",
      "updated_at" : "2019-10-23T10:49:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545385426",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2019-10-23T21:27:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-545644105",
      "id" : 545644105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTY0NDEwNQ==",
      "updated_at" : "2019-10-23T21:27:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545644105",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-24T11:40:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-545878629",
      "id" : 545878629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTg3ODYyOQ==",
      "updated_at" : "2019-10-24T11:40:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545878629",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on master. Also tidied up a few small details (no functional changes)",
      "created_at" : "2019-10-24T15:57:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-545985143",
      "id" : 545985143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTk4NTE0Mw==",
      "updated_at" : "2019-10-24T15:57:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545985143",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The linter caught a log that wasn't terminated with a newline. Pushed a fix.",
      "created_at" : "2019-10-24T19:21:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-546064954",
      "id" : 546064954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjA2NDk1NA==",
      "updated_at" : "2019-10-24T19:21:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546064954",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-25T12:32:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-546335119",
      "id" : 546335119,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjMzNTExOQ==",
      "updated_at" : "2019-10-25T12:32:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546335119",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The fuzzing harness `src/test/fuzz/transaction.cpp` added in #17076 uses `CValidationState` and needs an update.",
      "created_at" : "2019-10-25T13:00:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-546343925",
      "id" : 546343925,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjM0MzkyNQ==",
      "updated_at" : "2019-10-25T13:00:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546343925",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The fuzzing harness src/test/fuzz/transaction.cpp added in #17076 uses CValidationState and needs an update.\r\n\r\nThanks @mzumsande . Now fixed. I've also rebased on master.",
      "created_at" : "2019-10-25T14:26:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-546376001",
      "id" : 546376001,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjM3NjAwMQ==",
      "updated_at" : "2019-10-25T14:26:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546376001",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~~ACK dcf5003ca0d8927f3e2457a32394a70ed683f01e~~\r\nACK 3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-27T18:44:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-546722151",
      "id" : 546722151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NjcyMjE1MQ==",
      "updated_at" : "2019-10-30T14:32:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546722151",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r339864187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339864187"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Your old [answer](https://github.com/bitcoin/bitcoin/pull/15921#discussion_r305146828) to  to an old [comment](https://github.com/bitcoin/bitcoin/pull/15921#discussion_r299230821) indicates that at some point you wanted to make the base class `ValidationState` abstract. However, the class has a (non-pure) virtual destructor and no pure virtual functions, so instantiation of `ValidationState` should still be possible. Is this working as intended?",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-29T01:52:27Z",
      "diff_hunk" : "@@ -48,64 +43,67 @@ enum class ValidationInvalidReason {\n     /**\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n-     * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n+     * Currently this is only used if the transaction already exists in the mempool or on chain.\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class BlockValidationResult {\n+    BLOCK_RESULT_UNSET,      //!< initial value. Block has not yet been rejected\n+    BLOCK_CONSENSUS,         //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    BLOCK_RECENT_CONSENSUS_CHANGE,\n+    BLOCK_CACHED_INVALID,    //!< this block was cached as being invalid and we didn't store the reason why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_TIME_FUTURE,       //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+};\n \n-inline bool IsBlockReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::CACHED_INVALID ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_HEADER ||\n-           r == ValidationInvalidReason::BLOCK_MUTATED ||\n-           r == ValidationInvalidReason::BLOCK_MISSING_PREV ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_PREV ||\n-           r == ValidationInvalidReason::BLOCK_TIME_FUTURE ||\n-           r == ValidationInvalidReason::BLOCK_CHECKPOINT;\n-}\n \n-/** Capture information about block/transaction validation */\n-class CValidationState {\n+\n+/** Base class for capturing information about block/transaction validation. This is subclassed\n+ *  by TxValidationState and BlockValidationState for validation information on transactions\n+ *  and blocks respectively. */\n+class ValidationState {\n private:\n     enum mode_state {\n         MODE_VALID,   //!< everything ok\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n     } mode;\n-    ValidationInvalidReason m_reason;\n     std::string strRejectReason;\n     std::string strDebugMessage;\n-public:\n-    CValidationState() : mode(MODE_VALID), m_reason(ValidationInvalidReason::NONE) {}\n-    bool Invalid(ValidationInvalidReason reasonIn, bool ret = false,\n+protected:\n+    bool Invalid(bool ret = false,\n             const std::string &strRejectReasonIn=\"\",\n             const std::string &strDebugMessageIn=\"\") {\n-        m_reason = reasonIn;\n         strRejectReason = strRejectReasonIn;\n         strDebugMessage = strDebugMessageIn;\n         if (mode == MODE_ERROR)\n             return ret;\n         mode = MODE_INVALID;\n         return ret;\n     }\n+public:\n+    // We use ValidationState polymorphically. Have a virtual destructor\n+    virtual ~ValidationState() {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r339864187",
      "id" : 339864187,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTg2NDE4Nw==",
      "original_commit_id" : "bd6ac0e1ccde8175493e993f2b65787819187970",
      "original_position" : 141,
      "path" : "src/consensus/validation.h",
      "position" : null,
      "pull_request_review_id" : 308237900,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/339864187",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r340039641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340039641"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: the `&` was moved from the type to the variable name. For consistency I would keep it at end of the type. That's also how it is still declared in the header file.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-29T12:16:15Z",
      "diff_hunk" : "@@ -7,28 +7,28 @@\n #include <primitives/transaction.h>\n #include <consensus/validation.h>\n \n-bool CheckTransaction(const CTransaction& tx, CValidationState& state)\n+bool CheckTransaction(const CTransaction& tx, TxValidationState &state)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r340039641",
      "id" : 340039641,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDAzOTY0MQ==",
      "original_commit_id" : "bd6ac0e1ccde8175493e993f2b65787819187970",
      "original_position" : 5,
      "path" : "src/consensus/tx_check.cpp",
      "position" : null,
      "pull_request_review_id" : 308462924,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-29T19:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340039641",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the reviews @mzumsande and @fjahr . I've added a couple of fixup commits that address your comments. Let me know if you like them and I'll squash into the appropriate commits.\r\n\r\n@mzumsande - I had to add a consensus/validation.cpp file to define the `ValidationState` destructor. Let me know if you know of a better way to do this.",
      "created_at" : "2019-10-29T14:07:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547437238",
      "id" : 547437238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzQzNzIzOA==",
      "updated_at" : "2019-10-29T14:07:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547437238",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "For me, `inline ValidationState::~ValidationState() {};` in the header works as well to make the class abstract (the `inline` prevents `multiple definition` linker errors). I am not sure about the cause for the MSVC/AppVeyor error of the current implementation.",
      "created_at" : "2019-10-29T15:55:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547493802",
      "id" : 547493802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzQ5MzgwMg==",
      "updated_at" : "2019-10-29T15:55:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547493802",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> For me, inline ValidationState::~ValidationState() {}; in the header works \r\n\r\nThanks. Much better!",
      "created_at" : "2019-10-29T17:00:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547526297",
      "id" : 547526297,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzUyNjI5Nw==",
      "updated_at" : "2019-10-29T17:00:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547526297",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Thanks for the reviews @mzumsande and @fjahr . I've added a couple of fixup commits that address your comments. Let me know if you like them and I'll squash into the appropriate commits.\r\n> \r\n> @mzumsande - I had to add a consensus/validation.cpp file to define the `ValidationState` destructor. Let me know if you know of a better way to do this.\r\n\r\nLooks good to me!",
      "created_at" : "2019-10-29T17:08:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547530457",
      "id" : 547530457,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzUzMDQ1Nw==",
      "updated_at" : "2019-10-29T17:08:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547530457",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "squashed fixup commits.",
      "created_at" : "2019-10-29T19:46:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547598181",
      "id" : 547598181,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzU5ODE4MQ==",
      "updated_at" : "2019-10-29T19:46:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547598181",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "code review ACK 3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf. Also built & ran tests locally. ",
      "created_at" : "2019-10-29T23:41:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547676649",
      "id" : 547676649,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzY3NjY0OQ==",
      "updated_at" : "2019-10-29T23:42:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547676649",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK 3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf . Only nit style change and pure virtual destructor added since my last review.",
      "created_at" : "2019-10-29T23:52:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547679097",
      "id" : 547679097,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzY3OTA5Nw==",
      "updated_at" : "2019-10-29T23:53:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547679097",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There oughta be a rule about merging review club PRs right before the meeting :)\r\n",
      "created_at" : "2019-10-30T14:44:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547940767",
      "id" : 547940767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzk0MDc2Nw==",
      "updated_at" : "2019-10-30T14:44:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547940767",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack whoops â¦\r\nnah, reviewing doesn't necessarily stop after merging :smile: ",
      "created_at" : "2019-10-30T14:46:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547942235",
      "id" : 547942235,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzk0MjIzNQ==",
      "updated_at" : "2019-10-30T14:46:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547942235",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, will still mention my code-review ACK for 3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf that I was just about to write when this got merged :-) ",
      "created_at" : "2019-10-30T14:50:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547944066",
      "id" : 547944066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzk0NDA2Ng==",
      "updated_at" : "2019-10-30T14:50:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547944066",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  nah, reviewing doesn't necessarily stop after merging\r\n\r\nAgree. The only downside is that review comments (with the reviewer's name) can not be included in the merge commit.",
      "created_at" : "2019-10-30T14:55:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547947006",
      "id" : 547947006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzk0NzAwNg==",
      "updated_at" : "2019-10-30T14:55:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547947006",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Could possibly use a `review club` tag :label:",
      "created_at" : "2019-10-30T16:05:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-547982871",
      "id" : 547982871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzk4Mjg3MQ==",
      "updated_at" : "2019-10-30T16:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547982871",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Could possibly use a review club tag label\r\n\r\nDone",
      "created_at" : "2019-10-30T18:47:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-548059693",
      "id" : 548059693,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODA1OTY5Mw==",
      "updated_at" : "2019-10-30T18:47:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548059693",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps helpful context for future readers/reviewers, here are two comments motivating a27a2957ed9afbe5a96caa5f0f4cbec730d27460 (CValidationState subclasses) from discussion in #15141:\r\n\r\n- sipa: https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-461933821\r\n- theBlueMatt: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273667031\r\n",
      "created_at" : "2019-10-30T19:02:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-548065747",
      "id" : 548065747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODA2NTc0Nw==",
      "updated_at" : "2019-10-30T19:02:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548065747",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Could possibly use a review club tag label\r\n> \r\n> Done\r\n\r\nThanks!",
      "created_at" : "2019-10-30T19:04:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-548066555",
      "id" : 548066555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODA2NjU1NQ==",
      "updated_at" : "2019-10-30T19:04:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548066555",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r340905612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340905612"
         }
      },
      "author_association" : "NONE",
      "body" : "Sorry for the late comment. Would a template class be more suitable? It appears that the subclasses only differ by the type of a member variable. So making this a template would remove a bit of boilerplate. Then a typedef could be used to keep the subclass names if desired.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-10-30T23:34:35Z",
      "diff_hunk" : "@@ -61,84 +46,101 @@ enum class ValidationInvalidReason {\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n      * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  */\n+enum class BlockValidationResult {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    BLOCK_CACHED_INVALID,    //!< this block was cached as being invalid and we didn't store the reason why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+};\n+\n \n-inline bool IsBlockReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::CACHED_INVALID ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_HEADER ||\n-           r == ValidationInvalidReason::BLOCK_MUTATED ||\n-           r == ValidationInvalidReason::BLOCK_MISSING_PREV ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_PREV ||\n-           r == ValidationInvalidReason::BLOCK_TIME_FUTURE ||\n-           r == ValidationInvalidReason::BLOCK_CHECKPOINT;\n-}\n \n-/** Capture information about block/transaction validation */\n-class CValidationState {\n+/** Base class for capturing information about block/transaction validation. This is subclassed\n+ *  by TxValidationState and BlockValidationState for validation information on transactions\n+ *  and blocks respectively. */\n+class ValidationState {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r340905612",
      "id" : 340905612,
      "in_reply_to_id" : 299230821,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MDkwNTYxMg==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 118,
      "path" : "src/consensus/validation.h",
      "position" : 109,
      "pull_request_review_id" : 309580852,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-10-30T23:34:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/340905612",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r343409501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343409501"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Made the change in #17399. Happy to close the PR if this isn't desirable for some reason.",
      "commit_id" : "3004d5a12d09d94bfc4dee2a8e8f2291996a4aaf",
      "created_at" : "2019-11-07T01:17:11Z",
      "diff_hunk" : "@@ -61,84 +46,101 @@ enum class ValidationInvalidReason {\n      * Tx already in mempool or conflicts with a tx in the chain\n      * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n      * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n-     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs\n      */\n     TX_CONFLICT,\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n-inline bool IsTransactionReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n-           r == ValidationInvalidReason::TX_PREMATURE_SPEND ||\n-           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n-           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n-           r == ValidationInvalidReason::TX_CONFLICT ||\n-           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n-}\n+/** A \"reason\" why a block was invalid, suitable for determining whether the\n+  * provider of the block should be banned/ignored/disconnected/etc.\n+  */\n+enum class BlockValidationResult {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    BLOCK_CACHED_INVALID,    //!< this block was cached as being invalid and we didn't store the reason why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+};\n+\n \n-inline bool IsBlockReason(ValidationInvalidReason r)\n-{\n-    return r == ValidationInvalidReason::NONE ||\n-           r == ValidationInvalidReason::CONSENSUS ||\n-           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n-           r == ValidationInvalidReason::CACHED_INVALID ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_HEADER ||\n-           r == ValidationInvalidReason::BLOCK_MUTATED ||\n-           r == ValidationInvalidReason::BLOCK_MISSING_PREV ||\n-           r == ValidationInvalidReason::BLOCK_INVALID_PREV ||\n-           r == ValidationInvalidReason::BLOCK_TIME_FUTURE ||\n-           r == ValidationInvalidReason::BLOCK_CHECKPOINT;\n-}\n \n-/** Capture information about block/transaction validation */\n-class CValidationState {\n+/** Base class for capturing information about block/transaction validation. This is subclassed\n+ *  by TxValidationState and BlockValidationState for validation information on transactions\n+ *  and blocks respectively. */\n+class ValidationState {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#discussion_r343409501",
      "id" : 343409501,
      "in_reply_to_id" : 299230821,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzQwOTUwMQ==",
      "original_commit_id" : "b7e1600e4df926da35b1664c32911d909899dd44",
      "original_position" : 118,
      "path" : "src/consensus/validation.h",
      "position" : 109,
      "pull_request_review_id" : 313010344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15921",
      "updated_at" : "2019-11-07T01:17:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343409501",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reviewers of this PR are encouraged to review PR #17624 (\"net: Fix an uninitialized read in ProcessMessage(â¦, \"tx\", â¦) when receiving a transaction we already have\") which fixes a quite serious bug introduced in this PR. Luckily it was caught before being part of any release :)",
      "created_at" : "2019-11-27T22:20:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15921#issuecomment-559270257",
      "id" : 559270257,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15921",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTI3MDI1Nw==",
      "updated_at" : "2019-11-27T22:20:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559270257",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
