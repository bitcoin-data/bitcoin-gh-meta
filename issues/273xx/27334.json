{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "`prevector`'s move assignment and move constructor were not `noexcept`, which makes it inefficient to use inside STL containers like `std::vector`. That's the case e.g. for `CScriptCheck`. This PR adds `noexcept`, and also implements the move assignment & ctor, which makes it quite a bit more efficient to use prevector in an std::vector. \r\n\r\nThe PR also adds a benchmark which grows an `std::vector` by adding `prevector` objects to it.\r\n\r\nmerge-base:\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|            6,440.29 |          155,272.42 |    0.2% |       40,713.01 |       20,473.84 |  1.989 |       7,132.01 |    0.2% |      0.44 | `PrevectorFillVectorDirectNontrivial`\r\n|            3,213.19 |          311,217.35 |    0.7% |       35,373.01 |       10,214.07 |  3.463 |       6,945.00 |    0.2% |      0.43 | `PrevectorFillVectorDirectTrivial`\r\n|           34,749.70 |           28,777.23 |    0.1% |      364,396.05 |      110,521.94 |  3.297 |      78,568.37 |    0.1% |      0.43 | `PrevectorFillVectorIndirectNontrivial`\r\n|           32,535.05 |           30,736.09 |    0.4% |      353,823.31 |      103,464.53 |  3.420 |      79,871.80 |    0.2% |      0.40 | `PrevectorFillVectorIndirectTrivial`\r\n\r\nutil: prevector's move ctor and move assignment is `noexcept`:\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|            6,603.87 |          151,426.40 |    0.2% |       23,734.01 |       21,009.63 |  1.130 |       2,445.01 |    0.3% |      0.44 | `PrevectorFillVectorDirectNontrivial`\r\n|            1,980.93 |          504,813.15 |    0.1% |       13,784.00 |        6,304.32 |  2.186 |       2,258.00 |    0.3% |      0.44 | `PrevectorFillVectorDirectTrivial`\r\n|           19,110.54 |           52,327.15 |    0.1% |      139,816.41 |       51,987.72 |  2.689 |      28,512.18 |    0.1% |      0.43 | `PrevectorFillVectorIndirectNontrivial`\r\n|           12,334.37 |           81,074.27 |    0.7% |      125,655.12 |       39,253.58 |  3.201 |      27,854.46 |    0.2% |      0.44 | `PrevectorFillVectorIndirectTrivial`\r\n\r\nutil: implement prevector's move ctor & move assignment\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|            5,262.66 |          190,018.01 |    0.2% |       20,157.01 |       16,745.26 |  1.204 |       2,445.01 |    0.3% |      0.44 | `PrevectorFillVectorDirectNontrivial`\r\n|            1,687.07 |          592,744.35 |    0.2% |       12,742.00 |        5,368.02 |  2.374 |       2,258.00 |    0.3% |      0.44 | `PrevectorFillVectorDirectTrivial`\r\n|           17,930.80 |           55,769.95 |    0.1% |      136,237.69 |       47,903.31 |  2.844 |      28,512.02 |    0.2% |      0.42 | `PrevectorFillVectorIndirectNontrivial`\r\n|           11,893.75 |           84,077.78 |    0.2% |      126,182.02 |       37,852.91 |  3.333 |      28,152.01 |    0.1% |      0.44 | `PrevectorFillVectorIndirectTrivial`\r\n\r\nAs can be seen, mostly thanks to just `noexcept` the benchmark becomes about 2 times faster because `std::vector` can now use move operations instead of having to fall back to copy everything\r\n\r\nI had a look at how this change affects the other benchmarks, and they are all pretty much the same, the only noticable difference is `CCheckQueueSpeedPrevectorJob` goes from 364.56ns down to 346.21ns.\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27334/comments",
   "created_at" : "2023-03-26T14:55:40Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27334/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/27334",
   "id" : 1640944290,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : "",
         "id" : 241832923,
         "name" : "Utils/log/libs",
         "node_id" : "MDU6TGFiZWwyNDE4MzI5MjM=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27334/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585M6YaO",
   "number" : 27334,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/27334.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27334",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/27334.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27334"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27334/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27334/timeline",
   "title" : "util: implement `noexcept` move assignment & move ctor for `prevector`",
   "updated_at" : "2023-03-26T15:59:35Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27334",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
      "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
      "followers_url" : "https://api.github.com/users/martinus/followers",
      "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/martinus",
      "id" : 14386,
      "login" : "martinus",
      "node_id" : "MDQ6VXNlcjE0Mzg2",
      "organizations_url" : "https://api.github.com/users/martinus/orgs",
      "received_events_url" : "https://api.github.com/users/martinus/received_events",
      "repos_url" : "https://api.github.com/users/martinus/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/martinus"
   }
}
