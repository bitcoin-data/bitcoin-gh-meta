[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [sdaftuar](https://github.com/bitcoin/bitcoin/pull/27374#pullrequestreview-1365412916), [mzumsande](https://github.com/bitcoin/bitcoin/pull/27374#pullrequestreview-1365617490) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27385](https://github.com/bitcoin/bitcoin/pull/27385) (net, refactor: extract Network and BIP155Network logic to node/network by jonatack)\n* [#27071](https://github.com/bitcoin/bitcoin/pull/27071) (Handle CJDNS from LookupSubNet() by vasild)\n* [#24034](https://github.com/bitcoin/bitcoin/pull/24034) (p2p: delete anchors.dat after trying to connect to that peers by brunoerg)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-03-30T14:59:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1490459141",
      "id" : 1490459141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585Y1poF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1490459141/reactions"
      },
      "updated_at" : "2023-04-04T17:53:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1490459141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1153449034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1153449034"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: If you touch this again, I think it would be worth adding a comment explaining why this code is here (and probably also add a comment to where the lookup in `setConnected` happens down below, near line  1806, so that if someone is touching the code in just one place they are aware of this issue).",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-03-30T15:37:32Z",
      "diff_hunk" : "@@ -1710,6 +1710,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 if (pnode->IsFullOutboundConn()) nOutboundFullRelay++;\n                 if (pnode->IsBlockOnlyConn()) nOutboundBlockRelay++;\n \n+                CAddress address{pnode->addr};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1153449034",
      "id" : 1153449034,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585EwDxK",
      "original_commit_id" : "542ac836f14d6619778e0db46831e6b7429703d7",
      "original_line" : 1713,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1365412916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1153449034/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-30T15:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1153449034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1153586371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1153586371"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How about putting this into a seperate function (something like `bool LimitOutboundByNetgroup(Network n)`), and using a  `switch` statement there, similar to the existing `IsAddrV1Compatible()`? That way, the compiler would prevent us from forgetting about this if we ever add another network.",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-03-30T17:40:51Z",
      "diff_hunk" : "@@ -1710,6 +1710,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 if (pnode->IsFullOutboundConn()) nOutboundFullRelay++;\n                 if (pnode->IsBlockOnlyConn()) nOutboundBlockRelay++;\n \n+                CAddress address{pnode->addr};\n+                if (address.IsTor() || address.IsI2P() || address.IsCJDNS()){",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1153586371",
      "id" : 1153586371,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585EwlTD",
      "original_commit_id" : "542ac836f14d6619778e0db46831e6b7429703d7",
      "original_line" : 1714,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1365617490,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1153586371/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-30T18:11:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1153586371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Does this PR trick the code to behave as if we are not connected to Tor (by not inserting into `setConnected`) even if we are connected? It looks to me that trying to solve the problem of \"cannot open many connections to Tor\" this would create another problem: \"too many connections to Tor\" - it would allow all 8 outbound to be to Tor and will not try to diversify to IPv4 (or other networks).\r\n\r\nI feel that we should lookup `-onlynet` or allow connections to Tor up to a limit to avoid \"too many connections to Tor\". Or maybe, increase the 4 bits to 5 bits in `GetGroup()` :disappointed:. In the long term, I guess, it would be best to expand the concept of \"network group\" to \"network group with route based diversification\" (IP) + \"network group without route based diversification\" (tor/i2p/cjdns).\r\n\r\nPS This is very much related to https://github.com/bitcoin/bitcoin/pull/27213\r\nPS run `clang-format`",
      "created_at" : "2023-03-31T05:15:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1491308956",
      "id" : 1491308956,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585Y45Gc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491308956/reactions"
      },
      "updated_at" : "2023-03-31T05:15:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491308956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It doesn't seem to me like it matters much which way we do this, since I believe netgroups for different networks cannot collide, so this looks fine to me.\r\n\r\n> I think the same logic needs to be applied to the anchors in \r\n\r\ni didn't add tor/i2p/cjdns peer addresses in `setConnected` to skip the netgroup diversity check when making both outbound and anchor connections. (now understood from the above comments why it won't work)\r\n\r\n> As far as I can see, this logic should equally be applied to addrs from alt networks, so it might be better to leave setConnected unchanged as sdaftuar suggested?\r\n\r\n> I feel that we should lookup -onlynet or allow connections to Tor up to a limit to avoid \"too many connections to Tor\".\r\n\r\n@mzumsande, @vasild that's true! summarising the 2 options suggested:\r\n1.  Add an additional check inside `LimitOutboundByNetgroup()` to skip netgroup diversity checks for outbound connections belonging to pure Tor-only/I2P-only/CJDNS-only networks. Then use this as a gatekeeper before choosing diverse netgroup addresses to make outbound connections to.\r\n2. [increase the 4 bits to 5 bits in `GetGroup()`](https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1491308956)\r\n   - this seems to be the simplest option! but i'm unsure about how it will affect other areas in the codebase where `GetGroup()` is used.\r\n \r\ncurious to know what everyone thinks about option 2? (otherwise we can go with option 1 for now)",
      "created_at" : "2023-03-31T10:29:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1491700077",
      "id" : 1491700077,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585Y6Ylt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491700077/reactions"
      },
      "updated_at" : "2023-03-31T10:50:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491700077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "updated the PR to do option 1:\r\n- Added an additional check inside `LimitOutboundByNetgroup()` to skip netgroup diversity checks for outbound connections belonging to pure Tor-only/I2P-only/CJDNS-only networks. \r\n- used this function as a gatekeeper before choosing diverse netgroup addresses to make outbound connections to.\r\n\r\nstill curious to know opinions about increasing 4 bits to 5 bits in `GetGroup()`.",
      "created_at" : "2023-03-31T12:07:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1491829321",
      "id" : 1491829321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585Y64JJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491829321/reactions"
      },
      "updated_at" : "2023-03-31T12:07:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491829321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154395877"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154395877"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks! done.",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-03-31T12:07:38Z",
      "diff_hunk" : "@@ -1710,6 +1710,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 if (pnode->IsFullOutboundConn()) nOutboundFullRelay++;\n                 if (pnode->IsBlockOnlyConn()) nOutboundBlockRelay++;\n \n+                CAddress address{pnode->addr};\n+                if (address.IsTor() || address.IsI2P() || address.IsCJDNS()){",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154395877",
      "id" : 1154395877,
      "in_reply_to_id" : 1153586371,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ezq7l",
      "original_commit_id" : "542ac836f14d6619778e0db46831e6b7429703d7",
      "original_line" : 1714,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1366817240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154395877/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-31T12:07:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154395877",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154396262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154396262"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks! done.",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-03-31T12:08:00Z",
      "diff_hunk" : "@@ -1710,6 +1710,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 if (pnode->IsFullOutboundConn()) nOutboundFullRelay++;\n                 if (pnode->IsBlockOnlyConn()) nOutboundBlockRelay++;\n \n+                CAddress address{pnode->addr};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154396262",
      "id" : 1154396262,
      "in_reply_to_id" : 1153449034,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585EzrBm",
      "original_commit_id" : "542ac836f14d6619778e0db46831e6b7429703d7",
      "original_line" : 1713,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1366817778,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154396262/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-31T12:08:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154396262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154401852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154401852"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "we would reach here when size of `onlynets` is 1. it's possible that `m_net` doesn't belong to the network we mention in `onlynets` but that would be handled in [reachability check](https://github.com/bitcoin/bitcoin/blob/47184cfa2f62290c00f960ddf74a7c1b5d3578b0/src/net.cpp#L1855) in `ThreadOpenConnections()` and we wouldn't use that address anyways.",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-03-31T12:13:56Z",
      "diff_hunk" : "@@ -515,6 +517,29 @@ bool CNetAddr::IsAddrV1Compatible() const\n     assert(false);\n }\n \n+bool CNetAddr::LimitOutboundByNetgroup() const\n+{\n+    const auto onlynets = gArgs.GetArgs(\"-onlynet\");\n+    if (onlynets.size() != 1) {\n+        return true;\n+    }\n+    switch (m_net) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154401852",
      "id" : 1154401852,
      "line" : 526,
      "node_id" : "PRRC_kwDOABII585EzsY8",
      "original_commit_id" : "baa513042ba79179c56ee555d3ca9a6151bc3594",
      "original_line" : 526,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 23,
      "pull_request_review_id" : 1366826232,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154401852/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-31T12:13:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154401852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/27374/checks?check_run_id=12424651425\r\n```bash\r\nA new circular dependency in the form of \"netaddress -> netbase -> netaddress\" appears to have been introduced.\r\n\r\n^---- failure generated from lint-circular-dependencies.py\r\n```",
      "created_at" : "2023-03-31T12:26:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1491851596",
      "id" : 1491851596,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585Y69lM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491851596/reactions"
      },
      "updated_at" : "2023-03-31T12:26:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491851596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> https://github.com/bitcoin/bitcoin/blob/328087d16f4362a23a72575fee930a275efbf3dd/src/net.cpp#L1890\r\n> \r\n> \r\n> to determine the `fCountFailure` bool, which tells addrman to possibly deprioritize selecting an address after various failed attempts (`nAttempts`). As far as I can see, this logic should equally be applied to addrs from alt networks, so it might be better to leave `setConnected` unchanged as sdaftuar suggested?\r\n\r\n@lightlike Good observation, I missed this.  I think that bit of code that we're using in our `OpenNetworkConnection()` call is really trying to determine how many open connections we have, not how many distinct netgroups we're connected to?  So from that perspective, I believe that line of code is written incorrectly; if we are running only on Tor and we happen to have 8 peers from the same netgroup, then presumably we are sufficiently connected that any failures to connect should be recorded in addrman.\r\n\r\nSo I think the right change here is to modify that line to just sum the number of outbound connections (full-relay, block-relay, addr-fetch, manual, and feelers) and use that in place of `setConnected.size()`.\r\n\r\n> Does this PR trick the code to behave as if we are not connected to Tor (by not inserting into setConnected) even if we are connected? It looks to me that trying to solve the problem of \"cannot open many connections to Tor\" this would create another problem: \"too many connections to Tor\" - it would allow all 8 outbound to be to Tor and will not try to diversify to IPv4 (or other networks).\r\n\r\n@vasild While it's possible that we'd make all 8 of our outbound connections to Tor peers, I think this is an unlikely problem, because we limit the number of Tor connections to be a fraction of our addrman (I can't recall what that fraction is though, can someone remind us?).  I believe that an adversary looking to exploit this can really only do so for (eg) new nodes that have a relatively small addrman, by flooding such a node with onion addresses; but that attack is already available today (since we have 16 different onion netgroups, an adversary creating a zillion onion addresses to eclipse a victim will just have the ones that are in different netgroups be the ones that eclipse a peer, instead of ones in the same netgroup).\r\n\r\nSo I don't think that this PR makes that problem any worse, and we can wait until we have something like #27213 to solve this problem more generally.\r\n\r\n> I feel that we should lookup -onlynet or allow connections to Tor up to a limit to avoid \"too many connections to Tor\". \r\n\r\nI think this is unnecessary and would be counter to what we're trying to fix here.  If a node is running on both ipv4 and tor, I think we should still not require netgroup diversity across the tor peers, because such diversity is meaningless.  And as I explained above I don't think the implicit limiting of tor peers that might arise from this would be needed or desirable.\r\n\r\n> still curious to know opinions about increasing 4 bits to 5 bits in `GetGroup()`\r\n\r\nThis would double the number of addrman slots that can be used by Tor peers, right?  My off the cuff guess is that this would be undesirable, but I haven't gone back to figure out what fraction of the addrman this would be yet.\r\n\r\n\r\n\r\n\r\n",
      "created_at" : "2023-03-31T13:35:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1491935771",
      "id" : 1491935771,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585Y7SIb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491935771/reactions"
      },
      "updated_at" : "2023-03-31T13:35:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1491935771",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154506161"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154506161"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As I mention in my comment [elsewhere](https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1491935771), I think we can drop this logic.",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-03-31T13:53:23Z",
      "diff_hunk" : "@@ -515,6 +517,29 @@ bool CNetAddr::IsAddrV1Compatible() const\n     assert(false);\n }\n \n+bool CNetAddr::LimitOutboundByNetgroup() const\n+{\n+    const auto onlynets = gArgs.GetArgs(\"-onlynet\");\n+    if (onlynets.size() != 1) {\n+        return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154506161",
      "id" : 1154506161,
      "line" : 524,
      "node_id" : "PRRC_kwDOABII585E0F2x",
      "original_commit_id" : "baa513042ba79179c56ee555d3ca9a6151bc3594",
      "original_line" : 524,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 21,
      "pull_request_review_id" : 1366988303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154506161/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-31T13:57:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154506161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154508362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154508362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we should generally avoid adding `assert()` to networking code, unless we're sure that it's really better to crash than to continue, eg because the node is in an inconsistent or corrupt state and is unable to continue running. That doesn't seem to be the case here, so I think we could use `Assume(false)` instead, so that we only get crashes in debug builds and our CI environment.",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-03-31T13:55:05Z",
      "diff_hunk" : "@@ -515,6 +517,29 @@ bool CNetAddr::IsAddrV1Compatible() const\n     assert(false);\n }\n \n+bool CNetAddr::LimitOutboundByNetgroup() const\n+{\n+    const auto onlynets = gArgs.GetArgs(\"-onlynet\");\n+    if (onlynets.size() != 1) {\n+        return true;\n+    }\n+    switch (m_net) {\n+    case NET_UNROUTABLE:\n+    case NET_IPV4:\n+    case NET_IPV6:\n+    case NET_INTERNAL:\n+        return true;\n+    case NET_ONION:\n+    case NET_I2P:\n+    case NET_CJDNS:\n+        return false;\n+    case NET_MAX: // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1154508362",
      "id" : 1154508362,
      "line" : 541,
      "node_id" : "PRRC_kwDOABII585E0GZK",
      "original_commit_id" : "baa513042ba79179c56ee555d3ca9a6151bc3594",
      "original_line" : 541,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 38,
      "pull_request_review_id" : 1366988303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154508362/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-31T13:57:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1154508362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1155339537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155339537"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If this assert is hit, it means that somebody has added a new entry in `enum Network`, has forgotten to update this function, has ignored the compiler warning and has ignored the CI failure. Or a memory corruption has occurred and `CNetAddr::m_net` has been overwritten with random bytes. I think `assert(false)` is the appropriate response in both cases.",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-04-02T16:22:12Z",
      "diff_hunk" : "@@ -515,6 +517,29 @@ bool CNetAddr::IsAddrV1Compatible() const\n     assert(false);\n }\n \n+bool CNetAddr::LimitOutboundByNetgroup() const\n+{\n+    const auto onlynets = gArgs.GetArgs(\"-onlynet\");\n+    if (onlynets.size() != 1) {\n+        return true;\n+    }\n+    switch (m_net) {\n+    case NET_UNROUTABLE:\n+    case NET_IPV4:\n+    case NET_IPV6:\n+    case NET_INTERNAL:\n+        return true;\n+    case NET_ONION:\n+    case NET_I2P:\n+    case NET_CJDNS:\n+        return false;\n+    case NET_MAX: // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1155339537",
      "id" : 1155339537,
      "in_reply_to_id" : 1154508362,
      "line" : 541,
      "node_id" : "PRRC_kwDOABII585E3RUR",
      "original_commit_id" : "baa513042ba79179c56ee555d3ca9a6151bc3594",
      "original_line" : 541,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 38,
      "pull_request_review_id" : 1368110142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155339537/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-02T16:22:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155339537",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1155345991"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155345991"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I really disagree on this point. We have had many examples over the years of asserts that people have added to our networking code for reasons that seem justifiable (along the lines of the reasons you've given), only to discover later that (usually due to an unexpected combination of code changes elsewhere) we ended up opening up a remote crash bug in deployed software that can take down the network -- in situations where we could easily have written code more defensively so that our software wouldn't crash.\n\nWe have Assume() exactly to avoid situations where a crash is worse than trying to gracefully recover, and we should err on the side of using that, particularly in networking code that could be triggered by an adversary against the whole network.",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-04-02T17:11:52Z",
      "diff_hunk" : "@@ -515,6 +517,29 @@ bool CNetAddr::IsAddrV1Compatible() const\n     assert(false);\n }\n \n+bool CNetAddr::LimitOutboundByNetgroup() const\n+{\n+    const auto onlynets = gArgs.GetArgs(\"-onlynet\");\n+    if (onlynets.size() != 1) {\n+        return true;\n+    }\n+    switch (m_net) {\n+    case NET_UNROUTABLE:\n+    case NET_IPV4:\n+    case NET_IPV6:\n+    case NET_INTERNAL:\n+        return true;\n+    case NET_ONION:\n+    case NET_I2P:\n+    case NET_CJDNS:\n+        return false;\n+    case NET_MAX: // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1155345991",
      "id" : 1155345991,
      "in_reply_to_id" : 1154508362,
      "line" : 541,
      "node_id" : "PRRC_kwDOABII585E3S5H",
      "original_commit_id" : "baa513042ba79179c56ee555d3ca9a6151bc3594",
      "original_line" : 541,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 38,
      "pull_request_review_id" : 1368115741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155345991/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-02T17:11:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155345991",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1155351861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351861"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this method belongs to `CConnman`, something like:\r\n\r\n```cpp\r\nbool CConnman::AllowOutboundByNetgroup(const std::set<std::vector<unsigned char>>& connected_netgroups,\r\n                                       const CAddress& addr)\r\n{                           \r\n    return connected_netgroups.count(m_netgroupman.GetGroup(addr)) == 0 ||\r\n           (gArgs.GetArgs(\"-onlynet\").size() == 1 && IsReachable(addr.GetNetwork()) &&\r\n            (addr.IsTor() || addr.IsI2P() || addr.IsCJDNS())); \r\n}              \r\n```",
      "commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "created_at" : "2023-04-02T17:59:55Z",
      "diff_hunk" : "@@ -515,6 +517,29 @@ bool CNetAddr::IsAddrV1Compatible() const\n     assert(false);\n }\n \n+bool CNetAddr::LimitOutboundByNetgroup() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#discussion_r1155351861",
      "id" : 1155351861,
      "line" : 520,
      "node_id" : "PRRC_kwDOABII585E3UU1",
      "original_commit_id" : "8b657606adb11e74bb74d649963d75fdfc45a883",
      "original_line" : 520,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 17,
      "pull_request_review_id" : 1368121032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27374",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351861/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-02T18:00:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "RE `fCountFailure` bool: \r\n@mzumsande  \r\n> to determine the fCountFailure bool, which tells addrman to possibly deprioritize selecting an address after various failed attempts (nAttempts). As far as I can see, this logic should equally be applied to addrs from alt networks, so it might be better to leave setConnected unchanged as sdaftuar suggested?\r\n\r\n@sdaftuar\r\n> I think that bit of code that we're using in our OpenNetworkConnection() call is really trying to determine how many open connections we have, not how many distinct netgroups we're connected to? So from that perspective, I believe that line of code is written incorrectly; if we are running only on Tor and we happen to have 8 peers from the same netgroup, then presumably we are sufficiently connected that any failures to connect should be recorded in addrman.\r\n> \r\n> So I think the right change here is to modify that line to just sum the number of outbound connections (full-relay, block-relay, addr-fetch, manual, and feelers) and use that in place of setConnected.size().\r\n\r\nlooks like this code was introduced in #8065, with the primary motivation stated as preventing inaccurate incrementing of the addrman counter when a node is offline. this reinforces what I suspected from reading the code, so the suggestion to update the logic to the sum of outbound connections makes sense\r\n\r\nhowever, the OP of that post also states: \r\n> This is still somewhat incomplete protection because our outbound\r\npeers could be down but not timed out or might all be on 'local'\r\nnetworks (although the requirement for multiple netgroups helps).\r\n\r\nwhich, I don't fully understand. is this referring to a scenario where a node is only able to connect to other nodes within a local network environment, so would have frequent failures when trying to connect to the bitcoin network at large? and if this is the case, how could we distinguish this behavior pattern from a node running only on Tor and having all outbound peers from the same netgroup? \r\n\r\nRE 4 bits to 5 bits in `GetGroup()`:\r\nI agree with @mzumsande in https://github.com/bitcoin/bitcoin/issues/27369#issuecomment-1490395263 \r\n> I think there are two aspects to this that don't necessarily need be addressed at the same time:\r\n> 1. The rule not to make more than one outbound connection to a netgroup\r\n> 2. Netgroup-based bucketing in addrman\r\n>\r\n> [...]\r\n>\r\n> So, in the short term (25.0), I think that we should either temporarily revert https://github.com/bitcoin/bitcoin/commit/72e8ffd7f8dbf908e65da6d012ede914596737ab or do what @stratospher suggested, if that could still make it into the release.\r\n\r\nThe implications of changing from 4 to 5 bits in `GetGroup` are nuanced because of the impacts on addrman distributions, so I think we should evaluate it separately from this PR, which is currently marked for the 25.0 milestone.",
      "created_at" : "2023-04-03T03:17:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1493586946",
      "id" : 1493586946,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585ZBlQC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1493586946/reactions"
      },
      "updated_at" : "2023-04-03T03:17:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1493586946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> however, the OP of that post also states:\r\n\r\n>> This is still somewhat incomplete protection because our outbound\r\npeers could be down but not timed out or might all be on 'local'\r\nnetworks (although the requirement for multiple netgroups helps).\r\n\r\n@amitiuttarwar Thanks for finding this, I hadn't thought about the issue of wanting to distinguish between local and non-local IPV4 networks for the purposes of detecting whether a node's network connectivity is down.\r\n\r\nThis means my suggestion of just summing outbound peers, rather than looking at netgroup diversity of peers, isn't great. I now think we could sum the IPV4/IPV6 entries in setConnected and add that to the total number of outbound alt-network peers (basically treating every alt-network peer as a distinct entry in setConnected), and use that for this check?\r\n\r\nEDIT: for the avoidance of doubt, I wrote a patch to implement my suggested approach [here](https://github.com/sdaftuar/bitcoin/commit/29807e1e25458a8e7ab859c6565e2f840ea38f3a).",
      "created_at" : "2023-04-03T18:10:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1494762525",
      "id" : 1494762525,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585ZGEQd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1494762525/reactions"
      },
      "updated_at" : "2023-04-05T15:21:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1494762525",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe also add a short explanation before the `OpenNetworkConnection()` call about the rationale for what we pass for `fCountFailure` from https://github.com/bitcoin/bitcoin/pull/8065  (Good find @amitiuttarwar!), i.e. the scenario where we can't connect to the internet but still may have a local connection. This was not obvious at all to me.",
      "created_at" : "2023-04-05T19:19:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1497996893",
      "id" : 1497996893,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585ZSZ5d",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497996893/reactions"
      },
      "updated_at" : "2023-04-05T19:19:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497996893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks a lot @sdaftuar! I've used the simplified approach in your patch! \r\n\r\n> Counting multiple sources from the same alternative network, they can fill up a theoretical maximum of 256 buckets (~16k addresses) or 1/4 of the new tables I think (but due to collisions from the the modulo operations in GetNewBucket and GetBucketPosition that depend on nKey, it is typically more like ~200 buckets in reality).\r\nOn the other hand, multiple IPv4 and IPv6 sources can fill up all 1024 buckets in the new table.\r\n\r\ntried a similar calculation for tried tables - which depends on netgroup of [tor address](https://github.com/bitcoin/bitcoin/blob/5a8bd4505687a7ec76d731b1a8249ee04d641990/src/addrman.cpp#L49)(16 group possibilities) and `hash1%8` which has 8 possibilities. that's 2^7 bucket possibilities out of 2^8 tried table buckets which is 1/2 the tried table.\r\n\r\nin an ideal theoretical ipv4 + tor scenario, the chance of all 8 outbound connections turning out to be tor would be = (50% new + 50 % tried)^8  \r\n- if src of all tor address is tor = (0.5 * 0.25 + 0.5 * 0.5)^8 = approx 0.04% (even less than this real scenario)   \r\n- if src of all tor address is ipv4 = (0.5 * 1 + 0.5 * 0.5)^8 = approx 10% (even less than this in real scenario)\r\n\r\ni guess these are the upper bound probability of this scenario happening. it is anyways covered in the comments above related to how netgroup restrictions for Tor/I2P/CJDNS don't make much difference in adverse situations.\r\n \r\n\r\n> This would double the number of addrman slots that can be used by Tor peers, right? My off the cuff guess is that this would be undesirable, but I haven't gone back to figure out what fraction of the addrman this would be yet.\r\n\r\n> The implications of changing from 4 to 5 bits in GetGroup are nuanced because of the impacts on addrman distributions, so I think we should evaluate it separately from this PR\r\n\r\nthanks for explaining! makes sense, noticed how this would result in tor/i2p/cjdns addresses filling the entire addrman.\r\n\r\n\r\n>  I now think we could sum the IPV4/IPV6 entries in setConnected and add that to the total number of outbound alt-network peers (basically treating every alt-network peer as a distinct entry in setConnected), and use that for this check?\r\n\r\nI liked this approach!\r\n\r\n`setConnected.size() >= min(nMaxConnections - 1, 2)`\r\n\r\nsince we include manual connections in `setConnected`, something else which would change now is we'd record failure attempts when we attempt an outbound connection and are already sufficiently connected to just manual peers. i think this is desirable/aligned with the original intent of why `setConnected.size() >= min(nMaxConnections - 1, 2)` was written.\r\n\r\n`nMaxConnections` [do not include](https://github.com/bitcoin/bitcoin/blob/master/src/init.cpp#L936-L939) manual connections right? (`nMaxConnections` limit is default 125, manual connection limit is default 8 (not included in 125)). and `setConnected.size()` would include them. in a rare scenario in resource constrained systems (if ever `nMaxConnections`=2) and we only have manual connections, it's possible that we end up recording addrman failure attempts. but i guess that's alright.\r\n",
      "created_at" : "2023-04-06T18:47:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27374#issuecomment-1499478379",
      "id" : 1499478379,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27374",
      "node_id" : "IC_kwDOABII585ZYDlr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1499478379/reactions"
      },
      "updated_at" : "2023-04-06T18:47:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1499478379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   }
]
