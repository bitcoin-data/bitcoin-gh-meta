[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21008 (test: fix zmq test flakiness, improve speed by theStack)\n* #20892 (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n* #20833 (rpc/validation: enable packages through testmempoolaccept by glozow)\n* #20591 (wallet, bugfix: fix ComputeTimeSmart function during rescanning process. by BitcoinTsunami)\n* #20362 (test: Implicitly sync after generate* to preempt races and intermittent test failures by MarcoFalke)\n* #20196 (net: fix GetListenPort() to derive the proper port by vasild)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-10-30T01:15:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-719111613",
      "id" : 719111613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxOTExMTYxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-29T05:05:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719111613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515261141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515261141"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm having trouble figuring out the logic here. Is there a more clear and concise way to determine `descriptors`?",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T17:28:54Z",
      "diff_hunk" : "@@ -808,3 +833,23 @@ def is_wallet_tool_compiled(self):\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")\n+\n+    def is_sqlite_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def is_bdb_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:\n+            descriptors = True\n+        elif self.is_bdb_compiled() and not self.is_sqlite_compiled() and descriptors:\n+            descriptors = False\n+        return descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515261141",
      "id" : 515261141,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2MTE0MQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 860,
      "original_position" : 83,
      "original_start_line" : 850,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515261141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515262567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515262567"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Are you able to use `self. get_use_descriptors()` here? To me it seems like logic might be getting duplicated",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T17:30:44Z",
      "diff_hunk" : "@@ -767,8 +777,23 @@ def skip_if_no_bitcoind_zmq(self):\n \n     def skip_if_no_wallet(self):\n         \"\"\"Skip the running test if wallet has not been compiled.\"\"\"\n+        self.requires_wallet = True\n         if not self.is_wallet_compiled():\n             raise SkipTest(\"wallet has not been compiled.\")\n+        if self.options.descriptors:\n+            self.skip_if_no_sqlite()\n+        else:\n+            self.skip_if_no_bdb()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515262567",
      "id" : 515262567,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2MjU2Nw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 797,
      "original_position" : 46,
      "original_start_line" : 783,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515262567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515268074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515268074"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: in places like these would  `err_code = -4 if self.options.descriptors else -1` be easier to follow?",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T17:35:11Z",
      "diff_hunk" : "@@ -101,20 +101,31 @@ def wallet_file(name):\n         #   sub/w5     - to verify relative wallet path is created correctly\n         #   extern/w6  - to verify absolute wallet path is created correctly\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n-        #   w8         - to verify existing wallet file is loaded correctly\n+        #   w8         - to verify existing wallet file is loaded correctly. Not tested for SQLite wallets as this is a deprecated BDB behavior.\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\n+        to_create = ['w1', 'w2', 'w3', 'w', 'sub/w5', 'w7_symlink']\n+        in_wallet_dir = to_create.copy() # Wallets in the wallet dir\n+        in_wallet_dir.append('w7') # w7 is not loaded or created, but will be listed by listwalletdir because w7_symlink\n+        to_create.append(os.path.join(self.options.tmpdir, 'extern/w6')) # External, not in the wallet dir, so we need to avoid adding it to in_wallet_dir\n+        to_load = [self.default_wallet_name]\n+        if not self.options.descriptors:\n+            to_load.append('w8')\n+        wallet_names = to_create + to_load # Wallet names loaded in the wallet\n+        in_wallet_dir += to_load # The loaded wallets are also in the wallet dir\n         self.start_node(0)\n-        for wallet_name in wallet_names[:-2]:\n-            self.nodes[0].createwallet(wallet_name, descriptors=False)\n-        for wallet_name in wallet_names[-2:]:\n+        for wallet_name in to_create:\n+            self.nodes[0].createwallet(wallet_name)\n+        for wallet_name in to_load:\n             self.nodes[0].loadwallet(wallet_name)\n-        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), [self.default_wallet_name, os.path.join('sub', 'w5'), 'w', 'w1', 'w2', 'w3', 'w7', 'w7_symlink', 'w8'])\n+        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), sorted(in_wallet_dir))\n \n         assert_equal(set(node.listwallets()), set(wallet_names))\n \n         # should raise rpc error if wallet path can't be created\n-        assert_raises_rpc_error(-1, \"boost::filesystem::create_directory:\", self.nodes[0].createwallet, \"w8/bad\", descriptors=False)\n+        err_code = -1\n+        if self.options.descriptors:\n+            err_code = -4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515268074",
      "id" : 515268074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2ODA3NA==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 127,
      "original_position" : 45,
      "original_start_line" : 125,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515268074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515274175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515274175"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems like usually you're doing: `#ifdef USE_BDB ... #elif USE_SQLITE`, but here you're doing  `#ifdef USE_BDB ... #ifdef USE_SQLITE`\r\n\r\nShould this be consistent, or does it matter? I'm guessing `USE_BDB` and `USE_SQLITE` can never both be set?",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T17:44:14Z",
      "diff_hunk" : "@@ -1011,9 +1013,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n \n     Optional<DatabaseFormat> format;\n     if (exists) {\n+#ifdef USE_BDB\n         if (ExistsBerkeleyDatabase(path)) {\n             format = DatabaseFormat::BERKELEY;\n         }\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515274175",
      "id" : 515274175,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NDE3NQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 1021,
      "original_position" : 19,
      "original_start_line" : 1016,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515274175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515275934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515275934"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "same, should it be `#elif USE_SQLITE` here?",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T17:46:52Z",
      "diff_hunk" : "@@ -14,7 +14,9 @@\n #include <util/system.h>\n #include <util/time.h>\n #include <util/translation.h>\n+#ifdef USE_BDB\n #include <wallet/bdb.h>\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515275934",
      "id" : 515275934,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NTkzNA==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 20,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515275934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515277183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515277183"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can this be condensed to a one-liner: `check_wallet_filelock(self.is_sqlite_compiled())`",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T17:49:07Z",
      "diff_hunk" : "@@ -27,11 +27,20 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error(extra_args=['-datadir={}'.format(self.nodes[0].datadir), '-noserver'], expected_msg=expected_msg)\n \n         if self.is_wallet_compiled():\n-            self.nodes[0].createwallet(self.default_wallet_name)\n-            wallet_dir = os.path.join(datadir, 'wallets')\n-            self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n-            expected_msg = \"Error: Error initializing wallet database environment\"\n-            self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+            def check_wallet_filelock(descriptors):\n+                self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=descriptors)\n+                wallet_dir = os.path.join(datadir, 'wallets')\n+                self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n+                if descriptors:\n+                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                else:\n+                    expected_msg = \"Error: Error initializing wallet database environment\"\n+                self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+\n+            if self.is_bdb_compiled():\n+                check_wallet_filelock(False)\n+            if self.is_sqlite_compiled():\n+                check_wallet_filelock(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515277183",
      "id" : 515277183,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3NzE4Mw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 46,
      "original_position" : 22,
      "original_start_line" : 40,
      "path" : "test/functional/feature_filelock.py",
      "position" : 32,
      "pull_request_review_id" : 520885524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515277183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303197"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303197"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, `get_use_descriptors()` is used to switch between legacy and descriptors for the tests where the type is not explicitly being set. This is different from the wallet tests (that will call this `skip_if_no_wallet()`) which are testing specific descriptor and legacy behavior.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T18:34:47Z",
      "diff_hunk" : "@@ -767,8 +777,23 @@ def skip_if_no_bitcoind_zmq(self):\n \n     def skip_if_no_wallet(self):\n         \"\"\"Skip the running test if wallet has not been compiled.\"\"\"\n+        self.requires_wallet = True\n         if not self.is_wallet_compiled():\n             raise SkipTest(\"wallet has not been compiled.\")\n+        if self.options.descriptors:\n+            self.skip_if_no_sqlite()\n+        else:\n+            self.skip_if_no_bdb()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303197",
      "id" : 515303197,
      "in_reply_to_id" : 515262567,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzE5Nw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 797,
      "original_position" : 46,
      "original_start_line" : 783,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 520937226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303197",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303762"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not really.\r\n\r\nThe purpose of this function is to enable or disable features depending on whether support is compiled and the current settings, for those tests where the descriptors setting is not important to the test and only need to just work.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T18:35:49Z",
      "diff_hunk" : "@@ -808,3 +833,23 @@ def is_wallet_tool_compiled(self):\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")\n+\n+    def is_sqlite_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def is_bdb_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:\n+            descriptors = True\n+        elif self.is_bdb_compiled() and not self.is_sqlite_compiled() and descriptors:\n+            descriptors = False\n+        return descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515303762",
      "id" : 515303762,
      "in_reply_to_id" : 515261141,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzc2Mg==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 860,
      "original_position" : 83,
      "original_start_line" : 850,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 520937940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515303762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515305897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515305897"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, it's supposed to `#ifdef ... #ifdef` because both `USE_BDB` and `USE_SQLITE` can both be set, and in fact, is the default.\r\n\r\nThe instances where `#ifdef...#elif` is used is only because one wallet type must be defaulted to, and for now, we default to BDB.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T18:40:16Z",
      "diff_hunk" : "@@ -1011,9 +1013,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n \n     Optional<DatabaseFormat> format;\n     if (exists) {\n+#ifdef USE_BDB\n         if (ExistsBerkeleyDatabase(path)) {\n             format = DatabaseFormat::BERKELEY;\n         }\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515305897",
      "id" : 515305897,
      "in_reply_to_id" : 515274175,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNTg5Nw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 1021,
      "original_position" : 19,
      "original_start_line" : 1016,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 520940887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515305897",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306142"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306142"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When both are compiled, we want to test both cases.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T18:40:49Z",
      "diff_hunk" : "@@ -27,11 +27,20 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error(extra_args=['-datadir={}'.format(self.nodes[0].datadir), '-noserver'], expected_msg=expected_msg)\n \n         if self.is_wallet_compiled():\n-            self.nodes[0].createwallet(self.default_wallet_name)\n-            wallet_dir = os.path.join(datadir, 'wallets')\n-            self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n-            expected_msg = \"Error: Error initializing wallet database environment\"\n-            self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+            def check_wallet_filelock(descriptors):\n+                self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=descriptors)\n+                wallet_dir = os.path.join(datadir, 'wallets')\n+                self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n+                if descriptors:\n+                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                else:\n+                    expected_msg = \"Error: Error initializing wallet database environment\"\n+                self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+\n+            if self.is_bdb_compiled():\n+                check_wallet_filelock(False)\n+            if self.is_sqlite_compiled():\n+                check_wallet_filelock(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306142",
      "id" : 515306142,
      "in_reply_to_id" : 515277183,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjE0Mg==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 46,
      "original_position" : 22,
      "original_start_line" : 40,
      "path" : "test/functional/feature_filelock.py",
      "position" : 32,
      "pull_request_review_id" : 520941204,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306249"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, if both are compiled, then we need both headers.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T18:41:04Z",
      "diff_hunk" : "@@ -14,7 +14,9 @@\n #include <util/system.h>\n #include <util/time.h>\n #include <util/translation.h>\n+#ifdef USE_BDB\n #include <wallet/bdb.h>\n+#endif\n #ifdef USE_SQLITE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306249",
      "id" : 515306249,
      "in_reply_to_id" : 515275934,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjI0OQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 20,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 520941356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306633"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306633"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in upstream PR #18788",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-10-30T18:41:49Z",
      "diff_hunk" : "@@ -101,20 +101,31 @@ def wallet_file(name):\n         #   sub/w5     - to verify relative wallet path is created correctly\n         #   extern/w6  - to verify absolute wallet path is created correctly\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n-        #   w8         - to verify existing wallet file is loaded correctly\n+        #   w8         - to verify existing wallet file is loaded correctly. Not tested for SQLite wallets as this is a deprecated BDB behavior.\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', self.default_wallet_name]\n+        to_create = ['w1', 'w2', 'w3', 'w', 'sub/w5', 'w7_symlink']\n+        in_wallet_dir = to_create.copy() # Wallets in the wallet dir\n+        in_wallet_dir.append('w7') # w7 is not loaded or created, but will be listed by listwalletdir because w7_symlink\n+        to_create.append(os.path.join(self.options.tmpdir, 'extern/w6')) # External, not in the wallet dir, so we need to avoid adding it to in_wallet_dir\n+        to_load = [self.default_wallet_name]\n+        if not self.options.descriptors:\n+            to_load.append('w8')\n+        wallet_names = to_create + to_load # Wallet names loaded in the wallet\n+        in_wallet_dir += to_load # The loaded wallets are also in the wallet dir\n         self.start_node(0)\n-        for wallet_name in wallet_names[:-2]:\n-            self.nodes[0].createwallet(wallet_name, descriptors=False)\n-        for wallet_name in wallet_names[-2:]:\n+        for wallet_name in to_create:\n+            self.nodes[0].createwallet(wallet_name)\n+        for wallet_name in to_load:\n             self.nodes[0].loadwallet(wallet_name)\n-        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), [self.default_wallet_name, os.path.join('sub', 'w5'), 'w', 'w1', 'w2', 'w3', 'w7', 'w7_symlink', 'w8'])\n+        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), sorted(in_wallet_dir))\n \n         assert_equal(set(node.listwallets()), set(wallet_names))\n \n         # should raise rpc error if wallet path can't be created\n-        assert_raises_rpc_error(-1, \"boost::filesystem::create_directory:\", self.nodes[0].createwallet, \"w8/bad\", descriptors=False)\n+        err_code = -1\n+        if self.options.descriptors:\n+            err_code = -4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r515306633",
      "id" : 515306633,
      "in_reply_to_id" : 515268074,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNjYzMw==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 127,
      "original_position" : 45,
      "original_start_line" : 125,
      "path" : "test/functional/wallet_multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 520941797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515306633",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\nlibbitcoin_wallet.lib(wallet_walletutil.obj) : error LNK2001: unresolved external symbol \"bool __cdecl ExistsSQLiteDatabase(class boost::filesystem::path const &)\" (?ExistsSQLiteDatabase@@YA_NAEBVpath@filesystem@boost@@@Z) [C:\\projects\\bitcoin\\build_msvc\\bench_bitcoin\\bench_bitcoin.vcxproj]\r\n```\r\n\r\n```\r\nThe subject line of commit hash 8ea48f202d800895abea798385ac0e67f7f3034d is followed by a non-empty line. Subject lines should always be followed by a blank line.\r\n\r\n^---- failure generated from test/lint/lint-git-commit-check.sh",
      "created_at" : "2020-11-04T07:52:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721570837",
      "id" : 721570837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTU3MDgzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T07:52:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721570837",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed the linter error.\r\n\r\nI'm not sure what is causing the appveyor failure, nor how to fix it.",
      "created_at" : "2020-11-04T17:36:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721873303",
      "id" : 721873303,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTg3MzMwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T17:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721873303",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm not sure what is causing the appveyor failure, nor how to fix it.\r\n\r\nI dug up the old link https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/36097732 and the link errors for unresolved symbols just come from removing wallet/bdb.cpp and wallet/salvage.cpp from original libbitcoin_wallet_a_SOURCES setting in Makefile.am. You might need to add these explicitly to build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in. Example of how to do this: 9eaeb7fb8d4ab0d4493849e6c17e314fd75fea9c",
      "created_at" : "2020-11-04T18:21:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721895698",
      "id" : 721895698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTg5NTY5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T18:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721895698",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Example of how to do this: [9eaeb7f](https://github.com/bitcoin/bitcoin/commit/9eaeb7fb8d4ab0d4493849e6c17e314fd75fea9c)\r\n\r\nBetter simpler example: 0660119ac372c2863d14060ac1bc9bc243771f94",
      "created_at" : "2020-11-04T18:23:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721897050",
      "id" : 721897050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTg5NzA1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T18:23:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721897050",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > I'm not sure what is causing the appveyor failure, nor how to fix it.\r\n> \r\n> I dug up the old link https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/36097732 and the link errors for unresolved symbols just come from removing wallet/bdb.cpp and wallet/salvage.cpp from original libbitcoin_wallet_a_SOURCES setting in Makefile.am. You might need to add these explicitly to build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in. Example of how to do this: [9eaeb7f](https://github.com/bitcoin/bitcoin/commit/9eaeb7fb8d4ab0d4493849e6c17e314fd75fea9c)\r\n\r\nI think I've fixed it in the upstream PR #20202",
      "created_at" : "2020-11-04T18:52:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-721910807",
      "id" : 721910807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTkxMDgwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T18:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721910807",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518397745"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518397745"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Do not compile BDB things when USE_BDB is defined\" (0cbff9303729dddaad781a4d285c141a86053687)\r\n\r\nI doubt it matters, but for consistency with the enable wallet option, it might make sense to add these arguments `argsman.AddHiddenArgs` when use_bdb is disabled, so configuation files specifying these options aren't rejected",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-05T22:04:46Z",
      "diff_hunk" : "@@ -69,9 +71,12 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n #endif\n     argsman.AddArg(\"-walletrbf\", strprintf(\"Send transactions with full-RBF opt-in enabled (RPC only, default: %u)\", DEFAULT_WALLET_RBF), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n \n+#ifdef USE_BDB",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518397745",
      "id" : 518397745,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM5Nzc0NQ==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 74,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 524708979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518397745",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518413477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518413477"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Do not compile BDB things when USE_BDB is defined\" (0cbff9303729dddaad781a4d285c141a86053687)\r\n\r\nIn `MakeDatabase`:\r\n\r\n- It doesn't seem ideal to return null with success status and no error message if bdb isn't available.\r\n- It also doesn't seem ideal to assert false above if sqlite isn't available.\r\n- It also puts an unnecessary burden on callers that don't care which database backend is used to have to write code figuring out on their own what backends are available before calling this function. (Code added above in wallet_tests.cpp is an example).\r\n\r\nAll of this seems easy to fix. Would suggest:\r\n\r\n```c++\r\n    // If format not specified or detected, choose default format based on what\r\n    // is available, and prefer BDB over SQLite.\r\n    if (!format) {\r\n#ifdef USE_SQLITE\r\n        format = DatabaseFormat::SQLITE;\r\n#endif\r\n#ifdef USE_BDB\r\n        format = DatabaseFormat::BDB;\r\n#endif\r\n    }\r\n\r\n    if (format == DatabaseFormat::SQLITE) {\r\n#ifdef USE_SQLITE\r\n        return MakeSQLiteDatabase(path, options, status, error);\r\n#endif\r\n        error = Untranslated(strprintf(\"Failed to open database path '%s'. Build does not support SQLite database format.\", path.string()));\r\n        status = DatabaseStatus::FAILED_BAD_FORMAT;\r\n        return nullptr;\r\n    }\r\n\r\n#ifdef USE_BDB\r\n    return MakeBerkeleyDatabase(path, options, status, error);\r\n#endif\r\n    error = Untranslated(strprintf(\"Failed to open database path '%s'. Build does not support Berkeley DB database format.\", path.string()));\r\n    status = DatabaseStatus::FAILED_BAD_FORMAT;\r\n    return nullptr;\r\n```",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-05T22:39:41Z",
      "diff_hunk" : "@@ -1059,8 +1063,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n #else\n     assert(format != DatabaseFormat::SQLITE);\n #endif\n-\n+#ifdef USE_BDB\n     return MakeBerkeleyDatabase(path, options, status, error);\n+#else\n+    return nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518413477",
      "id" : 518413477,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQxMzQ3Nw==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 1069,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 524708979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518413477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518415945"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518415945"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Do not compile BDB things when USE_BDB is defined\" (0cbff9303729dddaad781a4d285c141a86053687)\r\n\r\nThis new code can be deleted with the suggested change to `MakeDatabase` above. The `MakeDatabase` function can figure out what formats are available without putting the burden on callers.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-05T22:45:23Z",
      "diff_hunk" : "@@ -41,6 +41,11 @@ static std::shared_ptr<CWallet> TestLoadWallet(interfaces::Chain& chain)\n     DatabaseStatus status;\n     bilingual_str error;\n     std::vector<bilingual_str> warnings;\n+#ifdef USE_BDB",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518415945",
      "id" : 518415945,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQxNTk0NQ==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 44,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 524708979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518415945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518420893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518420893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a helper to determine whether descriptors should be used\" (d97e22f5244cb913ef84953309a3eaee07f54c1c)\r\n\r\nI haven't looked yet at how this function is used, but it seem dangerous if it will be used to silently override `--descriptors` or `--legacy-wallet` options that were specified. This would be bad because it would give the impression that requested tests passed when in reality they were never run, and different tests were done instead. A safer alternative would set `self.option.descriptors` to `None` when no option is passed, `True` when `--descriptors` is passed, and `False` when `--legacy` is passed. Then logic like the following would be used to determine how to run tests:\r\n\r\n```python\r\ndescriptors = self.option.descriptors\r\nif descriptor is None:\r\n    # Current default is to use legacy instead of descriptor wallets unless bdb is unavailable\r\n    descriptors = not self.is_bdb_compiled()\r\nif descriptors and not self.is_sqlite_compiled():\r\n    raise SkipTest(\"sqlite has not been compiled.\")\r\nif not descriptors and not self.is_bdb_compiled():\r\n    raise SkipTest(\"bdb has not been compiled.\")\r\nreturn descriptors\r\n```",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-05T22:57:58Z",
      "diff_hunk" : "@@ -824,3 +824,15 @@ def is_zmq_compiled(self):\n     def is_sqlite_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518420893",
      "id" : 518420893,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyMDg5Mw==",
      "original_commit_id" : "d97e22f5244cb913ef84953309a3eaee07f54c1c",
      "original_line" : 834,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 524708979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518420893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in upstream #20202 ",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-06T18:37:18Z",
      "diff_hunk" : "@@ -69,9 +71,12 @@ void WalletInit::AddWalletOptions(ArgsManager& argsman) const\n #endif\n     argsman.AddArg(\"-walletrbf\", strprintf(\"Send transactions with full-RBF opt-in enabled (RPC only, default: %u)\", DEFAULT_WALLET_RBF), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n \n+#ifdef USE_BDB",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934010",
      "id" : 518934010,
      "in_reply_to_id" : 518397745,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzNDAxMA==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 74,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 525400863,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in upstream #20202 ",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-06T18:37:22Z",
      "diff_hunk" : "@@ -1059,8 +1063,11 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n #else\n     assert(format != DatabaseFormat::SQLITE);\n #endif\n-\n+#ifdef USE_BDB\n     return MakeBerkeleyDatabase(path, options, status, error);\n+#else\n+    return nullptr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934067",
      "id" : 518934067,
      "in_reply_to_id" : 518413477,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzNDA2Nw==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 1069,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 525400910,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934105"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in upstream #20202 ",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-06T18:37:27Z",
      "diff_hunk" : "@@ -41,6 +41,11 @@ static std::shared_ptr<CWallet> TestLoadWallet(interfaces::Chain& chain)\n     DatabaseStatus status;\n     bilingual_str error;\n     std::vector<bilingual_str> warnings;\n+#ifdef USE_BDB",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r518934105",
      "id" : 518934105,
      "in_reply_to_id" : 518415945,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzNDEwNQ==",
      "original_commit_id" : "0cbff9303729dddaad781a4d285c141a86053687",
      "original_line" : 44,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/test/wallet_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 525400962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518934105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r519014238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519014238"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This isn't used to skip tests.\r\n\r\nI've made a change that somewhat incorporates what you suggest.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-06T21:29:03Z",
      "diff_hunk" : "@@ -824,3 +824,15 @@ def is_zmq_compiled(self):\n     def is_sqlite_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r519014238",
      "id" : 519014238,
      "in_reply_to_id" : 518420893,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNDIzOA==",
      "original_commit_id" : "d97e22f5244cb913ef84953309a3eaee07f54c1c",
      "original_line" : 834,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 525506046,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519014238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Changed to automatically switch to using descriptor wallets if BDB is not compiled and `--legacy-wallet` is not compiled. This requires that several tests have `--legacy-wallet` be added in `test_runner.py`. Additionally, this broke `wallet_send.py` so those tests have to be updated to work with descriptor wallets. `wallet_upgradewallet.py` also had to be restricted to just a legacy wallet test.\r\n\r\nDoing this switching means that we won't skip a bunch of tests when BDB is not compiled. It also makes it possible to test all of our tests with both wallet types.",
      "created_at" : "2020-11-06T21:30:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-723308687",
      "id" : 723308687,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMzMwODY4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-06T21:31:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723308687",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523007716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523007716"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should we be adding this for 0.21?",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-13T15:04:35Z",
      "diff_hunk" : "@@ -38,6 +38,12 @@\n /* Define to 1 to enable wallet functions */\n #define ENABLE_WALLET 1\n \n+/* Define to 1 to enable BDB wallet */\n+#define USE_BDB 1\n+\n+/* Define to 1 to enable SQLite wallet */\n+#define USE_SQLITE 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523007716",
      "id" : 523007716,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAwNzcxNg==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 42,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "build_msvc/bitcoin_config.h",
      "position" : null,
      "pull_request_review_id" : 530137014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523007716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523014805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523014805"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Should we be adding this for 0.21?\r\n\r\nNo opinion (seems fine, not necessary), but `#define USE_SQLITE 1` is part of base PR #20202. @achow101, PR description could be clearer and say ***This is based on #20202.*** or something along those lines since it seems like I'm not the only person to not realize this PR contains changes from another PR",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-13T15:15:21Z",
      "diff_hunk" : "@@ -38,6 +38,12 @@\n /* Define to 1 to enable wallet functions */\n #define ENABLE_WALLET 1\n \n+/* Define to 1 to enable BDB wallet */\n+#define USE_BDB 1\n+\n+/* Define to 1 to enable SQLite wallet */\n+#define USE_SQLITE 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523014805",
      "id" : 523014805,
      "in_reply_to_id" : 523007716,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAxNDgwNQ==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 42,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "build_msvc/bitcoin_config.h",
      "position" : null,
      "pull_request_review_id" : 530146324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523014805",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523015180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523015180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this another bugfix we should put in 0.21?",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-13T15:15:52Z",
      "diff_hunk" : "@@ -27,6 +28,7 @@ bool RecoverDatabaseFile(const fs::path& file_path, bilingual_str& error, std::v\n     DatabaseStatus status;\n     options.require_existing = true;\n     options.verify = false;\n+    options.require_format = DatabaseFormat::BERKELEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523015180",
      "id" : 523015180,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAxNTE4MA==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 31,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/salvage.cpp",
      "position" : null,
      "pull_request_review_id" : 530146739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523015180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523079050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523079050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's not strictly necessary. Other stuff later like trying to actually open the wallet file if it isn't BDB will still fail and we won't do anything to the file. It will just have a slightly worse error message.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-13T16:55:22Z",
      "diff_hunk" : "@@ -27,6 +28,7 @@ bool RecoverDatabaseFile(const fs::path& file_path, bilingual_str& error, std::v\n     DatabaseStatus status;\n     options.require_existing = true;\n     options.verify = false;\n+    options.require_format = DatabaseFormat::BERKELEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523079050",
      "id" : 523079050,
      "in_reply_to_id" : 523015180,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3OTA1MA==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 31,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/salvage.cpp",
      "position" : null,
      "pull_request_review_id" : 530230316,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523079050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523229115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523229115"
         }
      },
      "author_association" : "NONE",
      "body" : "@mjdietzx , you can use [Quine-McCluskey](https://github.com/ysangkok/py-kmap/blob/master/newqm.py) to derive a minimal function:\r\n\r\n```\r\n>>> from newqm import QM\r\n>>> qm = QM(['A','B','C'])\r\n>>> def aj(a,b,c): # a is self.options.descriptors, b is bdb, c is sqlite compilation\r\n...      descriptors = a\r\n...      if not b and c and not a:\r\n...          descriptors = True\r\n...      elif b and not c and a:\r\n...          descriptors = False\r\n...      return descriptors\r\n... \r\n>>> from itertools import product\r\n>>> values = [idx for (idx,x) in enumerate(product([False,True], repeat=3)) if aj(*x)]\r\n>>> qm.get_function(qm.solve(values,[])[1])\r\n'(((NOT B) AND C) OR (A AND (NOT B)) OR (A AND C))'\r\n```\r\n\r\nIf we color each conjunctive element separately, you can see which elements of the truth table it covers: https://imgur.com/vOVyQP8\r\n\r\nExpanded out using the original bindings:\r\n\r\n```\r\noption_set = self.options.descriptors\r\nbdb = self.is_bdb_compiled()\r\nsqlite = self.is_sqlite_compiled()\r\n\r\nreturn ((NOT bdb) AND sqlite) \\\r\n  OR (option_set AND (NOT bdb)) \\\r\n  OR (option_set AND sqlite)\r\n```\r\n\r\n",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-13T20:59:00Z",
      "diff_hunk" : "@@ -808,3 +833,23 @@ def is_wallet_tool_compiled(self):\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")\n+\n+    def is_sqlite_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_SQLITE\")\n+\n+    def is_bdb_compiled(self):\n+        \"\"\"Checks whether the wallet module was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def get_use_descriptors(self):\n+        \"\"\"\n+        Determine whether descriptors should be used based on compilation support and option\n+        Should only be used for tests that explicitly check self.is_wallet_compiled()\n+        \"\"\"\n+        descriptors = self.options.descriptors\n+        if not self.is_bdb_compiled() and self.is_sqlite_compiled() and not descriptors:\n+            descriptors = True\n+        elif self.is_bdb_compiled() and not self.is_sqlite_compiled() and descriptors:\n+            descriptors = False\n+        return descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523229115",
      "id" : 523229115,
      "in_reply_to_id" : 515261141,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIyOTExNQ==",
      "original_commit_id" : "846ba62cb939f65745902d3daa6cdda447130410",
      "original_line" : 860,
      "original_position" : 83,
      "original_start_line" : 850,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 530411447,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523229115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/284023?v=4",
         "events_url" : "https://api.github.com/users/ysangkok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ysangkok/followers",
         "following_url" : "https://api.github.com/users/ysangkok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ysangkok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ysangkok",
         "id" : 284023,
         "login" : "ysangkok",
         "node_id" : "MDQ6VXNlcjI4NDAyMw==",
         "organizations_url" : "https://api.github.com/users/ysangkok/orgs",
         "received_events_url" : "https://api.github.com/users/ysangkok/received_events",
         "repos_url" : "https://api.github.com/users/ysangkok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ysangkok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ysangkok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ysangkok"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523247602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523247602"
         }
      },
      "author_association" : "NONE",
      "body" : "the sentence makes it sound like it is optional because the wallet can be disabled. wouldn't it be better to say \"Optional. Needed to open legacy wallets.\"",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-13T21:42:47Z",
      "diff_hunk" : "@@ -41,7 +41,7 @@ Optional dependencies:\n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n  miniupnpc   | UPnP Support     | Firewall-jumping support\n- libdb4.8    | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+ libdb4.8    | Berkeley DB      | Optional, wallet storage (only needed when wallet enabled)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523247602",
      "id" : 523247602,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NzYwMg==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 45,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/build-unix.md",
      "position" : null,
      "pull_request_review_id" : 530434202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523247602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/284023?v=4",
         "events_url" : "https://api.github.com/users/ysangkok/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ysangkok/followers",
         "following_url" : "https://api.github.com/users/ysangkok/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ysangkok/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ysangkok",
         "id" : 284023,
         "login" : "ysangkok",
         "node_id" : "MDQ6VXNlcjI4NDAyMw==",
         "organizations_url" : "https://api.github.com/users/ysangkok/orgs",
         "received_events_url" : "https://api.github.com/users/ysangkok/received_events",
         "repos_url" : "https://api.github.com/users/ysangkok/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ysangkok/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ysangkok/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ysangkok"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523269815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523269815"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Probably shouldn't use the word \"legacy\" (at least user-facing) while it isn't actually legacy yet.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2020-11-13T22:39:59Z",
      "diff_hunk" : "@@ -41,7 +41,7 @@ Optional dependencies:\n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n  miniupnpc   | UPnP Support     | Firewall-jumping support\n- libdb4.8    | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+ libdb4.8    | Berkeley DB      | Optional, wallet storage (only needed when wallet enabled)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r523269815",
      "id" : 523269815,
      "in_reply_to_id" : 523247602,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2OTgxNQ==",
      "original_commit_id" : "caf3062e6275d3a2c941e0e002fb6581c277f65b",
      "original_line" : 45,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/build-unix.md",
      "position" : null,
      "pull_request_review_id" : 530461938,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523269815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-11-17T14:02:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-728948085",
      "id" : 728948085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyODk0ODA4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-17T14:02:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728948085",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-11-18T10:59:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-729603215",
      "id" : 729603215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyOTYwMzIxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-18T10:59:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729603215",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-11-23T15:02:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-732216878",
      "id" : 732216878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMjIxNjg3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-23T15:02:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/732216878",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/20267#issue-512655353\r\n\r\n> Fixes the tests for #20202. When BDB is not compiled, the wallet tests that rely on the legacy wallet will be disabled. Other tests not necessarily requiring the wallet, but can optionally test behavior with the wallet, are updated to handle the different wallet types. One test, `rpc_net.py`, which only uses the wallet to setup a few things, is changed to use the test framework's MiniWallet instead.\r\n> \r\n> This PR is separate from and based on #20202 because it needs a few other PRs to make the tests work: #18788, #20262, and #20266\r\n\r\nStarting to look at this but can the description be updated to maybe strip out the references to old PRs and say what behavior change this PR is implementing? What happens with test runner currently, and what happens after this PR? What happens running individual BDB tests currently, and what happens after?\r\n\r\nI'm used to test runner showing a table of all tests `Passed` or `Failed` or `Skipped`. Here, it seems like in the absence of BDB some tests are partially skipped so I would expect to see some new `Passed (partial)` status instead of plain `Passed`. Or to avoid this, I'd expect these tests to be split and run twice with `--legacy-wallet` and `--descriptors`, so there is never any partially passed test only fully passed or fully skipped.\r\n\r\nI guess I'm just confused about what the exact goal is for this PR, so it would be good to spell out  the new behavior.\r\n\r\nI'm also confused about why some code is looking at self.options.descriptors, and other code is calling `self.get_use_descriptors()`. And `self.get_use_descriptors()` is using `self.options.descriptors` internally but there is also `self.options.descriptors = self.get_use_descriptors()` so some kind of caching or recursive dependency? This might be worth simplifying or explaining some place.",
      "created_at" : "2020-12-02T15:49:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-737317034",
      "id" : 737317034,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzMxNzAzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-02T15:49:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737317034",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Starting to look at this but can the description be updated to maybe strip out the references to old PRs and say what behavior change this PR is implementing? What happens with test runner currently, and what happens after this PR? What happens running individual BDB tests currently, and what happens after?\r\n\r\nUpdated the OP.\r\n\r\n> I'm used to test runner showing a table of all tests `Passed` or `Failed` or `Skipped`. Here, it seems like in the absence of BDB some tests are partially skipped so I would expect to see some new `Passed (partial)` status instead of plain `Passed`. Or to avoid this, I'd expect these tests to be split and run twice with `--legacy-wallet` and `--descriptors`, so there is never any partially passed test only fully passed or fully skipped.\r\n\r\nWe already have tests which are \"partial\" as some parts are not tested if the wallet is not compiled. If we do want to have a \"partial\" indicator for tests where we disable components based on compiled support, then I think it should be done in a followup.\r\n\r\n> I'm also confused about why some code is looking at self.options.descriptors, and other code is calling `self.get_use_descriptors()`. And `self.get_use_descriptors()` is using `self.options.descriptors` internally but there is also `self.options.descriptors = self.get_use_descriptors()` so some kind of caching or recursive dependency? This might be worth simplifying or explaining some place.\r\n\r\nThis is a holdover from a previous iteration. I've removed the extra uses of `self.get_use_descriptors()` and just use `self.options.descriptors`. The purpose and behavior of `self.get_use_descriptors` is described in the OP.",
      "created_at" : "2020-12-02T17:37:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-737384240",
      "id" : 737384240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzM4NDI0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-02T17:37:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737384240",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-12-10T13:36:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-742525058",
      "id" : 742525058,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjUyNTA1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T13:36:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742525058",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for updates. Init sequence still seems too complicated. I don't see a reason options can't be set once simply in the constructor. In the current implementation cf5de8ec59ac6e2a49c728b886eb5d46d9705d1e:\r\n\r\n- self.options.descriptors value changes over time and is set to the return value of a function which circularly reads self.options.descriptors\r\n- default_wallet_name can't be read/written from setup_params and is a dynamic property executing code and confusingly depending on the changing self.options.descriptors value\r\n\r\nThe following cleanups seem to work all right:\r\n\r\n```diff\r\ndiff --git a/test/functional/test_framework/test_framework.py b/test/functional/test_framework/test_framework.py\r\nindex c0289bf491e..76b3815d25b 100755\r\n--- a/test/functional/test_framework/test_framework.py\r\n+++ b/test/functional/test_framework/test_framework.py\r\n@@ -102,6 +102,7 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n         self.supports_cli = True\r\n         self.bind_to_localhost_only = True\r\n         self.parse_args()\r\n+        self.default_wallet_name = \"default_wallet\" if self.options.descriptors else \"\"\r\n         self.wallet_data_filename = \"wallet.dat\"\r\n         # Optional list of wallet names that can be set in set_test_params to\r\n         # create and import keys to. If unset, default is len(nodes) *\r\n@@ -118,10 +119,6 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n             self.options.timeout_factor = 99999\r\n         self.rpc_timeout = int(self.rpc_timeout * self.options.timeout_factor) # optionally, increase timeout by a factor\r\n \r\n-    @property\r\n-    def default_wallet_name(self):\r\n-        return \"default_wallet\" if self.options.descriptors else \"\"\r\n-\r\n     def main(self):\r\n         \"\"\"Main function. This should not be overridden by the subclass test scripts.\"\"\"\r\n \r\n@@ -201,6 +198,18 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n         self.options = parser.parse_args()\r\n         self.options.previous_releases_path = previous_releases_path\r\n \r\n+        config = configparser.ConfigParser()\r\n+        config.read_file(open(self.options.configfile))\r\n+        self.config = config\r\n+\r\n+        if self.options.descriptors is None:\r\n+            # Prefer BDB unless it isn't available\r\n+            if self.is_bdb_compiled():\r\n+                self.options.descriptors = False\r\n+            elif self.is_sqlite_compiled():\r\n+                self.options.descriptors = True\r\n+            # If neither are compiled, tests requiring a wallet will be skipped and the value of self.options.descriptors won't matter\r\n+\r\n     def setup(self):\r\n         \"\"\"Call this method to start up the test framework object with options set.\"\"\"\r\n \r\n@@ -210,9 +219,8 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n \r\n         self.options.cachedir = os.path.abspath(self.options.cachedir)\r\n \r\n-        config = configparser.ConfigParser()\r\n-        config.read_file(open(self.options.configfile))\r\n-        self.config = config\r\n+        config = self.config\r\n+\r\n         fname_bitcoind = os.path.join(\r\n             config[\"environment\"][\"BUILDDIR\"],\r\n             \"src\",\r\n@@ -231,9 +239,6 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n             os.path.join(config['environment']['BUILDDIR'], 'src', 'qt'), os.environ['PATH']\r\n         ])\r\n \r\n-        # Determine descriptors default\r\n-        self.options.descriptors = self.get_use_descriptors()\r\n-\r\n         # Set up temp directory and start logging\r\n         if self.options.tmpdir:\r\n             self.options.tmpdir = os.path.abspath(self.options.tmpdir)\r\n@@ -847,14 +852,3 @@ class BitcoinTestFramework(metaclass=BitcoinTestMetaClass):\r\n     def is_bdb_compiled(self):\r\n         \"\"\"Checks whether the wallet module was compiled with BDB support.\"\"\"\r\n         return self.config[\"components\"].getboolean(\"USE_BDB\")\r\n-\r\n-    def get_use_descriptors(self):\r\n-        descriptors = self.options.descriptors\r\n-        if descriptors is None:\r\n-            # Prefer BDB unless it isn't available\r\n-            if self.is_bdb_compiled():\r\n-                descriptors = False\r\n-            elif self.is_sqlite_compiled():\r\n-                descriptors = True\r\n-            # If neither are compiled, tests requiring a wallet will be skipped and the value of self.options.descriptors won't matter\r\n-        return descriptors\r\n```\r\n\r\nWould be great to see these changes backported so this PR is easy to understand and review without  @<!-- -->property and get_use_descriptors complications\r\n\r\n",
      "created_at" : "2020-12-16T01:13:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-745698726",
      "id" : 745698726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NTY5ODcyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T01:13:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745698726",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Included @ryanofsky's suggestions. Also rebased to fix two silent merge conflicts.",
      "created_at" : "2021-01-09T00:33:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-757062331",
      "id" : 757062331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NzA2MjMzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-09T00:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757062331",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556817748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556817748"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"tests: Set descriptors default based on compilation\" (86b3c3d84bd57dffb3b5e47cd1a076bec62c7e92)\r\n\r\nWould be good to move this to the bottom of the function so it is better organized. Set self.options then self.config instead of options then config then options again",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-13T20:46:46Z",
      "diff_hunk" : "@@ -186,15 +186,27 @@ def parse_args(self):\n         parser.add_argument('--timeout-factor', dest=\"timeout_factor\", type=float, default=1.0, help='adjust test timeouts by a factor. Setting it to 0 disables all timeouts')\n \n         group = parser.add_mutually_exclusive_group()\n-        group.add_argument(\"--descriptors\", default=False, action=\"store_true\",\n+        group.add_argument(\"--descriptors\", action='store_const', const=True,\n                             help=\"Run test using a descriptor wallet\", dest='descriptors')\n-        group.add_argument(\"--legacy-wallet\", default=False, action=\"store_false\",\n+        group.add_argument(\"--legacy-wallet\", action='store_const', const=False,\n                             help=\"Run test using legacy wallets\", dest='descriptors')\n \n         self.add_options(parser)\n         self.options = parser.parse_args()\n         self.options.previous_releases_path = previous_releases_path\n \n+        config = configparser.ConfigParser()\n+        config.read_file(open(self.options.configfile))\n+        self.config = config",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556817748",
      "id" : 556817748,
      "line" : 203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgxNzc0OA==",
      "original_commit_id" : "86b3c3d84bd57dffb3b5e47cd1a076bec62c7e92",
      "original_line" : 203,
      "original_position" : 17,
      "original_start_line" : 198,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 27,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 201,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556817748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556818716"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556818716"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"tests: Set descriptors default based on compilation\" (86b3c3d84bd57dffb3b5e47cd1a076bec62c7e92)\r\n\r\nIf this comment is true, could maybe write:\r\n\r\n```python\r\nelse:\r\n   del self.options.descriptors\r\n```\r\n\r\nTo be sure the value is not used",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-13T20:48:29Z",
      "diff_hunk" : "@@ -186,15 +186,27 @@ def parse_args(self):\n         parser.add_argument('--timeout-factor', dest=\"timeout_factor\", type=float, default=1.0, help='adjust test timeouts by a factor. Setting it to 0 disables all timeouts')\n \n         group = parser.add_mutually_exclusive_group()\n-        group.add_argument(\"--descriptors\", default=False, action=\"store_true\",\n+        group.add_argument(\"--descriptors\", action='store_const', const=True,\n                             help=\"Run test using a descriptor wallet\", dest='descriptors')\n-        group.add_argument(\"--legacy-wallet\", default=False, action=\"store_false\",\n+        group.add_argument(\"--legacy-wallet\", action='store_const', const=False,\n                             help=\"Run test using legacy wallets\", dest='descriptors')\n \n         self.add_options(parser)\n         self.options = parser.parse_args()\n         self.options.previous_releases_path = previous_releases_path\n \n+        config = configparser.ConfigParser()\n+        config.read_file(open(self.options.configfile))\n+        self.config = config\n+\n+        if self.options.descriptors is None:\n+            # Prefer BDB unless it isn't available\n+            if self.is_bdb_compiled():\n+                self.options.descriptors = False\n+            elif self.is_sqlite_compiled():\n+                self.options.descriptors = True\n+            # If neither are compiled, tests requiring a wallet will be skipped and the value of self.options.descriptors won't matter",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556818716",
      "id" : 556818716,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgxODcxNg==",
      "original_commit_id" : "86b3c3d84bd57dffb3b5e47cd1a076bec62c7e92",
      "original_line" : 208,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556818716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556823298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556823298"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"tests: Don't make any wallets unless wallet is required\" (972c9cf8a4e2e27bd28a33630690404a1d3078d4)\r\n\r\nIf possible, it would seem clearer to just not call `init_wallet()` when `requires_wallet` is false than to call it and have it succeed without doing anything",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-13T20:57:20Z",
      "diff_hunk" : "@@ -411,6 +414,8 @@ def import_deterministic_coinbase_privkeys(self):\n             self.init_wallet(i)\n \n     def init_wallet(self, i):\n+        if not self.requires_wallet:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556823298",
      "id" : 556823298,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgyMzI5OA==",
      "original_commit_id" : "972c9cf8a4e2e27bd28a33630690404a1d3078d4",
      "original_line" : 417,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556823298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556831353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556831353"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Disable wallet_descriptor.py bdb format check if BDB is not compiled\" (297ab0e699b26f9742dc6ebf75be1dd857d1e531)\r\n\r\nWhat is the long term plan for these skipped checks? Personally I think it is bad to report that tests pass when parts of them are just being skipped. Do you disagree? I can think of two different ways we might address this in future PRs:\r\n\r\n1. Add a \"partially skipped\" test result in test runner, extending the current \"passed\" / \"failed\" / \"skipped\" possibilities.\r\n\r\n2. Move these skipped sections into separate tests, so each individual python test either passes, fails, or is skipped and there are no partially skipped tests.\r\n\r\nI'd be curious if other reviewers have opinions, or think this is not a big deal.\r\n\r\nAs a short-term suggestion for this PR, I think it would be nice to at least add `log.info` or `log.warning(\"Skipping BDB test\")` so running the tests individually at least gives better status information.\r\n\r\nFor this particular test, it might make sense to move this section to a `wallet_legacy.py` test mirroring `wallet_descriptor.py` and calling `skip_if_no_bdb` instead of `skip_if_no_sqlite`\r\n\r\n\r\n\r\n\r\n",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-13T21:12:29Z",
      "diff_hunk" : "@@ -23,11 +23,12 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_sqlite()\n \n     def run_test(self):\n-        # Make a legacy wallet and check it is BDB\n-        self.nodes[0].createwallet(wallet_name=\"legacy1\", descriptors=False)\n-        wallet_info = self.nodes[0].getwalletinfo()\n-        assert_equal(wallet_info['format'], 'bdb')\n-        self.nodes[0].unloadwallet(\"legacy1\")\n+        if self.is_bdb_compiled():",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556831353",
      "id" : 556831353,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgzMTM1Mw==",
      "original_commit_id" : "297ab0e699b26f9742dc6ebf75be1dd857d1e531",
      "original_line" : 26,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "test/functional/wallet_descriptor.py",
      "position" : 9,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556831353",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556885832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556885832"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Have feature_filelock.py test both bdb and sqlite, depending on compiled\" (49500debf06842ad0ee1499003c232c9a1c16597)\r\n\r\nIt seems like this is adding an unnecessary level of complexity. We already have a mechanism for running the same test without and without descriptors: we make the test respect the `--descriptors` option, and list the test twice in `test_runner` with and without the descriptors option.\r\n\r\nI don't know if this is the best mechanism, but it is one we already have, and it seems like it could work as just as well here as it does other places. If it's not sufficient, it would be good to figure out some other another way of running tests twice that could be used consistently.\r\n\r\nAnother related problem with the test after this change is the way it treats `--descriptors`/`--legacy-wallet` options differently than other tests (It effectively ignores them).\r\n\r\n",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-13T22:05:39Z",
      "diff_hunk" : "@@ -27,11 +29,21 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error(extra_args=['-datadir={}'.format(self.nodes[0].datadir), '-noserver'], expected_msg=expected_msg)\n \n         if self.is_wallet_compiled():\n-            self.nodes[0].createwallet(self.default_wallet_name)\n-            wallet_dir = os.path.join(datadir, 'wallets')\n-            self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n-            expected_msg = \"Error: Error initializing wallet database environment\"\n-            self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+            def check_wallet_filelock(descriptors):\n+                wallet_name = ''.join([random.choice(string.ascii_lowercase) for _ in range(6)])\n+                self.nodes[0].createwallet(wallet_name=wallet_name, descriptors=descriptors)\n+                wallet_dir = os.path.join(datadir, 'wallets')\n+                self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n+                if descriptors:\n+                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                else:\n+                    expected_msg = \"Error: Error initializing wallet database environment\"\n+                self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+\n+            if self.is_bdb_compiled():\n+                check_wallet_filelock(False)\n+            if self.is_sqlite_compiled():\n+                check_wallet_filelock(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556885832",
      "id" : 556885832,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njg4NTgzMg==",
      "original_commit_id" : "49500debf06842ad0ee1499003c232c9a1c16597",
      "original_line" : 46,
      "original_position" : 32,
      "original_start_line" : 43,
      "path" : "test/functional/feature_filelock.py",
      "position" : 32,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556885832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556908988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556908988"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Setup wallets with descriptors for feature_notifications\" (7c60f35da3117af7d6a0b8a1e4756c5df907bd1c)\r\n\r\nComment below \"Give node 0 same wallet seed as node 1\" should be moved here to reflect what this code is doing (and what the previous code is no longer doing)",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-13T22:27:14Z",
      "diff_hunk" : "@@ -49,6 +49,30 @@ def setup_network(self):\n         super().setup_network()\n \n     def run_test(self):\n+        if self.is_wallet_compiled():\n+            # Setup the descriptors to be imported to the wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556908988",
      "id" : 556908988,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjkwODk4OA==",
      "original_commit_id" : "7c60f35da3117af7d6a0b8a1e4756c5df907bd1c",
      "original_line" : 53,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "test/functional/feature_notifications.py",
      "position" : 19,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556908988",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556927365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556927365"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Setup wallets with descriptors for feature_notifications\" (7c60f35da3117af7d6a0b8a1e4756c5df907bd1c)\r\n\r\nIs there any way this test setup can be simplified, or do we have any ideas about how this might be simplified in the future if it is not worth simplifying now? The old setup was trivial: there were two wallets and one wallet had a `sethdseed` call to use the same seed as the other wallet.\r\n\r\nNow we need hardcoded private keys, base64 strings, descriptor strings, hd paths, and checksums, wallet names, create calls, load_on_startup and timestamps options and internal/external chains just to get two wallets to use the same seed.\r\n\r\nMaybe it belongs in a helper function, but it seems like it should be more straightforward to take a seed from one wallet and put it in another wallet.\r\n\r\n",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-13T22:45:04Z",
      "diff_hunk" : "@@ -49,6 +49,30 @@ def setup_network(self):\n         super().setup_network()\n \n     def run_test(self):\n+        if self.is_wallet_compiled():\n+            # Setup the descriptors to be imported to the wallet\n+            seed = \"cTdGmKFWpbvpKQ7ejrdzqYT2hhjyb3GPHnLAK7wdi5Em67YLwSm9\"\n+            xpriv = \"tprv8ZgxMBicQKsPfHCsTwkiM1KT56RXbGGTqvc2hgqzycpwbHqqpcajQeMRZoBD35kW4RtyCemu6j34Ku5DEspmgjKdt2qe4SvRch5Kk8B8A2v\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556927365",
      "id" : 556927365,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjkyNzM2NQ==",
      "original_commit_id" : "7c60f35da3117af7d6a0b8a1e4756c5df907bd1c",
      "original_line" : 55,
      "original_position" : 21,
      "original_start_line" : 54,
      "path" : "test/functional/feature_notifications.py",
      "position" : 21,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 54,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556927365",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556948674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556948674"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Setup wallets for interface_bitcoin_cli.py\" (02b69ded2f8d2fe8276b63a9faa134623fc82ed5)\r\n\r\nCorrect if I'm wrong, but this seems like a workaround to deal with  `init_wallet` setup now being skipped because this test does not call `skip_if_no_wallet()`.\r\n\r\nI think ideally it would be better to split this test up so wallet and non-wallet parts are in separate tests and skipped checks are clearly reported skipped. But in meantime, would something the following work in `set_test_params` instead of duplicating `init_wallet` code?\r\n\r\n\r\n```python\r\nif self.is_wallet_compiled():\r\n    self.requires_wallet = True\r\n```",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-13T23:39:13Z",
      "diff_hunk" : "@@ -63,6 +63,8 @@ def run_test(self):\n \n         self.log.info(\"Test -getinfo returns expected network and blockchain info\")\n         if self.is_wallet_compiled():\n+            self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=self.options.descriptors)\n+            self.nodes[0].importprivkey(privkey=self.nodes[0].get_deterministic_priv_key().key, label='coinbase')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556948674",
      "id" : 556948674,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk0ODY3NA==",
      "original_commit_id" : "02b69ded2f8d2fe8276b63a9faa134623fc82ed5",
      "original_line" : 67,
      "original_position" : 5,
      "original_start_line" : 66,
      "path" : "test/functional/interface_bitcoin_cli.py",
      "position" : null,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556948674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556957641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556957641"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Have feature_filelock.py test both bdb and sqlite, depending on compiled\" (49500debf06842ad0ee1499003c232c9a1c16597)\r\n\r\nThis is great! Hope to see more of usage of MiniWallet. But it would be good to have a comment below where the miniwallet is used, saying what it is testing. I can't figure it out. If the test never required a wallet and would pass whether or not `sendtoaddress` was called previously, what is the `send_self_transfer` call doing now and is it actually testing something?",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-14T00:05:20Z",
      "diff_hunk" : "@@ -48,6 +49,8 @@ def set_test_params(self):\n         self.supports_cli = False\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556957641",
      "id" : 556957641,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk1NzY0MQ==",
      "original_commit_id" : "55c71320b655cb11589f5ed6d4d66166816324a5",
      "original_line" : 53,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/rpc_net.py",
      "position" : 13,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556957641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556961263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556961263"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Setup wallets for interface_zmq.py\" (c8a809bd3bc22707d336b16dc883ae7f35ab8fd3)\r\n\r\nIs this another workaround for `init_wallet` setup now being skipped? Could this simply do `if self.is_wallet_compiled(): self.requires_wallet = True` in `set_test_params` as suggested previously? (Or divided into wallet/nonwallet tests using `skip_if_no_wallet`)",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-14T00:16:02Z",
      "diff_hunk" : "@@ -68,6 +68,12 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_bitcoind_zmq()\n \n     def run_test(self):\n+        if self.is_wallet_compiled():\n+            self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n+            self.nodes[0].importprivkey(privkey=self.nodes[0].get_deterministic_priv_key().key, label='coinbase')\n+            self.nodes[1].createwallet(wallet_name=self.default_wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n+            self.nodes[1].importprivkey(privkey=self.nodes[1].get_deterministic_priv_key().key, label='coinbase')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556961263",
      "id" : 556961263,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk2MTI2Mw==",
      "original_commit_id" : "c8a809bd3bc22707d336b16dc883ae7f35ab8fd3",
      "original_line" : 75,
      "original_position" : 8,
      "original_start_line" : 71,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556961263",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556963654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556963654"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"tests: Disable bdb dump test when no bdb\" (c191614587f138c00277c99a9709dedaf8bbcfd7)\r\n\r\nI guess this is another place where future test splitting or test runner improvements could provide feedback that test didn't fully pass and checks were skipped.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-14T00:22:37Z",
      "diff_hunk" : "@@ -348,7 +348,8 @@ def test_dump_createfromdump(self):\n \n         self.log.info('Checking createfromdump')\n         self.do_tool_createfromdump(\"load\", \"wallet.dump\")\n-        self.do_tool_createfromdump(\"load-bdb\", \"wallet.dump\", \"bdb\")\n+        if self.is_bdb_compiled():\n+            self.do_tool_createfromdump(\"load-bdb\", \"wallet.dump\", \"bdb\")\n         if self.is_sqlite_compiled():\n             self.do_tool_createfromdump(\"load-sqlite\", \"wallet.dump\", \"sqlite\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556963654",
      "id" : 556963654,
      "line" : 354,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk2MzY1NA==",
      "original_commit_id" : "c191614587f138c00277c99a9709dedaf8bbcfd7",
      "original_line" : 354,
      "original_position" : 8,
      "original_start_line" : 351,
      "path" : "test/functional/tool_wallet.py",
      "position" : 8,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 351,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556963654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556968003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556968003"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"tests: mempool_compatibility needs requires_wallet set\" (5a985cd6656afe976f73b3276017e22055a8050c)\r\n\r\nMaybe it would be good to rename `requires_wallet` to something like `init_default_wallet` to more accurately reflect what the variable does. Also, `requires_wallet = False` seems basically equivalent to `default_wallet_name = False` and maybe the two variables should be combined at some point (though it seems like a bigger setup change that would be better in some cleanup PR)",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-14T00:35:35Z",
      "diff_hunk" : "@@ -23,6 +23,7 @@ class MempoolCompatibilityTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.wallet_names = [None]\n+        self.requires_wallet = True",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556968003",
      "id" : 556968003,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk2ODAwMw==",
      "original_commit_id" : "5a985cd6656afe976f73b3276017e22055a8050c",
      "original_line" : 26,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/mempool_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556968003",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556972270"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556972270"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Fix wallet_send.py wallet setup to work with descriptors\" (1fa9bbdb4076944272d5246d1140d29ba3ecb3a3)\r\n\r\nCan comment be expanded to say why? My understanding is something like \"Unlike legacy wallets, descriptor wallets don't allow watch-only keys and spendable keys in the same wallet.\" If this is the case, it'd be helpful to say explicitly. It would also be good to say whether or not it would be useful to be test the watch-only behavior here in the descriptor case (presumably just using 2 wallets instead of 1). If this would not be useful to test because there is already other coverage or watch-only descriptor stuff, that would be good to know.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-14T00:47:55Z",
      "diff_hunk" : "@@ -241,11 +284,13 @@ def run_test(self):\n         res = w2.walletprocesspsbt(res[\"psbt\"])\n         assert res[\"complete\"]\n \n-        self.log.info(\"Create PSBT from wallet w4 with watch-only keys, sign with w2...\")\n-        self.test_send(from_wallet=w4, to_wallet=w1, amount=1, expect_error=(-4, \"Insufficient funds\"))\n-        res = self.test_send(from_wallet=w4, to_wallet=w1, amount=1, include_watching=True, add_to_wallet=False)\n-        res = w2.walletprocesspsbt(res[\"psbt\"])\n-        assert res[\"complete\"]\n+        if not self.options.descriptors:\n+            # This tests legacy watch-only behavior only.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556972270",
      "id" : 556972270,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk3MjI3MA==",
      "original_commit_id" : "1fa9bbdb4076944272d5246d1140d29ba3ecb3a3",
      "original_line" : 288,
      "original_position" : 132,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : null,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556972270",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556974169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556974169"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Fix wallet_send.py wallet setup to work with descriptors\" (1fa9bbdb4076944272d5246d1140d29ba3ecb3a3)\r\n\r\nWould be good to clarify with a reason like \"Descriptor wallets do not allow spendable keys and watch only keys in the same wallet\" (if this is the case).",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-14T00:53:31Z",
      "diff_hunk" : "@@ -168,49 +169,91 @@ def run_test(self):\n         self.nodes[1].createwallet(wallet_name=\"w1\")\n         w1 = self.nodes[1].get_wallet_rpc(\"w1\")\n         # w2 contains the private keys for w3\n-        self.nodes[1].createwallet(wallet_name=\"w2\")\n+        self.nodes[1].createwallet(wallet_name=\"w2\", blank=True)\n         w2 = self.nodes[1].get_wallet_rpc(\"w2\")\n+        xpriv = \"tprv8ZgxMBicQKsPfHCsTwkiM1KT56RXbGGTqvc2hgqzycpwbHqqpcajQeMRZoBD35kW4RtyCemu6j34Ku5DEspmgjKdt2qe4SvRch5Kk8B8A2v\"\n+        xpub = \"tpubD6NzVbkrYhZ4YkEfMbRJkQyZe7wTkbTNRECozCtJPtdLRn6cT1QKb8yHjwAPcAr26eHBFYs5iLiFFnCbwPRsncCKUKCfubHDMGKzMVcN1Jg\"\n+        if self.options.descriptors:\n+            w2.importdescriptors([{\n+                \"desc\": descsum_create(\"wpkh(\" + xpriv + \"/0/0/*)\"),\n+                \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n+                \"active\": True\n+            },{\n+                \"desc\": descsum_create(\"wpkh(\" + xpriv + \"/0/1/*)\"),\n+                \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n+                \"active\": True,\n+                \"internal\": True\n+            }])\n+        else:\n+            w2.sethdseed(True)\n+\n         # w3 is a watch-only wallet, based on w2\n         self.nodes[1].createwallet(wallet_name=\"w3\", disable_private_keys=True)\n         w3 = self.nodes[1].get_wallet_rpc(\"w3\")\n-        for _ in range(3):\n-            a2_receive = w2.getnewaddress()\n-            a2_change = w2.getrawchangeaddress() # doesn't actually use change derivation\n-            res = w3.importmulti([{\n-                \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n+        if self.options.descriptors:\n+            # Match the privkeys in w2 for descriptors\n+            res = w3.importdescriptors([{\n+                \"desc\": descsum_create(\"wpkh(\" + xpub + \"/0/0/*)\"),\n                 \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n                 \"keypool\": True,\n+                \"active\": True,\n                 \"watchonly\": True\n             },{\n-                \"desc\": w2.getaddressinfo(a2_change)[\"desc\"],\n+                \"desc\": descsum_create(\"wpkh(\" + xpub + \"/0/1/*)\"),\n                 \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n                 \"keypool\": True,\n+                \"active\": True,\n                 \"internal\": True,\n                 \"watchonly\": True\n             }])\n             assert_equal(res, [{\"success\": True}, {\"success\": True}])\n \n-        w0.sendtoaddress(a2_receive, 10) # fund w3\n-        self.nodes[0].generate(1)\n-        self.sync_blocks()\n-\n-        # w4 has private keys enabled, but only contains watch-only keys (from w2)\n-        self.nodes[1].createwallet(wallet_name=\"w4\", disable_private_keys=False)\n-        w4 = self.nodes[1].get_wallet_rpc(\"w4\")\n         for _ in range(3):\n             a2_receive = w2.getnewaddress()\n-            res = w4.importmulti([{\n-                \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n-                \"timestamp\": \"now\",\n-                \"keypool\": False,\n-                \"watchonly\": True\n-            }])\n-            assert_equal(res, [{\"success\": True}])\n+            if not self.options.descriptors:\n+                # Because legacy wallets use exclusively hardened derivation, we can't do a ranged import like we do for descriptors\n+                a2_change = w2.getrawchangeaddress() # doesn't actually use change derivation\n+                res = w3.importmulti([{\n+                    \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n+                    \"timestamp\": \"now\",\n+                    \"keypool\": True,\n+                    \"watchonly\": True\n+                },{\n+                    \"desc\": w2.getaddressinfo(a2_change)[\"desc\"],\n+                    \"timestamp\": \"now\",\n+                    \"keypool\": True,\n+                    \"internal\": True,\n+                    \"watchonly\": True\n+                }])\n+                assert_equal(res, [{\"success\": True}, {\"success\": True}])\n \n-        w0.sendtoaddress(a2_receive, 10) # fund w4\n+        w0.sendtoaddress(a2_receive, 10) # fund w3\n         self.nodes[0].generate(1)\n         self.sync_blocks()\n \n+        if not self.options.descriptors:\n+            # w4 has private keys enabled, but only contains watch-only keys (from w2)\n+            # This is legacy wallet behavior only",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556974169",
      "id" : 556974169,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk3NDE2OQ==",
      "original_commit_id" : "1fa9bbdb4076944272d5246d1140d29ba3ecb3a3",
      "original_line" : 240,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : null,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556974169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556977983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556977983"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Fix wallet_send.py wallet setup to work with descriptors\" (1fa9bbdb4076944272d5246d1140d29ba3ecb3a3)\r\n\r\nThis seems like the same code earlier copied from the feature_notifications test. You can see earlier comment, but I think it would be better to have a framework or util function that can easily create wallets with the same seed. (It would also seem better not to hard code that seed, but the hardcoding is less a problem than the complexity and boilerplate these changes add to the tests)",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-14T01:05:15Z",
      "diff_hunk" : "@@ -168,49 +169,91 @@ def run_test(self):\n         self.nodes[1].createwallet(wallet_name=\"w1\")\n         w1 = self.nodes[1].get_wallet_rpc(\"w1\")\n         # w2 contains the private keys for w3\n-        self.nodes[1].createwallet(wallet_name=\"w2\")\n+        self.nodes[1].createwallet(wallet_name=\"w2\", blank=True)\n         w2 = self.nodes[1].get_wallet_rpc(\"w2\")\n+        xpriv = \"tprv8ZgxMBicQKsPfHCsTwkiM1KT56RXbGGTqvc2hgqzycpwbHqqpcajQeMRZoBD35kW4RtyCemu6j34Ku5DEspmgjKdt2qe4SvRch5Kk8B8A2v\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r556977983",
      "id" : 556977983,
      "line" : 174,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk3Nzk4Mw==",
      "original_commit_id" : "1fa9bbdb4076944272d5246d1140d29ba3ecb3a3",
      "original_line" : 174,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : 15,
      "pull_request_review_id" : 567604526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556977983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-01-19T18:15:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-763027762",
      "id" : 763027762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MzAyNzc2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-19T18:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/763027762",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564123336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564123336"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think that the optimal solution for these is to split them into separate tests for wallet and non-wallet components.\r\n\r\nThere are some other tests, notable `feature_notifications.py` and `interface_zmq.py` which have a significant portion of tests specifically for the wallet.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-25T23:57:55Z",
      "diff_hunk" : "@@ -23,11 +23,12 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_sqlite()\n \n     def run_test(self):\n-        # Make a legacy wallet and check it is BDB\n-        self.nodes[0].createwallet(wallet_name=\"legacy1\", descriptors=False)\n-        wallet_info = self.nodes[0].getwalletinfo()\n-        assert_equal(wallet_info['format'], 'bdb')\n-        self.nodes[0].unloadwallet(\"legacy1\")\n+        if self.is_bdb_compiled():",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564123336",
      "id" : 564123336,
      "in_reply_to_id" : 556831353,
      "line" : 26,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDEyMzMzNg==",
      "original_commit_id" : "297ab0e699b26f9742dc6ebf75be1dd857d1e531",
      "original_line" : 26,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "test/functional/wallet_descriptor.py",
      "position" : 9,
      "pull_request_review_id" : 575904255,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564123336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564124955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564124955"
         }
      },
      "author_association" : "MEMBER",
      "body" : "#20892 runs such tests twice. It also seems like this should be one of those tests that the wallet portion is split into a separate test.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T00:02:40Z",
      "diff_hunk" : "@@ -27,11 +29,21 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error(extra_args=['-datadir={}'.format(self.nodes[0].datadir), '-noserver'], expected_msg=expected_msg)\n \n         if self.is_wallet_compiled():\n-            self.nodes[0].createwallet(self.default_wallet_name)\n-            wallet_dir = os.path.join(datadir, 'wallets')\n-            self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n-            expected_msg = \"Error: Error initializing wallet database environment\"\n-            self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + self.default_wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+            def check_wallet_filelock(descriptors):\n+                wallet_name = ''.join([random.choice(string.ascii_lowercase) for _ in range(6)])\n+                self.nodes[0].createwallet(wallet_name=wallet_name, descriptors=descriptors)\n+                wallet_dir = os.path.join(datadir, 'wallets')\n+                self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n+                if descriptors:\n+                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                else:\n+                    expected_msg = \"Error: Error initializing wallet database environment\"\n+                self.nodes[1].assert_start_raises_init_error(extra_args=['-walletdir={}'.format(wallet_dir), '-wallet=' + wallet_name, '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)\n+\n+            if self.is_bdb_compiled():\n+                check_wallet_filelock(False)\n+            if self.is_sqlite_compiled():\n+                check_wallet_filelock(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564124955",
      "id" : 564124955,
      "in_reply_to_id" : 556885832,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDEyNDk1NQ==",
      "original_commit_id" : "49500debf06842ad0ee1499003c232c9a1c16597",
      "original_line" : 46,
      "original_position" : 32,
      "original_start_line" : 43,
      "path" : "test/functional/feature_filelock.py",
      "position" : 32,
      "pull_request_review_id" : 575906208,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 43,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564124955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564134115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564134115"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Until we implement private descriptor export, that won't be possible.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T00:30:18Z",
      "diff_hunk" : "@@ -49,6 +49,30 @@ def setup_network(self):\n         super().setup_network()\n \n     def run_test(self):\n+        if self.is_wallet_compiled():\n+            # Setup the descriptors to be imported to the wallet\n+            seed = \"cTdGmKFWpbvpKQ7ejrdzqYT2hhjyb3GPHnLAK7wdi5Em67YLwSm9\"\n+            xpriv = \"tprv8ZgxMBicQKsPfHCsTwkiM1KT56RXbGGTqvc2hgqzycpwbHqqpcajQeMRZoBD35kW4RtyCemu6j34Ku5DEspmgjKdt2qe4SvRch5Kk8B8A2v\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564134115",
      "id" : 564134115,
      "in_reply_to_id" : 556927365,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDEzNDExNQ==",
      "original_commit_id" : "7c60f35da3117af7d6a0b8a1e4756c5df907bd1c",
      "original_line" : 55,
      "original_position" : 21,
      "original_start_line" : 54,
      "path" : "test/functional/feature_notifications.py",
      "position" : 21,
      "pull_request_review_id" : 575916676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 54,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564134115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146582"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The `is_*_compiled` checks require self.config to already exist, so it must come before them and can't be at the bottom of the function.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:09:33Z",
      "diff_hunk" : "@@ -186,15 +186,27 @@ def parse_args(self):\n         parser.add_argument('--timeout-factor', dest=\"timeout_factor\", type=float, default=1.0, help='adjust test timeouts by a factor. Setting it to 0 disables all timeouts')\n \n         group = parser.add_mutually_exclusive_group()\n-        group.add_argument(\"--descriptors\", default=False, action=\"store_true\",\n+        group.add_argument(\"--descriptors\", action='store_const', const=True,\n                             help=\"Run test using a descriptor wallet\", dest='descriptors')\n-        group.add_argument(\"--legacy-wallet\", default=False, action=\"store_false\",\n+        group.add_argument(\"--legacy-wallet\", action='store_const', const=False,\n                             help=\"Run test using legacy wallets\", dest='descriptors')\n \n         self.add_options(parser)\n         self.options = parser.parse_args()\n         self.options.previous_releases_path = previous_releases_path\n \n+        config = configparser.ConfigParser()\n+        config.read_file(open(self.options.configfile))\n+        self.config = config",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146582",
      "id" : 564146582,
      "in_reply_to_id" : 556817748,
      "line" : 203,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0NjU4Mg==",
      "original_commit_id" : "86b3c3d84bd57dffb3b5e47cd1a076bec62c7e92",
      "original_line" : 203,
      "original_position" : 17,
      "original_start_line" : 198,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : 27,
      "pull_request_review_id" : 575930635,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : 201,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146615"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146615"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:09:38Z",
      "diff_hunk" : "@@ -186,15 +186,27 @@ def parse_args(self):\n         parser.add_argument('--timeout-factor', dest=\"timeout_factor\", type=float, default=1.0, help='adjust test timeouts by a factor. Setting it to 0 disables all timeouts')\n \n         group = parser.add_mutually_exclusive_group()\n-        group.add_argument(\"--descriptors\", default=False, action=\"store_true\",\n+        group.add_argument(\"--descriptors\", action='store_const', const=True,\n                             help=\"Run test using a descriptor wallet\", dest='descriptors')\n-        group.add_argument(\"--legacy-wallet\", default=False, action=\"store_false\",\n+        group.add_argument(\"--legacy-wallet\", action='store_const', const=False,\n                             help=\"Run test using legacy wallets\", dest='descriptors')\n \n         self.add_options(parser)\n         self.options = parser.parse_args()\n         self.options.previous_releases_path = previous_releases_path\n \n+        config = configparser.ConfigParser()\n+        config.read_file(open(self.options.configfile))\n+        self.config = config\n+\n+        if self.options.descriptors is None:\n+            # Prefer BDB unless it isn't available\n+            if self.is_bdb_compiled():\n+                self.options.descriptors = False\n+            elif self.is_sqlite_compiled():\n+                self.options.descriptors = True\n+            # If neither are compiled, tests requiring a wallet will be skipped and the value of self.options.descriptors won't matter",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146615",
      "id" : 564146615,
      "in_reply_to_id" : 556818716,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0NjYxNQ==",
      "original_commit_id" : "86b3c3d84bd57dffb3b5e47cd1a076bec62c7e92",
      "original_line" : 208,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 575930673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146615",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146729"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146729"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:09:56Z",
      "diff_hunk" : "@@ -411,6 +414,8 @@ def import_deterministic_coinbase_privkeys(self):\n             self.init_wallet(i)\n \n     def init_wallet(self, i):\n+        if not self.requires_wallet:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146729",
      "id" : 564146729,
      "in_reply_to_id" : 556823298,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0NjcyOQ==",
      "original_commit_id" : "972c9cf8a4e2e27bd28a33630690404a1d3078d4",
      "original_line" : 417,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 575930795,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146729",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:10:07Z",
      "diff_hunk" : "@@ -49,6 +49,30 @@ def setup_network(self):\n         super().setup_network()\n \n     def run_test(self):\n+        if self.is_wallet_compiled():\n+            # Setup the descriptors to be imported to the wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146786",
      "id" : 564146786,
      "in_reply_to_id" : 556908988,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0Njc4Ng==",
      "original_commit_id" : "7c60f35da3117af7d6a0b8a1e4756c5df907bd1c",
      "original_line" : 53,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "test/functional/feature_notifications.py",
      "position" : 19,
      "pull_request_review_id" : 575930845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146843"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146843"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:10:14Z",
      "diff_hunk" : "@@ -63,6 +63,8 @@ def run_test(self):\n \n         self.log.info(\"Test -getinfo returns expected network and blockchain info\")\n         if self.is_wallet_compiled():\n+            self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=self.options.descriptors)\n+            self.nodes[0].importprivkey(privkey=self.nodes[0].get_deterministic_priv_key().key, label='coinbase')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146843",
      "id" : 564146843,
      "in_reply_to_id" : 556948674,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0Njg0Mw==",
      "original_commit_id" : "02b69ded2f8d2fe8276b63a9faa134623fc82ed5",
      "original_line" : 67,
      "original_position" : 5,
      "original_start_line" : 66,
      "path" : "test/functional/interface_bitcoin_cli.py",
      "position" : null,
      "pull_request_review_id" : 575930889,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146964"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment. It is only used to generate a transaction so that `last_transaction` in `getpeerinfo` can be checked.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:10:40Z",
      "diff_hunk" : "@@ -48,6 +49,8 @@ def set_test_params(self):\n         self.supports_cli = False\n \n     def run_test(self):\n+        self.wallet = MiniWallet(self.nodes[0])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564146964",
      "id" : 564146964,
      "in_reply_to_id" : 556957641,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0Njk2NA==",
      "original_commit_id" : "55c71320b655cb11589f5ed6d4d66166816324a5",
      "original_line" : 53,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/rpc_net.py",
      "position" : 13,
      "pull_request_review_id" : 575931045,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564146964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147031"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. Done",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:10:50Z",
      "diff_hunk" : "@@ -68,6 +68,12 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_bitcoind_zmq()\n \n     def run_test(self):\n+        if self.is_wallet_compiled():\n+            self.nodes[0].createwallet(wallet_name=self.default_wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n+            self.nodes[0].importprivkey(privkey=self.nodes[0].get_deterministic_priv_key().key, label='coinbase')\n+            self.nodes[1].createwallet(wallet_name=self.default_wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n+            self.nodes[1].importprivkey(privkey=self.nodes[1].get_deterministic_priv_key().key, label='coinbase')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147031",
      "id" : 564147031,
      "in_reply_to_id" : 556961263,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0NzAzMQ==",
      "original_commit_id" : "c8a809bd3bc22707d336b16dc883ae7f35ab8fd3",
      "original_line" : 75,
      "original_position" : 8,
      "original_start_line" : 71,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 575931118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147547"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147547"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps, but that's a bit more complicated.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:12:38Z",
      "diff_hunk" : "@@ -23,6 +23,7 @@ class MempoolCompatibilityTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.wallet_names = [None]\n+        self.requires_wallet = True",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147547",
      "id" : 564147547,
      "in_reply_to_id" : 556968003,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0NzU0Nw==",
      "original_commit_id" : "5a985cd6656afe976f73b3276017e22055a8050c",
      "original_line" : 26,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/mempool_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 575931747,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147547",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:12:46Z",
      "diff_hunk" : "@@ -241,11 +284,13 @@ def run_test(self):\n         res = w2.walletprocesspsbt(res[\"psbt\"])\n         assert res[\"complete\"]\n \n-        self.log.info(\"Create PSBT from wallet w4 with watch-only keys, sign with w2...\")\n-        self.test_send(from_wallet=w4, to_wallet=w1, amount=1, expect_error=(-4, \"Insufficient funds\"))\n-        res = self.test_send(from_wallet=w4, to_wallet=w1, amount=1, include_watching=True, add_to_wallet=False)\n-        res = w2.walletprocesspsbt(res[\"psbt\"])\n-        assert res[\"complete\"]\n+        if not self.options.descriptors:\n+            # This tests legacy watch-only behavior only.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147580",
      "id" : 564147580,
      "in_reply_to_id" : 556972270,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0NzU4MA==",
      "original_commit_id" : "1fa9bbdb4076944272d5246d1140d29ba3ecb3a3",
      "original_line" : 288,
      "original_position" : 132,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : null,
      "pull_request_review_id" : 575931789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147612"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:12:53Z",
      "diff_hunk" : "@@ -168,49 +169,91 @@ def run_test(self):\n         self.nodes[1].createwallet(wallet_name=\"w1\")\n         w1 = self.nodes[1].get_wallet_rpc(\"w1\")\n         # w2 contains the private keys for w3\n-        self.nodes[1].createwallet(wallet_name=\"w2\")\n+        self.nodes[1].createwallet(wallet_name=\"w2\", blank=True)\n         w2 = self.nodes[1].get_wallet_rpc(\"w2\")\n+        xpriv = \"tprv8ZgxMBicQKsPfHCsTwkiM1KT56RXbGGTqvc2hgqzycpwbHqqpcajQeMRZoBD35kW4RtyCemu6j34Ku5DEspmgjKdt2qe4SvRch5Kk8B8A2v\"\n+        xpub = \"tpubD6NzVbkrYhZ4YkEfMbRJkQyZe7wTkbTNRECozCtJPtdLRn6cT1QKb8yHjwAPcAr26eHBFYs5iLiFFnCbwPRsncCKUKCfubHDMGKzMVcN1Jg\"\n+        if self.options.descriptors:\n+            w2.importdescriptors([{\n+                \"desc\": descsum_create(\"wpkh(\" + xpriv + \"/0/0/*)\"),\n+                \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n+                \"active\": True\n+            },{\n+                \"desc\": descsum_create(\"wpkh(\" + xpriv + \"/0/1/*)\"),\n+                \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n+                \"active\": True,\n+                \"internal\": True\n+            }])\n+        else:\n+            w2.sethdseed(True)\n+\n         # w3 is a watch-only wallet, based on w2\n         self.nodes[1].createwallet(wallet_name=\"w3\", disable_private_keys=True)\n         w3 = self.nodes[1].get_wallet_rpc(\"w3\")\n-        for _ in range(3):\n-            a2_receive = w2.getnewaddress()\n-            a2_change = w2.getrawchangeaddress() # doesn't actually use change derivation\n-            res = w3.importmulti([{\n-                \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n+        if self.options.descriptors:\n+            # Match the privkeys in w2 for descriptors\n+            res = w3.importdescriptors([{\n+                \"desc\": descsum_create(\"wpkh(\" + xpub + \"/0/0/*)\"),\n                 \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n                 \"keypool\": True,\n+                \"active\": True,\n                 \"watchonly\": True\n             },{\n-                \"desc\": w2.getaddressinfo(a2_change)[\"desc\"],\n+                \"desc\": descsum_create(\"wpkh(\" + xpub + \"/0/1/*)\"),\n                 \"timestamp\": \"now\",\n+                \"range\": [0, 100],\n                 \"keypool\": True,\n+                \"active\": True,\n                 \"internal\": True,\n                 \"watchonly\": True\n             }])\n             assert_equal(res, [{\"success\": True}, {\"success\": True}])\n \n-        w0.sendtoaddress(a2_receive, 10) # fund w3\n-        self.nodes[0].generate(1)\n-        self.sync_blocks()\n-\n-        # w4 has private keys enabled, but only contains watch-only keys (from w2)\n-        self.nodes[1].createwallet(wallet_name=\"w4\", disable_private_keys=False)\n-        w4 = self.nodes[1].get_wallet_rpc(\"w4\")\n         for _ in range(3):\n             a2_receive = w2.getnewaddress()\n-            res = w4.importmulti([{\n-                \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n-                \"timestamp\": \"now\",\n-                \"keypool\": False,\n-                \"watchonly\": True\n-            }])\n-            assert_equal(res, [{\"success\": True}])\n+            if not self.options.descriptors:\n+                # Because legacy wallets use exclusively hardened derivation, we can't do a ranged import like we do for descriptors\n+                a2_change = w2.getrawchangeaddress() # doesn't actually use change derivation\n+                res = w3.importmulti([{\n+                    \"desc\": w2.getaddressinfo(a2_receive)[\"desc\"],\n+                    \"timestamp\": \"now\",\n+                    \"keypool\": True,\n+                    \"watchonly\": True\n+                },{\n+                    \"desc\": w2.getaddressinfo(a2_change)[\"desc\"],\n+                    \"timestamp\": \"now\",\n+                    \"keypool\": True,\n+                    \"internal\": True,\n+                    \"watchonly\": True\n+                }])\n+                assert_equal(res, [{\"success\": True}, {\"success\": True}])\n \n-        w0.sendtoaddress(a2_receive, 10) # fund w4\n+        w0.sendtoaddress(a2_receive, 10) # fund w3\n         self.nodes[0].generate(1)\n         self.sync_blocks()\n \n+        if not self.options.descriptors:\n+            # w4 has private keys enabled, but only contains watch-only keys (from w2)\n+            # This is legacy wallet behavior only",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147612",
      "id" : 564147612,
      "in_reply_to_id" : 556974169,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0NzYxMg==",
      "original_commit_id" : "1fa9bbdb4076944272d5246d1140d29ba3ecb3a3",
      "original_line" : 240,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : null,
      "pull_request_review_id" : 575931828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147634"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-26T01:12:56Z",
      "diff_hunk" : "@@ -168,49 +169,91 @@ def run_test(self):\n         self.nodes[1].createwallet(wallet_name=\"w1\")\n         w1 = self.nodes[1].get_wallet_rpc(\"w1\")\n         # w2 contains the private keys for w3\n-        self.nodes[1].createwallet(wallet_name=\"w2\")\n+        self.nodes[1].createwallet(wallet_name=\"w2\", blank=True)\n         w2 = self.nodes[1].get_wallet_rpc(\"w2\")\n+        xpriv = \"tprv8ZgxMBicQKsPfHCsTwkiM1KT56RXbGGTqvc2hgqzycpwbHqqpcajQeMRZoBD35kW4RtyCemu6j34Ku5DEspmgjKdt2qe4SvRch5Kk8B8A2v\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r564147634",
      "id" : 564147634,
      "in_reply_to_id" : 556977983,
      "line" : 174,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDE0NzYzNA==",
      "original_commit_id" : "1fa9bbdb4076944272d5246d1140d29ba3ecb3a3",
      "original_line" : 174,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "test/functional/wallet_send.py",
      "position" : 15,
      "pull_request_review_id" : 575931848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564147634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased. I think there are improvements that can be done in followup PRs. For example, #20892 implements running a test twice. But for now, I would like for this to be merged so that we can get more test coverage of descriptor wallets.",
      "created_at" : "2021-01-26T01:15:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-767216062",
      "id" : 767216062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NzIxNjA2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-26T01:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767216062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "CI fail looks like an actual issue:\r\n```\r\n.........Traceback (most recent call last):\r\n  File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/create_cache.py\", line 27, in <module>\r\n    CreateCache().main()\r\n  File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 105, in __init__\r\n    self.default_wallet_name = \"default_wallet\" if self.options.descriptors else \"\"\r\nAttributeError: 'Namespace' object has no attribute 'descriptors'\r\n```",
      "created_at" : "2021-01-27T13:16:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-768278128",
      "id" : 768278128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2ODI3ODEyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-27T13:16:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768278128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r565514302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565514302"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Reverted this since it is causing problems when configured with `--disable-wallet`",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-01-27T17:53:21Z",
      "diff_hunk" : "@@ -186,15 +186,27 @@ def parse_args(self):\n         parser.add_argument('--timeout-factor', dest=\"timeout_factor\", type=float, default=1.0, help='adjust test timeouts by a factor. Setting it to 0 disables all timeouts')\n \n         group = parser.add_mutually_exclusive_group()\n-        group.add_argument(\"--descriptors\", default=False, action=\"store_true\",\n+        group.add_argument(\"--descriptors\", action='store_const', const=True,\n                             help=\"Run test using a descriptor wallet\", dest='descriptors')\n-        group.add_argument(\"--legacy-wallet\", default=False, action=\"store_false\",\n+        group.add_argument(\"--legacy-wallet\", action='store_const', const=False,\n                             help=\"Run test using legacy wallets\", dest='descriptors')\n \n         self.add_options(parser)\n         self.options = parser.parse_args()\n         self.options.previous_releases_path = previous_releases_path\n \n+        config = configparser.ConfigParser()\n+        config.read_file(open(self.options.configfile))\n+        self.config = config\n+\n+        if self.options.descriptors is None:\n+            # Prefer BDB unless it isn't available\n+            if self.is_bdb_compiled():\n+                self.options.descriptors = False\n+            elif self.is_sqlite_compiled():\n+                self.options.descriptors = True\n+            # If neither are compiled, tests requiring a wallet will be skipped and the value of self.options.descriptors won't matter",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r565514302",
      "id" : 565514302,
      "in_reply_to_id" : 556818716,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTUxNDMwMg==",
      "original_commit_id" : "86b3c3d84bd57dffb3b5e47cd1a076bec62c7e92",
      "original_line" : 208,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 577607083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/565514302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> CI fail looks like an actual issue:\r\n\r\nShould be resolved now.",
      "created_at" : "2021-01-27T17:53:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-768462368",
      "id" : 768462368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2ODQ2MjM2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-27T17:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768462368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r570095626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570095626"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I can't understand why do we need \"the old versions have their wallets' setup\". I've tried to run this test with the flag set to False and it makes no difference",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-02-04T10:03:25Z",
      "diff_hunk" : "@@ -23,6 +23,7 @@ class MempoolCompatibilityTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.wallet_names = [None]\n+        self.requires_wallet = True",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r570095626",
      "id" : 570095626,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDA5NTYyNg==",
      "original_commit_id" : "a831ba6014827d5afc9b423773361350359c94d5",
      "original_line" : 26,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/mempool_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 583222857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570095626",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Started doing review. Have only one small question, but I'll get back with more detailed feedback later",
      "created_at" : "2021-02-04T10:04:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-773187283",
      "id" : 773187283,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MzE4NzI4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-04T10:04:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/773187283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r570417408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570417408"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's redundant now. Previously this variable was checked inside of `init_wallet()` which was called by `import_deterministic_coinbase_privkeys()` so we needed to set it to `True` to allow our call of that to work. But since checking `requires_wallet` is moved outside of that, it is no longer needed.\r\n\r\nRemoved and dropped the commit.",
      "commit_id" : "49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-02-04T17:39:49Z",
      "diff_hunk" : "@@ -23,6 +23,7 @@ class MempoolCompatibilityTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.wallet_names = [None]\n+        self.requires_wallet = True",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#discussion_r570417408",
      "id" : 570417408,
      "in_reply_to_id" : 570095626,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDQxNzQwOA==",
      "original_commit_id" : "a831ba6014827d5afc9b423773361350359c94d5",
      "original_line" : 26,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/mempool_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 583650368,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-04T17:39:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/570417408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> IMO, handling of sqlite/bdb test variants is moving in a bad direction here and in followup #20892. I think individual test invocations should be as small and fast as possible, \r\n\r\nYes, I think so too. And agree it's good if skipping tests is reported explicitly. However I don't think this PR makes this much worse. But yes it does add some `if self.is_wallet_compiled():`.\r\n\r\nACK 49797c3ccfbb9f7ac9c1fbb574d35b315c103805",
      "created_at" : "2021-02-05T13:21:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-774029261",
      "id" : 774029261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NDAyOTI2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-05T13:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/774029261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "UBsan error in the CI (https://github.com/bitcoin/bitcoin/pull/20267/checks?check_run_id=1832884065) is:\r\n```\r\ntest/fuzz/system.cpp:57:159: runtime error: implicit conversion from type 'int' of value -2049 (32-bit, signed) to type 'unsigned int' changed the value to 4294965247 (32-bit, unsigned)\r\n```\r\nduring the fuzz tests. As these are not touched here, I don't think it needs to block merge.",
      "created_at" : "2021-02-05T13:23:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20267#issuecomment-774030686",
      "id" : 774030686,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NDAzMDY4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-05T13:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/774030686",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
