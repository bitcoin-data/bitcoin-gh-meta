[
   {
      "author_association" : "MEMBER",
      "body" : "utACK face870a8a\r\n\r\nThanks for fixing this!\r\n\r\nI don't quite understand the \"get the id from the peer info and then get the peer info from the id\" step. Could be simplified with:\r\n\r\n```diff\r\n--- a/test/functional/rpc_net.py\r\n+++ b/test/functional/rpc_net.py\r\n@@ -113,11 +113,10 @@ class NetTest(BitcoinTestFramework):\r\n         self.wait_until(lambda: (self.nodes[0].getnettotals()['totalbytessent'] >= net_totals_before['totalbytessent'] + 32 * 2), timeout=1)\r\n         self.wait_until(lambda: (self.nodes[0].getnettotals()['totalbytesrecv'] >= net_totals_before['totalbytesrecv'] + 32 * 2), timeout=1)\r\n \r\n-        for peer_id in [p['id'] for p in peer_info_before]:\r\n-            before = next(p for p in peer_info_before if p['id'] == peer_id)\r\n-            after = lambda: next(p for p in self.nodes[0].getpeerinfo() if p['id'] == peer_id)\r\n-            self.wait_until(lambda: after()['bytesrecv_per_msg'].get('pong', 0) >= before['bytesrecv_per_msg'].get('pong', 0) + 32, timeout=1)\r\n-            self.wait_until(lambda: after()['bytessent_per_msg'].get('ping', 0) >= before['bytessent_per_msg'].get('ping', 0) + 32, timeout=1)\r\n+        for peer_before in peer_info_before:\r\n+            peer_after = lambda: next(p for p in self.nodes[0].getpeerinfo() if p['id'] == peer_before['id'])\r\n+            self.wait_until(lambda: peer_after()['bytesrecv_per_msg'].get('pong', 0) >= peer_before['bytesrecv_per_msg'].get('pong', 0) + 32, timeout=1)\r\n+            self.wait_until(lambda: peer_after()['bytessent_per_msg'].get('ping', 0) >= peer_before['bytessent_per_msg'].get('ping', 0) + 32, timeout=1)\r\n \r\n     def test_getnetworkinfo(self):\r\n         self.log.info(\"Test getnetworkinfo\")\r\n```",
      "created_at" : "2020-11-04T11:58:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20299#issuecomment-721690427",
      "id" : 721690427,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20299",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTY5MDQyNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T11:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721690427",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fa2ecadd0d3283a89d27772dc0275e76277ae17e",
      "created_at" : "2020-11-04T12:24:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20299#issuecomment-721701921",
      "id" : 721701921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20299",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTcwMTkyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T12:24:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721701921",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
