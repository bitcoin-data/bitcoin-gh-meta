[
   {
      "author_association" : "MEMBER",
      "body" : "BDB should have a uuid record too. It can just be the same as the BDB generated id for compatibility, but a unique wallet id should not be at the db level. Adding a uuid record to BDB wallets also means migrating from BDB to SQLite won't change the id.",
      "created_at" : "2020-10-20T18:39:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713060027",
      "id" : 713060027,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzA2MDAyNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T18:39:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713060027",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20204#discussion_r508754651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20204"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508754651"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is actually not a rfc4122 UUID. It's just 256 random bits. Probably doesn't matter though.",
      "commit_id" : "64a26799709c556338564f59d14eff8f48dd325c",
      "created_at" : "2020-10-20T18:39:35Z",
      "diff_hunk" : "@@ -281,6 +282,16 @@ void SQLiteDatabase::Open()\n             throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set the wallet schema version: %s\\n\", sqlite3_errstr(ret)));\n         }\n     }\n+\n+    auto batch = MakeBatch();\n+    if (!batch->Exists(\"uuid\")) {\n+        // UUID is missing (probably a new wallet)\n+        std::vector<unsigned char> new_uuid_buf(32);\n+        // We might not need strong random, but better safe than sorry\n+        // Can't make weak random stronger later\n+        GetStrongRandBytes(&new_uuid_buf[0], new_uuid_buf.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#discussion_r508754651",
      "id" : 508754651,
      "line" : 292,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1NDY1MQ==",
      "original_commit_id" : "64a26799709c556338564f59d14eff8f48dd325c",
      "original_line" : 292,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/wallet/sqlite.cpp",
      "position" : 19,
      "pull_request_review_id" : 513028200,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20204",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-20T18:39:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508754651",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 Migration code just needs to be aware of how BDB stores the unique id. In any case, not related to this PR.",
      "created_at" : "2020-10-20T18:42:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713061660",
      "id" : 713061660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzA2MTY2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T18:42:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713061660",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @achow101 Migration code just needs to be aware of how BDB stores the unique id. In any case, not related to this PR.\r\n\r\nDisagree. The access to this ID should not be db specific. This id should not be dependent on the underlying database. Furthermore, migration via `createfromdump` (from #19137) won't add the id as it is a strict record-for-record move.\r\n\r\nI think the only db specific thing should be BDB adding the uuid record using the BDB generated id. Otherwise the wallet creation code should add an id if it doesn't exist. This also makes it easy to add future db formats.",
      "created_at" : "2020-10-20T18:50:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713067855",
      "id" : 713067855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzA2Nzg1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T18:51:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713067855",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Weak concept NACK. When there's a choice between (1) less code for greater usability and more use-cases and (2) more code for less usability and fewer use-cases, I try to choose (1)\r\n\r\nI don't see why it should be a problem to make two copies of a wallet and use it for different things. I don't think we should warn when someone does that. I don't think prune locks should use UUIDs. I think they should use wallet names so the locks are more understandable and easily managed by users. Wallet names are already part of the RPC interface, and they must be unique, and they are already a familiar concept to callers. No need to introduce a new concept that doesn't have a good use-case and adds extra code, and then expose it externally through confusing warnings and pruning behavior.\r\n\r\nI added the first use of BDB fileids in #11429 to avoid data corruption when multiple wallets with the same fileid are loaded into the same environment. There is no similar problem with sqlite and so \"Fixes a regression\" in the PR description is vague and misleading.",
      "created_at" : "2020-10-20T18:52:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713069277",
      "id" : 713069277,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzA2OTI3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T18:52:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713069277",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">The access to this ID should not be db specific.\r\n\r\nDebatable, but it currently is as a matter of fact. And again, unrelated to the issue addressed in this PR. \r\n\r\n>Furthermore, migration via createfromdump (from #19137) won't add the id as it is a strict record-for-record move.\r\n\r\nSounds like a bug in createfromdump...",
      "created_at" : "2020-10-20T18:52:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713069435",
      "id" : 713069435,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzA2OTQzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T18:52:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713069435",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't see why it should be a problem to make two copies of a wallet and use it for different things.\r\n\r\nWhat did you have in mind? This is always broken behaviour, and has never been supported...\r\n\r\n>I don't think prune locks should use UUIDs. I think they should use wallet names so the locks are more understandable and easily managed by users.\r\n\r\nWallet names are not unique and can be changed.\r\n\r\n>I think they should use wallet names so the locks are more understandable and easily managed by users.\r\n\r\nPrune locks already have a human-readable description for this purpose. Regardless, it is just one example use case. We cannot reliably restore UUIDs later, but we can always ignore them later if they were to turn out not useful.",
      "created_at" : "2020-10-20T18:58:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713072183",
      "id" : 713072183,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzA3MjE4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T18:58:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713072183",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed bug due to key being `const char[5]` instead of `std::string`",
      "created_at" : "2020-10-20T19:17:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713082744",
      "id" : 713082744,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzA4Mjc0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T19:17:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713082744",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What did you have in mind?\r\n\r\nJust basic file management. Maybe I want to make a bunch of wallets with the same password and import different keys into them. Maybe I want some wallets with the same keys. Maybe I want to set up a few wallets together on one machine and them copy them to different machines, and sometimes use them on the same machine again. Nothing impossible to work around, but it's nice for wallets to behave like normal data files and be copyable, and I don't think code should go out of its way to make wallet data more complicated or harder to manage.\r\n\r\n> This is always broken behaviour, and has never been supported...\r\n\r\nIt works fine, and I'm not saying go out of the way to add support. I'm saying don't go out of the way to remove support.\r\n\r\n> Wallet names are not unique and can be changed.\r\n\r\nIt's exhausting to discuss things like this with you Luke! We both understand they are unique at any point in time when they are loaded, and not unique at different points in time if they are unloaded and moved.\r\n\r\n> > I think they should use wallet names so the locks are more understandable and easily managed by users.\r\n> \r\n> Prune locks already have a human-readable description for this purpose. Regardless, it is just one example use case. We cannot reliably restore UUIDs later, but we can always ignore them later if they were to turn out not useful.\r\n\r\n:+1:\r\n\r\nIf other people think this is a good idea, I'm not here to make an issue of it. Re-iterate weak nack.\r\n\r\n",
      "created_at" : "2020-10-20T19:19:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713083707",
      "id" : 713083707,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzA4MzcwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T19:19:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713083707",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">It works fine, and I'm not saying go out of the way to add support. I'm saying don't go out of the way to remove support.\r\n\r\nThis doesn't remove support for anything at all.\r\n\r\n>It's exhausting to discuss things like this with you Luke! We both understand they are unique at any point in time when they are loaded, and not unique at different points in time if they are unloaded and moved.\r\n\r\nBut it's the latter case the UUID is needed to address.\r\n",
      "created_at" : "2020-10-20T19:21:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713084806",
      "id" : 713084806,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzA4NDgwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T19:21:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713084806",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Approach NACK\r\n\r\nIf we are going to have a wallet id, then support it properly. This means have it in CWallet, have a way to fetch it from CWallet, have the record in `walletdb.cpp` and writers for it in `WalletBatch`.\r\n\r\nFurthermore, this PR is a massive layer violation. While I accept that we will have a layer violation here because of BDB (although I would prefer we don't use the BDB id as a wallet id, @luke-jr insists that we must), the layer violation should be limited to just BDB. It should not be put somewhere that we plan on supporting for a long time. Put the layer violation in the module that's slated for removal.\r\n\r\nThe wallet id should be at the wallet level, not the db level. The only thing that belongs in the db level is writing the BDB unique id as a wallet id record. Having SQLite write a newly generated record is not the correct way to implement a wallet id.\r\n\r\n#20205 does this correctly.",
      "created_at" : "2020-10-20T20:09:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713110154",
      "id" : 713110154,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMzExMDE1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T20:09:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/713110154",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing in favour of #20205",
      "created_at" : "2020-10-22T12:37:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-714464088",
      "id" : 714464088,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNDQ2NDA4OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-22T12:37:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/714464088",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > It's exhausting to discuss things like this with you Luke! We both understand they are unique at any point in time when they are loaded, and not unique at different points in time if they are unloaded and moved.\r\n> \r\n> But it's the latter case the UUID is needed to address.\r\n\r\nDefinitely not, at best they can be a partial solution and maybe help with a type of rename detection. There should be a GUI wallet rename feature and `renamewallet` API anyway to rename wallets explicitly and update external wallet references. Not just the ones in prune locks, but also references in the settings file, and references in memory if renaming is allowed without unloading and reloading. Any case it would be best to discuss this directly in the relevant issues.\r\n\r\n",
      "created_at" : "2020-10-26T13:34:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-716549329",
      "id" : 716549329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjU0OTMyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-26T13:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716549329",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@Platinumwrist Why are you spamming all these repos with pseudo-reviews? I went through a few of your recent contributions and it is just spamming open source repos. To seem active on the contributions panel? Stop it.",
      "created_at" : "2020-11-04T09:19:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-721612992",
      "id" : 721612992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20204",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMTYxMjk5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-04T09:19:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721612992",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/618076?v=4",
         "events_url" : "https://api.github.com/users/fatso83/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fatso83/followers",
         "following_url" : "https://api.github.com/users/fatso83/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fatso83/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fatso83",
         "id" : 618076,
         "login" : "fatso83",
         "node_id" : "MDQ6VXNlcjYxODA3Ng==",
         "organizations_url" : "https://api.github.com/users/fatso83/orgs",
         "received_events_url" : "https://api.github.com/users/fatso83/received_events",
         "repos_url" : "https://api.github.com/users/fatso83/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fatso83/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fatso83/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fatso83"
      }
   }
]
