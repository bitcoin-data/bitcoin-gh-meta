[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23381](https://github.com/bitcoin/bitcoin/pull/23381) (validation/refactor: refactoring for package submission by glozow)\n* [#22674](https://github.com/bitcoin/bitcoin/pull/22674) (validation: mempool validation and submission for packages of 1 child + parents by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-05-29T03:59:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-850764465",
      "id" : 850764465,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MDc2NDQ2NQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850764465/reactions"
      },
      "updated_at" : "2021-10-28T23:40:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850764465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-06-10T13:08:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-858606986",
      "id" : 858606986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1ODYwNjk4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-10T13:08:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/858606986",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> 404_002 (100_000 bytes of regular fields, 1002 bytes of witness fields), dividing by WITNESS_SCALE_FACTOR, obtaining 101_000 virtual bytes\r\n\r\nDid you mean 4,002 bytes of witness fields?",
      "created_at" : "2021-06-11T16:49:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-859712783",
      "id" : 859712783,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1OTcxMjc4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-11T16:49:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859712783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ping @rustyrussell",
      "created_at" : "2021-06-11T16:54:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-859715412",
      "id" : 859715412,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1OTcxNTQxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-11T16:54:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859715412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Wouldn't this cause the package acceptance code to accept packages that wouldn't be accepted as a series of successively-relayed transactions?  E.g., Alice submits a 400,001 weight transaction (100,001 vbytes) followed by a 3999 weight child transaction (1,000 vbytes).\r\n\r\nI don't think implementing this (with a bug fix for the above, if I'm correct) would be a disaster, but I think we should try to be consistent in the units we use in our external interfaces---so we either use vbytes everywhere or we use weight everywhere.  When choosing among those two units, we eventually bump into the feerate interfaces where we have a choice between trying to retrain a large number of users who currently think about fees in \"bytes\" per BTC (or sats), or instead training a a few dozen developers[1] that, to get vbytes from weight units, they need to put a `ceil()` around `weight/4`.  To me, the decision to be made there seems obvious.\r\n\r\n[1] Most wallets should probably be using a library that provides low-level functions for calculating sizes and feerates, so it's only the authors of those libraries who should need to read BIP141's simple and clear description of how to convert weight into vbytes.",
      "created_at" : "2021-06-11T20:44:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-859901930",
      "id" : 859901930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1OTkwMTkzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-11T20:44:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859901930",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point, although I am wondering whether backend code should generally move towards weight units everywhere even if the feerate interfaces remain denominated in vbytes for the userbase.",
      "created_at" : "2021-06-11T21:50:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-859927590",
      "id" : 859927590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1OTkyNzU5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-11T21:50:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859927590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Xekyo\r\n\r\n> Did you mean 4,002 bytes of witness fields?\r\n\r\nYep, good catch, corrected in PR description.\r\n\r\n@harding \r\n\r\n> Wouldn't this cause the package acceptance code to accept packages that wouldn't be accepted as a series of successively-relayed transactions? E.g., Alice submits a 400,001 weight transaction (100,001 vbytes) followed by a 3999 weight child transaction (1,000 vbytes). \r\n\r\nI think the parent transaction would be rejected by our current check against `MAX_STANDARD_TX_WEIGHT` (400_000 WU), which still apply at package acceptance (in `AcceptMultipleTransactions`) ? Also, I believe one of the outcome of the lenghty discussion in #20833 was that package acceptance doesn't imply that the corresponding series of transactions will be accepted if submitted. Ultimately, package-level checks aren't even going to be a superset of transaction-level one, some checks might more liberal (evaluate package-level feerate to decide mempool min feerate), some more conservative (evaluate union of package ancestors to decide mempool ancestors limits) ?\r\n\r\n> I don't think implementing this (with a bug fix for the above, if I'm correct) would be a disaster, but I think we should try to be consistent in the units we use in our external interfaces---so we either use vbytes everywhere or we use weight everywhere.\r\n\r\nW.r.t to our mempool limits interface, I think we're already using weight (`MAX_STANDARD_TX_WEIGHT`) and I don't think we could move backward to vbytes. The reasoning being that if we had MAX_STANDARD_TX_SIZE, we could accept transaction which are ultimately bigger than other ones rejected, when it's time to evaluate them for block inclusion (and I believe this phenomena could already happen with our current approach of evaluating mempool ancestors/descendants limits in vbytes, `DEFAULT_DESCENDANT_LIMITS` ?). This change avoids this pitfall and normalizes our package acceptance interface with the transaction-level one.\r\n\r\n>  When choosing among those two units, we eventually bump into the feerate interfaces where we have a choice between trying to retrain a large number of users who currently think about fees in \"bytes\" per BTC (or sats), or instead training a a few dozen developers[1] that, to get vbytes from weight units, they need to put a ceil() around weight/4.\r\n\r\nBut do we have the leisury to avoid retraining users, or at least a subset of the userspace, to think fees in terms of \"weights\" ? With the upcoming deployment of Taproot, you might have the choice among multiples tapscripts, offering differing feerates/interactivity trade-offs. Sticking to vbytes, such wallets would be misleading when branches differs in weights but are displayed as \"equal\" in vbytes. Further, LN operators and users are going to think in term of weights, as it's far more granularity for liquidity operations (e.g participating in dual-funded channel). For the rest of the users, I believe they're going to care more about the cost of basic operations like spend from a P2WSH to one party, spend from a P2SH to two parties, a 2-of-3 multisig, rather than the unit into which it's displayed.\r\n\r\nThat said, I'm not a UX wallet expert, and I think this change is motivated enough from a mempool acceptance interface viewpoint rather than wandering into a feerate interface discussion.",
      "created_at" : "2021-06-13T17:15:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-860243406",
      "id" : 860243406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MDI0MzQwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-13T17:15:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860243406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@glozow I guess you would be interested, it's the answer to your question [here](https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-826237280).",
      "created_at" : "2021-06-13T17:17:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-860243551",
      "id" : 860243551,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MDI0MzU1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-13T17:17:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860243551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ariard \r\n\r\n> I think the parent transaction would be rejected by our current check against MAX_STANDARD_TX_WEIGHT (400_000 WU), which still apply at package acceptance (in AcceptMultipleTransactions) ? \r\n\r\nOh, of course.  The example would then be:\r\n\r\n```python\r\nIn [1]: x = 400000; y = 3001; z = 999\r\n\r\nIn [2]: x+y+z <= 404000\r\nOut[2]: True\r\n\r\nIn [3]: ceil(x/4)+ceil(y/4)+ceil(z/4) <= 101000\r\nOut[3]: False\r\n```\r\n\r\n> I believe one of the outcome of the lenghty discussion in #20833 was that package acceptance doesn't imply that the corresponding series of transactions will be accepted if submitted. \r\n\r\nYeah, but it would be nice to follow the same rules when there's no significant benefit to changing them.  That said, I don't really care about tiny rounding issues that don't impact our DoS protections at all; it just seems incongruous to me.\r\n\r\n> do we have the leisury to avoid retraining users, or at least a subset of the userspace, to think fees in terms of \"weights\" ?\r\n\r\nYes, of course we do.  Your argument in this paragraph creates an artificial dilemma between vbytes and weight units based on granularity, but it's possible to use vbytes with more granularity when making comparisons.  Developers writing their own low-level functions need to know that vbytes at the transaction level is `ceil(x/4)`, but for everyone else vbytes can be expressed for comparison purposes as `float(x/4)`.  For example, see https://bitcoinops.org/en/tools/calc-size/ \r\n\r\n> I think this change is motivated enough from a mempool acceptance interface viewpoint rather than wandering into a feerate interface discussion.\r\n\r\nThe user-visible interface for mempool acceptance limits is currently defined in \"kilobytes\":\r\n\r\n```text\r\n$ bitcoind -help-debug | grep limit.*size\r\n  -limitancestorsize=<n>\r\n  -limitdescendantsize=<n>\r\n```\r\n\r\nUsing weight units in the code seems to create unnecessary confusion, e.g. the example at the top of this post.  If you instead propose to change the user-facing size parameter for package size, that would imply also changing other size parameters to use weight, which brings us to the fee interface.\r\n\r\nI think there's a very simple rule that's previously been applied to the code, which is that weight units are for consensus checks and vbytes are for everything else.  I'm not sure we should be changing that because significant parts of the early LN protocol specification drafts were written by someone trying to make *sipa* an eponym for weight, and so now they're stuck using feerate units nobody else uses.  Personally, my response to #13283 isn't \"downstream developer had a problem, we should spend a bunch of time refactoring our code (and maybe our interfaces) to fix it\" but rather \"downstream developer did something weird, we should buy them a drink and tell them a story about a time we also did something weird and suffered for it.\"",
      "created_at" : "2021-06-13T19:17:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-860257644",
      "id" : 860257644,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MDI1NzY0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-13T19:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860257644",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@harding\r\n\r\nYes your last example works.\r\n\r\n> Yeah, but it would be nice to follow the same rules when there's no significant benefit to changing them. That said, I don't really care about tiny rounding issues that don't impact our DoS protections at all; it just seems incongruous to me.\r\n\r\nBeyond the reduction of rounding-bugs risks in critical paths of downstream codebases, I think there is a relevant benefit to changing them. To make my argument clear, I believe that using vbytes units for our mempool acceptance limits isn't economically optimal.\r\n\r\nAssuming two absolute-fee equal packages A and B, respectively of sizes 100_999 vbytes and 101_001 vbytes. The first one is currently accepted by our package logic, the second one rejected. Scaled up to weight units, it turns out package A has a size of 300_999 WU and package B has a size of 104_004 WU. Package B is far more interesting than A for block inclusion, however it won't be present in our mempool with currently vbytes expressed limits.\r\n\r\n> Developers writing their own low-level functions need to know that vbytes at the transaction level is ceil(x/4), but for everyone else vbytes can be expressed for comparison purposes as float(x/4). For example, see https://bitcoinops.org/en/tools/calc-size/\r\n\r\nOf course, you can use vbytes with far more granularity when making comparisons if your wallet developer is aware of all the differing accounting scales to use among transaction components, i.e when to display float(x/4). And this accounting complexity might extend in the future, if we rely on taproot annex to artificially increase the cost of new opcodes or if we introduce new consensus fields. Beyond, I would argue that reasoning on integers is far easier to do than floats, which kind of reduce the end-user cognitive burden from a UX standpoint.\r\n\r\n> Using weight units in the code seems to create unnecessary confusion, e.g. the example at the top of this post. If you instead propose to change the user-facing size parameter for package size, that would imply also changing other size parameters to use weight, which brings us to the fee interface.\r\n\r\nIf my reasoning above about economical optimality holds, yes I think that logically implies changing other size parameters to weight. W.r.t to mempool acceptance limits, that's a minor change, which can be done without overhaul of mempool internal interface from sat/KvB to sat/kWU. I agree that this later mentioned change would imply a lot of careful refactoring which might restrain us to do it in the short-term. But we don't have this concern with newer interfaces.\r\n\r\n> I think there's a very simple rule that's previously been applied to the code, which is that weight units are for consensus checks and vbytes are for everything else.\r\n\r\nAt least we have one instance where this rule isn't consistently applied, `MAX_STANDARD_TX_WEIGHT` ? So should we modify back this variable to vbytes units ?\r\n\r\n> Personally, my response to #13283 isn't \"downstream developer had a problem, we should spend a bunch of time refactoring our code (and maybe our interfaces) to fix it\" but rather \"downstream developer did something weird, we should buy them a drink and tell them a story about a time we also did something weird and suffered for it.\"\r\n\r\nI hear you there, but please note I think we're both advocating package-relay to make downstream projects support better, which is extensively time-consuming as this discussion and other related-package PRs are illustrating it. If you want to abandon this serie of works in the name of downstream weirdness, I think you'll have a lot of drinks to buy to the LN ecosystem :)\r\n\r\nBeyond the joke, if you have a strong opinion against this specific PR, please mark a clear Concept NACK,\r\nor let me know if I didn't address your arguments or you feel I need to clarify mine. Otherwise,\r\nI fear we're going to fall in an endless nerdy discussion ?",
      "created_at" : "2021-06-14T15:57:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-860799024",
      "id" : 860799024,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MDc5OTAyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-15T20:45:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860799024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ariard thanks for your detailed response and sorry for bike shedding.\r\n\r\nI'm concept NACK on using different rules for packages of transactions than we would use for the same transactions submitted separately unless there's a significant benefit motivating the difference.  I don't think a less-than 0.001% difference in economic rationality (which only matters in rare edge cases) is anywhere significant enough motivation.  I don't think downstream developers should be performing relay-related calculations using weight units---they should be using vbytes---so I don't think there's any benefit at all for them to us using weight units here; indeed, it might be harmful in giving them mistaken impression that Bitcoin Core is going to eventually switch to using weight units in public interfaces.\r\n\r\nIf this PR were changed to eliminate the behavior change, I'd have no conceptual objection to it.\r\n\r\nAs for the general idea of using weight units in internal code, I think that's a decision best made by the people most frequently working on that code; I'll try to keep my nose out of it.  But I will object strongly to any later attempts to change the public interfaces to use weight units based on the argument that the internal code now uses weight units.  If vbytes are to die and weight units are to become part of how everyday users measure feerates, please let that change be established in other popular software first before we consider it.\r\n\r\n> I think you'll have a lot of drinks to buy to the LN ecosystem :)\r\n\r\nI think I already have quite a few obligations in that area from other messes I've made, some of which you've be instrumental in discovering.  :-)",
      "created_at" : "2021-06-16T18:51:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-862627568",
      "id" : 862627568,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MjYyNzU2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-16T18:51:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862627568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Code wise, please note that the virtual size isn't computed as a simple /4 (rounded up) from the weight units but also factors in the signature OPs cost. As implemented a specially-crafted transaction's size could largely diverge between the WU size there and the virtual size in the rest of the code.\r\n\r\nI don't think that's accurate.  The number of sigops in a transaction has no direct effect on its weight or vsize; there's just a rule that says a transaction is invalid if the number of sigops per weight exceeds a certain budget, e.g. as defined in BIP342.",
      "created_at" : "2021-06-18T09:14:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-863890176",
      "id" : 863890176,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2Mzg5MDE3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T09:14:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863890176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't think that's accurate. The number of sigops in a transaction has no direct effect on its weight or vsize\r\n\r\nThe transaction virtual size is increased if its number of sigops is abnormally high compared to its size:\r\nhttps://github.com/bitcoin/bitcoin/blob/da69d9965a112c6421fce5649b5a18beb7513526/src/policy/policy.cpp#L280-L283\r\n\r\nThis is how the size is computed in ATMP. However you are right that for packages we give a number of sigops (and cost) of `0` and therefore the specifc changes of this PR are not affected.\r\n~~But we probably should compute the transaction size for packages the same way we do for single transactions in the first place?~~ EDIT: so this is actually done for package transactions too, as we'll call `PreChecks` for each transaction. But it's really confusing to first check the transaction virtual size without the sig op cost penalty, to then re-compute it with the penalty set.",
      "created_at" : "2021-06-18T09:30:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-863900614",
      "id" : 863900614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MzkwMDYxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T12:19:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863900614",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "AFAIU, sigops and weight are two independent limits per consensus. The treatment of transactions with high sigops as having a high weight is a simplification to avoid a multidimensional optimization problem and only applies to policy checks.",
      "created_at" : "2021-06-18T18:16:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-864202682",
      "id" : 864202682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDIwMjY4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T18:16:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864202682",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@darosior \r\n\r\n> The transaction virtual size is increased if its number of sigops is abnormally high compared to its size\r\n\r\nThanks for looking up and linking me to the code.  I was able to follow it back to #8356 where this was added and so I think I now understand the source of confusion:  We allow users to exceed the policy limits on sigops by pretending their transactions are the same vsize as transactions that would have the same number of sigops but an appropriate amount of weight to contain those sigops.\r\n\r\nAs long as developers are creating transactions in a normal way, they shouldn't run into this problem and can just use the standard vbytes formula from BIP141.\r\n\r\n> t's really confusing to first check the transaction virtual size without the sig op cost penalty, to then re-compute it with the penalty set.\r\n\r\nIndeed.  I think we still need the above function for legacy and v0 segwit transactions, but it should always produce the same result as simple BIP141 vbytes for any valid taproot transaction.",
      "created_at" : "2021-06-20T01:57:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-864487861",
      "id" : 864487861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDQ4Nzg2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-20T01:57:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864487861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> As long as developers are creating transactions in a normal way\r\n\r\nYes, of course. But my point there was just to be careful to not drop the DOS protection rule with a refactoring to WU ([but this patch specifically doesn't drop it as it was not present in the first](https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-863900614)).",
      "created_at" : "2021-06-21T20:41:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-865330523",
      "id" : 865330523,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NTMzMDUyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-21T20:41:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/865330523",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-11-09T17:06:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-964351870",
      "id" : 964351870,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "IC_kwDOABII5845etd-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964351870/reactions"
      },
      "updated_at" : "2021-11-09T17:06:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964351870",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--13523179cfe9479db18ec6c5d236f789-->There hasn't been much activity lately and the patch still needs rebase. What is the status here?\n\n* Is it still relevant? â¡ï¸ Please solve the conflicts to make it ready for review and to ensure the CI passes.\n* Is it no longer relevant? â¡ï¸ Please close.\n* Did the author lose interest or time to work on this? â¡ï¸ Please close it and mark it 'Up for grabs' with the label, so that it can be picked up in the future.\n",
      "created_at" : "2022-02-22T12:17:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-1047738079",
      "id" : 1047738079,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "IC_kwDOABII584-czbf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047738079/reactions"
      },
      "updated_at" : "2022-02-22T12:17:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1047738079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm closing this PR. While I still think moving from KvB to WU numerous policy checks would remove some non-propagation risk for second-layers and also improve the economic efficiency of the mempool acceptance flow, it would be a lot of engineering and communication work across the ecosystem to make WU the standard unit of transaction size.\r\n\r\nI still think it could be an interesting research project to make a WU-based mempool acceptance code and run simulations out of that from historical data to observe if the feerate yielded is better. If you're a miner in 2032 reading that and you're looking for tricks to improve the average fees reward from your mined blocks over your competitors you might be interested.\r\n\r\nCan be tagged \"up to grabs\" if someone is interested to work on it modulo conceptual caveats.",
      "created_at" : "2022-07-09T00:00:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22097#issuecomment-1179435278",
      "id" : 1179435278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22097",
      "node_id" : "IC_kwDOABII585GTMEO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179435278/reactions"
      },
      "updated_at" : "2022-07-09T00:00:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179435278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
