[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r642127752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642127752"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not that it matters much, but at this point, the address is already in addrman, so this returns success=false.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-05-30T20:58:44Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r642127752",
      "id" : 642127752,
      "line" : 39,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjEyNzc1Mg==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 39,
      "pull_request_review_id" : 671863773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T17:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642127752",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r642129821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642129821"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure why this use of `-connect` is even allowed considering that `-connect`  without an argument leads to the node trying to connect to nothingness, but maybe add some dummy argument so that it is not confused with a boolean option.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-05-30T21:18:12Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r642129821",
      "id" : 642129821,
      "line" : 67,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjEyOTgyMQ==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 67,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 67,
      "pull_request_review_id" : 671863773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T17:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/642129821",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for adding tests for this functionality. This goes as far as can be reasonably expected without emulating a DNS server in the tests :sweat_smile: \r\n\r\nCode review ACK 75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-02T16:55:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-853212065",
      "id" : 853212065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1MzIxMjA2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-02T16:55:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853212065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644190076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644190076"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The test runs quite long (much waiting). I don't think it's possible to prevent this (mocking time doesn't seem possible) but running `init_arg_tests` before `existing_outbound_connections_test` would save one 11 second wait because addrman would still be empty.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-02T17:45:50Z",
      "diff_hunk" : "@@ -17,6 +17,7 @@ def set_test_params(self):\n     def run_test(self):\n         self.existing_outbound_connections_test()\n         self.existing_block_relay_connections_test()\n+        self.init_arg_tests()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644190076",
      "id" : 644190076,
      "line" : 21,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDE5MDA3Ng==",
      "original_commit_id" : "1e03a9e7f302fe461b79b7b4f8456ef008628139",
      "original_line" : 20,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 21,
      "pull_request_review_id" : 671863773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T17:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644190076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644330212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644330212"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ah, totally. this line is unnecessary when running the tests together, but I added it so the `existing_block_relay_connections_test` setup would not be dependent on `existing_outbound_connections_test`. would it better if I change the IP address to be something new? ",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-02T21:23:45Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644330212",
      "id" : 644330212,
      "in_reply_to_id" : 642127752,
      "line" : 39,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDMzMDIxMg==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 39,
      "pull_request_review_id" : 674694886,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T21:24:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644330212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644353410"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644353410"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "oh, I see. No, I don't think that is necessary.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-02T22:11:19Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644353410",
      "id" : 644353410,
      "in_reply_to_id" : 642127752,
      "line" : 39,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDM1MzQxMA==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 39,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 39,
      "pull_request_review_id" : 674723758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-02T22:11:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644353410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644919783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644919783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You don't need to specify the default value for this arg:\r\n\r\n```suggestion\r\n        self.restart_node(0)\r\n```\r\n\r\nwill just restart with the default extra args.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-03T15:57:03Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644919783",
      "id" : 644919783,
      "line" : 61,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDkxOTc4Mw==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 61,
      "pull_request_review_id" : 675450423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-03T16:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644919783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644919955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644919955"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As above:\r\n\r\n```suggestion\r\n        self.restart_node(0)\r\n```",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-03T15:57:17Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0, [\"-forcednsseed=0\", \"-dnsseed=1\", \"-connect=0\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644919955",
      "id" : 644919955,
      "line" : 89,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDkxOTk1NQ==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 89,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 89,
      "pull_request_review_id" : 675450423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-03T16:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644919955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644920673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644920673"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider:\r\n\r\n```suggestion\r\n        for i in itertools.count():\r\n```\r\n\r\nTo avoid the magic `1500` constant. You'll need to import `itertools`.",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-03T15:58:10Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0, [\"-forcednsseed=0\", \"-dnsseed=1\", \"-connect=0\"])\n+\n+    def wait_time_tests(self):\n+        self.log.info(\"Check the delay before querying DNS seeds\")\n+\n+        # Populate addrman with < 1000 addresses\n+        for i in range(5):\n+            a = f\"192.0.0.{i}\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        # The delay should be 11 seconds\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Waiting 11 seconds before querying DNS seeds.\\n\"])):\n+            self.restart_node(0)\n+\n+        # Populate addrman with > 1000 addresses\n+        for i in range(1500):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644920673",
      "id" : 644920673,
      "line" : 104,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDkyMDY3Mw==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 104,
      "original_position" : 104,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 104,
      "pull_request_review_id" : 675450423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-03T16:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644920673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644924852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644924852"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you're touching these anyway...\r\n\r\n```suggestion\r\nstatic constexpr bool DEFAULT_FORCEDNSSEED{false};\r\nstatic constexpr bool DEFAULT_DNSSEED{true};\r\nstatic constexpr bool DEFAULT_FIXEDSEEDS{true};\r\n```",
      "commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "created_at" : "2021-06-03T16:03:17Z",
      "diff_hunk" : "@@ -79,9 +79,9 @@ static const int64_t DEFAULT_PEER_CONNECT_TIMEOUT = 60;\n /** Number of file descriptors required for message capture **/\n static const int NUM_FDS_MESSAGE_CAPTURE = 1;\n \n-static const bool DEFAULT_FORCEDNSSEED = false;\n-static const bool DEFAULT_DNSSEED = true;\n-static const bool DEFAULT_FIXEDSEEDS = true;\n+static constexpr bool DEFAULT_FORCEDNSSEED = false;\n+static constexpr bool DEFAULT_DNSSEED = true;\n+static constexpr bool DEFAULT_FIXEDSEEDS = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r644924852",
      "id" : 644924852,
      "line" : 84,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDkyNDg1Mg==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 84,
      "original_position" : 9,
      "original_start_line" : 82,
      "path" : "src/net.h",
      "position" : 9,
      "pull_request_review_id" : 675450423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : 82,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-03T16:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644924852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678675913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678675913"
         }
      },
      "author_association" : "MEMBER",
      "body" : "didn't change it, but added a comment to clarify.",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-28T21:49:06Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678675913",
      "id" : 678675913,
      "in_reply_to_id" : 642127752,
      "line" : 70,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY3NTkxMw==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 70,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 70,
      "pull_request_review_id" : 717495365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-28T21:49:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678675913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678676010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678676010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "good call! changed the ordering",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-28T21:49:18Z",
      "diff_hunk" : "@@ -17,6 +17,7 @@ def set_test_params(self):\n     def run_test(self):\n         self.existing_outbound_connections_test()\n         self.existing_block_relay_connections_test()\n+        self.init_arg_tests()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678676010",
      "id" : 678676010,
      "in_reply_to_id" : 644190076,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY3NjAxMA==",
      "original_commit_id" : "1e03a9e7f302fe461b79b7b4f8456ef008628139",
      "original_line" : 20,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : null,
      "pull_request_review_id" : 717495487,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-28T21:49:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678676010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678677146"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678677146"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ah I see! I thought the args forwarded between restarts, but I see now its just the initial setup args that get retained. updated these calls.",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-28T21:51:27Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678677146",
      "id" : 678677146,
      "in_reply_to_id" : 644919783,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY3NzE0Ng==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : null,
      "pull_request_review_id" : 717496802,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-28T21:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678677146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678677356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678677356"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-28T21:51:51Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0, [\"-forcednsseed=0\", \"-dnsseed=1\", \"-connect=0\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678677356",
      "id" : 678677356,
      "in_reply_to_id" : 644919955,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY3NzM1Ng==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 89,
      "original_position" : 89,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : null,
      "pull_request_review_id" : 717497054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-28T21:51:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678677356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678677990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678677990"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nice! in addition to avoiding the magic number, it means the test has the flexibility to end earlier if we meet the required number of addresses in addrman. ",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-28T21:53:06Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0, [\"-forcednsseed=0\", \"-dnsseed=1\", \"-connect=0\"])\n+\n+    def wait_time_tests(self):\n+        self.log.info(\"Check the delay before querying DNS seeds\")\n+\n+        # Populate addrman with < 1000 addresses\n+        for i in range(5):\n+            a = f\"192.0.0.{i}\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        # The delay should be 11 seconds\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Waiting 11 seconds before querying DNS seeds.\\n\"])):\n+            self.restart_node(0)\n+\n+        # Populate addrman with > 1000 addresses\n+        for i in range(1500):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678677990",
      "id" : 678677990,
      "in_reply_to_id" : 644920673,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY3Nzk5MA==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 104,
      "original_position" : 104,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : null,
      "pull_request_review_id" : 717497792,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-28T21:53:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678677990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678678072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678678072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-28T21:53:16Z",
      "diff_hunk" : "@@ -79,9 +79,9 @@ static const int64_t DEFAULT_PEER_CONNECT_TIMEOUT = 60;\n /** Number of file descriptors required for message capture **/\n static const int NUM_FDS_MESSAGE_CAPTURE = 1;\n \n-static const bool DEFAULT_FORCEDNSSEED = false;\n-static const bool DEFAULT_DNSSEED = true;\n-static const bool DEFAULT_FIXEDSEEDS = true;\n+static constexpr bool DEFAULT_FORCEDNSSEED = false;\n+static constexpr bool DEFAULT_DNSSEED = true;\n+static constexpr bool DEFAULT_FIXEDSEEDS = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r678678072",
      "id" : 678678072,
      "in_reply_to_id" : 644924852,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY3ODA3Mg==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 84,
      "original_position" : 9,
      "original_start_line" : 82,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 717497889,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-28T21:53:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678678072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thank you for the reviews @lsilva01, @willcl-ark, @laanwj, @mzumsande & @jnewbery! \r\n\r\nI've incorporated all the review comments ([diff](https://github.com/bitcoin/bitcoin/compare/75ee018f9b8371cfb16bd3ad8f9491d386d9c238..6108630a9e6a250922ab8189172476927223b4e8)).\r\n\r\nI also changed the regtest dns seed to be `dummySeed.invalid` ([diff](https://github.com/bitcoin/bitcoin/compare/6108630a9e6a250922ab8189172476927223b4e8..a8834fa0513d6bfcd4dfc759bbb841c02fcf8517)). Since `.invalid` is reserved to ensure no real results will be returned ([wiki](https://en.wikipedia.org/wiki/.invalid), [IETF RFC](https://datatracker.ietf.org/doc/html/rfc2606)), it seems like a good fit here.",
      "created_at" : "2021-07-28T21:59:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-888648789",
      "id" : 888648789,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII584097RV",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-28T21:59:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888648789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK a8834fa",
      "created_at" : "2021-07-29T14:17:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-889184642",
      "id" : 889184642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5840_-GC",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-29T14:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/889184642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679396237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679396237"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could use a FQDN such as `fakenodeaddr.fakedomain.invalid.` (note the ending dot) be used here to make it unambiguous and thus make sure we don't risk causing a DNS lookup for `fakenodeaddr.<local domain name as specified in /etc/resolv.conf>`?",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-29T18:37:06Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679396237",
      "id" : 679396237,
      "line" : 30,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTM5NjIzNw==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 30,
      "pull_request_review_id" : 718416333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T19:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679396237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679396392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679396392"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same here? :)",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-29T18:37:19Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect=fakenodeaddr\"],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679396392",
      "id" : 679396392,
      "line" : 48,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTM5NjM5Mg==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 48,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 48,
      "pull_request_review_id" : 718416333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T19:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679396392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code Review ACK a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-29T18:40:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-889372998",
      "id" : 889372998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841AsFG",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-29T18:40:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/889372998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679401698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679401698"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the recommendation is to use addresses in the block `192.0.2.0/24` (`TEST-NET-1`) for testing purposes (RFC 5735).\r\n\r\nI think the block `192.0.0.0/24` is reserved for future IETF protocol assignments.",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-29T18:45:26Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect=fakenodeaddr\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0)\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679401698",
      "id" : 679401698,
      "line" : 57,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQwMTY5OA==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 57,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 57,
      "pull_request_review_id" : 718416333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T19:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679401698",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679401965"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679401965"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same here :)",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-29T18:45:48Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect=fakenodeaddr\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0)\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding. No-op when run after\n+        # existing_outbound_connections_test.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679401965",
      "id" : 679401965,
      "line" : 71,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQwMTk2NQ==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 71,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 71,
      "pull_request_review_id" : 718416333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T19:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679401965",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679409023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679409023"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Non-blocking style nit: I think `with â¦:` is favoured over`with(â¦):` in the rest of the code base.",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-29T18:55:48Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679409023",
      "id" : 679409023,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQwOTAyMw==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 29,
      "pull_request_review_id" : 718416333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T19:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679409023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679416678"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679416678"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could use a FQDN such as say `dummy-seed.invalid.` (note the ending dot) be used here to make it unambiguous and thus make sure we don't risk causing a DNS lookup for `dummySeed.invalid.<local domain name as specified in /etc/resolv.conf>`)?",
      "commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "created_at" : "2021-07-29T19:08:15Z",
      "diff_hunk" : "@@ -435,7 +435,8 @@ class CRegTestParams : public CChainParams {\n         assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n \n         vFixedSeeds.clear(); //!< Regtest mode doesn't have any fixed seeds.\n-        vSeeds.clear();      //!< Regtest mode doesn't have any DNS seeds.\n+        vSeeds.clear();\n+        vSeeds.emplace_back(\"dummySeed.invalid\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r679416678",
      "id" : 679416678,
      "line" : 439,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQxNjY3OA==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 439,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : 6,
      "pull_request_review_id" : 718416333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-29T19:14:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679416678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This probably needs a rebase / exception added for the new test after #22490 was merged. ",
      "created_at" : "2021-07-30T11:55:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-889842332",
      "id" : 889842332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841Ceqc",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-30T11:55:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/889842332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680131932"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680131932"
         }
      },
      "author_association" : "MEMBER",
      "body" : "hmmm, I tried this out but unfortunately since the `CNetAddr` code specifically recognizes these as invalid addresses ([link](https://github.com/bitcoin/bitcoin/blob/da1c0c64fd094880712d1c4167ad9eb3bb6ffcc6/src/netaddress.cpp#L345-L347)), it prevents being able to test the functionality.",
      "commit_id" : "82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-07-30T18:07:01Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect=fakenodeaddr\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0)\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680131932",
      "id" : 680131932,
      "in_reply_to_id" : 679401698,
      "line" : 59,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDEzMTkzMg==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 59,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 59,
      "pull_request_review_id" : 719348317,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-30T18:07:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680131932",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680141065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680141065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ah cool, thanks for the suggestion! I updated all 3 uses of `-connect=` to use this FQDN. ",
      "commit_id" : "82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-07-30T18:24:05Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680141065",
      "id" : 680141065,
      "in_reply_to_id" : 679396237,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDE0MTA2NQ==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 30,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : null,
      "pull_request_review_id" : 719359835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-30T18:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680141065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680141115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680141115"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-07-30T18:24:10Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect=fakenodeaddr\"],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680141115",
      "id" : 680141115,
      "in_reply_to_id" : 679396392,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDE0MTExNQ==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 48,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : null,
      "pull_request_review_id" : 719359895,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-30T18:24:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680141115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680141538"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680141538"
         }
      },
      "author_association" : "MEMBER",
      "body" : "responded https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680131932. let's continue the convo there ",
      "commit_id" : "82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-07-30T18:25:00Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect=fakenodeaddr\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0)\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding. No-op when run after\n+        # existing_outbound_connections_test.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680141538",
      "id" : 680141538,
      "in_reply_to_id" : 679401965,
      "line" : 73,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDE0MTUzOA==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 73,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 73,
      "pull_request_review_id" : 719360426,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-30T18:25:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680141538",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680143123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680143123"
         }
      },
      "author_association" : "MEMBER",
      "body" : "updated all `with(...):` to be `with ...:`",
      "commit_id" : "82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-07-30T18:28:17Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680143123",
      "id" : 680143123,
      "in_reply_to_id" : 679409023,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDE0MzEyMw==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : null,
      "pull_request_review_id" : 719362610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-30T18:28:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680143123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680143308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680143308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "good call, updated to `dummySeed.invalid.`",
      "commit_id" : "82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-07-30T18:28:44Z",
      "diff_hunk" : "@@ -435,7 +435,8 @@ class CRegTestParams : public CChainParams {\n         assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n \n         vFixedSeeds.clear(); //!< Regtest mode doesn't have any fixed seeds.\n-        vSeeds.clear();      //!< Regtest mode doesn't have any DNS seeds.\n+        vSeeds.clear();\n+        vSeeds.emplace_back(\"dummySeed.invalid\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680143308",
      "id" : 680143308,
      "in_reply_to_id" : 679416678,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDE0MzMwOA==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 439,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/chainparams.cpp",
      "position" : null,
      "pull_request_review_id" : 719362867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-30T18:28:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680143308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thanks for the reviews @kristapsk & @practicalswift! & for the re-reviews @jnewbery & @mzumsande âºï¸\r\n\r\n@practicalswift \r\nI took all your suggestions to further reduce changes of external communication except for being able to apply the IP addresses reserved for testing. Thanks again for these! I learned about how FQDNs work. \r\n\r\n@mzumsande \r\nas I mentioned over here https://github.com/bitcoin/bitcoin/pull/22490#issuecomment-890039860, I surprisingly don't need to rebase or add an exception! \r\n>  I realized that test doesn't actually need rebase or an exception added, because passing in something like self.start_node(0, [\"-connect=fakenodeaddr\"]) from the individual test appends the -connect arg as a command-line argument, which overrules what's been set in the .conf file.\r\n\r\nI locally rebased & confirmed that the tests still pass, but opted not to push the rebase here to make it easier to re-review. But lmk if you think it would be better to rebase & set `self.disable_autoconnect` and I'm happy to do so. ",
      "created_at" : "2021-07-30T18:36:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890080099",
      "id" : 890080099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841DYtj",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-30T18:36:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890080099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680236317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680236317"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Got it! Then `192.0.0.8` (the IPv4 dummy address per [RFC 7600](https://www.rfc-editor.org/rfc/rfc7600.html)) is probably a good alternative to `192.0.2.0/24`.\r\n\r\nI checked the [IANA IPv4 Special-Purpose Address Registry](https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml) and `192.0.0.8` (like `192.0.2.0/24`) is guaranteed to not be in use as valid destination address,.",
      "commit_id" : "82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-07-30T21:44:43Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect=fakenodeaddr\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0)\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680236317",
      "id" : 680236317,
      "in_reply_to_id" : 679401698,
      "line" : 59,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDIzNjMxNw==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 59,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 59,
      "pull_request_review_id" : 719482449,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-30T21:44:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680236317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I took all your suggestions to further reduce changes of external communication except for being able to apply the IP addresses reserved for testing. Thanks again for these! I learned about how FQDNs work.\r\n\r\nExcellent!\r\n\r\nIt is outside of the scope of this PR but I think it would make sense to err on the safe side and specify all seed domain names with an ending dot to make them unambiguous.\r\n\r\nIn other words â¦\r\n\r\n```c++\r\n    vSeeds.emplace_back(\"seed.bitcoin.sipa.be.\"); // Pieter Wuille, only supports x1, x5, x9, and xd\r\n```\r\n\r\nâ¦ instead of the current â¦\r\n\r\n```c++\r\n    vSeeds.emplace_back(\"seed.bitcoin.sipa.be\"); // Pieter Wuille, only supports x1, x5, x9, and xd\r\n```\r\n\r\nThe former is guaranteed to be interpreted as `seed.bitcoin.sipa.be.` whereas the latter may be interpreted as say`seed.bitcoin.sipa.be.megacorp.com.` depending on the content of the user's `/etc/resolv.conf`.\r\n\r\nThe case I'm thinking about is if `search megacorp.com` is specified in `/etc/resolv.conf` and say `options ndots:5` is used.\r\n\r\nLooking up `seed.bitcoin.sipa.be` would then result in the following DNS traffic:\r\n\r\n```\r\nIP <src> > <resolver>.53: A? seed.bitcoin.sipa.be.megacorp.com.\r\nIP <resolver>.53 > <src>: NXDomain\r\nIP <src> > <resolver>.53: A? seed.bitcoin.sipa.be.\r\nIP <resolver>.53 > <src>: Some valid response.\r\n```\r\n\r\nIn other words `seed.bitcoin.sipa.be.megacorp.com.` would be tried before `seed.bitcoin.sipa.be.` :(\r\n\r\nI haven't tried it myself but if I'm thinking correctly here then adding `search localtest.me` and `options ndots:15` to `/etc/resolv.conf` should break DNS seeding since the DNS server for `localtest.me` will return `127.0.0.1` for `*.localtest.me`.\r\n\r\nI guess an alternative way to fix this could be to add the ending dot (if missing) when building the host string:\r\n\r\n```patch\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 073643fb7..c68c497ea 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1714,7 +1714,7 @@ void CConnman::ThreadDNSAddressSeed()\r\n             std::vector<CNetAddr> vIPs;\r\n             std::vector<CAddress> vAdd;\r\n             ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\r\n-            std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\r\n+            std::string host = strprintf(\"x%x.%s.\", requiredServiceBits, seed);\r\n             CNetAddr resolveSource;\r\n             if (!resolveSource.SetInternal(host)) {\r\n                 continue;\r\n```\r\n\r\n---\r\n\r\nSome background context from https://bugzilla.mozilla.org/show_bug.cgi?id=134402:\r\n\r\n```\r\nThe BSD Unix implementation of the name resolver established numerous\r\nconventions that have become defacto standards for Unix and Linux, but are\r\nnot formally Internet standards, and are not commonly found on other \r\nplatforms, such as Windows.  These include such things as:\r\n\r\nâ¦\r\n\r\nb) a trailing dot tells BSD's DNS name resolver not to try appending domain \r\nname suffixes.  E.g. for a client in the mozilla.com domain, the DNS name \r\nfoo.bar can be interpreted as foo.bar.mozilla.com as well as foo.bar, but \r\nfoo.bar. is only interpreted as foo.bar and not as foo.bar.mozilla.com.  \r\nThese are only conventions of some OSes, and not Internet standards.  \r\n```",
      "created_at" : "2021-07-30T22:56:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890227550",
      "id" : 890227550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841D8te",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-30T22:56:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890227550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680421735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680421735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "awesome, thanks! ",
      "commit_id" : "82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-07-31T23:21:13Z",
      "diff_hunk" : "@@ -0,0 +1,127 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+import itertools\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.init_arg_tests()\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.wait_time_tests()\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect=fakenodeaddr\"])\n+\n+        self.log.info(\"Check that running -connect and -dnsseed means DNS logic runs.\")\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            self.restart_node(0, [\"-connect=1\", \"-dnsseed=1\"])\n+\n+        self.log.info(\"Check that running -forcednsseed and -dnsseed=0 throws an error.\")\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-dnsseed=0\"],\n+        )\n+\n+        self.log.info(\"Check that running -forcednsseed and -connect throws an error.\")\n+        # -connect soft sets -dnsseed to false, so throws the same error\n+        self.nodes[0].stop_node()\n+        self.nodes[0].assert_start_raises_init_error(\n+            expected_msg=\"Error: Cannot set -forcednsseed to true when setting -dnsseed to false.\",\n+            extra_args=[\"-forcednsseed=1\", \"-connect=fakenodeaddr\"],\n+        )\n+\n+        # Restore default bitcoind settings\n+        self.restart_node(0)\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r680421735",
      "id" : 680421735,
      "in_reply_to_id" : 679401698,
      "line" : 59,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDQyMTczNQ==",
      "original_commit_id" : "a8834fa0513d6bfcd4dfc759bbb841c02fcf8517",
      "original_line" : 59,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 59,
      "pull_request_review_id" : 719609115,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-31T23:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680421735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "all review comments have been addressed. \r\n\r\n> specify all seed domain names with an ending dot to make them unambiguous.. \r\n\r\n@practicalswift, very interesting! thanks for digging in & sharing your findings! I'll have to learn more myself but this seems like a good idea. Shall we open an issue?",
      "created_at" : "2021-07-31T23:26:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890416247",
      "id" : 890416247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841Eqx3",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-31T23:26:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890416247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 82b6f89819e55af26f5264678e0f93052934bcb3\r\n\r\n>I locally rebased & confirmed that the tests still pass, but opted not to push the rebase here to make it easier to re-review.  But lmk if you think it would be better to rebase & set self.disable_autoconnect and I'm happy to do so.\r\n\r\nnot necessary, I didn't realize that it would work, but your explanation makes sense.\r\n",
      "created_at" : "2021-08-01T19:47:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890575846",
      "id" : 890575846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841FRvm",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-01T19:47:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890575846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > The former is guaranteed to be interpreted as `seed.bitcoin.sipa.be.` whereas the latter may be interpreted as say`seed.bitcoin.sipa.be.megacorp.com.` depending on the content of the user's `/etc/resolv.conf`.\r\n>\r\n> @practicalswift, very interesting! thanks for digging in & sharing your findings! I'll have to learn more myself but this seems like a good idea. Shall we open an issue?\r\n\r\nFeel free to open an issue if you feel for it: I'm afraid I won't be able to find time to work on this any time soon, but I'd be glad to help out with review :)\r\n\r\nAn `/etc/resolv.conf` file with this content should be sufficient to reproduce the issue (if my theory holds: I haven't had time to check beyond reading the source!):\r\n\r\n```\r\nsearch localtest.me\r\noptions ndots:15\r\nnameserver 8.8.8.8\r\nnameserver 8.8.4.4\r\n```\r\n\r\n`8.8.8.8` and `8.8.4.4` are Google Public DNS, and `localtest.me` is a domain name setup with a DNS server that will respond with `127.0.0.1` for all queries including a lookup of say `seed.bitcoin.sipa.be.localtest.me`.",
      "created_at" : "2021-08-01T20:36:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890582857",
      "id" : 890582857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841FTdJ",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-01T20:38:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890582857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > > The former is guaranteed to be interpreted as `seed.bitcoin.sipa.be.` whereas the latter may be interpreted as say`seed.bitcoin.sipa.be.megacorp.com.` depending on the content of the user's `/etc/resolv.conf`.\r\n> > \r\n> > \r\n> > @practicalswift, very interesting! thanks for digging in & sharing your findings! I'll have to learn more myself but this seems like a good idea. Shall we open an issue?\r\n> \r\n> Feel free to open an issue if you feel for it: I'm afraid I won't be able to find time to work on this any time soon, but I'd be glad to help out with review :)\r\n> \r\n> An `/etc/resolv.conf` file with this content should be sufficient to reproduce the issue (if my theory holds: I haven't had time to check beyond reading the source!):\r\n\r\nA simpler way that should reproduce the issue without having to make any changes to `/etc/resolv.conf`:\r\n\r\n```\r\n$ RES_OPTIONS=\"options ndots:15\" LOCALDOMAIN=\"localtest.me\" src/bitcoind\r\n```\r\n\r\nIf my thinking is correct that should make the DNS seeding queries return `127.0.0.1` due to `seed.bitcoin.sipa.be` being interpreted as `seed.bitcoin.sipa.be.localtest.me`, etc.",
      "created_at" : "2021-08-02T06:38:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890763573",
      "id" : 890763573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841F_k1",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-02T06:38:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890763573",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reACK 82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-08-02T09:46:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-890886245",
      "id" : 890886245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841Gdhl",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-02T09:46:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890886245",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r681379078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681379078"
         }
      },
      "author_association" : "MEMBER",
      "body" : "oops, forgot to comment / resolve, but this has been fixed for all the `-connect` calls ",
      "commit_id" : "82b6f89819e55af26f5264678e0f93052934bcb3",
      "created_at" : "2021-08-03T02:00:43Z",
      "diff_hunk" : "@@ -0,0 +1,124 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class P2PDNSSeeds(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+        self.extra_args = [[\"-dnsseed=1\"]]\n+\n+    def run_test(self):\n+        self.existing_outbound_connections_test()\n+        self.existing_block_relay_connections_test()\n+        self.force_dns_test()\n+        self.init_arg_tests()\n+        self.wait_time_tests()\n+\n+    def existing_outbound_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do not* query DNS seeds if we have 2 outbound connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"P2P peers available. Skipped DNS seeding.\"], timeout=12)):\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+\n+    def existing_block_relay_connections_test(self):\n+        # Make sure addrman is populated to enter the conditional where we\n+        # delay and potentially skip DNS seeding.\n+        self.nodes[0].addpeeraddress(\"192.0.0.8\", 8333)\n+\n+        self.log.info(\"Check that we *do* query DNS seeds if we only have 2 block-relay-only connections\")\n+\n+        self.restart_node(0)\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # This mimics the \"anchors\" logic where nodes are likely to\n+            # reconnect to block-relay-only connections on startup.\n+            # Since we do not participate in addr relay with these connections,\n+            # we still want to query the DNS seeds.\n+            for i in range(2):\n+                self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+    def force_dns_test(self):\n+        self.log.info(\"Check that we query DNS seeds if -forcednsseed param is set\")\n+\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"Loading addresses from DNS seed\"], timeout=12)):\n+            # -dnsseed defaults to 1 in bitcoind, but 0 in the test framework,\n+            # so pass it explicitly here\n+            self.restart_node(0, [\"-forcednsseed\", \"-dnsseed=1\"])\n+\n+        # Restore default for subsequent tests\n+        self.restart_node(0, [\"-forcednsseed=0\"])\n+\n+    def init_arg_tests(self):\n+        self.log.info(\"Check that setting -connect disables -dnsseed by default\")\n+        self.nodes[0].stop_node()\n+        with(self.nodes[0].assert_debug_log(expected_msgs=[\"DNS seeding disabled\"])):\n+            self.start_node(0, [\"-connect\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#discussion_r681379078",
      "id" : 681379078,
      "in_reply_to_id" : 642129821,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTM3OTA3OA==",
      "original_commit_id" : "75ee018f9b8371cfb16bd3ad8f9491d386d9c238",
      "original_line" : 67,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : null,
      "pull_request_review_id" : 720716388,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22098",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-08-03T02:00:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681379078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The DNS querying logic and related config options certainly are somewhat convoluted / confusing. This is not helped by the fact that certain options (soft)-set other options, or sometimes behave un-intuitively. I think there is definitely scope to improve this code further going forward.",
      "created_at" : "2021-08-03T03:20:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-891488023",
      "id" : 891488023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841IwcX",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-03T03:20:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/891488023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @ajtowns ",
      "created_at" : "2021-08-03T03:25:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22098#issuecomment-891489783",
      "id" : 891489783,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22098",
      "node_id" : "IC_kwDOABII5841Iw33",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-03T03:25:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/891489783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
