[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24718](https://github.com/bitcoin/bitcoin/pull/24718) (rpc: getblock/getrawtransaction/decode*/gettxout fixups by jonatack)\n* [#23319](https://github.com/bitcoin/bitcoin/pull/23319) (rpc: Return fee and prevout (utxos) to getrawtransaction by dougEfresh)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-03-31T03:47:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24716#issuecomment-1084043418",
      "id" : 1084043418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24716",
      "node_id" : "IC_kwDOABII585AnTCa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1084043418/reactions"
      },
      "updated_at" : "2022-03-31T03:47:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1084043418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rendered diff:\r\n\r\n```diff\r\ndiff --git a/decoderawtransaction b/decoderawtransaction\r\nindex 276cb46..6acb235 100644\r\n--- a/decoderawtransaction\r\n+++ b/decoderawtransaction\r\n@@ -1,58 +1,58 @@\r\n decoderawtransaction \"hexstring\" ( iswitness )\r\n \r\n Return a JSON object representing the serialized, hex-encoded transaction.\r\n \r\n Arguments:\r\n 1. hexstring    (string, required) The transaction hex string\r\n 2. iswitness    (boolean, optional, default=depends on heuristic tests) Whether the transaction hex is a serialized witness transaction.\r\n                 If iswitness is not present, heuristic tests will be used in decoding.\r\n                 If true, only witness deserialization will be tried.\r\n                 If false, only non-witness deserialization will be tried.\r\n                 This boolean should reflect whether the transaction has inputs\r\n                 (e.g. fully valid, or on-chain transactions), if known by the caller.\r\n \r\n Result:\r\n {                             (json object)\r\n   \"txid\" : \"hex\",             (string) The transaction id\r\n   \"hash\" : \"hex\",             (string) The transaction hash (differs from txid for witness transactions)\r\n-  \"size\" : n,                 (numeric) The transaction size\r\n+  \"size\" : n,                 (numeric) The serialized transaction size\r\n   \"vsize\" : n,                (numeric) The virtual transaction size (differs from size for witness transactions)\r\n-  \"weight\" : n,               (numeric) The transaction's weight (between vsize*4 - 3 and vsize*4)\r\n+  \"weight\" : n,               (numeric) The transaction's weight (between vsize*4-3 and vsize*4)\r\n   \"version\" : n,              (numeric) The version\r\n   \"locktime\" : xxx,           (numeric) The lock time\r\n   \"vin\" : [                   (json array)\r\n     {                         (json object)\r\n-      \"coinbase\" : \"hex\",     (string, optional)\r\n-      \"txid\" : \"hex\",         (string, optional) The transaction id\r\n-      \"vout\" : n,             (numeric, optional) The output number\r\n-      \"scriptSig\" : {         (json object, optional) The script\r\n+      \"coinbase\" : \"hex\",     (string, optional) The coinbase value (only if coinbase transaction)\r\n+      \"txid\" : \"hex\",         (string, optional) The transaction id (if not coinbase transaction)\r\n+      \"vout\" : n,             (numeric, optional) The output number (if not coinbase transaction)\r\n+      \"scriptSig\" : {         (json object, optional) The script (if not coinbase transaction)\r\n         \"asm\" : \"str\",        (string) asm\r\n         \"hex\" : \"hex\"         (string) hex\r\n       },\r\n       \"txinwitness\" : [       (json array, optional)\r\n         \"hex\",                (string) hex-encoded witness data (if any)\r\n         ...\r\n       ],\r\n       \"sequence\" : n          (numeric) The script sequence number\r\n     },\r\n     ...\r\n   ],\r\n   \"vout\" : [                  (json array)\r\n     {                         (json object)\r\n       \"value\" : n,            (numeric) The value in BTC\r\n       \"n\" : n,                (numeric) index\r\n       \"scriptPubKey\" : {      (json object)\r\n         \"asm\" : \"str\",        (string) the asm\r\n         \"desc\" : \"str\",       (string) Inferred descriptor for the output\r\n         \"hex\" : \"hex\",        (string) the hex\r\n         \"type\" : \"str\",       (string) The type, eg 'pubkeyhash'\r\n         \"address\" : \"str\"     (string, optional) The Bitcoin address (only if a well-defined address exists)\r\n       }\r\n     },\r\n     ...\r\n   ]\r\n }\r\n \r\n Examples:\r\n > bitcoin-cli decoderawtransaction \"hexstring\"\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"decoderawtransaction\", \"params\": [\"hexstring\"]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\ndiff --git a/getrawtransaction b/getrawtransaction\r\nindex fbbe77c..e1a266d 100644\r\n--- a/getrawtransaction\r\n+++ b/getrawtransaction\r\n@@ -1,75 +1,76 @@\r\n getrawtransaction \"txid\" ( verbose \"blockhash\" )\r\n \r\n Return the raw transaction data.\r\n \r\n By default, this call only returns a transaction if it is in the mempool. If -txindex is enabled\r\n and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\r\n If a blockhash argument is passed, it will return the transaction if\r\n the specified block is available and the transaction is in that block.\r\n \r\n Hint: Use gettransaction for wallet transactions.\r\n \r\n If verbose is 'true', returns an Object with information about 'txid'.\r\n If verbose is 'false' or omitted, returns a string that is serialized, hex-encoded data for 'txid'.\r\n \r\n Arguments:\r\n 1. txid         (string, required) The transaction id\r\n 2. verbose      (boolean, optional, default=false) If false, return a string, otherwise return a json object\r\n 3. blockhash    (string, optional) The block in which to look for the transaction\r\n \r\n Result (if verbose is not set or set to false):\r\n \"str\"    (string) The serialized, hex-encoded data for 'txid'\r\n \r\n Result (if verbose is set to true):\r\n {                                    (json object)\r\n   \"in_active_chain\" : true|false,    (boolean, optional) Whether specified block is in the active chain or not (only present with explicit \"blockhash\" argument)\r\n   \"hex\" : \"hex\",                     (string) The serialized, hex-encoded data for 'txid'\r\n   \"txid\" : \"hex\",                    (string) The transaction id (same as provided)\r\n   \"hash\" : \"hex\",                    (string) The transaction hash (differs from txid for witness transactions)\r\n   \"size\" : n,                        (numeric) The serialized transaction size\r\n   \"vsize\" : n,                       (numeric) The virtual transaction size (differs from size for witness transactions)\r\n   \"weight\" : n,                      (numeric) The transaction's weight (between vsize*4-3 and vsize*4)\r\n   \"version\" : n,                     (numeric) The version\r\n   \"locktime\" : xxx,                  (numeric) The lock time\r\n   \"vin\" : [                          (json array)\r\n     {                                (json object)\r\n-      \"txid\" : \"hex\",                (string) The transaction id\r\n-      \"vout\" : n,                    (numeric) The output number\r\n-      \"scriptSig\" : {                (json object) The script\r\n+      \"coinbase\" : \"hex\",            (string, optional) The coinbase value (only if coinbase transaction)\r\n+      \"txid\" : \"hex\",                (string, optional) The transaction id (if not coinbase transaction)\r\n+      \"vout\" : n,                    (numeric, optional) The output number (if not coinbase transaction)\r\n+      \"scriptSig\" : {                (json object, optional) The script (if not coinbase transaction)\r\n         \"asm\" : \"str\",               (string) asm\r\n         \"hex\" : \"hex\"                (string) hex\r\n       },\r\n-      \"sequence\" : n,                (numeric) The script sequence number\r\n       \"txinwitness\" : [              (json array, optional)\r\n         \"hex\",                       (string) hex-encoded witness data (if any)\r\n         ...\r\n-      ]\r\n+      ],\r\n+      \"sequence\" : n                 (numeric) The script sequence number\r\n     },\r\n     ...\r\n   ],\r\n   \"vout\" : [                         (json array)\r\n     {                                (json object)\r\n       \"value\" : n,                   (numeric) The value in BTC\r\n       \"n\" : n,                       (numeric) index\r\n       \"scriptPubKey\" : {             (json object)\r\n         \"asm\" : \"str\",               (string) the asm\r\n         \"desc\" : \"str\",              (string) Inferred descriptor for the output\r\n-        \"hex\" : \"str\",               (string) the hex\r\n+        \"hex\" : \"hex\",               (string) the hex\r\n         \"type\" : \"str\",              (string) The type, eg 'pubkeyhash'\r\n         \"address\" : \"str\"            (string, optional) The Bitcoin address (only if a well-defined address exists)\r\n       }\r\n     },\r\n     ...\r\n   ],\r\n   \"blockhash\" : \"hex\",               (string, optional) the block hash\r\n   \"confirmations\" : n,               (numeric, optional) The confirmations\r\n   \"blocktime\" : xxx,                 (numeric, optional) The block time expressed in UNIX epoch time\r\n   \"time\" : n                         (numeric, optional) Same as \"blocktime\"\r\n }\r\n \r\n Examples:\r\n > bitcoin-cli getrawtransaction \"mytxid\"\r\n > bitcoin-cli getrawtransaction \"mytxid\" true\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getrawtransaction\", \"params\": [\"mytxid\", true]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n > bitcoin-cli getrawtransaction \"mytxid\" false \"myblockhash\"\r\n > bitcoin-cli getrawtransaction \"mytxid\" true \"myblockhash\"\r\n",
      "created_at" : "2022-03-31T09:05:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24716#issuecomment-1084297779",
      "id" : 1084297779,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24716",
      "node_id" : "IC_kwDOABII585AoRIz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1084297779/reactions"
      },
      "updated_at" : "2022-03-31T09:05:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1084297779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Follow up in https://github.com/bitcoin/bitcoin/pull/24721",
      "created_at" : "2022-03-31T09:46:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24716#issuecomment-1084341888",
      "id" : 1084341888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24716",
      "node_id" : "IC_kwDOABII585Aob6A",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1084341888/reactions"
      },
      "updated_at" : "2022-03-31T09:46:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1084341888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
