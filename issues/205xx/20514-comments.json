[
   {
      "author_association" : "MEMBER",
      "body" : "utACK.\r\n\r\nI assume this code won't fail a node if you feed it an older anchors.dat format? At least I think it should not.\r\n\r\nPushing it to 0.21 solves it at scale, but we probably want to handle even corner cases.\r\n",
      "created_at" : "2020-11-27T07:13:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734683947",
      "id" : 734683947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDY4Mzk0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T07:28:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734683947",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs Yes, it should be as deserialization uses the version number written in the CAddress record. So anchors.dat from rc1 or rc2 should be read correctly.\n\nStill, it seems there aren't any tests for the anchoring functionality, so it'd be good if someone wrote one, or it gets tested manually.",
      "created_at" : "2020-11-27T07:21:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734686623",
      "id" : 734686623,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDY4NjYyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T07:21:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734686623",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531498359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531498359"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe this comment should be updated, given that now `ADDRV2_FORMAT` is also used here instead of `CLIENT_VERSION`:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/50091592dd875a1c94030dbed74112b003732d68/src/netaddress.h#L26-L32",
      "commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "created_at" : "2020-11-27T10:01:04Z",
      "diff_hunk" : "@@ -161,13 +161,13 @@ bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n void DumpAnchors(const fs::path& anchors_db_path, const std::vector<CAddress>& anchors)\n {\n     LOG_TIME_SECONDS(strprintf(\"Flush %d outbound block-relay-only peer addresses to anchors.dat\", anchors.size()));\n-    SerializeFileDB(\"anchors\", anchors_db_path, anchors);\n+    SerializeFileDB(\"anchors\", anchors_db_path, anchors, ADDRV2_FORMAT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531498359",
      "id" : 531498359,
      "line" : 164,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5ODM1OQ==",
      "original_commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "original_line" : 164,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : 46,
      "pull_request_review_id" : 539849703,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-27T10:19:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531498359",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531507712"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531507712"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this will not deserialize properly `anchors.dat` from before this PR.\r\n* `CLIENT_VERSION` is something like `219900`\r\n* `ADDRV2_FORMAT` is `0x20000000`\r\n\r\nIn `anchors.dat` before this PR we have `CAddress` entries which contain `version=219900` and addresses serialized in addrv1 format.\r\n\r\nWith this PR we will set the stream version to `ADDRV2_FORMAT` during [deserialize](https://github.com/bitcoin/bitcoin/blob/50091592dd875a1c94030dbed74112b003732d68/src/protocol.h#L369-L395):\r\n\r\n```cpp\r\n    // Notice added comments below\r\n    SERIALIZE_METHODS(CAddress, obj)\r\n    {\r\n        SER_READ(obj, obj.nTime = TIME_INIT);\r\n        int nVersion = s.GetVersion(); // nVersion will be assigned ADDRV2_FORMAT (0x20000000)\r\n        if (s.GetType() & SER_DISK) {\r\n            READWRITE(nVersion); // nVersion will be assigned CLIENT_VERSION (219900)\r\n        }\r\n...\r\n        if (nVersion & ADDRV2_FORMAT) { // this will be false\r\n            uint64_t services_tmp;\r\n            SER_WRITE(obj, services_tmp = obj.nServices);\r\n            READWRITE(Using<CompactSizeFormatter<false>>(services_tmp));\r\n            SER_READ(obj, obj.nServices = static_cast<ServiceFlags>(services_tmp));\r\n        } else {\r\n            // it will read services as 8 bytes (correct, as that is what is actually stored on disk)\r\n            READWRITE(Using<CustomUintFormatter<8>>(obj.nServices));\r\n        }\r\n        // oops, this will deserialize CService, which will deserialize CNetAddr which will check\r\n        // s.GetVersion() which is ADDRV2_FORMAT (0x20000000) and will deserialize the\r\n        // address as if it is stored in addrv2 format on disk, but it is actually stored in addrv1,\r\n        // so this will deserialize garbage\r\n        READWRITEAS(CService, obj);\r\n    }\r\n```",
      "commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "created_at" : "2020-11-27T10:18:00Z",
      "diff_hunk" : "@@ -161,13 +161,13 @@ bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n void DumpAnchors(const fs::path& anchors_db_path, const std::vector<CAddress>& anchors)\n {\n     LOG_TIME_SECONDS(strprintf(\"Flush %d outbound block-relay-only peer addresses to anchors.dat\", anchors.size()));\n-    SerializeFileDB(\"anchors\", anchors_db_path, anchors);\n+    SerializeFileDB(\"anchors\", anchors_db_path, anchors, ADDRV2_FORMAT);\n }\n \n std::vector<CAddress> ReadAnchors(const fs::path& anchors_db_path)\n {\n     std::vector<CAddress> anchors;\n-    if (DeserializeFileDB(anchors_db_path, anchors)) {\n+    if (DeserializeFileDB(anchors_db_path, anchors, ADDRV2_FORMAT)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531507712",
      "id" : 531507712,
      "line" : 170,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwNzcxMg==",
      "original_commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "original_line" : 170,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : 53,
      "pull_request_review_id" : 539849703,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-27T10:19:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531507712",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531515369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531515369"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think in this case the file checksum will mismatch and we won't load any anchors at all, which is ok (anchors.dat is not in any release and losing the file isn't a problem).",
      "commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "created_at" : "2020-11-27T10:32:02Z",
      "diff_hunk" : "@@ -161,13 +161,13 @@ bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n void DumpAnchors(const fs::path& anchors_db_path, const std::vector<CAddress>& anchors)\n {\n     LOG_TIME_SECONDS(strprintf(\"Flush %d outbound block-relay-only peer addresses to anchors.dat\", anchors.size()));\n-    SerializeFileDB(\"anchors\", anchors_db_path, anchors);\n+    SerializeFileDB(\"anchors\", anchors_db_path, anchors, ADDRV2_FORMAT);\n }\n \n std::vector<CAddress> ReadAnchors(const fs::path& anchors_db_path)\n {\n     std::vector<CAddress> anchors;\n-    if (DeserializeFileDB(anchors_db_path, anchors)) {\n+    if (DeserializeFileDB(anchors_db_path, anchors, ADDRV2_FORMAT)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531515369",
      "id" : 531515369,
      "in_reply_to_id" : 531507712,
      "line" : 170,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxNTM2OQ==",
      "original_commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "original_line" : 170,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : 53,
      "pull_request_review_id" : 539871667,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-27T10:32:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531515369",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531523841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531523841"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My point is that it will not be able to read \"old\" `anchors.dat` (I am not sure of the exact way it will fail, maybe it will be indeed checksum failure).\r\n\r\nI mention this because the comments above give the impression that \"old\" `anchors.dat` would be readable.",
      "commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "created_at" : "2020-11-27T10:44:57Z",
      "diff_hunk" : "@@ -161,13 +161,13 @@ bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n void DumpAnchors(const fs::path& anchors_db_path, const std::vector<CAddress>& anchors)\n {\n     LOG_TIME_SECONDS(strprintf(\"Flush %d outbound block-relay-only peer addresses to anchors.dat\", anchors.size()));\n-    SerializeFileDB(\"anchors\", anchors_db_path, anchors);\n+    SerializeFileDB(\"anchors\", anchors_db_path, anchors, ADDRV2_FORMAT);\n }\n \n std::vector<CAddress> ReadAnchors(const fs::path& anchors_db_path)\n {\n     std::vector<CAddress> anchors;\n-    if (DeserializeFileDB(anchors_db_path, anchors)) {\n+    if (DeserializeFileDB(anchors_db_path, anchors, ADDRV2_FORMAT)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531523841",
      "id" : 531523841,
      "in_reply_to_id" : 531507712,
      "line" : 170,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMzg0MQ==",
      "original_commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "original_line" : 170,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : 53,
      "pull_request_review_id" : 539880875,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-27T10:44:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531523841",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531525415"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531525415"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This should be compatible with (v1) addresses stored by 0.21.0rc{1,2} as well...\r\n\r\nSuch compatibility shouldn't be a point for the reason mentioned by @jnewbery.",
      "commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "created_at" : "2020-11-27T10:47:47Z",
      "diff_hunk" : "@@ -161,13 +161,13 @@ bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n void DumpAnchors(const fs::path& anchors_db_path, const std::vector<CAddress>& anchors)\n {\n     LOG_TIME_SECONDS(strprintf(\"Flush %d outbound block-relay-only peer addresses to anchors.dat\", anchors.size()));\n-    SerializeFileDB(\"anchors\", anchors_db_path, anchors);\n+    SerializeFileDB(\"anchors\", anchors_db_path, anchors, ADDRV2_FORMAT);\n }\n \n std::vector<CAddress> ReadAnchors(const fs::path& anchors_db_path)\n {\n     std::vector<CAddress> anchors;\n-    if (DeserializeFileDB(anchors_db_path, anchors)) {\n+    if (DeserializeFileDB(anchors_db_path, anchors, ADDRV2_FORMAT)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#discussion_r531525415",
      "id" : 531525415,
      "in_reply_to_id" : 531507712,
      "line" : 170,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyNTQxNQ==",
      "original_commit_id" : "8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "original_line" : 170,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/addrdb.cpp",
      "position" : 53,
      "pull_request_review_id" : 539882750,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20514",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-11-27T10:47:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531525415",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, could use test coverage.",
      "created_at" : "2020-11-27T10:57:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734776843",
      "id" : 734776843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDc3Njg0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T10:57:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734776843",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> it's very possible I've misread the code - this is split across addrdb/netaddress/net\r\n\r\nI think you read it correctly (or at least I read it in the same way). It will deserialize 0s from disk which will be invalid addresses which later will be skipped gracefully:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/50091592dd875a1c94030dbed74112b003732d68/src/net.cpp#L1971-L1975",
      "created_at" : "2020-11-27T11:05:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734780212",
      "id" : 734780212,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDc4MDIxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T11:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734780212",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> it uses the client version stored in the CAddress records to decide which deserializer to use.\r\n\r\n> anchors.dat from rc1 or rc2 should be read correctly.\r\n\r\n@sipa I don't understand this. With this PR, we always unserialize anchors.dat using a CAutoFile with version ADDRV2_FORMAT. I think the version stored in the CAddress will be used to deserialize the services in the CAddress, but the underlying CNetAddr will always be unserialized as addrv2.",
      "created_at" : "2020-11-27T11:06:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734780327",
      "id" : 734780327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDc4MDMyNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T11:06:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734780327",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the inconsistency in `CAddress` deserialization should be fixed in one way (#20509) or another:\r\n\r\n<details>\r\n<summary>fix CAddress deser inconsistency</summary>\r\n\r\n```diff\r\ndiff --git i/src/protocol.h w/src/protocol.h\r\nindex 309fac621..634a1a91a 100644\r\n--- i/src/protocol.h\r\n+++ w/src/protocol.h\r\n@@ -367,17 +367,17 @@ public:\r\n     CAddress(CService ipIn, ServiceFlags nServicesIn, uint32_t nTimeIn) : CService{ipIn}, nTime{nTimeIn}, nServices{nServicesIn} {};\r\n \r\n     SERIALIZE_METHODS(CAddress, obj)\r\n     {\r\n         SER_READ(obj, obj.nTime = TIME_INIT);\r\n         int nVersion = s.GetVersion();\r\n-        if (s.GetType() & SER_DISK) {\r\n+        const bool is_disk_ser = s.GetType() & SER_DISK;\r\n+        if (is_disk_ser) {\r\n             READWRITE(nVersion);\r\n         }\r\n-        if ((s.GetType() & SER_DISK) ||\r\n-            (nVersion != INIT_PROTO_VERSION && !(s.GetType() & SER_GETHASH))) {\r\n+        if (is_disk_ser || (nVersion != INIT_PROTO_VERSION && !(s.GetType() & SER_GETHASH))) {\r\n             // The only time we serialize a CAddress object without nTime is in\r\n             // the initial VERSION messages which contain two CAddress records.\r\n             // At that point, the serialization version is INIT_PROTO_VERSION.\r\n             // After the version handshake, serialization version is >=\r\n             // MIN_PEER_PROTO_VERSION and all ADDR messages are serialized with\r\n             // nTime.\r\n@@ -388,13 +388,16 @@ public:\r\n             SER_WRITE(obj, services_tmp = obj.nServices);\r\n             READWRITE(Using<CompactSizeFormatter<false>>(services_tmp));\r\n             SER_READ(obj, obj.nServices = static_cast<ServiceFlags>(services_tmp));\r\n         } else {\r\n             READWRITE(Using<CustomUintFormatter<8>>(obj.nServices));\r\n         }\r\n+        const int stream_version_orig = s.GetVersion();\r\n+        SER_READ(obj, if (is_disk_ser) { s.SetVersion(nVersion); });\r\n         READWRITEAS(CService, obj);\r\n+        SER_READ(obj, if (is_disk_ser) { s.SetVersion(stream_version_orig); });\r\n     }\r\n```\r\n</details>\r\n\r\nThe above patch, on top of this PR will:\r\n* Fix the problem which #20509 is fixing, so that PR can be closed\r\n* Make \"old\" `anchors.dat` readable (that may not be a concern, other than some obscure/scary message about being unable to read `anchors.dat` when a user/tester upgrades from rc2 to rc3)\r\n* Work just fine if there is ever addrv3 format",
      "created_at" : "2020-11-27T11:14:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734783860",
      "id" : 734783860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDc4Mzg2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T11:14:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734783860",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  * Work just fine if there is ever addrv3 format\r\n\r\nFuture proof is good.",
      "created_at" : "2020-11-27T11:22:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734787077",
      "id" : 734787077,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDc4NzA3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T11:22:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734787077",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think the same problem exists for banlist.dat - we'll always serialize/deserialize in addrv1 format.\r\n\r\nTrue that we will always ser/deser in addrv1, but that is not a problem because the banlist contains `CSubNet` objects which must be either IPv4 or IPv6 (no Tor v3 involved):\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/e2ff5e7b35d71195278d2a2ed9485f141de33d7a/src/netaddress.cpp#L992-L995",
      "created_at" : "2020-11-27T12:21:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734809739",
      "id" : 734809739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDgwOTczOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T12:21:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734809739",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> that is not a problem because the banlist contains CSubNet objects which must be either IPv4 or IPv6 (no Tor v3 involved)\r\n\r\nAh good. Thanks @vasild!",
      "created_at" : "2020-11-27T12:25:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734811296",
      "id" : 734811296,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDgxMTI5Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T12:25:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734811296",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild Did you see #20516?",
      "created_at" : "2020-11-27T16:56:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734920438",
      "id" : 734920438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDkyMDQzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T16:56:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734920438",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Oops, yes, that is only true when combined with #20516, or with @vasild's patch above.",
      "created_at" : "2020-11-27T17:03:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734922990",
      "id" : 734922990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDkyMjk5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T17:03:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734922990",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If I'm right, then I don't think we necessarily need to fix this for 0.21. We didn't have anchor connections or torv3 before, so the fact that they don't work together isn't a regression and can always be fixed up later\r\n\r\nThat's fair, and you've shown that this PR as-is actually makes things worse, as it'll fail to deserialize the `CService` object.\r\n\r\nTo fix it, we'll either need @vasild's patch from https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734783860, or doing it on top of #20516. I'm going to close this PR, and take the functionality there.",
      "created_at" : "2020-11-27T19:01:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20514#issuecomment-734954531",
      "id" : 734954531,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20514",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDk1NDUzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T19:01:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734954531",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
