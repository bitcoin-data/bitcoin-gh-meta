{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "**Expected behavior**\r\n\r\nAll C++ code to be 100% using legal C++ and not UB which can lead to subtle bugs if not now, then perhaps in the future.\r\n\r\n**Actual behavior**\r\n\r\nUse of undefined behavior in at least two places:\r\n\r\n- https://github.com/bitcoin/bitcoin/blob/42fe6aad326f62c7e6ea12ee873149257f67ce5d/src/net_processing.cpp#L227\r\n- https://github.com/bitcoin/bitcoin/blob/42fe6aad326f62c7e6ea12ee873149257f67ce5d/src/miner.h#L67\r\n\r\n**Background**\r\n\r\nPlease see this part of the C++ specification: https://en.cppreference.com/w/cpp/language/operator_comparison\r\n\r\nIn particular I will quote the relevant section here:\r\n\r\n> If two pointers are not specified to compare greater or compare equal, the result of the comparison is unspecified. The result may be nondeterministic, and need not be consistent even for multiple evaluations of the same expression with the same operands in the same execution of the program:\r\n\r\n```c++\r\nint x, y;\r\n \r\nbool f(int* p, int* q) { return p < q; }\r\n \r\nassert(f(&x, &y) == f(&x, &y)); // may fire in a conforming implementation\r\n```\r\n\r\nNote that in the above-linked section (which I admit is difficult to decipher) -- pointers are only specified to have a legal `<` or `>` comparison operations if the objects they point to either belong to the same array, or if the objects they point to live basically as members in the same object (i.e. as class members).  *This is unlike in C*.  The code will compile.. it will run -- but like the above section states, and the above sample program illustrates --  the results may be non-deterministic!\r\n\r\nIn practice it appears the code works in bitcoin for all known compilers and platforms -- but is not guaranteed to do so forever and may lead to subtle bugs in the future as compilers evolve or as `libstdc++` evolves.\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19496/comments",
   "created_at" : "2020-07-11T20:24:40Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19496/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/19496",
   "id" : 655273499,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19496/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU2NTUyNzM0OTk=",
   "number" : 19496,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Use of C++ undefined behavior in various `IteratorComparators`",
   "updated_at" : "2020-07-11T20:24:40Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19496",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/266627?v=4",
      "events_url" : "https://api.github.com/users/cculianu/events{/privacy}",
      "followers_url" : "https://api.github.com/users/cculianu/followers",
      "following_url" : "https://api.github.com/users/cculianu/following{/other_user}",
      "gists_url" : "https://api.github.com/users/cculianu/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/cculianu",
      "id" : 266627,
      "login" : "cculianu",
      "node_id" : "MDQ6VXNlcjI2NjYyNw==",
      "organizations_url" : "https://api.github.com/users/cculianu/orgs",
      "received_events_url" : "https://api.github.com/users/cculianu/received_events",
      "repos_url" : "https://api.github.com/users/cculianu/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/cculianu/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/cculianu/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/cculianu"
   }
}
