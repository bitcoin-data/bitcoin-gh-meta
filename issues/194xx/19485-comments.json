[
   {
      "author_association" : "MEMBER",
      "body" : "What's the point if we can't advertise the address?\r\n\r\nAlso, shouldn't it be possible to have both v2 and v3 addresses?",
      "created_at" : "2020-07-10T15:59:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-656751436",
      "id" : 656751436,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1Njc1MTQzNg==",
      "updated_at" : "2020-07-10T15:59:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656751436",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What's the point if we can't advertise the address?\r\n> \r\n> Also, shouldn't it be possible to have both v2 and v3 addresses?\r\n\r\nIf BIP155 get merged...  ?\r\nI have a working patch for @vasild Tor v3/ADDRv2  implementation that i will  post him now.\r\n\r\nBtw. I use for myself a patch to tunnel V3 in V2 ADDR message that works Ì¶ Ì¶rÌ¶iÌ¶gÌ¶hÌ¶tÌ¶ Ì¶nÌ¶oÌ¶wÌ¶ Ì¶wÌ¶iÌ¶tÌ¶hÌ¶ Ì¶cÌ¶uÌ¶rÌ¶rÌ¶eÌ¶nÌ¶tÌ¶ Ì¶mÌ¶aÌ¶sÌ¶tÌ¶eÌ¶rÌ¶.Ì¶ on top of the current p2p ;protocol. The old nodes would barely notice and drop  the new address, since they are unrouteable local ipv6. And only the patched nodes have full Tor v3 support.\r\nIt uses FC00/7 address that we ignore and resembles on the end to a v3 address to drop in and out from the peers.dat,\r\nThat should not even need a BIP since its fully transparent to the actual implementation, although a bit ugly and stealth. \r\n\r\n> Also, shouldn't it be possible to have both v2 and v3 addresses?\r\n\r\nThis PR create both V2 and V3  in one sweep.  \r\n\r\n\r\n",
      "created_at" : "2020-07-10T16:17:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-656760845",
      "id" : 656760845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1Njc2MDg0NQ==",
      "updated_at" : "2020-07-11T01:30:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656760845",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">It uses FC00/7 address that we ignore and resembles on the end to a v3 address to drop in and out from the peers.dat,\r\nThat should not even need a BIP since its fully transparent to the actual implementation, although a bit ugly and stealth.\r\n\r\nI don't know why it wouldn't need a BIP... it's a protocol change at the p2p layer still.",
      "created_at" : "2020-07-10T16:30:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-656766884",
      "id" : 656766884,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1Njc2Njg4NA==",
      "updated_at" : "2020-07-10T16:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656766884",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I don't know why it wouldn't need a BIP... it's a protocol change at the p2p layer ...\r\n\r\nSo then we propose this ?\r\nI posted this tunnel  patch in the comment as diff.\r\n\r\nThis v3 tunnel protocol is unrelated to this PR , Here we just create the service descriptor and do effectively none with it, but sure you can i.e.\r\npost the new v3 address grabbed from the log to your counterpart node and do a manual addnode on the remote side until  BIP155 gets merged.",
      "created_at" : "2020-07-10T16:50:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-656776257",
      "id" : 656776257,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1Njc3NjI1Nw==",
      "updated_at" : "2020-07-11T00:48:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656776257",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19991 (net: Use alternative port for incoming Tor connections by hebasto)\n* #19954 (tor: complete the TORv3 implementation by vasild)\n* #19288 (tests: Add fuzzing harness for TorController by practicalswift)\n* #19043 (torcontrol: add -tortarget config by MDrollette)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-11T00:20:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-656947713",
      "id" : 656947713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1Njk0NzcxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-29T14:21:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656947713",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To add some fish here this POC tor v3 patch is in line with the current piggy pack of v2 onions in ipv6 <details><summary>Click here, to see the full diff of the POC ADDRv1 compatible tor v3 support  </summary>\r\n\r\n``` Diff\r\ndiff --git a/src/addrman.h b/src/addrman.h\r\nindex 8e82020df..4a810e53f 100644\r\n--- a/src/addrman.h\r\n+++ b/src/addrman.h\r\n@@ -61,6 +61,7 @@ public:\r\n     SERIALIZE_METHODS(CAddrInfo, obj)\r\n     {\r\n         READWRITEAS(CAddress, obj);\r\n+        READWRITEAS(CNetAddr, obj);\r\n         READWRITE(obj.source, obj.nLastSuccess, obj.nAttempts);\r\n     }\r\n \r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 244b0094d..36af03d33 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -156,6 +156,7 @@ static std::vector<CAddress> convertSeed6(const std::vector<SeedSpec6> &vSeedsIn\r\n         struct in6_addr ip;\r\n         memcpy(&ip, seed_in.addr, sizeof(ip));\r\n         CAddress addr(CService(ip, seed_in.port), GetDesirableServiceFlags(NODE_NONE));\r\n+        LogPrintf(\"seeds %s\\n\", CNetAddr(addr).ToString());\r\n         addr.nTime = GetTime() - rng.randrange(nOneWeek) - nOneWeek;\r\n         vSeedsOut.push_back(addr);\r\n     }\r\n@@ -368,6 +369,9 @@ static CAddress GetBindAddress(SOCKET sock)\r\n     return addr_bind;\r\n }\r\n \r\n+static CAddress getadrr(std::string name) {\r\n+       return CAddress(CService(name,18444), NODE_NONE);\r\n+}\r\n CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, bool manual_connection, bool block_relay_only)\r\n {\r\n     if (pszDest == nullptr) {\r\n@@ -384,16 +388,23 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\r\n     }\r\n \r\n     /// debug print\r\n-    LogPrint(BCLog::NET, \"trying connection %s lastseen=%.1fhrs\\n\",\r\n-        pszDest ? pszDest : addrConnect.ToString(),\r\n+    LogPrint(BCLog::NET, \"trying connection %s unresolved address %s lastseen=%.1fhrs\\n\",\r\n+        pszDest ? pszDest:\"\", addrConnect.ToString(),\r\n         pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\r\n \r\n+    std::string strName = std::string( pszDest ? pszDest:\"\");\r\n     // Resolve\r\n     const int default_port = Params().GetDefaultPort();\r\n     if (pszDest) {\r\n         std::vector<CService> resolved;\r\n         if (Lookup(pszDest, resolved,  default_port, fNameLookup && !HaveNameProxy(), 256) && !resolved.empty()) {\r\n+\r\n+       // dont resolv local the onions\r\n+       if (!strName.find(\".onion\")) {\r\n+\r\n             addrConnect = CAddress(resolved[GetRand(resolved.size())], NODE_NONE);\r\n+\r\n+\r\n             if (!addrConnect.IsValid()) {\r\n                 LogPrint(BCLog::NET, \"Resolver returned invalid address %s for %s\\n\", addrConnect.ToString(), pszDest);\r\n                 return nullptr;\r\n@@ -410,6 +421,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\r\n                 LogPrintf(\"Failed to open new connection, already connected\\n\");\r\n                 return nullptr;\r\n             }\r\n+            }\r\n         }\r\n     }\r\n \r\n@@ -417,7 +429,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\r\n     bool connected = false;\r\n     SOCKET hSocket = INVALID_SOCKET;\r\n     proxyType proxy;\r\n-    if (addrConnect.IsValid()) {\r\n+    if (addrConnect.IsValid() && addrConnect.IsTor() && !pszDest) {\r\n         bool proxyConnectionFailed = false;\r\n \r\n         if (GetProxy(addrConnect.GetNetwork(), proxy)) {\r\n@@ -425,14 +437,21 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\r\n             if (hSocket == INVALID_SOCKET) {\r\n                 return nullptr;\r\n             }\r\n-            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(), hSocket, nConnectTimeout, proxyConnectionFailed);\r\n+\r\n+        if (addrConnect.ToStringIP() != \"\") {\r\n+                connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(), hSocket, nConnectTimeout, proxyConnectionFailed);\r\n+        } else return nullptr;\r\n+\r\n         } else {\r\n-            // no proxy needed (none set for target network)\r\n+            // no proxy needed (none set for tastrName.find(\".onion\")rget network)\r\n             hSocket = CreateSocket(addrConnect);\r\n             if (hSocket == INVALID_SOCKET) {\r\n                 return nullptr;\r\n             }\r\n-            connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout, manual_connection);\r\n+\r\n+            if (addrConnect.ToString() != \"\") {\r\n+                connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout, manual_connection);\r\n+            } else return nullptr;\r\n         }\r\n         if (!proxyConnectionFailed) {\r\n             // If a connection to the node was attempted, and failure (if any) is not caused by a problem connecting to\r\n@@ -444,14 +463,24 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\r\n         if (hSocket == INVALID_SOCKET) {\r\n             return nullptr;\r\n         }\r\n+\r\n         std::string host;\r\n         int port = default_port;\r\n         SplitHostPort(std::string(pszDest), port, host);\r\n         bool proxyConnectionFailed;\r\n-        connected = ConnectThroughProxy(proxy, host, port, hSocket, nConnectTimeout, proxyConnectionFailed);\r\n+        connected = false;\r\n+        //proxyConnectionFailed = true;\r\n+\r\n+\r\n+    if (strlen(pszDest) > 0) //strName.find(\".onion\"))\r\n+        {\r\n+        LogPrintf(\"Address to connect over proxz  %s %d\\n\", host, port);\r\n+            connected = ConnectThroughProxy(proxy, host, port, hSocket, nConnectTimeout, proxyConnectionFailed);\r\n+        } else return nullptr;\r\n+\r\n     }\r\n     if (!connected) {\r\n-        CloseSocket(hSocket);\r\n+        if (hSocket) CloseSocket(hSocket);\r\n         return nullptr;\r\n     }\r\n \r\n@@ -1705,17 +1734,6 @@ void CConnman::ThreadDNSAddressSeed()\r\n     LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\r\n }\r\n \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n void CConnman::DumpAddresses()\r\n {\r\n     int64_t nStart = GetTimeMillis();\r\n@@ -2057,6 +2075,8 @@ void CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\r\n         }\r\n     } else if (FindNode(std::string(pszDest)))\r\n         return;\r\n+    // will \"\":port ever work?\r\n+    if(!pszDest && (addrConnect.ToStringIP() == \"\")) return;\r\n \r\n     CNode* pnode = ConnectNode(addrConnect, pszDest, fCountFailure, manual_connection, block_relay_only);\r\n \r\n@@ -2756,6 +2776,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\r\n     // peers (to prevent adversaries from inferring these links from addr\r\n     // traffic).\r\n     m_addr_known{block_relay_only ? nullptr : MakeUnique<CRollingBloomFilter>(5000, 0.001)},\r\n+\r\n     id(idIn),\r\n     nLocalHostNonce(nLocalHostNonceIn),\r\n     nLocalServices(nLocalServicesIn),\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex bfc60b18f..ecd83188e 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2454,14 +2454,47 @@ void ProcessMessage(\r\n         std::vector<CAddress> vAddrOk;\r\n         int64_t nNow = GetAdjustedTime();\r\n         int64_t nSince = nNow - 10 * 60;\r\n+        int i = 0;\r\n+        size_t len = 10;\r\n+        CAddress Tor = CAddress(vAddr[0]);\r\n+        char rawaddr[256] = {};\r\n+\r\n         for (CAddress& addr : vAddr)\r\n         {\r\n             if (interruptMsgProc)\r\n                 return;\r\n \r\n+        if (addr.IsTorSequence(i)) {\r\n+            if (i == 0 ) {\r\n+                // LogPrintf(\"Adrress addr V3 raw  rec =\");\r\n+                Tor = addr;\r\n+            }\r\n+            //V3sequence())\r\n+            addr.SetSpecial_v3(addr, 256); //fill hostdata from ip;\r\n+            memcpy(&rawaddr[i*10], &addr.fqdn.c_str()[0], 10);\r\n+            i++;\r\n+            if (i != 8) {\r\n+                continue;\r\n+            }\r\n+        } else addr.fqdn = {};\r\n+\r\n+        //LogPrintf(\"\\nAdrress add raw? %s\\n\",  &rawaddr[0]);\r\n+\r\n+        if (i == 8) {\r\n+            Tor.SetSpecial_v3(addr, 255); // set clasic tor flag\r\n+            Tor.fqdn = rawaddr;\r\n+            if ( i == 8 ) Tor.fqdn = rawaddr;\r\n+            addr = Tor;\r\n+        }\r\n+\r\n+        if (addr.IsTor() && strlen(addr.fqdn.c_str()) < 32) addr.SetSpecial_v3(addr, 255); // v2 stzle\r\n+        LogPrint(BCLog::NET, \"Adrress add? %s\\n\",  addr.ToString());\r\n+\r\n+\r\n             // We only bother storing full nodes, though this may include\r\n             // things which we would not make an outbound connection to, in\r\n             // part because we may make feeler connections to them.\r\n+\r\n             if (!MayHaveUsefulAddressDB(addr.nServices) && !HasAllDesirableServiceFlags(addr.nServices))\r\n                 continue;\r\n \r\n@@ -3901,12 +3934,25 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\r\n             std::vector<CAddress> vAddr;\r\n             vAddr.reserve(pto->vAddrToSend.size());\r\n             assert(pto->m_addr_known);\r\n+            CAddress addr_add;\r\n             for (const CAddress& addr : pto->vAddrToSend)\r\n             {\r\n                 if (!pto->m_addr_known->contains(addr.GetKey()))\r\n                 {\r\n                     pto->m_addr_known->insert(addr.GetKey());\r\n-                    vAddr.push_back(addr);\r\n+                    if (!addr.IsTor()) vAddr.push_back(addr);\r\n+                    if (addr.IsTor()) LogPrint(BCLog::NET, \"Try to send onion address = %s\\n\", addr.fqdn);\r\n+\r\n+                    if (addr.IsTor() && strlen(addr.fqdn.c_str()) > 32) {\r\n+                        for (int i=0;i<8;i++) {\r\n+                            addr_add = addr;\r\n+                            addr_add.SetSpecial_v3(addr, (i)*10);\r\n+\r\n+                            vAddr.push_back(addr_add);\r\n+\r\n+                        }\r\n+                    } else  vAddr.push_back(addr); //v2 tor\r\n+\r\n                     // receiver rejects addr messages larger than 1000\r\n                     if (vAddr.size() >= 1000)\r\n                     {\r\ndiff --git a/src/netaddress.cpp b/src/netaddress.cpp\r\nindex 674439161..8c8bad0f8 100644\r\n--- a/src/netaddress.cpp\r\n+++ b/src/netaddress.cpp\r\n@@ -5,13 +5,17 @@\r\n \r\n #include <cstdint>\r\n #include <netaddress.h>\r\n+#include <netbase.h>\r\n+\r\n #include <hash.h>\r\n #include <util/strencodings.h>\r\n #include <util/asmap.h>\r\n #include <tinyformat.h>\r\n+#include <util/system.h>\r\n \r\n static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\r\n static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\r\n+static const unsigned char pchOnionSeq[] = {0xFD,'l','o','r','3',0x00};\r\n \r\n // 0xFD + sha256(\"bitcoin\")[0:5]\r\n static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\r\n@@ -47,6 +51,11 @@ void CNetAddr::SetRaw(Network network, const uint8_t *ip_in)\r\n     }\r\n }\r\n \r\n+void CNetAddr::SetRawByte(char p , int pos)\r\n+{\r\n+    ip[6+pos] = p;\r\n+}\r\n+\r\n /**\r\n  * Try to make this a dummy address that maps the specified name into IPv6 like\r\n  * so: (0xFD + %sha256(\"bitcoin\")[0:5]) + %sha256(name)[0:10]. Such dummy\r\n@@ -70,6 +79,7 @@ bool CNetAddr::SetInternal(const std::string &name)\r\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\r\n     memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\r\n     memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\r\n+    fqdn = name;\r\n     return true;\r\n }\r\n \r\n@@ -83,20 +93,51 @@ bool CNetAddr::SetInternal(const std::string &name)\r\n  *\r\n  * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\r\n  */\r\n-bool CNetAddr::SetSpecial(const std::string &strName)\r\n+bool CNetAddr::SetSpecial(const std::string &strName, int flag)\r\n {\r\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\r\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\r\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\r\n+        std::vector<unsigned char> vchAddr =  DecodeBase32(strName.substr(flag*10, strName.size() - 6).c_str());\r\n+        if (vchAddr.size() != 16-sizeof(pchOnionCat) && vchAddr.size() != 35)\r\n             return false;\r\n         memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\r\n         for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\r\n             ip[i + sizeof(pchOnionCat)] = vchAddr[i];\r\n+        fqdn = strName;\r\n+        LogPrint(BCLog::NET, \"setspecail called with %s %d\\n\", strName, flag);\r\n         return true;\r\n     }\r\n     return false;\r\n }\r\n \r\n+bool CNetAddr::SetSpecial_v3(CNetAddr ref , int flag)\r\n+{\r\n+    //fqdn.resize(256);\r\n+    std::string cp = ref.fqdn;\r\n+    cp.resize(256);\r\n+    if( flag < 254 ) {  memcpy(ip, pchOnionSeq, sizeof(pchOnionSeq));\r\n+        for (unsigned int i=0; i<16-sizeof(pchOnionSeq); i++) {\r\n+            ip[i + sizeof(pchOnionSeq)] = cp.c_str()[flag+i];\r\n+        }\r\n+        fqdn = cp.substr(flag,10);\r\n+    }\r\n+    if (flag == 255) { // backward comp\r\n+        std::string name = EncodeBase32(&ip[6], 10) + \".onion\";\r\n+        fqdn = name;\r\n+    }\r\n+    if (flag == 256) {\r\n+        for (unsigned int i=0; i<16-sizeof(pchOnionSeq); i++) {\r\n+            fqdn[i] = char(ip[i + sizeof(pchOnionSeq)]);\r\n+        }\r\n+    }\r\n+    return true;\r\n+}\r\n+\r\n+CNetAddr::CNetAddr(const std::string &strName)\r\n+{\r\n+    SetSpecial(strName);\r\n+    LogPrint(BCLog::NET,  \"CNetAddr internal setspecail called from addr by name\\n\");\r\n+}\r\n+\r\n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\r\n {\r\n     SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\r\n@@ -224,7 +265,15 @@ bool CNetAddr::IsHeNet() const\r\n  */\r\n bool CNetAddr::IsTor() const\r\n {\r\n-    return (memcmp(ip, pchOnionCat, sizeof(pchOnionCat)) == 0);\r\n+    return (memcmp(ip, pchOnionCat, sizeof(pchOnionCat)) == 0) || IsTorSequence(0x0);\r\n+}\r\n+\r\n+/**\r\n+ * @see CNetAddr::SetSpecial(const std::string &)\r\n+ */\r\n+bool CNetAddr::IsTorSequence(char seq) const\r\n+{\r\n+    return  memcmp(ip, pchOnionSeq, sizeof(pchOnionSeq)) == 0;\r\n }\r\n \r\n bool CNetAddr::IsLocal() const\r\n@@ -333,8 +382,9 @@ enum Network CNetAddr::GetNetwork() const\r\n \r\n std::string CNetAddr::ToStringIP() const\r\n {\r\n-    if (IsTor())\r\n-        return EncodeBase32(&ip[6], 10) + \".onion\";\r\n+    if (IsTor()) {\r\n+        return fqdn;\r\n+    }\r\n     if (IsInternal())\r\n         return EncodeBase32(ip + sizeof(g_internal_prefix), sizeof(ip) - sizeof(g_internal_prefix)) + \".internal\";\r\n     CService serv(*this, 0);\r\n@@ -640,6 +690,10 @@ CService::CService(const struct in6_addr& ipv6Addr, uint16_t portIn) : CNetAddr(\r\n {\r\n }\r\n \r\n+CService::CService(const std::string fqdn, uint16_t portIn) : CNetAddr(fqdn), port(portIn)\r\n+{\r\n+}\r\n+\r\n CService::CService(const struct sockaddr_in& addr) : CNetAddr(addr.sin_addr), port(ntohs(addr.sin_port))\r\n {\r\n     assert(addr.sin_family == AF_INET);\r\ndiff --git a/src/netaddress.h b/src/netaddress.h\r\nindex c20101215..e18cc31a1 100644\r\n--- a/src/netaddress.h\r\n+++ b/src/netaddress.h\r\n@@ -38,16 +38,18 @@ class CNetAddr\r\n         CNetAddr();\r\n         explicit CNetAddr(const struct in_addr& ipv4Addr);\r\n         void SetIP(const CNetAddr& ip);\r\n+        std::string fqdn = {};\r\n \r\n         /**\r\n          * Set raw IPv4 or IPv6 address (in network byte order)\r\n-         * @note Only NET_IPV4 and NET_IPV6 are allowed for network.\r\n+         * @note void SetRawBytes(const uint8_t *ip_in);Only NET_IPV4 and NET_IPV6 are allowed for network.\r\n          */\r\n         void SetRaw(Network network, const uint8_t *data);\r\n-\r\n+               void SetRawByte(char b, int pos);\r\n         bool SetInternal(const std::string& name);\r\n \r\n-        bool SetSpecial(const std::string &strName); // for Tor addresses\r\n+        bool SetSpecial_v3(CNetAddr ref , int flag); // for Tor addresses\r\n+        bool SetSpecial(const std::string &strName, int flag = 0);\r\n         bool IsBindAny() const; // INADDR_ANY equivalent\r\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\r\n         bool IsIPv6() const;    // IPv6 address (not mapped IPv4, not Tor)\r\n@@ -67,6 +69,7 @@ class CNetAddr\r\n         bool IsRFC6145() const; // IPv6 IPv4-translated address (::FFFF:0:0:0/96) (actually defined in RFC2765)\r\n         bool IsHeNet() const;   // IPv6 Hurricane Electric - https://he.net (2001:0470::/36)\r\n         bool IsTor() const;\r\n+        bool IsTorSequence(char pseq) const;\r\n         bool IsLocal() const;\r\n         bool IsRoutable() const;\r\n         bool IsInternal() const;\r\n@@ -94,13 +97,14 @@ class CNetAddr\r\n         int GetReachabilityFrom(const CNetAddr *paddrPartner = nullptr) const;\r\n \r\n         explicit CNetAddr(const struct in6_addr& pipv6Addr, const uint32_t scope = 0);\r\n+        CNetAddr(const std::string &strName);\r\n         bool GetIn6Addr(struct in6_addr* pipv6Addr) const;\r\n \r\n         friend bool operator==(const CNetAddr& a, const CNetAddr& b);\r\n         friend bool operator!=(const CNetAddr& a, const CNetAddr& b) { return !(a == b); }\r\n         friend bool operator<(const CNetAddr& a, const CNetAddr& b);\r\n \r\n-        SERIALIZE_METHODS(CNetAddr, obj) { READWRITE(obj.ip); }\r\n+        SERIALIZE_METHODS(CNetAddr, obj) { READWRITE(obj.ip, obj.fqdn); }\r\n \r\n         friend class CSubNet;\r\n };\r\n@@ -144,7 +148,8 @@ class CService : public CNetAddr\r\n     public:\r\n         CService();\r\n         CService(const CNetAddr& ip, uint16_t port);\r\n-        CService(const struct in_addr& ipv4Addr, uint16_t port);\r\n+        CService(const struct in_addr& ipv4Addr, uint16_t port);;\r\n+        CService(const std::string, uint16_t port);\r\n         explicit CService(const struct sockaddr_in& addr);\r\n         uint16_t GetPort() const;\r\n         bool GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const;\r\ndiff --git a/src/netbase.cpp b/src/netbase.cpp\r\nindex 3a3b5f3e6..816d66228 100644\r\n--- a/src/netbase.cpp\r\n+++ b/src/netbase.cpp\r\n@@ -4,6 +4,7 @@\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n #include <netbase.h>\r\n+#include <net.h>\r\n \r\n #include <sync.h>\r\n #include <tinyformat.h>\r\n@@ -69,17 +70,18 @@ bool static LookupIntern(const std::string& name, std::vector<CNetAddr>& vIP, un\r\n         return false;\r\n     }\r\n \r\n-    {\r\n-        CNetAddr addr;\r\n-        // From our perspective, onion addresses are not hostnames but rather\r\n-        // direct encodings of CNetAddr much like IPv4 dotted-decimal notation\r\n-        // or IPv6 colon-separated hextet notation. Since we can't use\r\n-        // getaddrinfo to decode them and it wouldn't make sense to resolve\r\n-        // them, we return a network address representing it instead. See\r\n-        // CNetAddr::SetSpecial(const std::string&) for more details.\r\n-        if (addr.SetSpecial(name)) {\r\n+    CNetAddr addr;\r\n+    // From our perspective, onion addresses are not hostnames but rather\r\n+    // direct encodings of CNetAddr much like IPv4 dotted-decimal notation\r\n+    // or IPv6 colon-separated hextet notation. Since we can't use\r\n+    // getaddrinfo to decode them and it wouldn't make sense to resolve\r\n+    // them, we return a network address representing it instead. See\r\n+    // CNetAddr::SetSpecial(const std::string&) for more details.\r\n+\r\n+    if (name.find(\".onion\")) {\r\n+        if (addr.SetSpecial(name,0)) {\r\n             vIP.push_back(addr);\r\n-            return true;\r\n+            return false;\r\n         }\r\n     }\r\n \r\n@@ -97,12 +99,19 @@ bool static LookupIntern(const std::string& name, std::vector<CNetAddr>& vIP, un\r\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\r\n     // getaddrinfo to only decode numerical network addresses and suppress\r\n     // hostname lookups.\r\n-    aiHint.ai_flags = fAllowLookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\r\n+    aiHint.ai_flags = fAllowLookup && !HaveNameProxy() ? AI_ADDRCONFIG : AI_NUMERICHOST;\r\n     struct addrinfo *aiRes = nullptr;\r\n     int nErr = getaddrinfo(name.c_str(), nullptr, &aiHint, &aiRes);\r\n-    if (nErr)\r\n-        return false;\r\n \r\n+    LogPrintf(\"Resolver :%s error = %d  local resolve allowed %s  %s\\n\", name.c_str() ,nErr,fAllowLookup, nErr?\"fail\":\"local resolved\");\r\n+    if (nErr ) {\r\n+        CNetAddr resolved;\r\n+        resolved.SetInternal(name);\r\n+        if (resolved.IsInternal()) {\r\n+            vIP.push_back(resolved);\r\n+        }\r\n+        return false;\r\n+    }\r\n     // Traverse the linked list starting with aiTrav, add all non-internal\r\n     // IPv4,v6 addresses to vIP while respecting nMaxSolutions.\r\n     struct addrinfo *aiTrav = aiRes;\r\n@@ -182,7 +191,7 @@ bool LookupHost(const std::string& name, CNetAddr& addr, bool fAllowLookup)\r\n     addr = vIP.front();\r\n     return true;\r\n }\r\n-\r\n+;\r\n /**\r\n  * Resolve a service string to its corresponding service.\r\n  *\r\n@@ -214,8 +223,17 @@ bool Lookup(const std::string& name, std::vector<CService>& vAddr, int portDefau\r\n \r\n     std::vector<CNetAddr> vIP;\r\n     bool fRet = LookupIntern(hostname, vIP, nMaxSolutions, fAllowLookup);\r\n-    if (!fRet)\r\n-        return false;\r\n+    if (vIP[0].IsTor()) {\r\n+        vAddr.resize(hostname.size());\r\n+        vAddr[0] = CService(hostname, port);\r\n+        return true;\r\n+    }\r\n+    if (!fRet) // mayby just a name  and only onion we do not resovel so use tor\r\n+    {\r\n+        vAddr.resize(hostname.size());\r\n+        vAddr[0] = CService(hostname, port);\r\n+        return true;\r\n+    }\r\n     vAddr.resize(vIP.size());\r\n     for (unsigned int i = 0; i < vIP.size(); i++)\r\n         vAddr[i] = CService(vIP[i], port);\r\n\r\n\r\n```\r\n\r\n</details> does the QD job of tunnel v3 onion in ipv6 standard bitcoin ADDR format packets as we do with v2. This is a working Proof Of Concept . And can sure be optimized in many ways,\r\nAnd used on top of this PR to easy test on the fly v3 tor onions.\r\n\r\ni.e On a cruft with a running open  tor browser you can generate v3 onions on the fly. Use\r\n` bitcoin-qt  -proxy=127.0.0.1:9150 -torcontrol=127.0.0.1:9151 -listen -onion=127.0.0.1:9150 \r\n\r\nBtw the tor browser like Orbot sits at 9150/9151 not 9050/9051\r\nNote, if the bugfix #19358  gets merged  bitcoin-qt  -proxy=127.0.0.1:9150 -torcontrol=127.0.0.1:9151 -listen\r\nis sufficient and more intuitive. since you want to do a proxy onion outbound and hidden \r\ninbound\r\nedit: with adding -onlynet=onion  -dns=0 and -dnsseed=0 your onion v3 test will stay in tor and not touch the tor ipv4 exitnodes to ping hello to the seeders.   \r\n",
      "created_at" : "2020-07-11T00:25:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-656948716",
      "id" : 656948716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1Njk0ODcxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-15T16:37:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656948716",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I thought about advertising both kinds of addresses for a bit and I think it does make sense. Tor that is unable to connect to v3 addresses is sufficiently old that running it is a security risk in itself, so that's not a valid reason to keep suporting v2 addresses, However with regard to advertising *on the bitcoin P2P network* it makes sense during the transition period to `addrv2` , becuase older node versions won't be able to receive (and thus use) the new Tor addresses.\r\n\r\nAt some point in the future when everyone supports bitcoin addrv2 mesages, we could stop creating and advertising a Tor v2 address.",
      "created_at" : "2020-07-15T12:12:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-658731686",
      "id" : 658731686,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1ODczMTY4Ng==",
      "updated_at" : "2020-07-15T12:12:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658731686",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Would you mind adding test coverage (and perhaps clang-format the changes)?",
      "created_at" : "2020-07-20T04:30:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-660795052",
      "id" : 660795052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MDc5NTA1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-20T04:30:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660795052",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "fixup-update: clang-format source",
      "created_at" : "2020-07-23T10:52:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-662941075",
      "id" : 662941075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Mjk0MTA3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T10:52:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/662941075",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "fixup:\r\nAdd -ephemeraltoronion option,to generate v3 onions that are ADDRv2 prepared.\r\nNow we can generate ephemeral tor v3 onion addresses on node reboot.\r\n\r\nedit@saibato\r\nNow a single PR  #19635 ",
      "created_at" : "2020-07-28T18:14:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-665196198",
      "id" : 665196198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTE5NjE5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T19:50:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665196198",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@luke-jr yes, quite ugly and just works and in the side show comments a little bit maxwell style ;-).\r\n",
      "created_at" : "2020-07-30T09:31:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-666258865",
      "id" : 666258865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjI1ODg2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T09:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666258865",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-07-30T16:25:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-666505421",
      "id" : 666505421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjUwNTQyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T16:25:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666505421",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Tor is planning to deprecate v2 onion addresses by September 15th, no longer support by July 15th 2021 (0.4.6), and disable by October 15th 2021.\r\n\r\nhttps://blog.torproject.org/v2-deprecation-timeline\r\n",
      "created_at" : "2020-07-31T17:21:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-667239737",
      "id" : 667239737,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzIzOTczNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T17:21:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667239737",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Tor is planning to deprecate v2 onion addresses by September 15th, no longer support by July\r\n\r\n@Rspigler yes we have some work here, the plan was to have from now on v3 and v2 in parallel and by that allow easy testing the transition. And then fade out v2 by change v3 to default.  And then way later refactor.  \r\n",
      "created_at" : "2020-07-31T18:55:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-667299893",
      "id" : 667299893,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzI5OTg5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T18:55:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667299893",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-09T14:16:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-671057215",
      "id" : 671057215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTA1NzIxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-09T14:16:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671057215",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "rebased https://github.com/bitcoin/bitcoin/pull/19485/commits/cb8f28a8f8c967bbb11dc6ee412c52bb2b0a56fa",
      "created_at" : "2020-08-15T12:38:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-674391711",
      "id" : 674391711,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDM5MTcxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-15T12:38:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674391711",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Concept ACK. Would you mind adding test coverage ...\r\n\r\n@jonatack In general i thnk the coder who wrote a feature should not write the test.\r\n\r\nThere is a. lot of success bias and b. \"Most makers are bad breakers\",    :haircut_woman:  \r\n\r\n",
      "created_at" : "2020-09-11T13:23:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-691092964",
      "id" : 691092964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTA5Mjk2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-11T13:23:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691092964",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm closing this in favor of #19954, which seems to include the same behvavior.",
      "created_at" : "2020-09-30T11:48:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-701339712",
      "id" : 701339712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMTMzOTcxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-30T11:48:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701339712",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm closing this in favor of #19954, which seems to include the same behvavior.\r\n\r\nIt does not, when 19954 get merged as is, some old Tor only nodes will startup if updated without v2 and will not be reachable for some time inbound, before there new v3 is widely known\r\nAFAICS u and @Sjors where in favor of a dual stack i.e. with option to select for some time, but what is partly acked now is a plain v3 and has the potential as i was wary all the time to let old not updated nodes behind and unable to connect to there used known nodes and force thereby a kind of softfork, when we merge this as is and not provide the same functionality as before at least optional for some time.\r\n\r\nBtw. At least i know now that mastodon Avatar is not a bot, ;-)   ",
      "created_at" : "2020-10-01T11:00:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-702057309",
      "id" : 702057309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjA1NzMwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T11:00:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702057309",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not opposed to dual stack. It might be worth discussing in a separate issue / PR. But it generally takes a while for people to upgrade their Bitcoin node, so I suspect there'll be plenty of v2 nodes left when that's shut down.",
      "created_at" : "2020-10-01T12:32:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-702102523",
      "id" : 702102523,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjEwMjUyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T12:32:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702102523",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm not opposed to dual stack. It might be worth discussing in a separate issue / PR\r\n\r\nBut, this PR here is a dual stack and provides Tor v2 and v3 in parallel and @vasild what is so complicated to just grab from here and do this from day one?\r\nSo that i can close this here.\r\nI could live with this better if u could also add an option -useonlyv3service, that we then deprecate later to default, for those who know the dire implications, if they have a solely v3 node created on startup by the service call now, :woman_shrugging: \r\n\r\n@laanwj This whole thing might not be hanging that high, when we would not have the long awaited TAPROOT in the pipeline and then, in my view, we will have a lot of nodes that seek or hope for privacy might want to update fast.\r\n\r\nSo before -onlynet=onion is also respected outbound and seeders add also there v3 addresses to chainparsms.cpp instead of using outbound there FQDN over Tor exit nodes to bootstrap onion nodes, i will not consent.\r\n\r\nI hoped since i addressed that and other Tor related  problems now in multiple PR's that one of the core team silent picks this up and does the right thing, but if nothing happens over month  that;s also a message.\r\n\r\nIf u ask users ( and also some core members ) if there onion bootstrap is in Tor, i guess most will say sure because seeding is just over DNS UDP and that is not possible over Tor, so they believe that, but in fact what Bitcoin does is making outbound plain ipv4 calls to the seeders real nodes over the exit nodes to bootstrap pure onion nodes. So a. some doxing here and b. how many honest exit nodes are out there, that give u correct ADDR/ADDVv2 response messages?\r\n\r\nNot even talking here about v3 Edwards and what that means for onions created over the service api, AFAICS we have here some profound misconceptions how Tor has changed from v2 to v3 and is about to change. imho.\r\n\r\nWe have socks5 name services and not socks4 and so one could have had just add .onion or FQDN as long domain names and relay them in simple messages to other nodes they then can or can not over socks5 proxy's call the nodes outbound like any ip.\r\nbtw that will be funny with i2p, good luck to create an \"outbound\" socks5 proxy relay for i2p ( maybe in java?) to even compare i2p with Tor is btw a joke imo.\r\n\r\nTo use only ip in ADDR messages in the original design, was to make sure there is no DNS like or address translation that can be tampered, since Satoshis probably knew that u can not stop the INTERNET (TCP/IP) but u can hijack DNS,Tor,i2p etc.?\r\n\r\nThe way the architecture seams to want to progress forward and is now in parts moved from the first design. is to treat other forms of transports also like IP addresses, but that is utterly wrong since those \"addresses names\" do not even exist without outbound/inbound proxy's or programs and \"address name\" to IP directory's, they are more like DNS names and can easy be hooked or hijacked and worse the ones that seek privacy might be the ones that easy end up on a premined alternative chain that verify;s \"correctly\" and reports there hooked balances correct on the screen and RPC but has nothing to do with the original chain.\r\n\r\nBTW: In no way, when i do \"not\" comment on other PR's, that does mean approve or that i even have red a PR. Since i am independent of anyone on this planet, \r\nan ACK is an ACK and if there is no ACK do not assume there is and or that i had interest in silent review bcs an PR tangent my assumed interests and just forgot to ACK or comment. DYOR verify not trust ;-)\r\n",
      "created_at" : "2020-10-01T14:10:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-702163046",
      "id" : 702163046,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMjE2MzA0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-08T11:35:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/702163046",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Probably no one ever reads that, but I still can only urge to have a dual stack as long as possible and all issues in Tor V3 are fixed and proven mature stable.\r\nThe effect on the consensus is a know issue but who knows what else is there not disclosed yet.\r\nDon't be reckless.  \r\nFirst 2021 full V3 Tor address outage.\r\n\r\nhttps://bitcoinhackers.org/web/statuses/105531638557051583\r\n\r\nhttps://darknetdaily.com/?p=1030 ",
      "created_at" : "2021-01-10T14:03:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-757481499",
      "id" : 757481499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NzQ4MTQ5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-10T14:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757481499",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I agree that having `peers.dat` backwards incompatible seems less of a conservative approach than is usually taken.  A dual stack (advertising both addresses) seems supported by @laanwj (https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-658731686) as well.",
      "created_at" : "2021-01-10T22:35:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-757556062",
      "id" : 757556062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NzU1NjA2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-10T22:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757556062",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "With current `master`, one can have his node behind the old, Tor v2 address by:\r\n\r\n* Configure the onion service in `torrc` and run bitcoind with `-listenonion=0 -bind=127.0.0.1:8334=onion`, `torrc`:\r\n```\r\nHiddenServiceDir /var/db/tor/bitcoind-torv2/\r\nHiddenServiceVersion 2               \r\nHiddenServicePort 8333 127.0.0.1:8334\r\n```\r\nor\r\n\r\n* Copy the old (v2) `onion_private_key` over `onion_v3_private_key`",
      "created_at" : "2021-01-11T10:32:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-757861665",
      "id" : 757861665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Nzg2MTY2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-11T10:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757861665",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FWIW, the 0.21 release notes draft is at https://github.com/bitcoin-core/bitcoin-devwiki/wiki/0.21.0-Release-Notes-Draft and currently states:\r\n\r\n\"The Tor onion service that is automatically created by setting the -listenonion configuration parameter will now be created as a Tor v3 service instead of Tor v2. The private key that was used for Tor v2 (if any) will be left untouched in the onion_private_key file in the data directory (see -datadir) and can be removed if not needed. Bitcoin Core will no longer attempt to read it. The private key for the Tor v3 service will be saved in a file named onion_v3_private_key. To use the deprecated Tor v2 service (not recommended), the onion_private_key can be copied over onion_v3_private_key, e.g. cp -f onion_private_key onion_v3_private_key. (#19954)\"\r\n\r\nThe wiki is publicly editable if anyone feels it could be more clear or complete.\r\n",
      "created_at" : "2021-01-11T12:58:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-757935563",
      "id" : 757935563,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1NzkzNTU2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-11T12:59:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757935563",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> With current master, one can have his node behind the old, Tor v2 address by:\r\n\r\nsure, most experienced user will have Tor anyway defined pure in torrc.and use multiple externalip= and addnode in conf  and not expose the Tor service api anyway.\r\n\r\nBut if the mantra is that average Joe must not get screwed and not run into i..e. eclipse like things, we should keep v2 also in torcontrol as long as possible, 64 bit brute is cheap in reach and v2 address have also other problems but at least they work for ppl / nodes who just need to tunnel easy  behind NAT's and serve from there i.e. phones and termuxe's or VM's and do not care much about privacy. \r\nThey often use things out of the box with standard settings.\r\n\r\nbtw for instance in c-LNs Tor implementation we have an option to let at least the user decide what kind of auto onion he wants to have and we can use  v3 whiteout clamping the key that generates the address by user defined blobs.or derive them from the node key and also on softreboots we can easy create new addresses while keeping the old ones what is anyway a good idea for v3 until it is mature",
      "created_at" : "2021-01-11T14:48:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-757998768",
      "id" : 757998768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Nzk5ODc2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-11T15:27:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757998768",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't think there is anything to do here. By the time current master is released, TorV2 will be dead and gone.",
      "created_at" : "2021-01-11T21:15:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-758229223",
      "id" : 758229223,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODIyOTIyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-11T21:15:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758229223",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I don't think there is anything to do here. By the time current master is released, TorV2 will be dead and gone.\r\n\r\nI know they say i am hard to understand and often vage.but let me repharse with no intend of **if a than b** I don't  and will not.\r\n\r\nBut, if u don;t Ithink there is anything to do here. By the time  v0.21.0  is released, TorV3 will be dead and gone.",
      "created_at" : "2021-01-12T09:48:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-758538446",
      "id" : 758538446,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODUzODQ0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-12T09:48:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758538446",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Current master will become 22.0. 0.21.0 will be out imminently.",
      "created_at" : "2021-01-12T15:32:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-758737128",
      "id" : 758737128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODczNzEyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-12T15:32:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758737128",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> 0.21.0 will be out imminently.\r\n\r\nrc6 anyway...?\r\n\r\nbtw we should skip 22 and 23 to obvious or misleading how about 24,0?",
      "created_at" : "2021-01-12T17:02:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19485#issuecomment-758799993",
      "id" : 758799993,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19485",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODc5OTk5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-12T17:20:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758799993",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   }
]
