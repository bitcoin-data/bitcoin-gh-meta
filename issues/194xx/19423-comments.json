[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Btw thanks @jonatack for input on the test ð  added you as coauthor. I added a loop for peerinfo so this test should work with any number of nodes.",
      "created_at" : "2020-07-01T05:05:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-652192912",
      "id" : 652192912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjE5MjkxMg==",
      "updated_at" : "2020-07-01T05:05:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652192912",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448120513"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448120513"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you can remove these two lines about the wallet. This should be unrelated to wallet presence.",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T05:18:29Z",
      "diff_hunk" : "@@ -0,0 +1,50 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448120513",
      "id" : 448120513,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMDUxMw==",
      "original_commit_id" : "502950d517eaf1d6de57316b4090b45421e6c5c5",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 440552237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448120513",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Pushing to rerun travis because a job timed out :(",
      "created_at" : "2020-07-01T05:46:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-652205393",
      "id" : 652205393,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjIwNTM5Mw==",
      "updated_at" : "2020-07-01T05:46:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652205393",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448128886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448128886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice idea to add the inner loop. Can also assert the filter for each element.\r\n```diff\r\n-            assert_equal(info[0]['minfeefilter'], MAX_FEE_FILTER)\r\n             for conn_info in info:\r\n+                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\r\n```",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T05:48:22Z",
      "diff_hunk" : "@@ -0,0 +1,50 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+        NORMAL_FEE_FILTER = Decimal(str(100 / COIN))\n+\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and don't receive invs while still in IBD\")\n+        for node in self.nodes:\n+            assert node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            assert_equal(info[0]['minfeefilter'], MAX_FEE_FILTER)\n+            for conn_info in info:\n+                assert \"inv\" not in conn_info[\"bytesrecv_per_msg\"].keys()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448128886",
      "id" : 448128886,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyODg4Ng==",
      "original_commit_id" : "c33c390a85b9129b5d019e9962a2e7c69fc11e3e",
      "original_line" : 30,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 440552237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448128886",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448129043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448129043"
         }
      },
      "author_association" : "MEMBER",
      "body" : "idem!\r\n```diff\r\n-            assert_equal(info[0]['minfeefilter'], NORMAL_FEE_FILTER)\r\n             for conn_info in info:\r\n+                assert_equal(conn_info['minfeefilter'], NORMAL_FEE_FILTER)\r\n```",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T05:49:00Z",
      "diff_hunk" : "@@ -0,0 +1,50 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+        NORMAL_FEE_FILTER = Decimal(str(100 / COIN))\n+\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and don't receive invs while still in IBD\")\n+        for node in self.nodes:\n+            assert node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            assert_equal(info[0]['minfeefilter'], MAX_FEE_FILTER)\n+            for conn_info in info:\n+                assert \"inv\" not in conn_info[\"bytesrecv_per_msg\"].keys()\n+                assert \"inv\" not in conn_info[\"bytessent_per_msg\"].keys()\n+\n+        # Come out of IBD by generating a block\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.log.info(\"Check that nodes reset minfilter and receive invs after coming out of IBD\")\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            assert_equal(info[0]['minfeefilter'], NORMAL_FEE_FILTER)\n+            for conn_info in info:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448129043",
      "id" : 448129043,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyOTA0Mw==",
      "original_commit_id" : "c33c390a85b9129b5d019e9962a2e7c69fc11e3e",
      "original_line" : 41,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 440552237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448129043",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448129186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448129186"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you like, the constants can be pulled out to the top to de-clutter the test. I think that's generally what is done but that could be a misconception on my part.",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T05:49:27Z",
      "diff_hunk" : "@@ -0,0 +1,50 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+        NORMAL_FEE_FILTER = Decimal(str(100 / COIN))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448129186",
      "id" : 448129186,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyOTE4Ng==",
      "original_commit_id" : "c33c390a85b9129b5d019e9962a2e7c69fc11e3e",
      "original_line" : 25,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 440552237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448129186",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Pushing to rerun travis because a job timed out :(\r\n\r\nYou can also ask for a travis re-kick on irc and someone will restart just the recalcitrant job. In this case, I'll keep a sharp weather eye and re-kick any jobs needed here.",
      "created_at" : "2020-07-01T05:58:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-652209073",
      "id" : 652209073,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjIwOTA3Mw==",
      "updated_at" : "2020-07-01T06:36:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652209073",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448133436"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448133436"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "woops",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T06:03:13Z",
      "diff_hunk" : "@@ -0,0 +1,50 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448133436",
      "id" : 448133436,
      "in_reply_to_id" : 448120513,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMzQzNg==",
      "original_commit_id" : "502950d517eaf1d6de57316b4090b45421e6c5c5",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 440567335,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448133436",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "LGTM",
      "created_at" : "2020-07-01T07:05:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-652233973",
      "id" : 652233973,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjIzMzk3Mw==",
      "updated_at" : "2020-07-01T07:05:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652233973",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448261753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448261753"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a confusing name because it doesn't really test IBD (the main purpose of which is to sync the tip).\r\nMaybe 'p2p_tx_relay_while_ibd.py'",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T10:12:50Z",
      "diff_hunk" : "@@ -246,6 +246,7 @@\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',\n+    'p2p_ibd.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448261753",
      "id" : 448261753,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2MTc1Mw==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 249,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 440734950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448261753",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448313573"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448313573"
         }
      },
      "author_association" : "MEMBER",
      "body" : "p2p_feefilter_ibd ? ",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T11:59:16Z",
      "diff_hunk" : "@@ -246,6 +246,7 @@\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',\n+    'p2p_ibd.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448313573",
      "id" : 448313573,
      "in_reply_to_id" : 448261753,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxMzU3Mw==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 249,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 440802910,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448313573",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448314722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448314722"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems a bit odd to use floating point, but then put the result in a decimal. Why not `Decimal(9170997)/COIN`?",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T12:01:39Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+MAX_FEE_FILTER = Decimal(str(9170997 / COIN))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448314722",
      "id" : 448314722,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNDcyMg==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 13,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 440804448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448314722",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448314773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448314773"
         }
      },
      "author_association" : "MEMBER",
      "body" : "same",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T12:01:45Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+NORMAL_FEE_FILTER = Decimal(str(100 / COIN))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448314773",
      "id" : 448314773,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNDc3Mw==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 14,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 440804448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448314773",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448315317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448315317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could use the constant?\r\n```suggestion\r\n        self.extra_args = [\r\n        [\"-minrelaytxfee={}\".format(NORMAL_FEE_FILTER)],\r\n        [\"-minrelaytxfee={}\".fromat(NORMAL_FEE_FILTER)],\r\n         ]\r\n```",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T12:02:49Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+NORMAL_FEE_FILTER = Decimal(str(100 / COIN))\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448315317",
      "id" : 448315317,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNTMxNw==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 21,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 440804448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448315317",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448316507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448316507"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a inv of type block, no?\r\n\r\nI am not sure if there is a way to ask Bitcoin Core which inv type it received. Maybe the only way is to use mininode?",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T12:05:10Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+NORMAL_FEE_FILTER = Decimal(str(100 / COIN))\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and don't receive invs while still in IBD\")\n+        for node in self.nodes:\n+            assert node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+                assert \"inv\" not in conn_info[\"bytesrecv_per_msg\"].keys()\n+                assert \"inv\" not in conn_info[\"bytessent_per_msg\"].keys()\n+\n+        # Come out of IBD by generating a block\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.log.info(\"Check that nodes reset minfilter and receive invs after coming out of IBD\")\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(info[0]['minfeefilter'], NORMAL_FEE_FILTER)\n+                assert \"inv\" in conn_info[\"bytesrecv_per_msg\"].keys() or \"inv\" in conn_info[\"bytessent_per_msg\"].keys()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448316507",
      "id" : 448316507,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNjUwNw==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 43,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 440804448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448316507",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448572594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448572594"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "p2p_ibd_txrelay?",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-01T19:29:49Z",
      "diff_hunk" : "@@ -246,6 +246,7 @@\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',\n+    'p2p_ibd.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r448572594",
      "id" : 448572594,
      "in_reply_to_id" : 448261753,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MjU5NA==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 249,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : null,
      "pull_request_review_id" : 441141525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448572594",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449194955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449194955"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well, to be honest, this test doesn't even produce any transactions to send invs about right now ð  I need to work that out.\r\n\r\nMininodes are useful for seeing what nodes send out, but I'm not sure how useful they for seeing what nodes receive... I could have a mininode manually send a feefilter and make sure it doesn't receive anything, but then I'm testing the feefilter message instead of IBD behavior.",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-02T18:22:24Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+NORMAL_FEE_FILTER = Decimal(str(100 / COIN))\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and don't receive invs while still in IBD\")\n+        for node in self.nodes:\n+            assert node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+                assert \"inv\" not in conn_info[\"bytesrecv_per_msg\"].keys()\n+                assert \"inv\" not in conn_info[\"bytessent_per_msg\"].keys()\n+\n+        # Come out of IBD by generating a block\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.log.info(\"Check that nodes reset minfilter and receive invs after coming out of IBD\")\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(info[0]['minfeefilter'], NORMAL_FEE_FILTER)\n+                assert \"inv\" in conn_info[\"bytesrecv_per_msg\"].keys() or \"inv\" in conn_info[\"bytessent_per_msg\"].keys()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449194955",
      "id" : 449194955,
      "in_reply_to_id" : 448316507,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NDk1NQ==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 43,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 441927667,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449194955",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449203050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449203050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Isn't the point to test what the node sends out? I.e. test whether MAX_FILER or not was sent out?",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-02T18:39:37Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+NORMAL_FEE_FILTER = Decimal(str(100 / COIN))\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and don't receive invs while still in IBD\")\n+        for node in self.nodes:\n+            assert node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+                assert \"inv\" not in conn_info[\"bytesrecv_per_msg\"].keys()\n+                assert \"inv\" not in conn_info[\"bytessent_per_msg\"].keys()\n+\n+        # Come out of IBD by generating a block\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.log.info(\"Check that nodes reset minfilter and receive invs after coming out of IBD\")\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(info[0]['minfeefilter'], NORMAL_FEE_FILTER)\n+                assert \"inv\" in conn_info[\"bytesrecv_per_msg\"].keys() or \"inv\" in conn_info[\"bytessent_per_msg\"].keys()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449203050",
      "id" : 449203050,
      "in_reply_to_id" : 448316507,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMzA1MA==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 43,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 441938052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449203050",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449204003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449204003"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yep, feefilter is already tested - `MAX_FILTER` during IBD, then reset to normal after.\r\nI had been hoping to also test that they don't receive tx invs, but it seems more complicated than what I was doing originally.",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-02T18:41:34Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+NORMAL_FEE_FILTER = Decimal(str(100 / COIN))\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and don't receive invs while still in IBD\")\n+        for node in self.nodes:\n+            assert node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+                assert \"inv\" not in conn_info[\"bytesrecv_per_msg\"].keys()\n+                assert \"inv\" not in conn_info[\"bytessent_per_msg\"].keys()\n+\n+        # Come out of IBD by generating a block\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.log.info(\"Check that nodes reset minfilter and receive invs after coming out of IBD\")\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(info[0]['minfeefilter'], NORMAL_FEE_FILTER)\n+                assert \"inv\" in conn_info[\"bytesrecv_per_msg\"].keys() or \"inv\" in conn_info[\"bytessent_per_msg\"].keys()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449204003",
      "id" : 449204003,
      "in_reply_to_id" : 448316507,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNDAwMw==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 43,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 441939213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449204003",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK fc1a714699a66f9feec9e8ab0d6be92a07244a74",
      "created_at" : "2020-07-02T18:48:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-653167332",
      "id" : 653167332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzE2NzMzMg==",
      "updated_at" : "2020-07-02T18:48:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653167332",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Status: I think https://github.com/bitcoin/bitcoin/commit/fc1a714699a66f9feec9e8ab0d6be92a07244a74 (with just the minfeefilter) is sufficient for testing #19204.\r\n\r\nI figured out a way to test transaction relay too in https://github.com/bitcoin/bitcoin/pull/19423/commits/7bc653e7e3d21c675c6a1257f658222b97e166cb, but it's not perfect - there isn't an obvious way to see what tx invs a node has received since bitcoind doesn't provide that information through rpc.",
      "created_at" : "2020-07-02T21:26:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-653227645",
      "id" : 653227645,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzIyNzY0NQ==",
      "updated_at" : "2020-07-03T00:34:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653227645",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449323480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449323480"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke if you have time to check out https://github.com/bitcoin/bitcoin/pull/19423/commits/7bc653e7e3d21c675c6a1257f658222b97e166cb please let me know what you think :)",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-03T00:38:19Z",
      "diff_hunk" : "@@ -0,0 +1,47 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test inv messages and fee filters during and after IBD.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.messages import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+MAX_FEE_FILTER = Decimal(str(9170997 / COIN))\n+NORMAL_FEE_FILTER = Decimal(str(100 / COIN))\n+\n+\n+class P2PIBDTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-minrelaytxfee=0.00000100\"], [\"-minrelaytxfee=0.00000100\"]]\n+\n+    def run_test(self):\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and don't receive invs while still in IBD\")\n+        for node in self.nodes:\n+            assert node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+                assert \"inv\" not in conn_info[\"bytesrecv_per_msg\"].keys()\n+                assert \"inv\" not in conn_info[\"bytessent_per_msg\"].keys()\n+\n+        # Come out of IBD by generating a block\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.log.info(\"Check that nodes reset minfilter and receive invs after coming out of IBD\")\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+            info = node.getpeerinfo()\n+            for conn_info in info:\n+                assert_equal(info[0]['minfeefilter'], NORMAL_FEE_FILTER)\n+                assert \"inv\" in conn_info[\"bytesrecv_per_msg\"].keys() or \"inv\" in conn_info[\"bytessent_per_msg\"].keys()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449323480",
      "id" : 449323480,
      "in_reply_to_id" : 448316507,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyMzQ4MA==",
      "original_commit_id" : "236cd1c12844c9e97fbbab6b60c3fd01536974ad",
      "original_line" : 43,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd.py",
      "position" : null,
      "pull_request_review_id" : 442086209,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:38:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449323480",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449327609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449327609"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm worried that this might be intermittent. IsInitialBlockDownload is a latch. The first time it returns false causes it to return false on all subsequent calls. Is there a window between restarting the node and fastforwarding time with `setmocktime` where somthing could call `IsInitialBlockDownload()` and cause it to latch to false?",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-03T00:59:48Z",
      "diff_hunk" : "@@ -7,36 +7,64 @@\n from decimal import Decimal\n \n from test_framework.messages import COIN\n+from test_framework.mininode import P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import assert_equal, connect_nodes\n \n MAX_FEE_FILTER = Decimal(9170997) / COIN\n NORMAL_FEE_FILTER = Decimal(100) / COIN\n+MAX_TIP_AGE = 24 * 60 * 60\n \n \n class P2PIBDTest(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False\n         self.num_nodes = 2\n         self.extra_args = [[\"-minrelaytxfee={}\".format(NORMAL_FEE_FILTER)]] * self.num_nodes\n \n     def run_test(self):\n-        self.log.info(\"Check that nodes set minfilter to MAX_MONEY while still in IBD\")\n-        for node in self.nodes:\n-            assert node.getblockchaininfo()['initialblockdownload']\n-            for conn_info in node.getpeerinfo():\n-                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+        # Generate some blocks so that node0 is funded\n+        self.nodes[0].generate(nblocks=101)\n+        self.sync_blocks(self.nodes)\n+\n+        # Force node1 into IBD by restarting and fast-forwarding time.\n+        # Fast-forwarding the time by > 24 hours causes node1 to consider its tip too old\n+        # See the tip age check in IsInitialBlockDownload().\n+        self.restart_node(1)\n+        tip_time = self.nodes[1].getblockheader(self.nodes[1].getbestblockhash())['time']\n+        self.nodes[1].setmocktime(tip_time + MAX_TIP_AGE + 1)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[1], 0)\n+\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and do not receive tx invs while still in IBD\")\n+        assert self.nodes[1].getblockchaininfo()['initialblockdownload']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449327609",
      "id" : 449327609,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyNzYwOQ==",
      "original_commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "original_line" : 40,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd_txrelay.py",
      "position" : 40,
      "pull_request_review_id" : 442090761,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T00:59:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449327609",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449636523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449636523"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Gooooooood point. A few ideas I have:\r\n1. Wondering if I can pass in an argument for `start` to get the test node to start up at a particular mocktime?\r\n2. I could... setmocktime backwards to begin with and maybe when it restarts, it'll be outdated from the get go?\r\n",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-03T15:33:47Z",
      "diff_hunk" : "@@ -7,36 +7,64 @@\n from decimal import Decimal\n \n from test_framework.messages import COIN\n+from test_framework.mininode import P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import assert_equal, connect_nodes\n \n MAX_FEE_FILTER = Decimal(9170997) / COIN\n NORMAL_FEE_FILTER = Decimal(100) / COIN\n+MAX_TIP_AGE = 24 * 60 * 60\n \n \n class P2PIBDTest(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False\n         self.num_nodes = 2\n         self.extra_args = [[\"-minrelaytxfee={}\".format(NORMAL_FEE_FILTER)]] * self.num_nodes\n \n     def run_test(self):\n-        self.log.info(\"Check that nodes set minfilter to MAX_MONEY while still in IBD\")\n-        for node in self.nodes:\n-            assert node.getblockchaininfo()['initialblockdownload']\n-            for conn_info in node.getpeerinfo():\n-                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+        # Generate some blocks so that node0 is funded\n+        self.nodes[0].generate(nblocks=101)\n+        self.sync_blocks(self.nodes)\n+\n+        # Force node1 into IBD by restarting and fast-forwarding time.\n+        # Fast-forwarding the time by > 24 hours causes node1 to consider its tip too old\n+        # See the tip age check in IsInitialBlockDownload().\n+        self.restart_node(1)\n+        tip_time = self.nodes[1].getblockheader(self.nodes[1].getbestblockhash())['time']\n+        self.nodes[1].setmocktime(tip_time + MAX_TIP_AGE + 1)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[1], 0)\n+\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and do not receive tx invs while still in IBD\")\n+        assert self.nodes[1].getblockchaininfo()['initialblockdownload']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449636523",
      "id" : 449636523,
      "in_reply_to_id" : 449327609,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzNjUyMw==",
      "original_commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "original_line" : 40,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd_txrelay.py",
      "position" : 40,
      "pull_request_review_id" : 442481060,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T15:33:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449636523",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449639667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449639667"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~1. I don't think there's a way to start a bitcoind node with a mocktime. It can only be set by an RPC after the node has started.~\r\n2. Yes, I think this would work!\r\n\r\nEDIT. You were right, I was wrong. You can start bitcoind with a `-mocktime`: https://github.com/bitcoin/bitcoin/blob/3276c148c4cac7b7c9adbaab5997b26488612085/src/init.cpp#L527",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-03T15:43:03Z",
      "diff_hunk" : "@@ -7,36 +7,64 @@\n from decimal import Decimal\n \n from test_framework.messages import COIN\n+from test_framework.mininode import P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import assert_equal, connect_nodes\n \n MAX_FEE_FILTER = Decimal(9170997) / COIN\n NORMAL_FEE_FILTER = Decimal(100) / COIN\n+MAX_TIP_AGE = 24 * 60 * 60\n \n \n class P2PIBDTest(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False\n         self.num_nodes = 2\n         self.extra_args = [[\"-minrelaytxfee={}\".format(NORMAL_FEE_FILTER)]] * self.num_nodes\n \n     def run_test(self):\n-        self.log.info(\"Check that nodes set minfilter to MAX_MONEY while still in IBD\")\n-        for node in self.nodes:\n-            assert node.getblockchaininfo()['initialblockdownload']\n-            for conn_info in node.getpeerinfo():\n-                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+        # Generate some blocks so that node0 is funded\n+        self.nodes[0].generate(nblocks=101)\n+        self.sync_blocks(self.nodes)\n+\n+        # Force node1 into IBD by restarting and fast-forwarding time.\n+        # Fast-forwarding the time by > 24 hours causes node1 to consider its tip too old\n+        # See the tip age check in IsInitialBlockDownload().\n+        self.restart_node(1)\n+        tip_time = self.nodes[1].getblockheader(self.nodes[1].getbestblockhash())['time']\n+        self.nodes[1].setmocktime(tip_time + MAX_TIP_AGE + 1)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[1], 0)\n+\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and do not receive tx invs while still in IBD\")\n+        assert self.nodes[1].getblockchaininfo()['initialblockdownload']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449639667",
      "id" : 449639667,
      "in_reply_to_id" : 449327609,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzOTY2Nw==",
      "original_commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "original_line" : 40,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd_txrelay.py",
      "position" : 40,
      "pull_request_review_id" : 442484957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T15:44:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449639667",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449661020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449661020"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I'm worried that this might be intermittent. IsInitialBlockDownload is a latch.\r\n\r\nYes, I'm seeing the test fail at that line.\r\n\r\nGreat stuff, will check out your next push asap @gzhao408!\r\n\r\n",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-03T17:01:45Z",
      "diff_hunk" : "@@ -7,36 +7,64 @@\n from decimal import Decimal\n \n from test_framework.messages import COIN\n+from test_framework.mininode import P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import assert_equal, connect_nodes\n \n MAX_FEE_FILTER = Decimal(9170997) / COIN\n NORMAL_FEE_FILTER = Decimal(100) / COIN\n+MAX_TIP_AGE = 24 * 60 * 60\n \n \n class P2PIBDTest(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False\n         self.num_nodes = 2\n         self.extra_args = [[\"-minrelaytxfee={}\".format(NORMAL_FEE_FILTER)]] * self.num_nodes\n \n     def run_test(self):\n-        self.log.info(\"Check that nodes set minfilter to MAX_MONEY while still in IBD\")\n-        for node in self.nodes:\n-            assert node.getblockchaininfo()['initialblockdownload']\n-            for conn_info in node.getpeerinfo():\n-                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+        # Generate some blocks so that node0 is funded\n+        self.nodes[0].generate(nblocks=101)\n+        self.sync_blocks(self.nodes)\n+\n+        # Force node1 into IBD by restarting and fast-forwarding time.\n+        # Fast-forwarding the time by > 24 hours causes node1 to consider its tip too old\n+        # See the tip age check in IsInitialBlockDownload().\n+        self.restart_node(1)\n+        tip_time = self.nodes[1].getblockheader(self.nodes[1].getbestblockhash())['time']\n+        self.nodes[1].setmocktime(tip_time + MAX_TIP_AGE + 1)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[1], 0)\n+\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and do not receive tx invs while still in IBD\")\n+        assert self.nodes[1].getblockchaininfo()['initialblockdownload']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449661020",
      "id" : 449661020,
      "in_reply_to_id" : 449327609,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2MTAyMA==",
      "original_commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "original_line" : 40,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd_txrelay.py",
      "position" : 40,
      "pull_request_review_id" : 442510724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T17:01:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449661020",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449667159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449667159"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "~Oo hmmmmm these args are only used in `test_framework.add_nodes` to instantiate the `TestNode` objects, and then can't be changed afterward. So I can't actually restart the node with a new `-mocktime`.~ Just kidding, I'm just struggling to make it work for some reason ð ",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-03T17:31:35Z",
      "diff_hunk" : "@@ -7,36 +7,64 @@\n from decimal import Decimal\n \n from test_framework.messages import COIN\n+from test_framework.mininode import P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import assert_equal, connect_nodes\n \n MAX_FEE_FILTER = Decimal(9170997) / COIN\n NORMAL_FEE_FILTER = Decimal(100) / COIN\n+MAX_TIP_AGE = 24 * 60 * 60\n \n \n class P2PIBDTest(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False\n         self.num_nodes = 2\n         self.extra_args = [[\"-minrelaytxfee={}\".format(NORMAL_FEE_FILTER)]] * self.num_nodes\n \n     def run_test(self):\n-        self.log.info(\"Check that nodes set minfilter to MAX_MONEY while still in IBD\")\n-        for node in self.nodes:\n-            assert node.getblockchaininfo()['initialblockdownload']\n-            for conn_info in node.getpeerinfo():\n-                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+        # Generate some blocks so that node0 is funded\n+        self.nodes[0].generate(nblocks=101)\n+        self.sync_blocks(self.nodes)\n+\n+        # Force node1 into IBD by restarting and fast-forwarding time.\n+        # Fast-forwarding the time by > 24 hours causes node1 to consider its tip too old\n+        # See the tip age check in IsInitialBlockDownload().\n+        self.restart_node(1)\n+        tip_time = self.nodes[1].getblockheader(self.nodes[1].getbestblockhash())['time']\n+        self.nodes[1].setmocktime(tip_time + MAX_TIP_AGE + 1)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[1], 0)\n+\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and do not receive tx invs while still in IBD\")\n+        assert self.nodes[1].getblockchaininfo()['initialblockdownload']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449667159",
      "id" : 449667159,
      "in_reply_to_id" : 449327609,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2NzE1OQ==",
      "original_commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "original_line" : 40,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd_txrelay.py",
      "position" : 40,
      "pull_request_review_id" : 442518056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T17:47:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449667159",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449667698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449667698"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure ð¤ ",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-03T17:34:45Z",
      "diff_hunk" : "@@ -7,36 +7,64 @@\n from decimal import Decimal\n \n from test_framework.messages import COIN\n+from test_framework.mininode import P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import assert_equal, connect_nodes\n \n MAX_FEE_FILTER = Decimal(9170997) / COIN\n NORMAL_FEE_FILTER = Decimal(100) / COIN\n+MAX_TIP_AGE = 24 * 60 * 60\n \n \n class P2PIBDTest(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False\n         self.num_nodes = 2\n         self.extra_args = [[\"-minrelaytxfee={}\".format(NORMAL_FEE_FILTER)]] * self.num_nodes\n \n     def run_test(self):\n-        self.log.info(\"Check that nodes set minfilter to MAX_MONEY while still in IBD\")\n-        for node in self.nodes:\n-            assert node.getblockchaininfo()['initialblockdownload']\n-            for conn_info in node.getpeerinfo():\n-                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+        # Generate some blocks so that node0 is funded\n+        self.nodes[0].generate(nblocks=101)\n+        self.sync_blocks(self.nodes)\n+\n+        # Force node1 into IBD by restarting and fast-forwarding time.\n+        # Fast-forwarding the time by > 24 hours causes node1 to consider its tip too old\n+        # See the tip age check in IsInitialBlockDownload().\n+        self.restart_node(1)\n+        tip_time = self.nodes[1].getblockheader(self.nodes[1].getbestblockhash())['time']\n+        self.nodes[1].setmocktime(tip_time + MAX_TIP_AGE + 1)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[1], 0)\n+\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and do not receive tx invs while still in IBD\")\n+        assert self.nodes[1].getblockchaininfo()['initialblockdownload']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449667698",
      "id" : 449667698,
      "in_reply_to_id" : 449327609,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2NzY5OA==",
      "original_commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "original_line" : 40,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd_txrelay.py",
      "position" : 40,
      "pull_request_review_id" : 442518749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T17:34:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449667698",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449669525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449669525"
         }
      },
      "author_association" : "MEMBER",
      "body" : "extra_args can be overwritten for start_node(s)",
      "commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "created_at" : "2020-07-03T17:44:11Z",
      "diff_hunk" : "@@ -7,36 +7,64 @@\n from decimal import Decimal\n \n from test_framework.messages import COIN\n+from test_framework.mininode import P2PTxInvStore\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import assert_equal, connect_nodes\n \n MAX_FEE_FILTER = Decimal(9170997) / COIN\n NORMAL_FEE_FILTER = Decimal(100) / COIN\n+MAX_TIP_AGE = 24 * 60 * 60\n \n \n class P2PIBDTest(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False\n         self.num_nodes = 2\n         self.extra_args = [[\"-minrelaytxfee={}\".format(NORMAL_FEE_FILTER)]] * self.num_nodes\n \n     def run_test(self):\n-        self.log.info(\"Check that nodes set minfilter to MAX_MONEY while still in IBD\")\n-        for node in self.nodes:\n-            assert node.getblockchaininfo()['initialblockdownload']\n-            for conn_info in node.getpeerinfo():\n-                assert_equal(conn_info['minfeefilter'], MAX_FEE_FILTER)\n+        # Generate some blocks so that node0 is funded\n+        self.nodes[0].generate(nblocks=101)\n+        self.sync_blocks(self.nodes)\n+\n+        # Force node1 into IBD by restarting and fast-forwarding time.\n+        # Fast-forwarding the time by > 24 hours causes node1 to consider its tip too old\n+        # See the tip age check in IsInitialBlockDownload().\n+        self.restart_node(1)\n+        tip_time = self.nodes[1].getblockheader(self.nodes[1].getbestblockhash())['time']\n+        self.nodes[1].setmocktime(tip_time + MAX_TIP_AGE + 1)\n+        connect_nodes(self.nodes[0], 1)\n+        connect_nodes(self.nodes[1], 0)\n+\n+        self.log.info(\"Check that nodes set minfilter to MAX_MONEY and do not receive tx invs while still in IBD\")\n+        assert self.nodes[1].getblockchaininfo()['initialblockdownload']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#discussion_r449669525",
      "id" : 449669525,
      "in_reply_to_id" : 449327609,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2OTUyNQ==",
      "original_commit_id" : "7bc653e7e3d21c675c6a1257f658222b97e166cb",
      "original_line" : 40,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_ibd_txrelay.py",
      "position" : 40,
      "pull_request_review_id" : 442520871,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19423",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-03T17:44:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449669525",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Soooo I just had an excellent adventure through the mock time stuff... I can't get `-mocktime` to work (see [this test](https://github.com/gzhao408/bitcoin/blob/init-mocktime/test/functional/interface_mocktime.py) which passes for `setmocktime` but not `-mocktime`) so I implemented this by fastforwarding one node by 2 days so it thinks it's still in IBD even when receiving blocks (all > 1 day old). Then we don't need to restart the node.\r\n",
      "created_at" : "2020-07-03T20:50:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-653674443",
      "id" : 653674443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MzY3NDQ0Mw==",
      "updated_at" : "2020-07-03T20:50:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653674443",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, just read the code and looks good to me.",
      "created_at" : "2020-07-07T11:09:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-654779502",
      "id" : 654779502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NDc3OTUwMg==",
      "updated_at" : "2020-07-07T11:09:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/654779502",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThanks for improving our testing!",
      "created_at" : "2020-07-10T21:03:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-656889456",
      "id" : 656889456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1Njg4OTQ1Ng==",
      "updated_at" : "2020-07-10T21:03:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656889456",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The test fails on the second commit. I am happy to merge the first commit, though, and we can leave the second commit for a later pull?",
      "created_at" : "2020-07-11T10:21:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-657035479",
      "id" : 657035479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzAzNTQ3OQ==",
      "updated_at" : "2020-07-11T10:21:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657035479",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke thanks! Would you happen to have a log for the test fail? (Also it seems like a travis job timed out but otherwise green). I can definitely separate the second commit, but currently it's working for me so I'm not sure how to fix it ð ",
      "created_at" : "2020-07-11T18:38:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-657109356",
      "id" : 657109356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzEwOTM1Ng==",
      "updated_at" : "2020-07-11T18:38:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657109356",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@gzhao408 here's the link (you can click through to it on the :x: ) https://travis-ci.org/github/bitcoin/bitcoin/jobs/704781135. I restarted the job a few days ago to see if it would re-fail.",
      "created_at" : "2020-07-11T18:44:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-657110115",
      "id" : 657110115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzExMDExNQ==",
      "updated_at" : "2020-07-11T18:44:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657110115",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(Do you have travis linked to your personal fork of the bitcoin repo? You can restart failing jobs there.)",
      "created_at" : "2020-07-11T18:47:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-657110591",
      "id" : 657110591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzExMDU5MQ==",
      "updated_at" : "2020-07-11T18:47:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657110591",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry for the delay ð   ready for review again.\r\n\r\nPushed it back to the first commit and fixed the error - this tests the fee filter during and after IBD, no txrelay. I'll work on txrelay and will make it a followup. ",
      "created_at" : "2020-07-16T00:16:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-659081116",
      "id" : 659081116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1OTA4MTExNg==",
      "updated_at" : "2020-07-16T00:16:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659081116",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK cb31ee01b42af58c64b5d3c0eabae4bcd7fd67cf",
      "created_at" : "2020-07-16T14:31:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19423#issuecomment-659451211",
      "id" : 659451211,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19423",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1OTQ1MTIxMQ==",
      "updated_at" : "2020-07-16T14:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659451211",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
