[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20125 (rpc, wallet: Expose database format in getwalletinfo by promag)\n* #19933 (wallet: bugfix; if datadir has a trailing '/'  listwalletdir would strip lead char of walletname by Saibato)\n* #19502 (Bugfix: Wallet: Soft-fail exceptions within ListWalletDir file checks by luke-jr)\n* #19077 (wallet: Add sqlite as an alternative wallet database and use it for new descriptor wallets by achow101)\n* #18095 (Fix crashes and infinite loop in ListWalletDir() by uhliksk)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-30T13:00:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-651774831",
      "id" : 651774831,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MTc3NDgzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-14T23:10:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651774831",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No strong opinion regarding excluding some paths. Current patch needs to be updated (format) and maybe change implementation to use a list of ignore/exclude paths.\r\n\r\nThis can improve GUI by reducing freezes but it's not the right fix for that. When `ListWalletDir` is triggered from the GUI, it should be called on a background thread. Alternatively we could consider caching `ListWalletDir` result and invalidate it when wallets are created or loaded.",
      "created_at" : "2020-07-01T09:40:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-652311748",
      "id" : 652311748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjMxMTc0OA==",
      "updated_at" : "2020-07-01T09:40:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652311748",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> No strong opinion regarding excluding some paths. Current patch needs to be updated (format) and maybe change implementation to use a list of ignore/exclude paths.\r\n> \r\n> This can improve GUI by reducing freezes but it's not the right fix for that. When `ListWalletDir` is triggered from the GUI, it should be called on a background thread. Alternatively we could consider caching `ListWalletDir` result and invalidate it when wallets are created or loaded.\r\n\r\nyup, ugly quick fix and background thread seams reasonable.. but fix proves the point and lets be honest why should we waste time and risk locks, when traverse trough known node dir?.. .  also other GUI freezes should be tackled.\r\nBefore moon scale there is a long list of things in my backlog, that need to be fixed before bam..\r\n.\r\nThere might be soon real users who use the gui,  and lets be real, gui is bitcoin for them.\r\n\r\n",
      "created_at" : "2020-07-01T12:22:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-652386136",
      "id" : 652386136,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjM4NjEzNg==",
      "updated_at" : "2020-07-01T12:22:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652386136",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r448630671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448630671"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Instead of multiple variables, you can declare something like `const std::vector ignore_paths{ GetBlocksDir(), sub_path / \"testnet3\", ... }` and then compare against this.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-01T21:40:32Z",
      "diff_hunk" : "@@ -60,33 +60,69 @@ std::vector<fs::path> ListWalletDir()\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n+    fs::path sub_path = GetDataDir();\n+\n+    bool we_have_wallets_dir = (wallet_dir != sub_path);\n+    const fs::path fblocks = GetBlocksDir();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r448630671",
      "id" : 448630671,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzMDY3MQ==",
      "original_commit_id" : "3d69e4ccaeae53a8a14f05b062448f4898734dbe",
      "original_line" : 66,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 441214538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448630671",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r448701432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448701432"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yup  :+1:  , btw strange how long those bare strings survived refactor, still no global #define BLOCKS_DIR or TESTNET_STR etc.     ",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-02T01:39:34Z",
      "diff_hunk" : "@@ -60,33 +60,69 @@ std::vector<fs::path> ListWalletDir()\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n+    fs::path sub_path = GetDataDir();\n+\n+    bool we_have_wallets_dir = (wallet_dir != sub_path);\n+    const fs::path fblocks = GetBlocksDir();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r448701432",
      "id" : 448701432,
      "in_reply_to_id" : 448630671,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwMTQzMg==",
      "original_commit_id" : "3d69e4ccaeae53a8a14f05b062448f4898734dbe",
      "original_line" : 66,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 441294967,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/448701432",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r452407475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452407475"
         }
      },
      "author_association" : "MEMBER",
      "body" : "better to define `skip_path` here\r\n\r\nNote to other reviewers, the enum file_type: https://www.boost.org/doc/libs/1_66_0/libs/filesystem/doc/reference.html#Enum-file_type",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-09T18:23:12Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r452407475",
      "id" : 452407475,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNzQ3NQ==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 85,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 445863101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452407475",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r452409592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452409592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "could use `break;` so you don't need to check `!skip_path &&` (and in fact, don't need it at all)\r\n\r\nYou can also do `it.disable_recursion_pending();` here",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-09T18:26:58Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;\n+            for(const auto& fpath: ignore_paths) {\n+                if (!skip_path && it->path().string().find(fpath.string()) == 0) {\n+                    skip_path = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r452409592",
      "id" : 452409592,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwOTU5Mg==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 88,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 445863101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452409592",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r452410603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452410603"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: just use brackets and newline\r\n\r\nAlso, I think we should follow symlinks? `symlink_file`",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-09T18:28:53Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;\n+            for(const auto& fpath: ignore_paths) {\n+                if (!skip_path && it->path().string().find(fpath.string()) == 0) {\n+                    skip_path = true;\n+                }\n+            }\n+            if (skip_path) {\n+                it.disable_recursion_pending();\n+                continue;\n+            }\n+        } else it.disable_recursion_pending();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r452410603",
      "id" : 452410603,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQxMDYwMw==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 95,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 445863101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/452410603",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453349974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453349974"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Following symlinks could create an infinite loop.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-12T18:45:54Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;\n+            for(const auto& fpath: ignore_paths) {\n+                if (!skip_path && it->path().string().find(fpath.string()) == 0) {\n+                    skip_path = true;\n+                }\n+            }\n+            if (skip_path) {\n+                it.disable_recursion_pending();\n+                continue;\n+            }\n+        } else it.disable_recursion_pending();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453349974",
      "id" : 453349974,
      "in_reply_to_id" : 452410603,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM0OTk3NA==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 95,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 446901219,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453349974",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453350233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453350233"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since we're using exact paths in `ignore_paths`, can't we use an exact match? (And then `ignore_paths` can become an `unordered_set` and just use `.count` here...)",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-12T18:48:46Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;\n+            for(const auto& fpath: ignore_paths) {\n+                if (!skip_path && it->path().string().find(fpath.string()) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453350233",
      "id" : 453350233,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDIzMw==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 87,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 446901377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453350233",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453350304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453350304"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggest alphabetising.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-12T18:49:33Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453350304",
      "id" : 453350304,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDMwNA==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 75,
      "original_position" : 19,
      "original_start_line" : 71,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 446901377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453350304",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453350602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453350602"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider adding \"blktree\" and \"coins\" (see `files.md`)",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-12T18:52:31Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453350602",
      "id" : 453350602,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDYwMg==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 75,
      "original_position" : 19,
      "original_start_line" : 71,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 446901377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453350602",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453350994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453350994"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Or hopefully `std::filesystem::path::lexically_relative` (C++17) :)",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-12T18:56:20Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;\n+            for(const auto& fpath: ignore_paths) {\n+                if (!skip_path && it->path().string().find(fpath.string()) == 0) {\n+                    skip_path = true;\n+                }\n+            }\n+            if (skip_path) {\n+                it.disable_recursion_pending();\n+                continue;\n+            }\n+        } else it.disable_recursion_pending();\n \n         if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n             // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n+            // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+            // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453350994",
      "id" : 453350994,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MDk5NA==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 100,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 446901377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453350994",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453351273"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453351273"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            if (ignore_paths.count(it->path()) {\r\n                it.disable_recursion_pending();\r\n                continue;\r\n            }\r\n```",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-12T18:59:17Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;\n+            for(const auto& fpath: ignore_paths) {\n+                if (!skip_path && it->path().string().find(fpath.string()) == 0) {\n+                    skip_path = true;\n+                }\n+            }\n+            if (skip_path) {\n+                it.disable_recursion_pending();\n+                continue;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453351273",
      "id" : 453351273,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MTI3Mw==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 94,
      "original_position" : 42,
      "original_start_line" : 85,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 446901377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453351273",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453531725"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453531725"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> (and in fact, don't need it at all)\r\n\r\nhmm... If we allow wallets in those dir yes, but i would choose to touch the dir's not at all, \r\nPlease view fixup I will post before i squash.\r\nI guess we will need the skip  But sure about that we need some vote. :+1:    ",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-13T09:51:46Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;\n+            for(const auto& fpath: ignore_paths) {\n+                if (!skip_path && it->path().string().find(fpath.string()) == 0) {\n+                    skip_path = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453531725",
      "id" : 453531725,
      "in_reply_to_id" : 452409592,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzMTcyNQ==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 88,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 447101681,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453531725",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453656346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453656346"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : ":+1: Though I choose  \r\n`if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {`\r\nnot sure ignore_paths has a count?",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-13T13:39:30Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;\n+            for(const auto& fpath: ignore_paths) {\n+                if (!skip_path && it->path().string().find(fpath.string()) == 0) {\n+                    skip_path = true;\n+                }\n+            }\n+            if (skip_path) {\n+                it.disable_recursion_pending();\n+                continue;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453656346",
      "id" : 453656346,
      "in_reply_to_id" : 453351273,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY1NjM0Ng==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 94,
      "original_position" : 42,
      "original_start_line" : 85,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 447259253,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453656346",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453756689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453756689"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe also the default blocks dir too",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-13T15:58:45Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453756689",
      "id" : 453756689,
      "in_reply_to_id" : 453350602,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1NjY4OQ==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 75,
      "original_position" : 19,
      "original_start_line" : 71,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 447386215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453756689",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453757173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453757173"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It will once changed to an `unordered_set` as suggested",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-13T15:59:30Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n-\n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        // We dont want to iterate trough those special node dirs\n+        if (it->status().type() == fs::directory_file) {\n+            skip_path = false;\n+            for(const auto& fpath: ignore_paths) {\n+                if (!skip_path && it->path().string().find(fpath.string()) == 0) {\n+                    skip_path = true;\n+                }\n+            }\n+            if (skip_path) {\n+                it.disable_recursion_pending();\n+                continue;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453757173",
      "id" : 453757173,
      "in_reply_to_id" : 453351273,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1NzE3Mw==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 94,
      "original_position" : 42,
      "original_start_line" : 85,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 447386838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453757173",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453777359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453777359"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "    const std::vector<fs::path> ignore_paths = {\r\n                                        blocks_dir,\r\n                                        data_dir / \"blktree\",",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-07-13T16:31:04Z",
      "diff_hunk" : "@@ -57,23 +57,48 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    bool skip_path;\n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"testnet3\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r453777359",
      "id" : 453777359,
      "in_reply_to_id" : 453350602,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NzM1OQ==",
      "original_commit_id" : "4aa7bc58d4d615069774997dd68f2b6925165fbf",
      "original_line" : 75,
      "original_position" : 19,
      "original_start_line" : 71,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 447412381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453777359",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, looks good to me",
      "created_at" : "2020-08-13T21:47:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-673726585",
      "id" : 673726585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzcyNjU4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T21:47:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673726585",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, please squash your commits.",
      "created_at" : "2020-08-14T16:41:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-674161697",
      "id" : 674161697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDE2MTY5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T16:41:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674161697",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "squashed and rebased https://github.com/bitcoin/bitcoin/pull/19419/commits/caa418440dd5e996c730def08e807ddb5d504a44",
      "created_at" : "2020-08-15T12:37:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-674391599",
      "id" : 674391599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDM5MTU5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-15T12:37:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674391599",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r471897714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471897714"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`disable_recursion_pending` is a new name introduced in Boost 1.72. We support much older. Renaming this to `no_push` (the old name) should just work.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-08-18T03:50:59Z",
      "diff_hunk" : "@@ -57,35 +57,59 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directory's are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We dont want to iterate trough those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {\n+            it.disable_recursion_pending();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r471897714",
      "id" : 471897714,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg5NzcxNA==",
      "original_commit_id" : "caa418440dd5e996c730def08e807ddb5d504a44",
      "original_line" : 88,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 468972448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471897714",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r474580767"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474580767"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How about?\r\n\r\nSuggestion:\r\n\r\n``` Diff\r\ndiff --git a/src/fs.h b/src/fs.h\r\nindex dfbecc18e..390c38790 100644\r\n--- a/src/fs.h\r\n+++ b/src/fs.h\r\n@@ -17,6 +17,10 @@\r\n /** Filesystem operations and types */\r\n namespace fs = boost::filesystem;\r\n \r\n+#ifndef NAMESPACE_BOOST\r\n+#define NAMESPACE_BOOST\r\n+#endif\r\n+\r\n /** Bridge operations to C stdio */\r\n namespace fsbridge {\r\n     FILE *fopen(const fs::path& p, const char *mode);\r\ndiff --git a/src/wallet/walletutil.cpp b/src/wallet/walletutil.cpp\r\nindex a1387111e..806818a36 100644\r\n--- a/src/wallet/walletutil.cpp\r\n+++ b/src/wallet/walletutil.cpp\r\n@@ -85,7 +85,13 @@ std::vector<fs::path> ListWalletDir()\r\n \r\n         // We dont want to iterate trough those special node dirs\r\n         if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {\r\n-            it.disable_recursion_pending();\r\n+            #ifdef NAMESPACE_BOOST\r\n+            // BOOST iterator\r\n+                    it.no_push();\r\n+            #else\r\n+            // We have >= c++17\r\n+                    it.disable_recursion_pending();\r\n+            #endif\r\n             continue;\r\n         }\r\n \r\n```",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-08-21T09:35:26Z",
      "diff_hunk" : "@@ -57,35 +57,59 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directory's are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We dont want to iterate trough those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {\n+            it.disable_recursion_pending();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r474580767",
      "id" : 474580767,
      "in_reply_to_id" : 471897714,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU4MDc2Nw==",
      "original_commit_id" : "caa418440dd5e996c730def08e807ddb5d504a44",
      "original_line" : 88,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 472347517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474580767",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-10-04T11:35:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-703242278",
      "id" : 703242278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMzI0MjI3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-04T11:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703242278",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r499245395"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499245395"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please add \"signet\".",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-04T13:13:10Z",
      "diff_hunk" : "@@ -57,35 +57,59 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directory's are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"testnet3\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r499245395",
      "id" : 499245395,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NTM5NQ==",
      "original_commit_id" : "caa418440dd5e996c730def08e807ddb5d504a44",
      "original_line" : 78,
      "original_position" : 21,
      "original_start_line" : 76,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 501622460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499245395",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r499248059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499248059"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit:\r\n```suggestion\r\n    // Those directories are referenced in doc/files.md\r\n```",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-04T13:40:06Z",
      "diff_hunk" : "@@ -57,35 +57,59 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directory's are referenced in doc/files.md",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r499248059",
      "id" : 499248059,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0ODA1OQ==",
      "original_commit_id" : "caa418440dd5e996c730def08e807ddb5d504a44",
      "original_line" : 68,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 501624707,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499248059",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r499248311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499248311"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit:\r\n```suggestion\r\n        // We don't want to iterate through those special node dirs\r\n```",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-04T13:42:04Z",
      "diff_hunk" : "@@ -57,35 +57,59 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directory's are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We dont want to iterate trough those special node dirs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r499248311",
      "id" : 499248311,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0ODMxMQ==",
      "original_commit_id" : "caa418440dd5e996c730def08e807ddb5d504a44",
      "original_line" : 86,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : null,
      "pull_request_review_id" : 501624862,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499248311",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r499250262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499250262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I personally prefer \"throwing\" versions of the Boost.Filesystem API. But I don't think that combining \"throwing\" and \"non-throwing\" versions of the Boost.Filesystem API in the same function is a good design.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-04T14:04:21Z",
      "diff_hunk" : "@@ -57,35 +57,59 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directory's are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We dont want to iterate trough those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {\n+            it.disable_recursion_pending();\n+            continue;\n+        }\n+\n+        try {\n+            if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n+                // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+                // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+                // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+                paths.emplace_back(it->path().string().substr(offset));\n+            } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n+                if (it->path().filename() == \"wallet.dat\") {\n+                    // Found top-level wallet.dat btree file, add top level directory \"\"\n+                    // as a wallet.\n+                    paths.emplace_back();\n+                } else {\n+                    // Found top-level btree file not called wallet.dat. Current bitcoin\n+                    // software will never create these files but will allow them to be\n+                    // opened in a shared database environment for backwards compatibility.\n+                    // Add it to the list of available wallets.\n+                    paths.emplace_back(it->path().filename());\n+                }\n             }\n+        } catch (const std::exception& e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r499250262",
      "id" : 499250262,
      "line" : 112,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MDI2Mg==",
      "original_commit_id" : "caa418440dd5e996c730def08e807ddb5d504a44",
      "original_line" : 112,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : 74,
      "pull_request_review_id" : 501626615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499250262",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r501628611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/501628611"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "with catch boost::exception\r\nand  dynamic_cast<std.exception i run with a recursive path in an non catched     \r\n EXCEPTION: N5boost10filesystem16filesystem_errorE\r\nso unless u have a hint, i leave it that way, for now?",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-08T10:54:23Z",
      "diff_hunk" : "@@ -57,35 +57,59 @@ static bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directory's are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We dont want to iterate trough those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {\n+            it.disable_recursion_pending();\n+            continue;\n+        }\n+\n+        try {\n+            if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n+                // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+                // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+                // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+                paths.emplace_back(it->path().string().substr(offset));\n+            } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n+                if (it->path().filename() == \"wallet.dat\") {\n+                    // Found top-level wallet.dat btree file, add top level directory \"\"\n+                    // as a wallet.\n+                    paths.emplace_back();\n+                } else {\n+                    // Found top-level btree file not called wallet.dat. Current bitcoin\n+                    // software will never create these files but will allow them to be\n+                    // opened in a shared database environment for backwards compatibility.\n+                    // Add it to the list of available wallets.\n+                    paths.emplace_back(it->path().filename());\n+                }\n             }\n+        } catch (const std::exception& e) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r501628611",
      "id" : 501628611,
      "in_reply_to_id" : 499250262,
      "line" : 112,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyODYxMQ==",
      "original_commit_id" : "caa418440dd5e996c730def08e807ddb5d504a44",
      "original_line" : 112,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : 74,
      "pull_request_review_id" : 504660397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/501628611",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased https://github.com/bitcoin/bitcoin/pull/19419/commits/da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b and addressed reviews.",
      "created_at" : "2020-10-08T10:59:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-705494228",
      "id" : 705494228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNTQ5NDIyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-08T10:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/705494228",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r502858992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502858992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: [std::find](https://en.cppreference.com/w/cpp/algorithm/find) could return earlier.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-11T03:15:03Z",
      "diff_hunk" : "@@ -57,35 +57,60 @@ bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directories are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"signet\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We don't want to iterate through those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r502858992",
      "id" : 502858992,
      "line" : 88,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg1ODk5Mg==",
      "original_commit_id" : "da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
      "original_line" : 88,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : 50,
      "pull_request_review_id" : 506140121,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502858992",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r502908139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502908139"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yup. no insist here from my side, but nit too if \"not\"  *const time* could that sidechannel reveal where the wallet is or else?\r\n\r\nBtw> since u review here and in  #18095, 18095 does fix some problems, but not the wallet of death, could we transfer attention of reviewers to this here and fix some bugs fast in one sweep, before adding there new ones?\r\nI must admit my PR headlines look often a bit harmless and just like minor nits, but when I way in and insist, the hut is burning. just saying .",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-11T12:18:42Z",
      "diff_hunk" : "@@ -57,35 +57,60 @@ bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directories are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"signet\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We don't want to iterate through those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r502908139",
      "id" : 502908139,
      "in_reply_to_id" : 502858992,
      "line" : 88,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkwODEzOQ==",
      "original_commit_id" : "da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
      "original_line" : 88,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : 50,
      "pull_request_review_id" : 506173906,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502908139",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r502916870"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502916870"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that `std::count` _guaranties_ const time to prevent sidechannel reveal where the wallet is or else. But I'm not an expert in this field. Feel free to mark this comment as resolved.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-11T13:38:03Z",
      "diff_hunk" : "@@ -57,35 +57,60 @@ bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directories are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"signet\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We don't want to iterate through those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r502916870",
      "id" : 502916870,
      "in_reply_to_id" : 502858992,
      "line" : 88,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkxNjg3MA==",
      "original_commit_id" : "da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
      "original_line" : 88,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : 50,
      "pull_request_review_id" : 506180333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502916870",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r502922249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502922249"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, then i resolve this here and fix the header. thx for review.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-11T14:24:36Z",
      "diff_hunk" : "@@ -57,35 +57,60 @@ bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directories are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"signet\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We don't want to iterate through those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r502922249",
      "id" : 502922249,
      "in_reply_to_id" : 502858992,
      "line" : 88,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkyMjI0OQ==",
      "original_commit_id" : "da6eb3c2f8ed5c8e2a5acb878a1abcb9d6f1c02b",
      "original_line" : 88,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : 50,
      "pull_request_review_id" : 506184352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-12T12:04:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502922249",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Add `#include <algorithm>` to header.\r\n\r\nTyi @hebasto while dev this i encountered and ugly wallet and filesystem edge case. that is only partly fixed by #18095 but with fewer changes and final here and in #19502 u might reach out to @luke-jr or @laanwj for more info.",
      "created_at" : "2020-10-12T12:20:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-707086449",
      "id" : 707086449,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNzA4NjQ0OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-12T12:20:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707086449",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r504202796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504202796"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why did you change this?",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-13T19:27:06Z",
      "diff_hunk" : "@@ -57,35 +57,60 @@ bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directories are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"signet\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We don't want to iterate through those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {\n+            it.no_push();\n+            continue;\n+        }\n+\n+        try {\n+            if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n+                // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+                // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+                // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+                paths.emplace_back(it->path().string().substr(offset));\n+            } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n+                if (it->path().filename() == \"wallet.dat\") {\n+                    // Found top-level wallet.dat btree file, add top level directory \"\"\n+                    // as a wallet.\n+                    paths.emplace_back();\n+                } else {\n+                    // Found top-level btree file not called wallet.dat. Current bitcoin\n+                    // software will never create these files but will allow them to be\n+                    // opened in a shared database environment for backwards compatibility.\n+                    // Add it to the list of available wallets.\n+                    paths.emplace_back(it->path().filename());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r504202796",
      "id" : 504202796,
      "line" : 109,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwMjc5Ng==",
      "original_commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "original_line" : 109,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : 71,
      "pull_request_review_id" : 507760128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-13T19:27:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504202796",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r504205727"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504205727"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why did you add this here? If it's needed in the .cpp file, put it there...",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-13T19:32:42Z",
      "diff_hunk" : "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_WALLET_WALLETUTIL_H\n #define BITCOIN_WALLET_WALLETUTIL_H\n \n+#include <algorithm>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r504205727",
      "id" : 504205727,
      "line" : 8,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwNTcyNw==",
      "original_commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "original_line" : 8,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 4,
      "pull_request_review_id" : 507763897,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-13T19:32:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504205727",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please make these changes:\r\n\r\n* https://github.com/bitcoin/bitcoin/commit/5a8f19eb331acbb1f7e2f52fe786ed21b30297b6\r\n* https://github.com/bitcoin/bitcoin/commit/4fb4fb716cd222ca8ae988d039328a66eb6e1f3b",
      "created_at" : "2020-10-13T19:45:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-707967843",
      "id" : 707967843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNzk2Nzg0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-13T19:45:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707967843",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-10-15T11:09:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-709204374",
      "id" : 709204374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwOTIwNDM3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-15T11:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709204374",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Marking this as up for grabs. The concept to not iterate needlessly into directories that *should* not contain wallets definitely makes sense, but I think this makes unnecessary changes that are not well motivated.",
      "created_at" : "2020-10-16T04:57:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-709776468",
      "id" : 709776468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwOTc3NjQ2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-16T04:57:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709776468",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r506977511"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506977511"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "its not changed just the correct indent.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-17T19:48:05Z",
      "diff_hunk" : "@@ -57,35 +57,60 @@ bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directories are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"signet\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We don't want to iterate through those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {\n+            it.no_push();\n+            continue;\n+        }\n+\n+        try {\n+            if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n+                // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+                // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+                // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+                paths.emplace_back(it->path().string().substr(offset));\n+            } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n+                if (it->path().filename() == \"wallet.dat\") {\n+                    // Found top-level wallet.dat btree file, add top level directory \"\"\n+                    // as a wallet.\n+                    paths.emplace_back();\n+                } else {\n+                    // Found top-level btree file not called wallet.dat. Current bitcoin\n+                    // software will never create these files but will allow them to be\n+                    // opened in a shared database environment for backwards compatibility.\n+                    // Add it to the list of available wallets.\n+                    paths.emplace_back(it->path().filename());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r506977511",
      "id" : 506977511,
      "in_reply_to_id" : 504202796,
      "line" : 109,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk3NzUxMQ==",
      "original_commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "original_line" : 109,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : 71,
      "pull_request_review_id" : 511010869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-17T19:48:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506977511",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r506982984"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506982984"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : ";was keen to see some compiler warnings, i though that was the hint from @hebasto  to add `<algorithm>` addressed and changed back to .cpp that other bug we can fix later.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-17T20:53:10Z",
      "diff_hunk" : "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_WALLET_WALLETUTIL_H\n #define BITCOIN_WALLET_WALLETUTIL_H\n \n+#include <algorithm>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r506982984",
      "id" : 506982984,
      "in_reply_to_id" : 504205727,
      "line" : 8,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4Mjk4NA==",
      "original_commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "original_line" : 8,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 4,
      "pull_request_review_id" : 511014520,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-17T20:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506982984",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased and addressed https://github.com/bitcoin/bitcoin/commit/5a8f19eb331acbb1f7e2f52fe786ed21b30297b6  https://github.com/bitcoin/bitcoin/commit/4fb4fb716cd222ca8ae988d039328a66eb6e1f3b an comments, changed by this a lot so pls review again  \r\n\r\n@luke-jr could not use ur code by merge and lost by fixup  ur commit entrys, i hope u don;t mind.\r\n\r\nhttps://github.com/Saibato/bitcoin/tree/wallet_351\r\n\r\nSince this is closed here the rebase and changes are just in my tree, since github does not update closed pr  tyi",
      "created_at" : "2020-10-17T20:58:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-711079643",
      "id" : 711079643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMTA3OTY0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-17T21:05:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/711079643",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r506990674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506990674"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If u mean the whole logic itself, its because there where an other wallet access issue not mentioned here fixed also, could be no longer valid since we had some grave changes in master, i have to check, but since the PR its closed yet, it makes sense to let all as is and open two new and or wait until its reopened and then help out with the review.",
      "commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "created_at" : "2020-10-17T22:30:16Z",
      "diff_hunk" : "@@ -57,35 +57,60 @@ bool IsBerkeleyBtree(const fs::path& path)\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n+    const fs::path data_dir = GetDataDir();\n+    const fs::path blocks_dir = GetBlocksDir();\n+\n     const size_t offset = wallet_dir.string().size() + 1;\n     std::vector<fs::path> paths;\n     boost::system::error_code ec;\n \n+    // Here we place the top level dirs we want to skip in case walletdir is datadir or blocksdir\n+    // Those directories are referenced in doc/files.md\n+    const std::vector<fs::path> ignore_paths = {\n+                                        blocks_dir,\n+                                        data_dir / \"blktree\",\n+                                        data_dir / \"chainstate\",\n+                                        data_dir / \"coins\",\n+                                        data_dir / \"database\",\n+                                        data_dir / \"indexes\",\n+                                        data_dir / \"regtest\",\n+                                        data_dir / \"signet\",\n+                                        data_dir / \"testnet3\"\n+                                        };\n+\n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n-\n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n-                paths.emplace_back(path);\n+        // We don't want to iterate through those special node dirs\n+        if (std::count(ignore_paths.begin(), ignore_paths.end(), it->path())) {\n+            it.no_push();\n+            continue;\n+        }\n+\n+        try {\n+            if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n+                // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+                // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+                // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+                paths.emplace_back(it->path().string().substr(offset));\n+            } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n+                if (it->path().filename() == \"wallet.dat\") {\n+                    // Found top-level wallet.dat btree file, add top level directory \"\"\n+                    // as a wallet.\n+                    paths.emplace_back();\n+                } else {\n+                    // Found top-level btree file not called wallet.dat. Current bitcoin\n+                    // software will never create these files but will allow them to be\n+                    // opened in a shared database environment for backwards compatibility.\n+                    // Add it to the list of available wallets.\n+                    paths.emplace_back(it->path().filename());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#discussion_r506990674",
      "id" : 506990674,
      "in_reply_to_id" : 504202796,
      "line" : 109,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk5MDY3NA==",
      "original_commit_id" : "3f9cc0cd736e79c563dee3573f0dab01dac10622",
      "original_line" : 109,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.cpp",
      "position" : 71,
      "pull_request_review_id" : 511019217,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19419",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-17T22:30:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506990674",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> to find wallets, that consumes time and could cause an unresponsive node.\r\n\r\n@laanwj \"... cause an unresponsive node\" in commit message was a hint, this PR is not about to fix something and must not be merged anyway but to point to some lines of code and its implications to gave others a chance to have a look in this and guess by themselfs.\r\nSo my question is now, will have we have a fix and sure its not done if we just skip the boost traversing?\r\n\r\nin #19502 and #18095 we see some progress, but will that be enough and why have I to write this even, if it is to u so obvious?",
      "created_at" : "2020-10-25T10:08:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-716122348",
      "id" : 716122348,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjEyMjM0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-25T10:08:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716122348",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Saibato GitHub won't let *anyone* reopen this since your branch changed. Can you `git push ??? 3f9cc0cd736e79c563dee3573f0dab01dac10622:wallet_351 -f` temporarily (you can re-push your new version after it's reopened; put your repo name in place of `???` of course).\r\n\r\nDon't forget to rebase!\r\n\r\nAlso: You need to include &lt;set> instead of &lt;algorithm> ;)",
      "created_at" : "2020-11-13T14:23:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-726792052",
      "id" : 726792052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNjc5MjA1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-13T14:23:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726792052",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Here's a rebase for later: https://github.com/bitcoin/bitcoin/compare/master...luke-jr:listwalletdir_skip_data",
      "created_at" : "2020-11-13T14:28:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-726795144",
      "id" : 726795144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyNjc5NTE0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-13T14:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726795144",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@luke-jr tyi was the last week just counting my **sats** and had not  looked in this, thx. for the reopen hint.\r\nbtw look now why some wallets are missing when using the 0.21 rc1 tag, maybe that was the reason i changed also the scan for wallets logic here , but just forgot to mention that sggh... ",
      "created_at" : "2020-11-27T09:11:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19419#issuecomment-734729710",
      "id" : 734729710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19419",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDcyOTcxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T09:11:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734729710",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/34917548?v=4",
         "events_url" : "https://api.github.com/users/Saibato/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Saibato/followers",
         "following_url" : "https://api.github.com/users/Saibato/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Saibato/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Saibato",
         "id" : 34917548,
         "login" : "Saibato",
         "node_id" : "MDQ6VXNlcjM0OTE3NTQ4",
         "organizations_url" : "https://api.github.com/users/Saibato/orgs",
         "received_events_url" : "https://api.github.com/users/Saibato/received_events",
         "repos_url" : "https://api.github.com/users/Saibato/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Saibato/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Saibato"
      }
   }
]
