{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "Fixes https://github.com/bitcoin/bitcoin/issues/21461\r\n\r\nThis supports whole directory runs of the fuzzing seeds without needing a fuzzing library. A few design decisions that I went with but happy to change: \r\n\r\n1. Very basic multi arg support\r\n    a. Can have 0 args and continue to feed via file input like before\r\n    b. Can have 1 or more args that is a file or directory\r\n    d. Subdirectories are ignored if you pass in a directory (though you can use `dir/*` to include files from subdirectories)\r\n2. Based the file reading off of [util/readwritefile.cpp](https://github.com/bitcoin/bitcoin/blob/master/src/util/readwritefile.cpp#L13) with small changes to make it a buffer instead of a string (could reuse that but turn string to buffer?)\r\n3. The new changes are ignored in the `__AFL_LOOP` path or if built without `DPROVIDE_FUZZ_MAIN_FUNCTION`\r\n\r\n<details>\r\n<summary>Testing instructions</summary>\r\n\r\nTo build without libFuzzer, exclude the sanitizers. IE: \r\n\r\n```\r\nCC=clang CXX=clang++ ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" --without-gui --with-zmq --enable-fuzz\r\n```\r\n\r\nThat should have the `CPPFLAGS` of `-DPROVIDE_FUZZ_MAIN_FUNCTION` to indicicate it was built with the main function to use instead of the libFuzzer `LLVMFuzzerInitialize` & `LLVMFuzzerTestOneInput` methods.\r\n\r\nTests:\r\n\r\n```bash\r\n# clean and build\r\nmake clean\r\nmake -j \"$(($(nproc)+1))\"\r\n\r\n# get qa-assets if you don't have already\r\ngit clone https://github.com/bitcoin-core/qa-assets\r\n\r\n# existing way to feed 1 at a time, still supported\r\nFUZZ=process_message src/test/fuzz/fuzz < qa-assets/fuzz_seed_corpus/process_message/1258dd51f2a5f3221b33a306279ef7290c5fca6d\r\n\r\n# new with this PR: one at a time\r\nFUZZ=process_message src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/process_message/1258dd51f2a5f3221b33a306279ef7290c5fca6d\r\n\r\n# or multiple files at the same time\r\nFUZZ=process_message src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/process_message/1258dd51f2a5f3221b33a306279ef7290c5fca6d qa-assets/fuzz_seed_corpus/process_message/32230c42df1caa3220a3f95ee8a8d2865731ca3e qa-assets/fuzz_seed_corpus/process_message/90329d105d238ed81452077b4e0287a2040db9e9\r\n\r\n# new with this PR: whole directory at a time\r\nFUZZ=process_message src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/process_message\r\n\r\n# or mix of files and directories at the same time\r\nFUZZ=process_message src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/process_message/1258dd51f2a5f3221b33a306279ef7290c5fca6d qa-assets/fuzz_seed_corpus/process_message/32230c42df1caa3220a3f95ee8a8d2865731ca3e qa-assets/fuzz_seed_corpus/process_message/90329d105d238ed81452077b4e0287a2040db9e9 qa-assets/fuzz_seed_corpus/process_message/\r\n\r\n# new with this PR: wildcard support\r\nFUZZ=process_messages src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/process_messages/* \r\n\r\n# new with this PR: run all seeds in all targets, one target/directory at a time \r\nfor D in qa-assets/fuzz_seed_corpus/*; do [ -d \"${D}\" ] && echo \"${D##*/}\" && FUZZ=\"${D##*/}\" src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/\"${D##*/}\"; done\r\n```\r\n</details>\r\n\r\nHappy to make any changes and very much welcome code feedback, my c++ a bit rusty and still figuring out the codebase.",
   "closed_at" : "2021-08-18T22:16:25Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 13,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496/comments",
   "created_at" : "2021-03-21T20:47:56Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/21496",
   "id" : 837179586,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NTk3NTYwMzQ1",
   "number" : 21496,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/21496.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21496",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/21496.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21496"
   },
   "reactions" : {
      "+1" : 2,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 2,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496/timeline",
   "title" : "fuzz: execute each file in dir without fuzz engine",
   "updated_at" : "2021-10-20T18:37:00Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21496",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/10137?v=4",
      "events_url" : "https://api.github.com/users/ghost/events{/privacy}",
      "followers_url" : "https://api.github.com/users/ghost/followers",
      "following_url" : "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url" : "https://api.github.com/users/ghost/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/ghost",
      "id" : 10137,
      "login" : "ghost",
      "node_id" : "MDQ6VXNlcjEwMTM3",
      "organizations_url" : "https://api.github.com/users/ghost/orgs",
      "received_events_url" : "https://api.github.com/users/ghost/received_events",
      "repos_url" : "https://api.github.com/users/ghost/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/ghost/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/ghost"
   }
}
