{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "When fuzzing our codebase in a restricted syscall setup I noticed that calling `CNetAddr::ToString` triggers the use of the `socket` syscall. The syscall is made indirectly via `getnameinfo`.\r\n\r\nAFAICT `getnameinfo` is used in our code only to format IPv6 addresses in their \"shortened\" form. I think our formatting only use case should be possible to fully cover without involving the kernel via `socket` :)\r\n\r\nNot a big deal of course, but it would be nice if kept the direct and indirect use of networking related syscalls such as `socket` to functions where they cannot be avoided. That would make reasoning about syscall restrictions and/or application-vs-kernel boundaries somewhat easier. \r\n\r\nThe call chain is: `CNetAddr::ToString` > `CNetAddr::ToStringIP` > `getnameinfo` > `gni_host` > `gni_host_inet`  > `gni_host_inet_numeric` > `if_indextoname` > `__opensock` > `socket`.\r\n\r\nLive demo:\r\n\r\n```\r\n$ FUZZ=netaddress src/test/fuzz/fuzz\r\nâ¦\r\nERROR: The syscall \"socket\" (syscall number 41) is not allowed by the syscall sandbox in thread \"test\". Please report. Exiting.\r\nterminate called without an active exception\r\n==13417== ERROR: libFuzzer: deadly signal\r\n    #0 0x5581be296819 in __sanitizer_print_stack_trace compiler-rt/lib/ubsan/ubsan_diag_standalone.cpp:33\r\n    #1 0x5581be22e9f8 in fuzzer::PrintStackTrace() compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210                                                                                                                                                                                        #2 0x5581be15a14a in fuzzer::Fuzzer::CrashCallback() (.part.48) compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233\r\n    #3 0x5581be20ab47 in fuzzer::Fuzzer::CrashCallback() compiler-rt/lib/fuzzer/FuzzerLoop.cpp:205\r\n    #4 0x5581be20ab47 in fuzzer::Fuzzer::StaticCrashSignalCallback() compiler-rt/lib/fuzzer/FuzzerLoop.cpp:204\r\n    #5 0x7f3139b2089f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1289f)\r\n    #6 0x7f3138526f46 in __libc_signal_restore_set /build/glibc-2ORdQG/glibc-2.27/signal/../sysdeps/unix/sysv/linux/nptl-signals.h:80\r\n    #7 0x7f3138526f46 in raise /build/glibc-2ORdQG/glibc-2.27/signal/../sysdeps/unix/sysv/linux/raise.c:48\r\n    #8 0x7f31385288b0 in abort /build/glibc-2ORdQG/glibc-2.27/stdlib/abort.c:79\r\n    #9 0x7f3139db9956  (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x8c956)\r\n    #10 0x7f3139dbfae5  (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x92ae5)\r\n    #11 0x7f3139dbfb20 in std::terminate() (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x92b20)\r\n    #12 0x5581bec4e6f7 in (anonymous namespace)::SyscallSandboxDebugSignalHandler(int, siginfo_t*, void*) src/util/syscall_sandbox.cpp:71:5\r\n    #13 0x7f3139b2089f  (/lib/x86_64-linux-gnu/libpthread.so.0+0x1289f)\r\n    #14 0x7f313860b076 in socket /build/glibc-2ORdQG/glibc-2.27/socket/../sysdeps/unix/syscall-template.S:78\r\n    #15 0x7f313860b2b0 in __opensock /build/glibc-2ORdQG/glibc-2.27/socket/../sysdeps/unix/sysv/linux/opensock.c:100\r\n    #16 0x7f3138626fd3 in if_indextoname /build/glibc-2ORdQG/glibc-2.27/inet/../sysdeps/unix/sysv/linux/if_index.c:226\r\n    #17 0x7f3138626abd in gni_host_inet_numeric /build/glibc-2ORdQG/glibc-2.27/inet/getnameinfo.c:354\r\n    #18 0x7f3138626abd in gni_host_inet /build/glibc-2ORdQG/glibc-2.27/inet/getnameinfo.c:389\r\n    #19 0x7f3138626abd in gni_host /build/glibc-2ORdQG/glibc-2.27/inet/getnameinfo.c:422\r\n    #20 0x7f3138626abd in getnameinfo /build/glibc-2ORdQG/glibc-2.27/inet/getnameinfo.c:539\r\n    #21 0x5581beab72e3 in CNetAddr::ToStringIP[abi:cxx11]() const src/netaddress.cpp:580:18\r\nâ¦\r\n```",
   "closed_at" : "2021-05-17T11:08:28Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21466/comments",
   "created_at" : "2021-03-18T11:00:19Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21466/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/21466",
   "id" : 834657374,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21466/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU4MzQ2NTczNzQ=",
   "number" : 21466,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Avoid use of \"socket\" syscall when formatting IP addresses in CNetAddr::ToString",
   "updated_at" : "2021-05-17T11:08:28Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21466",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
