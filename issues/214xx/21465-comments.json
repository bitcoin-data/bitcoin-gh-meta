[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nSo our disambiguation strings don't end up on transifex to provide context? Why do we have them? If they don't show up on transifex then they serve no purpose for the Translators.\r\n\r\nFollowing from your chart it seems that the development flow wouldn't involve too much overhead/change from what we have now. It seems that migrating to the XLIFF files, the C++ disambiguation strings will show up as `<comment>` in the `TS XML Element` which would then show up on Transifex. This is a huge benefit to translators.\r\n\r\n",
      "created_at" : "2021-03-18T17:38:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21465#issuecomment-802152718",
      "id" : 802152718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMjE1MjcxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-18T17:40:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/802152718",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23396902?v=4",
         "events_url" : "https://api.github.com/users/jarolrod/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jarolrod/followers",
         "following_url" : "https://api.github.com/users/jarolrod/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jarolrod/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jarolrod",
         "id" : 23396902,
         "login" : "jarolrod",
         "node_id" : "MDQ6VXNlcjIzMzk2OTAy",
         "organizations_url" : "https://api.github.com/users/jarolrod/orgs",
         "received_events_url" : "https://api.github.com/users/jarolrod/received_events",
         "repos_url" : "https://api.github.com/users/jarolrod/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jarolrod/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jarolrod/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jarolrod"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> So our disambiguation strings don't end up on transifex to provide context?\r\n\r\nYes, for now.\r\n\r\n> Why do we have them? If they don't show up on transifex then they serve no purpose for the Translators.\r\n\r\nI did not check the whole code base, but it seems https://github.com/bitcoin-core/gui/pull/220 was the first usage of them.\r\nTranslation file (`*.ts`) could be downloaded from Transifex by a translator to work on it locally using Qt Linguist tool. Then the translated file could be uploaded to Transifex back.\r\n",
      "created_at" : "2021-03-18T18:03:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21465#issuecomment-802169680",
      "id" : 802169680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMjE2OTY4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-18T20:22:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/802169680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK if it helps translators.\r\n\r\nI think the only code change necessary here to use the new format would be to add `lconvert` step to `make translate`, and check in the resulting `bitcoin_en.xlf` file for Transifex to pick up. That only affects the English (base) translation.\r\n\r\nThis assumes that we still get back `.ts` files when *pulling* translations with the [transifex-migrate-resource.py](https://github.com/bitcoin-core/bitcoin-maintainer-tools/blob/master/transifex-migrate-resource.py) script. If not, that script too will need to be adapted (to convert back to `.ts` for Qt usage).\r\n\r\n> Translation file (*.ts) could be downloaded from Transifex by a translator to work on it locally using Qt Linguist tool. Then the translated file could be uploaded to Transifex back.\r\n\r\nIt's possible, though this might lose the metadata (who translated what), as well as prevents people from collaborative editing of the same language. I do not think it would be good to recommend it.",
      "created_at" : "2021-03-19T13:34:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21465#issuecomment-802836498",
      "id" : 802836498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMjgzNjQ5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-19T13:34:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/802836498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Translation file (*.ts) could be downloaded from Transifex by a translator to work on it locally using Qt Linguist tool. Then the translated file could be uploaded to Transifex back.\r\n> \r\n> It's possible, though this might lose the metadata (who translated what), as well as prevents people from collaborative editing of the same language. I do not think it would be good to recommend it.\r\n\r\nI agree with your latter statement. I mentioned that option only for a reason to show how the additional context means could be used right now.",
      "created_at" : "2021-03-19T13:40:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21465#issuecomment-802840924",
      "id" : 802840924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMjg0MDkyNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-19T13:40:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/802840924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj \r\n> Concept ACK if it helps translators.\r\n\r\nMy concerns are about how to test this approach without breaking anything.",
      "created_at" : "2021-03-19T13:42:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21465#issuecomment-802842031",
      "id" : 802842031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMjg0MjAzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-19T13:42:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/802842031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> My concerns are about how to test this approach without breaking anything.\r\n\r\nWe could create 22.0 translations early and test with that. If it breaks now, not too bad, still a lot of time to start over.",
      "created_at" : "2021-03-19T13:52:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21465#issuecomment-802849148",
      "id" : 802849148,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMjg0OTE0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-19T13:52:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/802849148",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj \r\n> We could create 22.0 translations early and test with that.\r\n\r\nSee #21694.",
      "created_at" : "2021-04-15T12:31:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21465#issuecomment-820385533",
      "id" : 820385533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMDM4NTUzMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-15T12:31:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820385533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
