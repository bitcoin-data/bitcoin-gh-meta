[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> For what it's worth in web browsers there's currently a trend toward simplifying user agents, creating less variants instead of more. Mostly for privacy reasons. Is signalling this extra information in the user agent useful for the user of the node, or is it simply for statistics for the developers?\r\n\r\nMakes sense. But this is optional. Privacy is about things that a user does not want to share with others. Also you could write anything in that comment.\r\n\r\n> Sometimes remote attacks can only be exploited in a specific environment, putting that specific environment into the ua and sending it to the attacker seems counter productive.\r\n\r\nCan also be helpful if fake environment details are shared. Example: TTL in ping can be used to identify OS https://www.blackhat.com/presentations/win-usa-01/Arkin/Briefings/win-01-arkin.ppt\r\nhttps://superuser.com/a/620521/\r\n\r\nHowever lot of servers spoof it so that normal attacks can be avoided as they will try for different OS.\r\n\r\nAdded `uacomment=Windows 95` in `bitcoin.conf` on Ubuntu\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/111909345-ece8e680-8a82-11eb-9b9c-c827ed9827a8.png)\r\n\r\n\r\n> You could argue for removing the UA entirely. But so long as it's there, there's no reason to stop other people from using it as intended. (Nobody is forcing anyone to use this if they don't want to.)\r\n\r\nAgree\r\n\r\nAlso there is no option in ABCore app to use remote full node, the app has its own `bitcoind` so can we use `-uacomment` ?\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/111908900-fc673000-8a80-11eb-93e2-22298c28bcf2.png)\r\n\r\n\r\n\r\n",
      "created_at" : "2021-03-21T14:37:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21492#issuecomment-803593532",
      "id" : 803593532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzU5MzUzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-21T14:53:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803593532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It was discussed at the February [Sydney Socratic Seminar](https://diyhpl.us/wiki/transcripts/sydney-bitcoin-meetup/2021-02-23-socratic-seminar/) how the user agent string could be used to display to the network and to peers what soft fork activation mechanism you were running. \r\n\r\nObviously in the best case scenario there would only be one activation mechanism being run on the network but that is unlikely to always be the case. Hopefully with Taproot's proposed Speedy Trial activation mechanism this won't be needed for Taproot. But there will be future soft forks proposed and who knows what tools will be needed for these soft fork activations.\r\n\r\n",
      "created_at" : "2021-03-21T16:00:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21492#issuecomment-803610303",
      "id" : 803610303,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzYxMDMwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-21T16:00:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803610303",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It was discussed at the February [Sydney Socratic Seminar](https://diyhpl.us/wiki/transcripts/sydney-bitcoin-meetup/2021-02-23-socratic-seminar/) how the user agent string could be used to display to the network and to peers what soft fork activation mechanism you were running.\r\n\r\nSetting aside if such user agent version string based communication is a good idea or not: wouldn't that type of communication be possible also if the default user agent string was say the empty string (`strSubVersion = \"\"`)?\r\n\r\nIn other words: the subset of users who have decided to communicate something via `strSubVersion` can do so on an opt-in basis, no? :)",
      "created_at" : "2021-03-21T19:09:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21492#issuecomment-803643320",
      "id" : 803643320,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzY0MzMyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-21T19:12:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803643320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift: It wasn't my idea (to be clear, transcript is anonymized though) but I thought it would be helpful to highlight a speculative use case for it longer term. The empty string wouldn't be as clear or as flexible. Obviously if the arguments for removing the user agent string were strong, this speculative use case probably wouldn't provide much resistance. But I'm not seeing strong arguments for removing it either as of yet.",
      "created_at" : "2021-03-22T10:13:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21492#issuecomment-803944269",
      "id" : 803944269,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzk0NDI2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-22T10:13:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803944269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "These bits of information are currently given to attackers via the user agent string:\r\n\r\n* `CLIENT_NAME`\r\n* `CLIENT_VERSION_MAJOR`\r\n* `CLIENT_VERSION_MINOR`\r\n* `CLIENT_VERSION_BUILD`\r\n* (And opt-in `-uacomment`:s of course: I don't see these as problematic since they are opt-in.)\r\n\r\nIf we were to reduce the amount of informationen provided: which of the above would be good candidates to drop from the user agent string?\r\n\r\nRelevant code snippets:\r\n\r\n```c++\r\nconst std::string CLIENT_NAME(\"Satoshi\");\r\nstatic const int CLIENT_VERSION =\r\n                             10000 * CLIENT_VERSION_MAJOR\r\n                         +     100 * CLIENT_VERSION_MINOR\r\n                         +       1 * CLIENT_VERSION_BUILD;\r\nâ¦\r\nstrSubVersion = FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, uacomments);\r\nâ¦\r\nm_connman.PushMessage(â¦, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, â¦, â¦, â¦, â¦,\r\n            â¦, strSubVersion, â¦, â¦));\r\n```",
      "created_at" : "2021-03-22T15:48:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21492#issuecomment-804174208",
      "id" : 804174208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNDE3NDIwOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-22T15:48:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/804174208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This is currently used as a loose indicator on the rate at which clients upgrade, which is a useful thing to know (like https://luke.dashjr.org/programs/bitcoin/files/charts/software.html). I imagine that would simply be substituted for specific feature tests, creating more work for those doing the measurement and not really stopping bad actors who wanted to exploit older nodes.",
      "created_at" : "2021-03-23T03:32:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21492#issuecomment-804584518",
      "id" : 804584518,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNDU4NDUxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-23T03:32:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/804584518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/775844?v=4",
         "events_url" : "https://api.github.com/users/rustyrussell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rustyrussell/followers",
         "following_url" : "https://api.github.com/users/rustyrussell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rustyrussell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rustyrussell",
         "id" : 775844,
         "login" : "rustyrussell",
         "node_id" : "MDQ6VXNlcjc3NTg0NA==",
         "organizations_url" : "https://api.github.com/users/rustyrussell/orgs",
         "received_events_url" : "https://api.github.com/users/rustyrussell/received_events",
         "repos_url" : "https://api.github.com/users/rustyrussell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rustyrussell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rustyrussell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rustyrussell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I believe the version would be relatively easy to determine in the absence of a ua string. Looking at the tx relay policy, p2p version, the message types supported and the behaviour of them (like delays) should give a good idea what client version the remote is on. However, the operating system shouldn't influence any of those heuristics, which is why I NACKed #19242 . Though, I think it is ok to keep the current ua string as is.",
      "created_at" : "2021-03-23T06:36:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21492#issuecomment-804657428",
      "id" : 804657428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNDY1NzQyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-23T06:36:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/804657428",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@rustyrussell @MarcoFalke I agree that `CLIENT_VERSION_MAJOR` most likely can be cheaply inferred from other node behaviour in general, but I'm not so sure about `CLIENT_VERSION_MINOR` and `CLIENT_VERSION_BUILD`?\r\n\r\nPerhaps we're thinking about different attack scenarios. The attack scenario I have in mind is the worst-case scenario of a full RCE. \r\n\r\nIn the case of an RCE vulnerability I think that the likelihood of successful _reliable_ exploitation is _much_ higher given exact knowledge of `CLIENT_VERSION_MAJOR`, `CLIENT_VERSION_MINOR` _and_ `CLIENT_VERSION_BUILD` compared to knowing _only_ say `CLIENT_VERSION_MAJOR`. Don't you think? :)",
      "created_at" : "2021-03-23T15:56:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21492#issuecomment-805020753",
      "id" : 805020753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwNTAyMDc1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-23T16:09:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/805020753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
