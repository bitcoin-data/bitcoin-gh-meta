[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-03-16T09:00:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21439#issuecomment-800080585",
      "id" : 800080585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMDA4MDU4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-16T09:00:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800080585",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21439#discussion_r595416648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21439"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595416648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wonder if we can somehow test the `-daemonwait` functionality here too, that RPC is available and initialized at the time it returns.",
      "commit_id" : "841eabc325f1d3949e8d1135c4dc063d92e6a182",
      "created_at" : "2021-03-16T18:00:52Z",
      "diff_hunk" : "@@ -0,0 +1,80 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test -daemon and -daemonwait config arg options.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class DaemonConfigArgsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.usecli = True\n+        self.num_nodes = 5\n+\n+    def test_daemon(self):\n+        self.log.info('Test -daemon config arg options')\n+        self.stop_nodes()\n+\n+        self.log.debug('Test -daemon=0')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemon=\"0\"\\n']):\n+            self.start_node(0, extra_args=['-daemon=0'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemon')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemon=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemon'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemon=1')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemon=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemon=1'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -daemon')\n+        with self.nodes[1].assert_debug_log(expected_msgs=['Command-line arg: daemon=\"\"\\n']):\n+            self.nodes[1].start(extra_args=[\"-daemon\"])\n+        self.nodes[1].wait_until_stopped(timeout=200)\n+\n+        self.log.debug('Test -daemon=\"1\"')\n+        with self.nodes[2].assert_debug_log(expected_msgs=['Command-line arg: daemon=\"1\"\\n']):\n+            self.nodes[2].start(extra_args=[\"-daemon=1\"])\n+        self.nodes[2].wait_until_stopped(timeout=200)\n+\n+    def test_daemonwait(self):\n+        self.log.info('Test -daemonwait config arg options')\n+        self.stop_nodes()\n+\n+        self.log.debug('Test -daemonwait=0')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemonwait=\"0\"\\n']):\n+            self.start_node(0, extra_args=['-daemonwait=0'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemonwait')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemonwait=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemonwait'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemonwait=1')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemonwait=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemonwait=1'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -daemonwait')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21439#discussion_r595416648",
      "id" : 595416648,
      "line" : 64,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTQxNjY0OA==",
      "original_commit_id" : "841eabc325f1d3949e8d1135c4dc063d92e6a182",
      "original_line" : 64,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "test/functional/feature_daemon_config_args.py",
      "position" : 64,
      "pull_request_review_id" : 613566279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21439",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:00:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595416648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21439#discussion_r595424474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21439"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595424474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree. ATM the processes launched by `-daemon` and `-daemonwait` remain alive after the test cleanup, so it looks like the framework needs to be updated to deal with these.",
      "commit_id" : "841eabc325f1d3949e8d1135c4dc063d92e6a182",
      "created_at" : "2021-03-16T18:11:37Z",
      "diff_hunk" : "@@ -0,0 +1,80 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test -daemon and -daemonwait config arg options.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class DaemonConfigArgsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.usecli = True\n+        self.num_nodes = 5\n+\n+    def test_daemon(self):\n+        self.log.info('Test -daemon config arg options')\n+        self.stop_nodes()\n+\n+        self.log.debug('Test -daemon=0')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemon=\"0\"\\n']):\n+            self.start_node(0, extra_args=['-daemon=0'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemon')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemon=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemon'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemon=1')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemon=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemon=1'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -daemon')\n+        with self.nodes[1].assert_debug_log(expected_msgs=['Command-line arg: daemon=\"\"\\n']):\n+            self.nodes[1].start(extra_args=[\"-daemon\"])\n+        self.nodes[1].wait_until_stopped(timeout=200)\n+\n+        self.log.debug('Test -daemon=\"1\"')\n+        with self.nodes[2].assert_debug_log(expected_msgs=['Command-line arg: daemon=\"1\"\\n']):\n+            self.nodes[2].start(extra_args=[\"-daemon=1\"])\n+        self.nodes[2].wait_until_stopped(timeout=200)\n+\n+    def test_daemonwait(self):\n+        self.log.info('Test -daemonwait config arg options')\n+        self.stop_nodes()\n+\n+        self.log.debug('Test -daemonwait=0')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemonwait=\"0\"\\n']):\n+            self.start_node(0, extra_args=['-daemonwait=0'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemonwait')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemonwait=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemonwait'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemonwait=1')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemonwait=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemonwait=1'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -daemonwait')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21439#discussion_r595424474",
      "id" : 595424474,
      "in_reply_to_id" : 595416648,
      "line" : 64,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTQyNDQ3NA==",
      "original_commit_id" : "841eabc325f1d3949e8d1135c4dc063d92e6a182",
      "original_line" : 64,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "test/functional/feature_daemon_config_args.py",
      "position" : 64,
      "pull_request_review_id" : 613576483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21439",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:11:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595424474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21439#discussion_r595430265"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21439"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595430265"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agreeâ¦ Leaking processes is kind of bad.\r\nFWIW, one of my ideas in #21007 was to use `-daemonwait` in the test framework to avoid having to poll until RPC comes up. I'm not sure it's actually useful for that (due to how we handle logging) though.",
      "commit_id" : "841eabc325f1d3949e8d1135c4dc063d92e6a182",
      "created_at" : "2021-03-16T18:19:33Z",
      "diff_hunk" : "@@ -0,0 +1,80 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test -daemon and -daemonwait config arg options.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class DaemonConfigArgsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.usecli = True\n+        self.num_nodes = 5\n+\n+    def test_daemon(self):\n+        self.log.info('Test -daemon config arg options')\n+        self.stop_nodes()\n+\n+        self.log.debug('Test -daemon=0')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemon=\"0\"\\n']):\n+            self.start_node(0, extra_args=['-daemon=0'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemon')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemon=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemon'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemon=1')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemon=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemon=1'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -daemon')\n+        with self.nodes[1].assert_debug_log(expected_msgs=['Command-line arg: daemon=\"\"\\n']):\n+            self.nodes[1].start(extra_args=[\"-daemon\"])\n+        self.nodes[1].wait_until_stopped(timeout=200)\n+\n+        self.log.debug('Test -daemon=\"1\"')\n+        with self.nodes[2].assert_debug_log(expected_msgs=['Command-line arg: daemon=\"1\"\\n']):\n+            self.nodes[2].start(extra_args=[\"-daemon=1\"])\n+        self.nodes[2].wait_until_stopped(timeout=200)\n+\n+    def test_daemonwait(self):\n+        self.log.info('Test -daemonwait config arg options')\n+        self.stop_nodes()\n+\n+        self.log.debug('Test -daemonwait=0')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemonwait=\"0\"\\n']):\n+            self.start_node(0, extra_args=['-daemonwait=0'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemonwait')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemonwait=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemonwait'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -nodaemonwait=1')\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Command-line arg: daemonwait=false\\n']):\n+            self.start_node(0, extra_args=['-nodaemonwait=1'])\n+        self.stop_node(0)\n+\n+        self.log.debug('Test -daemonwait')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21439#discussion_r595430265",
      "id" : 595430265,
      "in_reply_to_id" : 595416648,
      "line" : 64,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTQzMDI2NQ==",
      "original_commit_id" : "841eabc325f1d3949e8d1135c4dc063d92e6a182",
      "original_line" : 64,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "test/functional/feature_daemon_config_args.py",
      "position" : 64,
      "pull_request_review_id" : 613583728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21439",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-16T18:19:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595430265",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Am starting seminars and won't come back to this patch for some time, so up for grabs.",
      "created_at" : "2021-05-11T10:06:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21439#issuecomment-838203184",
      "id" : 838203184,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzODIwMzE4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-11T10:06:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/838203184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, added  \"up for grabs\" label. Looks like this is more involved than expected.",
      "created_at" : "2021-05-11T10:08:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21439#issuecomment-838205617",
      "id" : 838205617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21439",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzODIwNTYxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-11T10:08:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/838205617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
