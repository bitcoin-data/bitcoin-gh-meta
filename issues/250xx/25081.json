{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "Currently there is a macro `DEBUG_LOCKCONTENTION` (see `developer-notes.md`) to enable logging of contention. The disadvantage of this method is that `bitcoind` needs to be especially compiled with that enabled, and when enabled this quickly produces huge log files, and has a relatively large overhead. \r\n\r\nThis PR introduces some tracepoints and adds a tracing script `lock_contention_analysis.bt` that can be started at any time while `bitcoind` is running. This has low overhead and gives better analysis possibilities.\r\n\r\nWhen the script is attached with `sudo bpftrace contrib/tracing/lock_contention_analysis.bt`, you'll get a markdown formatted output that looks like this:\r\n\r\ntimestamp       | Lock                                  | waiting duration  | waiting at                     | blocked by\r\n---------------:|:--------------------------------------|------------------:|:-------------------------------|:------------------------------\r\n12:41:05.512089 | m_mutex                               |            4491Âµs | ./checkqueue.h          ( 175) | ./checkqueue.h          (  78)\r\n12:41:05.861322 | cs_main                               |          535058Âµs | net_processing.cpp      (1607) | validation.cpp          (2994)\r\n12:41:06.655427 | m_mutex                               |            4012Âµs | ./checkqueue.h          (  78) | ./checkqueue.h          (  78)\r\n12:41:06.675967 | cs_main                               |          650117Âµs | net_processing.cpp      (1607) | validation.cpp          (2994)\r\n12:41:06.894090 | m_mutex                               |            2747Âµs | ./checkqueue.h          (  78) | ./checkqueue.h          (  78)\r\n12:41:06.961872 | cs_main                               |          142277Âµs | net_processing.cpp      (1607) | validation.cpp          (2994)\r\n12:41:07.363535 | cs_main                               |          395851Âµs | net_processing.cpp      (1607) | validation.cpp          (2994)\r\n12:41:07.583226 | cs_main                               |           69281Âµs | net_processing.cpp      (1607) | validation.cpp          (2994)\r\n12:41:07.746665 | cs_main                               |          157604Âµs | net_processing.cpp      (1607) | validation.cpp          (2335)\r\n12:41:07.958787 | m_mutex                               |            3041Âµs | ./checkqueue.h          ( 175) | ./checkqueue.h          (  78)\r\n12:41:07.958801 | m_mutex                               |            2970Âµs | ./checkqueue.h          (  78) | ./checkqueue.h          ( 175)\r\n12:41:07.958842 | m_mutex                               |            2956Âµs | ./checkqueue.h          (  78) | ./checkqueue.h          ( 175)\r\n12:41:07.958853 | m_mutex                               |            2898Âµs | ./checkqueue.h          (  78) | ./checkqueue.h          (  78)\r\n12:41:07.958862 | m_mutex                               |            2820Âµs | ./checkqueue.h          (  78) | ./checkqueue.h          (  78)\r\n12:41:07.959201 | m_mutex                               |            3028Âµs | ./checkqueue.h          (  78) | ./checkqueue.h          (  78)\r\n12:41:07.959218 | m_mutex                               |            2916Âµs | ./checkqueue.h          (  78) | ./checkqueue.h          (  78)\r\n\r\nWhen monitoring is stopped (press Ctrl+C), the script prints the source locations where it has waited the longest while the script was running (unfortunately there seems to be no way to format this more nicely):\r\n\r\n```\r\nMonitored from 17:12:18.513400 to 17:42:08.565786. top 50 lock contention locations (file, lineNo): Âµs\r\n[...]\r\n@locked_at_source_line[./net.h, 1233]: 334654\r\n@locked_at_source_line[txmempool.cpp, 823]: 401472\r\n@locked_at_source_line[net_processing.cpp, 4504]: 661670\r\n@locked_at_source_line[net_processing.cpp, 4872]: 668911\r\n@locked_at_source_line[txmempool.cpp, 1096]: 681892\r\n@locked_at_source_line[net_processing.cpp, 4857]: 825963\r\n@locked_at_source_line[net_processing.cpp, 4724]: 826719\r\n@locked_at_source_line[net_processing.cpp, 4677]: 827335\r\n@locked_at_source_line[net_processing.cpp, 4154]: 827972\r\n@locked_at_source_line[net_processing.cpp, 4222]: 828863\r\n@locked_at_source_line[net.cpp, 2329]: 831334\r\n@locked_at_source_line[net_processing.cpp, 4217]: 831451\r\n@locked_at_source_line[net_processing.cpp, 4231]: 839408\r\n@locked_at_source_line[net_processing.cpp, 4198]: 846353\r\n@locked_at_source_line[util/system.cpp, 1035]: 883117\r\n@locked_at_source_line[net.cpp, 1426]: 1398949\r\n@locked_at_source_line[net.cpp, 1422]: 1416004\r\n@locked_at_source_line[net.cpp, 1611]: 1564984\r\n@locked_at_source_line[net_processing.cpp, 4205]: 1668173\r\n@locked_at_source_line[net_processing.cpp, 1334]: 1704239\r\n@locked_at_source_line[validation.cpp, 5173]: 2899013\r\n```\r\n\r\nFor this to work I had to add traces to `UniqueLock` and `AnnotatedMixin`, and move the implementation into the cpp file (without moving, due to inlining the maximum number of traces of 512 is quickly exhausted)",
   "closed_at" : "2023-02-28T08:06:54Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 15,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25081/comments",
   "created_at" : "2022-05-07T16:04:23Z",
   "draft" : true,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25081/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/25081",
   "id" : 1228662332,
   "labels" : [
      {
         "color" : "ffffee",
         "default" : false,
         "description" : null,
         "id" : 231994551,
         "name" : "Scripts and tools",
         "node_id" : "MDU6TGFiZWwyMzE5OTQ1NTE=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools"
      },
      {
         "color" : "99a810",
         "default" : false,
         "description" : null,
         "id" : 749416508,
         "name" : "Up for grabs",
         "node_id" : "MDU6TGFiZWw3NDk0MTY1MDg=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs"
      },
      {
         "color" : "cccccc",
         "default" : false,
         "description" : "",
         "id" : 955867938,
         "name" : "Needs rebase",
         "node_id" : "MDU6TGFiZWw5NTU4Njc5Mzg=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25081/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII5843c2In",
   "number" : 25081,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/25081.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25081",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/25081.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25081"
   },
   "reactions" : {
      "+1" : 2,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 1,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 3,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25081/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25081/timeline",
   "title" : "tracing: lock contention analysis",
   "updated_at" : "2023-02-28T08:07:01Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25081",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
      "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
      "followers_url" : "https://api.github.com/users/martinus/followers",
      "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/martinus",
      "id" : 14386,
      "login" : "martinus",
      "node_id" : "MDQ6VXNlcjE0Mzg2",
      "organizations_url" : "https://api.github.com/users/martinus/orgs",
      "received_events_url" : "https://api.github.com/users/martinus/received_events",
      "repos_url" : "https://api.github.com/users/martinus/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/martinus"
   }
}
