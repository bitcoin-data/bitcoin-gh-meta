[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Previous discussion originally found [here](https://github.com/bitcoin/bitcoin/pull/24322#issuecomment-1109044026) by theuni reproduced: \r\n\r\n> > @theuni\r\n> > \r\n> > > does the switch to libtool libs mean that more objects end up being built (other than the second set for the lib)? Or does -all-static basically fix that?\r\n> > \r\n> > Unfortunately, libtool seems to always want to build twice... Not sure if we can fix that.\r\n> > \r\n> \r\n> I think I've come up with a reasonably clean solution to this here: https://github.com/theuni/bitcoin/commit/9ffbd707afc8188fe0b8cc5316f6c583f7ae21d0\r\n> \r\n> libtool tries to build twice by default: once for static, once for shared. With this change, there's _only_ static by default, so default configs continue to only build one set of objects.\r\n> \r\n> With this commit, if you want shared libs/dlls, you'd need to configure with `--enable-shared`, which will _then_ build everything twice. For a project that's mostly about executables, that seems reasonable to me. (Also, amazingly `--enable-shared --disable-static` does the right thing and also builds a single copy of everything for shared libs)\r\n> \r\n> This also means we don't have to special-case the Windows case in this pr. We'll just know that `--enable-shared` is busted on windows (and maybe warn as such for that config?)\r\n> \r\n> The only downside I can think of is that devs aren't going to be linking the lib every day as part of their typical workflows so link problems may show up around release time. IMO that's a reasonable trade-off.",
      "created_at" : "2022-04-27T15:59:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1111176788",
      "id" : 1111176788,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585COzZU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111176788/reactions"
      },
      "updated_at" : "2022-04-27T15:59:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111176788",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Previous discussion originally found [here](https://github.com/bitcoin/bitcoin/pull/24322#issuecomment-1110016664) by theuni reproduced:\r\n\r\n> This commit fixes Windows dll linking for me: https://github.com/theuni/bitcoin/commit/9612f5f0f1e3295065dbd8a0e0f472f8f020bbd9 . Untested, but it now links. I'll be testing it out as a next step.\r\n> \r\n> Thanks to @dongcarl for pointing out the problem. \r\n> \r\n> Edit: I'm unable to find what's actually affected by this define in my local mingw tree and in depends. Maybe gcc does something internally with it or something?\r\n> \r\n> Edit2: Found it!: https://github.com/mingw-w64/mingw-w64/blob/f79f89f976dc5345090db557fb20d5deba913d9f/mingw-w64-libraries/winpthreads/include/pthread.h#L86\r\n> \r\n> That seems like heavy-handed behavior for mingw-w64, much more useful would be for them to define and use `PTHREADS_DLL_EXPORT` instead. I'll work to understand this better and upstream a patch if necessary.",
      "created_at" : "2022-04-27T16:00:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1111177427",
      "id" : 1111177427,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585COzjT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111177427/reactions"
      },
      "updated_at" : "2022-04-27T16:00:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111177427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Could another approach suggested in #24994 be useful (did not test yet)?",
      "created_at" : "2022-04-27T16:06:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1111184085",
      "id" : 1111184085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CO1LV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111184085/reactions"
      },
      "updated_at" : "2022-04-27T16:06:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111184085",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I believe that https://github.com/theuni/bitcoin/commit/9612f5f0f1e3295065dbd8a0e0f472f8f020bbd9 is the clean/proper fix for us for the issue. We don't want pthreads symbols exported, and that fixes the specific issue.\r\n\r\nTo me, the only remaining question is why other projects aren't equally annoyed by this. I'll work on upstreaming the fix (mingw-w64 pthreads using its own specific define instead of the generic `DLL_EXPORT`) and see how it's received.",
      "created_at" : "2022-04-27T16:27:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1111207358",
      "id" : 1111207358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CO62-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111207358/reactions"
      },
      "updated_at" : "2022-04-27T16:27:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111207358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@theuni \r\n\r\nWhat are default values of `lt_cv_prog_compiler_pic` and `lt_cv_prog_compiler_pic_CXX` for mingw-w64?",
      "created_at" : "2022-04-27T16:35:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1111214955",
      "id" : 1111214955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CO8tr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111214955/reactions"
      },
      "updated_at" : "2022-04-27T16:35:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111214955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto Sorry, that wasn't clear from the change.\r\n\r\nWithout this hack, they contain:`-DDLL_EXPORT -DPIC`. So the override here simply removes the `DLL_EXPORT` define.",
      "created_at" : "2022-04-27T20:52:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1111472442",
      "id" : 1111472442,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CP7k6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111472442/reactions"
      },
      "updated_at" : "2022-04-27T20:52:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111472442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've tested @theuni's [patch](https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1111207358), and it works for me.\r\n\r\nIt fixes #19772 and #24972 as well.\r\n\r\nConsidering this patch as libtool hack, still researching non-hack ways to fix the problem..\r\n\r\n ",
      "created_at" : "2022-04-28T19:00:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1112555630",
      "id" : 1112555630,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CUEBu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112555630/reactions"
      },
      "updated_at" : "2022-04-28T19:00:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112555630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I believe that https://github.com/theuni/bitcoin/commit/9612f5f0f1e3295065dbd8a0e0f472f8f020bbd9 is the clean/proper fix for us for the issue. We don't want pthreads symbols exported, and that fixes the specific issue.\r\n\r\nACK https://github.com/theuni/bitcoin/commit/9612f5f0f1e3295065dbd8a0e0f472f8f020bbd9, NACK #24972, #24994 etc.",
      "created_at" : "2022-04-29T07:51:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1112984981",
      "id" : 1112984981,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CVs2V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112984981/reactions"
      },
      "updated_at" : "2022-04-29T07:51:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112984981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've opened a pull-request upstream to add a fix for this: https://sourceforge.net/p/mingw-w64/mingw-w64/merge-requests/23/\r\n\r\nI'll wait a day or two and see if they respond before going any further on this.",
      "created_at" : "2022-04-29T17:19:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113546369",
      "id" : 1113546369,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CX16B",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113546369/reactions"
      },
      "updated_at" : "2022-04-29T17:19:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113546369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I actually think it's entirely possible that building a convenience library and then an actual library out of the convenience library could be the way to do it like in #24994. We shall see.\r\n\r\nAnother point of reference here is the libtool manual section about how to handle DLL_EXPORT: https://www.gnu.org/software/libtool/manual/libtool.html#Windows-DLLs",
      "created_at" : "2022-04-29T18:19:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113595043",
      "id" : 1113595043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CYByj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113595043/reactions"
      },
      "updated_at" : "2022-04-29T18:19:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113595043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I actually think it's entirely possible that building a convenience library and then an actual library out of the convenience library could be the way to do it like in https://github.com/bitcoin/bitcoin/pull/24994. We shall see.\r\n\r\nI don't see why we should be refactoring our code, that works everywhere else, and adding more libraries, to work around a problem that occurs for a single OS, and in some part, only in certain build configurations. Especially if we know that it's libtool that is \"broken\", it'd seem better for us to just use a single, well documented, scoped to the Windows use of libtool workaround, as opposed to changing our source code to accommodate its quirkiness.\r\n\r\nNote that #24994 alone seemingly doesn't fix all the issues, i.e #24972, so even if we went ahead with either/both changes, we're still going to continue to carry the windows-only libtool workarounds we've already got in our build system, which I'd say is the worst of both worlds (code refactoring + still having windows libtool workarounds). I'd rather add one more (well documented) libtool workaround to the pile, and hope that this may all become a moot point some time into the future (cmake ð¦s). Interested to see what appears on the mailing list upstream.",
      "created_at" : "2022-04-29T18:43:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113613291",
      "id" : 1113613291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CYGPr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113613291/reactions"
      },
      "updated_at" : "2022-04-29T18:46:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113613291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not sure I understand the discussion about nested librarries, or avoiding libtool. This problem has nothing to do with libtool except that libtool is the one guilty of adding the problematic define.\r\n\r\nPlease note also that any library could be causing this problem. It just happens to be libpthread. It could equally be libevent or libzmq.\r\n\r\nAlso please note that `DLL_EXPORT` is not any kind of magic define or token. It's a convention used by libtool, similar to autoconf's `HAVE_CONFIG_H`. In this case though, there's a clash of uses.\r\n\r\nHere's the snippet we're dealing with in pthread.h:\r\n\r\n```c++\r\n#if defined DLL_EXPORT\r\n#ifdef IN_WINPTHREAD\r\n#define WINPTHREAD_API __declspec(dllexport)\r\n#else\r\n#define WINPTHREAD_API __declspec(dllimport)\r\n#endif\r\n#else\r\n#define WINPTHREAD_API\r\n#endif\r\n```\r\n\r\nHere's part of the explanation I provided in the patch to upstream:\r\n\r\n> \r\n> When building a libtool lib, libtool automatically defines \"DLL_EXPORT\" for objects intended to be linked into a shared library.\r\n> \r\n> Applications are then intended to also define \"DLL_EXPORT\", which has the effect of importing the functions from the exported dll.\r\n> \r\n> However, this goes bad when a downstream user is itself a libtool lib which is attempting to statically link in libpthread. libtool sets \"DLL_EXPORT\" for itself as expected, so that the downstream lib can export its own symbols. HOWEVER it also has the effect of trying to _import_ the libpthread symbols, which doesn't work because libpthread is being linked statically rather than as a dll.\r\n\r\nSo the problem is that we're trying to import when building a dll. [From the Microsoft docs:](https://docs.microsoft.com/en-us/cpp/build/importing-function-calls-using-declspec-dllimport?view=msvc-170)\r\n\r\n> You only want to use __declspec(dllimport) when calling DLL functions from outside the DLL itself. Don't use __declspec(dllimport) on functions inside a DLL when building that DLL.\r\n\r\nThe fix is thus to avoid doing the dllimport when building our own dll.  The nice way would be to have a define that could be set to avoid it. This is the [fix I've proposed upstream.](https://sourceforge.net/u/theuni2/mingw-w64/ci/cf09b48dae24316b06fee83b23eb0af574bb5f14/)\r\n\r\nBarring that, we just need to avoid having `DLL_EXPORT` defined in any file that ends up including pthread.h. Libtool appends this by default. The configure change I've proposed above prevents libtool from doing that, thereby fixing the problem.\r\n\r\nAnother solution might be to add `-UDLL_EXPORT` to AM_CPPFLAGS, overriding libtool's define.\r\n\r\nEdit: In case it isn't clear/obvious, upstream winpthreads itself is build using libtool, which is why they use that define and why it's colliding with ours.",
      "created_at" : "2022-04-29T18:52:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113625763",
      "id" : 1113625763,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CYJSj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113625763/reactions"
      },
      "updated_at" : "2022-04-29T19:04:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113625763",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah! The upstream explanation is very clear indeed. Makes sense!",
      "created_at" : "2022-04-29T18:58:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113629997",
      "id" : 1113629997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CYKUt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113629997/reactions"
      },
      "updated_at" : "2022-04-29T18:58:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113629997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Another solution might be to add -UDLL_EXPORT to AM_CPPFLAGS, overriding libtool's define.\r\n\r\nAnother option might be linking against the pthread library dynamically instead of statically when building a dynamic library, in which case mingw's `__declspec(dllimport)` annotations would be correctly applied.\r\n\r\nI think linking dependencies of a dynamic library into it dynamically is more typical if you are using dynamic libraries to begin with. Linking dependencies of a dynamic library into it statically can also make sense, but can cause problems because this can leave you with multiple instances of the same static library having to coexist inside the same process, each with their own separate global variables, and possibly inconsistent function definitions. This is ok if libraries are high level, and you aren't trying to share pointers or handles between the different library instances. I don't think we know if this applies to pthreads, but Cory's upstream patch should let us find out.\r\n",
      "created_at" : "2022-04-29T19:25:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113649872",
      "id" : 1113649872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CYPLQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113649872/reactions"
      },
      "updated_at" : "2022-04-29T19:25:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113649872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK. I explored this a little bit today because I agree a single dll may or may not be how we want to ship in the end.\r\n\r\nIn fact, to your point, libstdc++ currently still gets linked dynamically. This can be fixed as usual (I did a quick check) by adding `-static-libstdc++` to the dll link flags, but it definitely begs the question: do we want to ship a few dll's instead?\r\n\r\nI think at least in the beginning we should try to lump everything into a single dll. By controlling our exports (I think) we should be able to avoid leaking out symbols like `pthread_create` which would obviously be problematic.\r\n\r\nBut I agree it's very possible we run into startup problems or handle collisions or something that forces us to switch to multiple dll's. Something like an app  interacting with `thread_local` vars on a thread spawned by the dll... I could see that going sideways.\r\n\r\n",
      "created_at" : "2022-04-29T19:42:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113661684",
      "id" : 1113661684,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CYSD0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113661684/reactions"
      },
      "updated_at" : "2022-04-29T19:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113661684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'd rather add one more (well documented) libtool workaround to the pile...\r\n\r\nJust a reminder, that this will be the 4th Windows-related Libtool hack in our build system (sorry if it looks like or is off-topic).\r\n\r\n[First](https://github.com/bitcoin/bitcoin/commit/575e70c0c6c14058e4fc6c37f4e4d52399b69432) is: https://github.com/bitcoin/bitcoin/blob/23daa86ec132cf1208b8c1b13463e58e57a26a20/configure.ac#L696-L698\r\n\r\n[Second](https://github.com/bitcoin/bitcoin/commit/1723862e82926ef24ccf1d098dc02933f893cf48): https://github.com/bitcoin/bitcoin/blob/23daa86ec132cf1208b8c1b13463e58e57a26a20/configure.ac#L61-L68\r\n\r\n[Third](https://github.com/bitcoin/bitcoin/commit/9ed8979e294fb7a42e26a6b6541f614554663bea): https://github.com/bitcoin/bitcoin/blob/23daa86ec132cf1208b8c1b13463e58e57a26a20/configure.ac#L712-L718\r\n\r\nBtw, the [third](https://github.com/bitcoin/bitcoin/commit/9ed8979e294fb7a42e26a6b6541f614554663bea) Libtool hack did actually cause the #19772 bug.",
      "created_at" : "2022-04-30T10:23:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113964111",
      "id" : 1113964111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585CZb5P",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113964111/reactions"
      },
      "updated_at" : "2022-04-30T10:23:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113964111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Upstream acknowledged the problem and committed a fix that goes even further than my proposed patch: https://sourceforge.net/p/mingw-w64/mingw-w64/ci/489520900fb6853c8be97e9d0214f39a77c846d9/\r\n\r\n(Funny enough, they went back and forth a few times to arrive at that fix, so I suppose this is quite subtle indeed)\r\n\r\nSo the good news is: this is now fixed upstream and we don't have to opt-in, it'll just work when building against the next release.\r\nThe bad news is: we'll have to carry a work-around until this trickles down to the majority of mingw toolchains, which will take several years.",
      "created_at" : "2022-05-02T17:22:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1115145741",
      "id" : 1115145741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585Cd8YN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1115145741/reactions"
      },
      "updated_at" : "2022-05-02T17:22:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1115145741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "libsecp256k1 actually has the opposite problem: leaking exported symbols into static libraries.\r\n\r\nI've PR'd a fix for that upstream: https://github.com/bitcoin-core/secp256k1/pull/1105\r\n\r\nWithout that fix, the windows dll links successfully, but exports **_only_** the libsecp symbols due to ld's behavior (emphasis mine):\r\n\r\n> \r\n> --export-all-symbols\r\n>            If given, all global symbols in the objects used to build a DLL will be exported by the DLL.  **Note that this is the default if there otherwise wouldn't be any exported symbols**.\r\n\r\nSo basically, because libsecp256k1's symbols are exported, nothing else gets exported. By fixing that leak we get back to the default of all exports, which is what we're after (for now).",
      "created_at" : "2022-05-04T21:15:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1117945499",
      "id" : 1117945499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585Con6b",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117945499/reactions"
      },
      "updated_at" : "2022-05-04T21:15:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117945499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I believe that https://github.com/theuni/bitcoin/commit/9612f5f0f1e3295065dbd8a0e0f472f8f020bbd9 is the clean/proper fix for us for the issue. We don't want pthreads symbols exported, and that fixes the specific issue.\r\n\r\nAlso tested this. Has this been PR'ed?",
      "created_at" : "2023-02-21T09:22:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1438134641",
      "id" : 1438134641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585VuDFx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1438134641/reactions"
      },
      "updated_at" : "2023-02-21T09:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1438134641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheCharlatan I just rebased and pushed up a branch with a combo for dll's that seems to work.\r\n\r\nMind testing https://github.com/theuni/bitcoin/commits/fix-dll-exports ? I'll PR if it works for you.\r\n\r\nSymbol visibility can be tested by marking a random function as dllexport. When dumped with `objdump -p`, you should see _only_ your selected exported symbols.",
      "created_at" : "2023-02-21T21:54:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1439139628",
      "id" : 1439139628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585Vx4cs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1439139628/reactions"
      },
      "updated_at" : "2023-02-21T21:54:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1439139628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Mind testing https://github.com/theuni/bitcoin/commits/fix-dll-exports ? I'll PR if it works for you.\r\n\r\nMmh, I'm surprised that secp needs to be linked as well by the final binary and I'm not quite following why. What's different between the visibility of say linking leveldb and linking libsecp in libbitcoinkernel so these symbols end up undefined in the bitcoin-chainstate binary?\r\n",
      "created_at" : "2023-02-22T12:40:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1439953266",
      "id" : 1439953266,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585V0_Fy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1439953266/reactions"
      },
      "updated_at" : "2023-02-22T12:40:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1439953266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheCharlatan symbol visibility is really complex, but it boils down to 2 main choices on our side, see here: https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1113661684\r\n\r\nWe can either ship a bunch of dll's (kernel, libsecp256k1, libstdc++, libpthread, etc)\r\n_or_\r\nWe can roll everything up into 1 dll and have it just work.\r\n\r\nFor now, I propose we do the latter. However, this means we need tight control over our symbol visibility. If you're not familiar, see here for the canonical primer: https://gcc.gnu.org/wiki/Visibility\r\n\r\ntl;dr: We set everything to \"hidden\", then manually mark the functions that are meant to be visible.\r\n\r\nI've pushed up a branch that defines our _current_ api as used by bitcoin-chainstate here: https://github.com/theuni/bitcoin/commits/fix-dll-exports2 . This includes #27144 as a bugfix if you wouldn't mind reviewing.\r\n\r\nNote that this branch is just a test to see how we're currently looking. At the moment we're exporting random functions and globals all over the place. Obviously that's not ideal, but at least this helps us to see where we are.\r\n\r\nThis can be checked by building a shared bitcoin-chainstate.exe. If any of the `EXPORT_SYMBOL`s are removed, bitcoin-chainstate.exe will fail to link.\r\n\r\n\r\nTo answer your question about secp.. It is not marked as exported by libkernel (we fixed that in https://github.com/bitcoin-core/secp256k1/pull/1105). This means that libkernel can use secp _internally_, but any exe that links against it can't see those functions. Just like it can't see pthreads/libstdc++/etc. If exe's saw those functions, they'd collide with their _own_ toolchain functions and things would get weird.\r\n\r\nHowever, this introduces the possibility of having libkernel and bitcoin-chainstate using different secp versions. For this reason, we may decide to ship multiple dll's instead. But either way, we'll want to define our function visibility in order to build the smallest possible binaries.\r\n\r\nHope that thought-dump helps, I'd be happy discuss further in realtime.",
      "created_at" : "2023-02-22T16:10:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25008#issuecomment-1440326006",
      "id" : 1440326006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25008",
      "node_id" : "IC_kwDOABII585V2aF2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1440326006/reactions"
      },
      "updated_at" : "2023-02-22T16:10:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1440326006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   }
]
