[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r771593019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771593019"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can you check that the wtxid inside WITNESS_SWAPPED is the wtxid of child1?",
      "commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2021-12-17T18:13:04Z",
      "diff_hunk" : "@@ -327,4 +327,122 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n }\n+\n+// Tests for packages containing transactions that have same-txid-different-witness equivalents in\n+// the mempool.\n+BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Transactions with a same-txid-different-witness transaction in the mempool should be swapped.\n+    CScript witnessScript = CScript() << OP_DROP << OP_TRUE;\n+    CScript scriptPubKey = GetScriptForDestination(WitnessV0ScriptHash(witnessScript));\n+    auto mtx_parent = CreateValidMempoolTransaction(/* input_transaction */ m_coinbase_txns[0], /* vout */ 0,\n+                                                    /* input_height */ 0, /* input_signing_key */ coinbaseKey,\n+                                                    /* output_destination */ scriptPubKey,\n+                                                    /* output_amount */ CAmount(49 * COIN), /* submit */ false);\n+    CTransactionRef ptx_parent = MakeTransactionRef(mtx_parent);\n+\n+    // Make two children with the same txid but different witnesses.\n+    CScriptWitness witness1;\n+    witness1.stack.push_back(std::vector<unsigned char>(1));\n+    witness1.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CScriptWitness witness2(witness1);\n+    witness2.stack.push_back(std::vector<unsigned char>(2));\n+    witness2.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript child_locking_script = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CMutableTransaction mtx_child1;\n+    mtx_child1.nVersion = 1;\n+    mtx_child1.vin.resize(1);\n+    mtx_child1.vin[0].prevout.hash = ptx_parent->GetHash();\n+    mtx_child1.vin[0].prevout.n = 0;\n+    mtx_child1.vin[0].scriptSig = CScript();\n+    mtx_child1.vin[0].scriptWitness = witness1;\n+    mtx_child1.vout.resize(1);\n+    mtx_child1.vout[0].nValue = CAmount(48 * COIN);\n+    mtx_child1.vout[0].scriptPubKey = child_locking_script;\n+\n+    CMutableTransaction mtx_child2{mtx_child1};\n+    mtx_child2.vin[0].scriptWitness = witness2;\n+\n+    CTransactionRef ptx_child1 = MakeTransactionRef(mtx_child1);\n+    CTransactionRef ptx_child2 = MakeTransactionRef(mtx_child2);\n+\n+    // child1 and child2 have the same txid\n+    BOOST_CHECK_EQUAL(ptx_child1->GetHash(), ptx_child2->GetHash());\n+    // child1 and child2 have different wtxids\n+    BOOST_CHECK(ptx_child1->GetWitnessHash() != ptx_child2->GetWitnessHash());\n+\n+    // Try submitting Package1{parent, child1} and Package2{parent, child2} where the children are\n+    // same-txid-different-witness.\n+    {\n+        const auto submit_witness1 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child1}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness1.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness1.m_state.GetRejectReason());\n+        auto it_parent1 = submit_witness1.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child1 = submit_witness1.m_tx_results.find(ptx_child1->GetWitnessHash());\n+        BOOST_CHECK(it_parent1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_parent1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_parent1->second.m_state.GetRejectReason());\n+        BOOST_CHECK(it_child1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_child1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_child1->second.m_state.GetRejectReason());\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child1->GetHash())));\n+\n+        const auto submit_witness2 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child2}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness2.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness2.m_state.GetRejectReason());\n+        auto it_parent2_deduped = submit_witness2.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child2 = submit_witness2.m_tx_results.find(ptx_child2->GetWitnessHash());\n+        BOOST_CHECK(it_parent2_deduped != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_parent2_deduped->second.m_result_type == MempoolAcceptResult::ResultType::MEMPOOL_ENTRY);\n+        BOOST_CHECK(it_child2 != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_child2->second.m_result_type == MempoolAcceptResult::ResultType::WITNESS_SWAPPED);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r771593019",
      "id" : 771593019,
      "line" : 408,
      "node_id" : "PRRC_kwDOABII584t_ZM7",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 408,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 82,
      "pull_request_review_id" : 835515377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771593019/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-17T18:15:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771593019",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r771593717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771593717"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : ":clap: ",
      "commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2021-12-17T18:14:30Z",
      "diff_hunk" : "@@ -327,4 +327,122 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n }\n+\n+// Tests for packages containing transactions that have same-txid-different-witness equivalents in\n+// the mempool.\n+BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Transactions with a same-txid-different-witness transaction in the mempool should be swapped.\n+    CScript witnessScript = CScript() << OP_DROP << OP_TRUE;\n+    CScript scriptPubKey = GetScriptForDestination(WitnessV0ScriptHash(witnessScript));\n+    auto mtx_parent = CreateValidMempoolTransaction(/* input_transaction */ m_coinbase_txns[0], /* vout */ 0,\n+                                                    /* input_height */ 0, /* input_signing_key */ coinbaseKey,\n+                                                    /* output_destination */ scriptPubKey,\n+                                                    /* output_amount */ CAmount(49 * COIN), /* submit */ false);\n+    CTransactionRef ptx_parent = MakeTransactionRef(mtx_parent);\n+\n+    // Make two children with the same txid but different witnesses.\n+    CScriptWitness witness1;\n+    witness1.stack.push_back(std::vector<unsigned char>(1));\n+    witness1.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CScriptWitness witness2(witness1);\n+    witness2.stack.push_back(std::vector<unsigned char>(2));\n+    witness2.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript child_locking_script = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CMutableTransaction mtx_child1;\n+    mtx_child1.nVersion = 1;\n+    mtx_child1.vin.resize(1);\n+    mtx_child1.vin[0].prevout.hash = ptx_parent->GetHash();\n+    mtx_child1.vin[0].prevout.n = 0;\n+    mtx_child1.vin[0].scriptSig = CScript();\n+    mtx_child1.vin[0].scriptWitness = witness1;\n+    mtx_child1.vout.resize(1);\n+    mtx_child1.vout[0].nValue = CAmount(48 * COIN);\n+    mtx_child1.vout[0].scriptPubKey = child_locking_script;\n+\n+    CMutableTransaction mtx_child2{mtx_child1};\n+    mtx_child2.vin[0].scriptWitness = witness2;\n+\n+    CTransactionRef ptx_child1 = MakeTransactionRef(mtx_child1);\n+    CTransactionRef ptx_child2 = MakeTransactionRef(mtx_child2);\n+\n+    // child1 and child2 have the same txid\n+    BOOST_CHECK_EQUAL(ptx_child1->GetHash(), ptx_child2->GetHash());\n+    // child1 and child2 have different wtxids\n+    BOOST_CHECK(ptx_child1->GetWitnessHash() != ptx_child2->GetWitnessHash());\n+\n+    // Try submitting Package1{parent, child1} and Package2{parent, child2} where the children are\n+    // same-txid-different-witness.\n+    {\n+        const auto submit_witness1 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child1}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness1.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness1.m_state.GetRejectReason());\n+        auto it_parent1 = submit_witness1.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child1 = submit_witness1.m_tx_results.find(ptx_child1->GetWitnessHash());\n+        BOOST_CHECK(it_parent1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_parent1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_parent1->second.m_state.GetRejectReason());\n+        BOOST_CHECK(it_child1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_child1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_child1->second.m_state.GetRejectReason());\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child1->GetHash())));\n+\n+        const auto submit_witness2 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child2}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness2.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness2.m_state.GetRejectReason());\n+        auto it_parent2_deduped = submit_witness2.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child2 = submit_witness2.m_tx_results.find(ptx_child2->GetWitnessHash());\n+        BOOST_CHECK(it_parent2_deduped != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_parent2_deduped->second.m_result_type == MempoolAcceptResult::ResultType::MEMPOOL_ENTRY);\n+        BOOST_CHECK(it_child2 != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_child2->second.m_result_type == MempoolAcceptResult::ResultType::WITNESS_SWAPPED);\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child2->GetHash())));\n+        BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_child2->GetWitnessHash())));\n+    }\n+\n+    // Try submitting Package1{child2, grandchild} where child2 is same-txid-different-witness as\n+    // the in-mempool transaction, child1. Since child1 exists in the mempool and its outputs are\n+    // available, child2 should be swapped and granchild should be accepted.\n+    //\n+    // This tests a potential censorship vector in which an attacker broadcasts a competing package\n+    // where a parent's witness is mutated. The honest package should be accepted despite the fact\n+    // that we don't allow witness replacement.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r771593717",
      "id" : 771593717,
      "line" : 420,
      "node_id" : "PRRC_kwDOABII584t_ZX1",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 420,
      "original_position" : 94,
      "original_start_line" : 414,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 94,
      "pull_request_review_id" : 835515377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771593717/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 414,
      "start_side" : "RIGHT",
      "updated_at" : "2021-12-17T18:15:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/771593717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2021-12-17T18:30:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#issuecomment-996932544",
      "id" : 996932544,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23804",
      "node_id" : "IC_kwDOABII5847a_vA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996932544/reactions"
      },
      "updated_at" : "2021-12-17T18:30:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996932544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777100522"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777100522"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Referring to node operators setting mempool policies differently is just confusing. This can happen even if every node on the network has the same policy - it's just a property of the p2p network that transactions can arrive in different orders.",
      "commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2022-01-01T10:47:38Z",
      "diff_hunk" : "@@ -1255,10 +1255,14 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     LOCK(m_pool.cs);\n     std::map<const uint256, const MempoolAcceptResult> results;\n-    // As node operators are free to set their mempool policies however they please, it's possible\n-    // for package transaction(s) to already be in the mempool, and we don't want to reject the\n-    // entire package in that case (as that could be a censorship vector).  Filter the transactions\n-    // that are already in mempool and add their information to results, since we already have them.\n+    // Node operators are free to set their mempool policies however they please, nodes may receive",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777100522",
      "id" : 777100522,
      "line" : 1258,
      "node_id" : "PRRC_kwDOABII584uUZzq",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 1258,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 8,
      "pull_request_review_id" : 842330823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777100522/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-01T11:31:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777100522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777101009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101009"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use comments that clang-tidy can understand:\r\n\r\n```suggestion\r\n    auto mtx_grandchild = CreateValidMempoolTransaction(/*input_transaction=*/ptx_child2, /*vout=*/0,\r\n```\r\n\r\netc. There are a few other places that can also be updated.\r\n\r\n(see #23545)",
      "commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2022-01-01T10:56:32Z",
      "diff_hunk" : "@@ -327,4 +327,122 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n }\n+\n+// Tests for packages containing transactions that have same-txid-different-witness equivalents in\n+// the mempool.\n+BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Transactions with a same-txid-different-witness transaction in the mempool should be swapped.\n+    CScript witnessScript = CScript() << OP_DROP << OP_TRUE;\n+    CScript scriptPubKey = GetScriptForDestination(WitnessV0ScriptHash(witnessScript));\n+    auto mtx_parent = CreateValidMempoolTransaction(/* input_transaction */ m_coinbase_txns[0], /* vout */ 0,\n+                                                    /* input_height */ 0, /* input_signing_key */ coinbaseKey,\n+                                                    /* output_destination */ scriptPubKey,\n+                                                    /* output_amount */ CAmount(49 * COIN), /* submit */ false);\n+    CTransactionRef ptx_parent = MakeTransactionRef(mtx_parent);\n+\n+    // Make two children with the same txid but different witnesses.\n+    CScriptWitness witness1;\n+    witness1.stack.push_back(std::vector<unsigned char>(1));\n+    witness1.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CScriptWitness witness2(witness1);\n+    witness2.stack.push_back(std::vector<unsigned char>(2));\n+    witness2.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript child_locking_script = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CMutableTransaction mtx_child1;\n+    mtx_child1.nVersion = 1;\n+    mtx_child1.vin.resize(1);\n+    mtx_child1.vin[0].prevout.hash = ptx_parent->GetHash();\n+    mtx_child1.vin[0].prevout.n = 0;\n+    mtx_child1.vin[0].scriptSig = CScript();\n+    mtx_child1.vin[0].scriptWitness = witness1;\n+    mtx_child1.vout.resize(1);\n+    mtx_child1.vout[0].nValue = CAmount(48 * COIN);\n+    mtx_child1.vout[0].scriptPubKey = child_locking_script;\n+\n+    CMutableTransaction mtx_child2{mtx_child1};\n+    mtx_child2.vin[0].scriptWitness = witness2;\n+\n+    CTransactionRef ptx_child1 = MakeTransactionRef(mtx_child1);\n+    CTransactionRef ptx_child2 = MakeTransactionRef(mtx_child2);\n+\n+    // child1 and child2 have the same txid\n+    BOOST_CHECK_EQUAL(ptx_child1->GetHash(), ptx_child2->GetHash());\n+    // child1 and child2 have different wtxids\n+    BOOST_CHECK(ptx_child1->GetWitnessHash() != ptx_child2->GetWitnessHash());\n+\n+    // Try submitting Package1{parent, child1} and Package2{parent, child2} where the children are\n+    // same-txid-different-witness.\n+    {\n+        const auto submit_witness1 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child1}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness1.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness1.m_state.GetRejectReason());\n+        auto it_parent1 = submit_witness1.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child1 = submit_witness1.m_tx_results.find(ptx_child1->GetWitnessHash());\n+        BOOST_CHECK(it_parent1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_parent1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_parent1->second.m_state.GetRejectReason());\n+        BOOST_CHECK(it_child1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_child1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_child1->second.m_state.GetRejectReason());\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child1->GetHash())));\n+\n+        const auto submit_witness2 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child2}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness2.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness2.m_state.GetRejectReason());\n+        auto it_parent2_deduped = submit_witness2.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child2 = submit_witness2.m_tx_results.find(ptx_child2->GetWitnessHash());\n+        BOOST_CHECK(it_parent2_deduped != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_parent2_deduped->second.m_result_type == MempoolAcceptResult::ResultType::MEMPOOL_ENTRY);\n+        BOOST_CHECK(it_child2 != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_child2->second.m_result_type == MempoolAcceptResult::ResultType::WITNESS_SWAPPED);\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child2->GetHash())));\n+        BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_child2->GetWitnessHash())));\n+    }\n+\n+    // Try submitting Package1{child2, grandchild} where child2 is same-txid-different-witness as\n+    // the in-mempool transaction, child1. Since child1 exists in the mempool and its outputs are\n+    // available, child2 should be swapped and granchild should be accepted.\n+    //\n+    // This tests a potential censorship vector in which an attacker broadcasts a competing package\n+    // where a parent's witness is mutated. The honest package should be accepted despite the fact\n+    // that we don't allow witness replacement.\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript grandchild_locking_script = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+    auto mtx_grandchild = CreateValidMempoolTransaction(/* input_transaction */ ptx_child2, /* vout */ 0,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777101009",
      "id" : 777101009,
      "line" : 424,
      "node_id" : "PRRC_kwDOABII584uUZ7R",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 424,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 98,
      "pull_request_review_id" : 842330823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101009/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-01T11:31:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101009",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777101401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101401"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the word swapped is slightly confusing here. It suggests to me that child1 will be replaced (\"swapped\") with child2 in the mempool.",
      "commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2022-01-01T11:04:08Z",
      "diff_hunk" : "@@ -327,4 +327,122 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n }\n+\n+// Tests for packages containing transactions that have same-txid-different-witness equivalents in\n+// the mempool.\n+BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Transactions with a same-txid-different-witness transaction in the mempool should be swapped.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777101401",
      "id" : 777101401,
      "line" : 337,
      "node_id" : "PRRC_kwDOABII584uUaBZ",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 337,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 11,
      "pull_request_review_id" : 842330823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101401/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-01T11:31:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777101415"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101415"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    // available, child2 should be swapped and grandchild should be accepted.\r\n```",
      "commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2022-01-01T11:04:15Z",
      "diff_hunk" : "@@ -327,4 +327,122 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n }\n+\n+// Tests for packages containing transactions that have same-txid-different-witness equivalents in\n+// the mempool.\n+BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Transactions with a same-txid-different-witness transaction in the mempool should be swapped.\n+    CScript witnessScript = CScript() << OP_DROP << OP_TRUE;\n+    CScript scriptPubKey = GetScriptForDestination(WitnessV0ScriptHash(witnessScript));\n+    auto mtx_parent = CreateValidMempoolTransaction(/* input_transaction */ m_coinbase_txns[0], /* vout */ 0,\n+                                                    /* input_height */ 0, /* input_signing_key */ coinbaseKey,\n+                                                    /* output_destination */ scriptPubKey,\n+                                                    /* output_amount */ CAmount(49 * COIN), /* submit */ false);\n+    CTransactionRef ptx_parent = MakeTransactionRef(mtx_parent);\n+\n+    // Make two children with the same txid but different witnesses.\n+    CScriptWitness witness1;\n+    witness1.stack.push_back(std::vector<unsigned char>(1));\n+    witness1.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CScriptWitness witness2(witness1);\n+    witness2.stack.push_back(std::vector<unsigned char>(2));\n+    witness2.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript child_locking_script = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CMutableTransaction mtx_child1;\n+    mtx_child1.nVersion = 1;\n+    mtx_child1.vin.resize(1);\n+    mtx_child1.vin[0].prevout.hash = ptx_parent->GetHash();\n+    mtx_child1.vin[0].prevout.n = 0;\n+    mtx_child1.vin[0].scriptSig = CScript();\n+    mtx_child1.vin[0].scriptWitness = witness1;\n+    mtx_child1.vout.resize(1);\n+    mtx_child1.vout[0].nValue = CAmount(48 * COIN);\n+    mtx_child1.vout[0].scriptPubKey = child_locking_script;\n+\n+    CMutableTransaction mtx_child2{mtx_child1};\n+    mtx_child2.vin[0].scriptWitness = witness2;\n+\n+    CTransactionRef ptx_child1 = MakeTransactionRef(mtx_child1);\n+    CTransactionRef ptx_child2 = MakeTransactionRef(mtx_child2);\n+\n+    // child1 and child2 have the same txid\n+    BOOST_CHECK_EQUAL(ptx_child1->GetHash(), ptx_child2->GetHash());\n+    // child1 and child2 have different wtxids\n+    BOOST_CHECK(ptx_child1->GetWitnessHash() != ptx_child2->GetWitnessHash());\n+\n+    // Try submitting Package1{parent, child1} and Package2{parent, child2} where the children are\n+    // same-txid-different-witness.\n+    {\n+        const auto submit_witness1 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child1}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness1.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness1.m_state.GetRejectReason());\n+        auto it_parent1 = submit_witness1.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child1 = submit_witness1.m_tx_results.find(ptx_child1->GetWitnessHash());\n+        BOOST_CHECK(it_parent1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_parent1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_parent1->second.m_state.GetRejectReason());\n+        BOOST_CHECK(it_child1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_child1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_child1->second.m_state.GetRejectReason());\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child1->GetHash())));\n+\n+        const auto submit_witness2 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child2}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness2.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness2.m_state.GetRejectReason());\n+        auto it_parent2_deduped = submit_witness2.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child2 = submit_witness2.m_tx_results.find(ptx_child2->GetWitnessHash());\n+        BOOST_CHECK(it_parent2_deduped != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_parent2_deduped->second.m_result_type == MempoolAcceptResult::ResultType::MEMPOOL_ENTRY);\n+        BOOST_CHECK(it_child2 != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_child2->second.m_result_type == MempoolAcceptResult::ResultType::WITNESS_SWAPPED);\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child2->GetHash())));\n+        BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_child2->GetWitnessHash())));\n+    }\n+\n+    // Try submitting Package1{child2, grandchild} where child2 is same-txid-different-witness as\n+    // the in-mempool transaction, child1. Since child1 exists in the mempool and its outputs are\n+    // available, child2 should be swapped and granchild should be accepted.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777101415",
      "id" : 777101415,
      "line" : 416,
      "node_id" : "PRRC_kwDOABII584uUaBn",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 416,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 90,
      "pull_request_review_id" : 842330823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101415/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-01T11:31:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101415",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777101420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101420"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I also think the word \"swapped\" here is confusing.",
      "commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2022-01-01T11:04:33Z",
      "diff_hunk" : "@@ -327,4 +327,122 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n }\n+\n+// Tests for packages containing transactions that have same-txid-different-witness equivalents in\n+// the mempool.\n+BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Transactions with a same-txid-different-witness transaction in the mempool should be swapped.\n+    CScript witnessScript = CScript() << OP_DROP << OP_TRUE;\n+    CScript scriptPubKey = GetScriptForDestination(WitnessV0ScriptHash(witnessScript));\n+    auto mtx_parent = CreateValidMempoolTransaction(/* input_transaction */ m_coinbase_txns[0], /* vout */ 0,\n+                                                    /* input_height */ 0, /* input_signing_key */ coinbaseKey,\n+                                                    /* output_destination */ scriptPubKey,\n+                                                    /* output_amount */ CAmount(49 * COIN), /* submit */ false);\n+    CTransactionRef ptx_parent = MakeTransactionRef(mtx_parent);\n+\n+    // Make two children with the same txid but different witnesses.\n+    CScriptWitness witness1;\n+    witness1.stack.push_back(std::vector<unsigned char>(1));\n+    witness1.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CScriptWitness witness2(witness1);\n+    witness2.stack.push_back(std::vector<unsigned char>(2));\n+    witness2.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript child_locking_script = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CMutableTransaction mtx_child1;\n+    mtx_child1.nVersion = 1;\n+    mtx_child1.vin.resize(1);\n+    mtx_child1.vin[0].prevout.hash = ptx_parent->GetHash();\n+    mtx_child1.vin[0].prevout.n = 0;\n+    mtx_child1.vin[0].scriptSig = CScript();\n+    mtx_child1.vin[0].scriptWitness = witness1;\n+    mtx_child1.vout.resize(1);\n+    mtx_child1.vout[0].nValue = CAmount(48 * COIN);\n+    mtx_child1.vout[0].scriptPubKey = child_locking_script;\n+\n+    CMutableTransaction mtx_child2{mtx_child1};\n+    mtx_child2.vin[0].scriptWitness = witness2;\n+\n+    CTransactionRef ptx_child1 = MakeTransactionRef(mtx_child1);\n+    CTransactionRef ptx_child2 = MakeTransactionRef(mtx_child2);\n+\n+    // child1 and child2 have the same txid\n+    BOOST_CHECK_EQUAL(ptx_child1->GetHash(), ptx_child2->GetHash());\n+    // child1 and child2 have different wtxids\n+    BOOST_CHECK(ptx_child1->GetWitnessHash() != ptx_child2->GetWitnessHash());\n+\n+    // Try submitting Package1{parent, child1} and Package2{parent, child2} where the children are\n+    // same-txid-different-witness.\n+    {\n+        const auto submit_witness1 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child1}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness1.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness1.m_state.GetRejectReason());\n+        auto it_parent1 = submit_witness1.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child1 = submit_witness1.m_tx_results.find(ptx_child1->GetWitnessHash());\n+        BOOST_CHECK(it_parent1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_parent1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_parent1->second.m_state.GetRejectReason());\n+        BOOST_CHECK(it_child1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_child1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_child1->second.m_state.GetRejectReason());\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child1->GetHash())));\n+\n+        const auto submit_witness2 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child2}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness2.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness2.m_state.GetRejectReason());\n+        auto it_parent2_deduped = submit_witness2.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child2 = submit_witness2.m_tx_results.find(ptx_child2->GetWitnessHash());\n+        BOOST_CHECK(it_parent2_deduped != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_parent2_deduped->second.m_result_type == MempoolAcceptResult::ResultType::MEMPOOL_ENTRY);\n+        BOOST_CHECK(it_child2 != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_child2->second.m_result_type == MempoolAcceptResult::ResultType::WITNESS_SWAPPED);\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child2->GetHash())));\n+        BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_child2->GetWitnessHash())));\n+    }\n+\n+    // Try submitting Package1{child2, grandchild} where child2 is same-txid-different-witness as\n+    // the in-mempool transaction, child1. Since child1 exists in the mempool and its outputs are\n+    // available, child2 should be swapped and granchild should be accepted.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777101420",
      "id" : 777101420,
      "line" : 416,
      "node_id" : "PRRC_kwDOABII584uUaBs",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 416,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 90,
      "pull_request_review_id" : 842330823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101420/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-01T11:31:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777101420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777102340"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777102340"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is slightly confusing terminology, but I realise it's the same as the other tests in this file, so maybe should be left as it is for now. The child transaction's output is locked with a public key, which is signed for with the corresponding private key in the grandchild transaction. I therefore think it'd be clearer if this was named `grandchild_key`, since the entity that creates the grandchild transaction owns this private key.",
      "commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2022-01-01T11:21:58Z",
      "diff_hunk" : "@@ -327,4 +327,122 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n }\n+\n+// Tests for packages containing transactions that have same-txid-different-witness equivalents in\n+// the mempool.\n+BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Transactions with a same-txid-different-witness transaction in the mempool should be swapped.\n+    CScript witnessScript = CScript() << OP_DROP << OP_TRUE;\n+    CScript scriptPubKey = GetScriptForDestination(WitnessV0ScriptHash(witnessScript));\n+    auto mtx_parent = CreateValidMempoolTransaction(/* input_transaction */ m_coinbase_txns[0], /* vout */ 0,\n+                                                    /* input_height */ 0, /* input_signing_key */ coinbaseKey,\n+                                                    /* output_destination */ scriptPubKey,\n+                                                    /* output_amount */ CAmount(49 * COIN), /* submit */ false);\n+    CTransactionRef ptx_parent = MakeTransactionRef(mtx_parent);\n+\n+    // Make two children with the same txid but different witnesses.\n+    CScriptWitness witness1;\n+    witness1.stack.push_back(std::vector<unsigned char>(1));\n+    witness1.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CScriptWitness witness2(witness1);\n+    witness2.stack.push_back(std::vector<unsigned char>(2));\n+    witness2.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript child_locking_script = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777102340",
      "id" : 777102340,
      "line" : 357,
      "node_id" : "PRRC_kwDOABII584uUaQE",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 357,
      "original_position" : 31,
      "original_start_line" : 355,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : 31,
      "pull_request_review_id" : 842330823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777102340/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 355,
      "start_side" : "RIGHT",
      "updated_at" : "2022-01-01T11:31:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777102340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777102810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777102810"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Again, I think this terminology is a bit misleading, since swapped suggests the witness was replaced in the mempool.",
      "commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "created_at" : "2022-01-01T11:30:15Z",
      "diff_hunk" : "@@ -162,8 +162,13 @@ struct MempoolAcceptResult {\n         VALID, //!> Fully validated, valid.\n         INVALID, //!> Invalid.\n         MEMPOOL_ENTRY, //!> Valid, transaction was already in the mempool.\n+        WITNESS_SWAPPED, //!> A same-txid-different-witness tx already exists in the mempool, and was not replaced.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r777102810",
      "id" : 777102810,
      "line" : 165,
      "node_id" : "PRRC_kwDOABII584uUaXa",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 165,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 4,
      "pull_request_review_id" : 842330823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777102810/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-01T11:31:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/777102810",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r780207516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780207516"
         }
      },
      "author_association" : "MEMBER",
      "body" : "transactions arriving in different orders is also listed as a possible reason",
      "commit_id" : "0300cb10094efcca1832acaa189e365b7bedaec3",
      "created_at" : "2022-01-07T11:31:06Z",
      "diff_hunk" : "@@ -1255,10 +1255,14 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     LOCK(m_pool.cs);\n     std::map<const uint256, const MempoolAcceptResult> results;\n-    // As node operators are free to set their mempool policies however they please, it's possible\n-    // for package transaction(s) to already be in the mempool, and we don't want to reject the\n-    // entire package in that case (as that could be a censorship vector).  Filter the transactions\n-    // that are already in mempool and add their information to results, since we already have them.\n+    // Node operators are free to set their mempool policies however they please, nodes may receive",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r780207516",
      "id" : 780207516,
      "in_reply_to_id" : 777100522,
      "line" : 1267,
      "node_id" : "PRRC_kwDOABII584ugQWc",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 1267,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 118,
      "pull_request_review_id" : 846528006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780207516/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:51:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780207516",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r780401976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780401976"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed result enum to `DIFFERENT_WITNESS` and verb from \"swapped\" to \"ignored\" in comments",
      "commit_id" : "0300cb10094efcca1832acaa189e365b7bedaec3",
      "created_at" : "2022-01-07T17:05:52Z",
      "diff_hunk" : "@@ -327,4 +327,122 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n }\n+\n+// Tests for packages containing transactions that have same-txid-different-witness equivalents in\n+// the mempool.\n+BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Transactions with a same-txid-different-witness transaction in the mempool should be swapped.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r780401976",
      "id" : 780401976,
      "in_reply_to_id" : 777101401,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584ug_04",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 337,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 846528006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780401976/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-07T17:51:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780401976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed comments and added the fixups from @jnewbery's review on #22674 - most have no behavior changes so they're grouped in 1 commit. Another commit fixes the issue where we're not notifying MainSignals when there's a partial submission.",
      "created_at" : "2022-01-07T17:53:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#issuecomment-1007608798",
      "id" : 1007608798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23804",
      "node_id" : "IC_kwDOABII5848DuPe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1007608798/reactions"
      },
      "updated_at" : "2022-01-07T17:53:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1007608798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r780868767"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780868767"
         }
      },
      "author_association" : "MEMBER",
      "body" : "field seems to exist in either case?",
      "commit_id" : "0300cb10094efcca1832acaa189e365b7bedaec3",
      "created_at" : "2022-01-10T02:35:47Z",
      "diff_hunk" : "@@ -161,8 +161,13 @@ struct MempoolAcceptResult {\n         VALID, //!> Fully validated, valid.\n         INVALID, //!> Invalid.\n         MEMPOOL_ENTRY, //!> Valid, transaction was already in the mempool.\n+        DIFFERENT_WITNESS, //!> Not validated. A same-txid-different-witness tx (see m_other_wtxid) already exists in the mempool and was not replaced.\n     };\n+    /** Result type. Present in all MempoolAcceptResults. */\n     const ResultType m_result_type;\n+\n+    // The following field is only present when m_result_type = ResultType::INVALID",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r780868767",
      "id" : 780868767,
      "line" : 169,
      "node_id" : "PRRC_kwDOABII584uixyf",
      "original_commit_id" : "1098f39db3e5a5f5408bc74b14ad71b89c4914d9",
      "original_line" : 169,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 9,
      "pull_request_review_id" : 847347878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780868767/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-10T02:55:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/780868767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r782258138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782258138"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah yeah, not nonexistent, but unset. Default is valid, with all fields empty, so not much meaning.",
      "commit_id" : "0300cb10094efcca1832acaa189e365b7bedaec3",
      "created_at" : "2022-01-11T15:28:10Z",
      "diff_hunk" : "@@ -161,8 +161,13 @@ struct MempoolAcceptResult {\n         VALID, //!> Fully validated, valid.\n         INVALID, //!> Invalid.\n         MEMPOOL_ENTRY, //!> Valid, transaction was already in the mempool.\n+        DIFFERENT_WITNESS, //!> Not validated. A same-txid-different-witness tx (see m_other_wtxid) already exists in the mempool and was not replaced.\n     };\n+    /** Result type. Present in all MempoolAcceptResults. */\n     const ResultType m_result_type;\n+\n+    // The following field is only present when m_result_type = ResultType::INVALID",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r782258138",
      "id" : 782258138,
      "in_reply_to_id" : 780868767,
      "line" : 169,
      "node_id" : "PRRC_kwDOABII584uoE_a",
      "original_commit_id" : "1098f39db3e5a5f5408bc74b14ad71b89c4914d9",
      "original_line" : 169,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : 9,
      "pull_request_review_id" : 849340211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782258138/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-11T15:28:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/782258138",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r785966574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785966574"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, applied to all the test code that's added in this PR.",
      "commit_id" : "fa5aafca83a5cea9870efaf810720509bccb060d",
      "created_at" : "2022-01-17T12:40:26Z",
      "diff_hunk" : "@@ -327,4 +327,122 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n }\n+\n+// Tests for packages containing transactions that have same-txid-different-witness equivalents in\n+// the mempool.\n+BOOST_FIXTURE_TEST_CASE(package_witness_swap_tests, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Transactions with a same-txid-different-witness transaction in the mempool should be swapped.\n+    CScript witnessScript = CScript() << OP_DROP << OP_TRUE;\n+    CScript scriptPubKey = GetScriptForDestination(WitnessV0ScriptHash(witnessScript));\n+    auto mtx_parent = CreateValidMempoolTransaction(/* input_transaction */ m_coinbase_txns[0], /* vout */ 0,\n+                                                    /* input_height */ 0, /* input_signing_key */ coinbaseKey,\n+                                                    /* output_destination */ scriptPubKey,\n+                                                    /* output_amount */ CAmount(49 * COIN), /* submit */ false);\n+    CTransactionRef ptx_parent = MakeTransactionRef(mtx_parent);\n+\n+    // Make two children with the same txid but different witnesses.\n+    CScriptWitness witness1;\n+    witness1.stack.push_back(std::vector<unsigned char>(1));\n+    witness1.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CScriptWitness witness2(witness1);\n+    witness2.stack.push_back(std::vector<unsigned char>(2));\n+    witness2.stack.push_back(std::vector<unsigned char>(witnessScript.begin(), witnessScript.end()));\n+\n+    CKey child_key;\n+    child_key.MakeNewKey(true);\n+    CScript child_locking_script = GetScriptForDestination(WitnessV0KeyHash(child_key.GetPubKey()));\n+    CMutableTransaction mtx_child1;\n+    mtx_child1.nVersion = 1;\n+    mtx_child1.vin.resize(1);\n+    mtx_child1.vin[0].prevout.hash = ptx_parent->GetHash();\n+    mtx_child1.vin[0].prevout.n = 0;\n+    mtx_child1.vin[0].scriptSig = CScript();\n+    mtx_child1.vin[0].scriptWitness = witness1;\n+    mtx_child1.vout.resize(1);\n+    mtx_child1.vout[0].nValue = CAmount(48 * COIN);\n+    mtx_child1.vout[0].scriptPubKey = child_locking_script;\n+\n+    CMutableTransaction mtx_child2{mtx_child1};\n+    mtx_child2.vin[0].scriptWitness = witness2;\n+\n+    CTransactionRef ptx_child1 = MakeTransactionRef(mtx_child1);\n+    CTransactionRef ptx_child2 = MakeTransactionRef(mtx_child2);\n+\n+    // child1 and child2 have the same txid\n+    BOOST_CHECK_EQUAL(ptx_child1->GetHash(), ptx_child2->GetHash());\n+    // child1 and child2 have different wtxids\n+    BOOST_CHECK(ptx_child1->GetWitnessHash() != ptx_child2->GetWitnessHash());\n+\n+    // Try submitting Package1{parent, child1} and Package2{parent, child2} where the children are\n+    // same-txid-different-witness.\n+    {\n+        const auto submit_witness1 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child1}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness1.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness1.m_state.GetRejectReason());\n+        auto it_parent1 = submit_witness1.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child1 = submit_witness1.m_tx_results.find(ptx_child1->GetWitnessHash());\n+        BOOST_CHECK(it_parent1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_parent1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_parent1->second.m_state.GetRejectReason());\n+        BOOST_CHECK(it_child1 != submit_witness1.m_tx_results.end());\n+        BOOST_CHECK_MESSAGE(it_child1->second.m_state.IsValid(),\n+                            \"Transaction unexpectedly failed: \" << it_child1->second.m_state.GetRejectReason());\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_parent->GetHash())));\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child1->GetHash())));\n+\n+        const auto submit_witness2 = ProcessNewPackage(m_node.chainman->ActiveChainstate(), *m_node.mempool,\n+                                                       {ptx_parent, ptx_child2}, /* test_accept */ false);\n+        BOOST_CHECK_MESSAGE(submit_witness2.m_state.IsValid(),\n+                            \"Package validation unexpectedly failed: \" << submit_witness2.m_state.GetRejectReason());\n+        auto it_parent2_deduped = submit_witness2.m_tx_results.find(ptx_parent->GetWitnessHash());\n+        auto it_child2 = submit_witness2.m_tx_results.find(ptx_child2->GetWitnessHash());\n+        BOOST_CHECK(it_parent2_deduped != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_parent2_deduped->second.m_result_type == MempoolAcceptResult::ResultType::MEMPOOL_ENTRY);\n+        BOOST_CHECK(it_child2 != submit_witness2.m_tx_results.end());\n+        BOOST_CHECK(it_child2->second.m_result_type == MempoolAcceptResult::ResultType::WITNESS_SWAPPED);\n+\n+        BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(ptx_child2->GetHash())));\n+        BOOST_CHECK(!m_node.mempool->exists(GenTxid::Wtxid(ptx_child2->GetWitnessHash())));\n+    }\n+\n+    // Try submitting Package1{child2, grandchild} where child2 is same-txid-different-witness as\n+    // the in-mempool transaction, child1. Since child1 exists in the mempool and its outputs are\n+    // available, child2 should be swapped and granchild should be accepted.\n+    //\n+    // This tests a potential censorship vector in which an attacker broadcasts a competing package\n+    // where a parent's witness is mutated. The honest package should be accepted despite the fact\n+    // that we don't allow witness replacement.\n+    CKey grandchild_key;\n+    grandchild_key.MakeNewKey(true);\n+    CScript grandchild_locking_script = GetScriptForDestination(WitnessV0KeyHash(grandchild_key.GetPubKey()));\n+    auto mtx_grandchild = CreateValidMempoolTransaction(/* input_transaction */ ptx_child2, /* vout */ 0,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r785966574",
      "id" : 785966574,
      "in_reply_to_id" : 777101009,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584u2OXu",
      "original_commit_id" : "fcc2f91ed48b748c19cb99fad40f57de6cd3a445",
      "original_line" : 426,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "src/test/txpackage_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 854346904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785966574/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-17T12:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785966574",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r785966785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785966785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed this comment",
      "commit_id" : "fa5aafca83a5cea9870efaf810720509bccb060d",
      "created_at" : "2022-01-17T12:40:37Z",
      "diff_hunk" : "@@ -161,8 +161,13 @@ struct MempoolAcceptResult {\n         VALID, //!> Fully validated, valid.\n         INVALID, //!> Invalid.\n         MEMPOOL_ENTRY, //!> Valid, transaction was already in the mempool.\n+        DIFFERENT_WITNESS, //!> Not validated. A same-txid-different-witness tx (see m_other_wtxid) already exists in the mempool and was not replaced.\n     };\n+    /** Result type. Present in all MempoolAcceptResults. */\n     const ResultType m_result_type;\n+\n+    // The following field is only present when m_result_type = ResultType::INVALID",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r785966785",
      "id" : 785966785,
      "in_reply_to_id" : 780868767,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584u2ObB",
      "original_commit_id" : "1098f39db3e5a5f5408bc74b14ad71b89c4914d9",
      "original_line" : 169,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validation.h",
      "position" : null,
      "pull_request_review_id" : 854347075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785966785/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-17T12:40:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785966785",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added more tests for funsies, the rest of the diff is just changing comments.\r\n\r\n@ariard @achow101 @jnewbery @instagibbs @t-bast if you have time to take another look? Would be nice to add these fixups with #22674 before v23",
      "created_at" : "2022-01-17T12:44:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#issuecomment-1014480731",
      "id" : 1014480731,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23804",
      "node_id" : "IC_kwDOABII5848d79b",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1014480731/reactions"
      },
      "updated_at" : "2022-01-17T12:44:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1014480731",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 3cd7f693d3ed1bb7cf9ba3e0c482174df3684972",
      "created_at" : "2022-01-17T18:16:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#issuecomment-1014793989",
      "id" : 1014793989,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23804",
      "node_id" : "IC_kwDOABII5848fIcF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1014793989/reactions"
      },
      "updated_at" : "2022-01-17T18:16:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1014793989",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r791295300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/791295300"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well technically if this code change now trigger a `TransactionAddedToMempool()`, I think we're changing the views of our `CMainSignals` consumers and that would constitute a behavior change. That said, if I'm correct, I don't think it's worthy to invalidate ACKs just to update commit description.  ",
      "commit_id" : "3cd7f693d3ed1bb7cf9ba3e0c482174df3684972",
      "created_at" : "2022-01-25T01:56:00Z",
      "diff_hunk" : "@@ -1088,7 +1096,6 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n     LimitMempoolSize(m_pool, m_active_chainstate.CoinsTip(),\n                      gArgs.GetIntArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000,\n                      std::chrono::hours{gArgs.GetIntArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY)});\n-    if (!all_submitted) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#discussion_r791295300",
      "id" : 791295300,
      "line" : 1086,
      "node_id" : "PRRC_kwDOABII584vKjVE",
      "original_commit_id" : "de075a98eaf0b3f7676c5c78b50b66902202b34c",
      "original_line" : 1091,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 39,
      "pull_request_review_id" : 861705345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23804",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/791295300/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-01-25T01:59:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/791295300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Can I comment? ",
      "created_at" : "2022-03-06T15:31:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23804#issuecomment-1059983890",
      "id" : 1059983890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23804",
      "node_id" : "IC_kwDOABII584_LhIS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059983890/reactions"
      },
      "updated_at" : "2022-03-06T15:31:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1059983890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/100084680?v=4",
         "events_url" : "https://api.github.com/users/ClaraBara22/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ClaraBara22/followers",
         "following_url" : "https://api.github.com/users/ClaraBara22/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ClaraBara22/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ClaraBara22",
         "id" : 100084680,
         "login" : "ClaraBara22",
         "node_id" : "U_kgDOBfcryA",
         "organizations_url" : "https://api.github.com/users/ClaraBara22/orgs",
         "received_events_url" : "https://api.github.com/users/ClaraBara22/received_events",
         "repos_url" : "https://api.github.com/users/ClaraBara22/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ClaraBara22/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ClaraBara22/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ClaraBara22"
      }
   }
]
