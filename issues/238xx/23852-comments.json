[
   {
      "author_association" : "MEMBER",
      "body" : "As a workaround it is possible to start a node with the datadir on one hard drive and another one with the datadir on the other hard drive using `-connect=localhost` to import the blocks",
      "created_at" : "2021-12-24T09:50:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23852#issuecomment-1000759073",
      "id" : 1000759073,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23852",
      "node_id" : "IC_kwDOABII5847pl8h",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1000759073/reactions"
      },
      "updated_at" : "2021-12-24T09:50:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1000759073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke I was just looking at this because I've been looking at issues related to re-indexing. Please re-open this issue if you agree with my thoughts below.\r\n\r\n1. I think that `-prune=N` plus `-loadblock=path` could be made to work. That seems to make sense. An example use case is like what you were doing in your issue report above, where you have a clean set of block files and you want to create a pruned node from them, but you don't want to change the input set of block files.\r\n\r\n1. I think that `-prune=N` plus `-reindex` makes potentially less sense together and should not be made to work.\r\n    1. Enabling this combo could be dangerous by being destructive of the input blk files. If a problem occurs during re-indexing, then this combo may increase the chance of having to re-download lots of block data. If we leave them as a non-effective combo, then many re-indexing failures can be overcome by simply staring over with the original blk files still intact.\r\n    1. A case where this combo may not make sense has to do with out of order blocks in blk files. The `-reindex` process can process blocks out of order. We wouldn't want to prune a blk file that contains a block that was encountered out of order because when an out of order block is processed during re-indexing, its location is saved for a later re-read from the blk file after its parent is processed. If we pruned the blk file containing it, then we'd lose it and all of its ancestor blocks. We'd have to re-download them because the re-index process would consider all of its ancestors as being encountered out of order and not connectable. Therefore, we would not prune those blk files and thus the `-prune=N` would be a potentially meaningless suggestion (depending on how out of order a block was in a set of input block files) rather than a limit set by the node operator that will be generally adhered too. A worst case would have the last/best block inserted after genesis in the first blk file (dumb, but possible). No pruning would be possible until after everything is re-indexed.",
      "created_at" : "2022-04-20T17:12:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23852#issuecomment-1104200340",
      "id" : 1104200340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23852",
      "node_id" : "IC_kwDOABII585B0MKU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1104200340/reactions"
      },
      "updated_at" : "2022-04-20T17:12:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1104200340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6440430?v=4",
         "events_url" : "https://api.github.com/users/mruddy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mruddy/followers",
         "following_url" : "https://api.github.com/users/mruddy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mruddy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mruddy",
         "id" : 6440430,
         "login" : "mruddy",
         "node_id" : "MDQ6VXNlcjY0NDA0MzA=",
         "organizations_url" : "https://api.github.com/users/mruddy/orgs",
         "received_events_url" : "https://api.github.com/users/mruddy/received_events",
         "repos_url" : "https://api.github.com/users/mruddy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mruddy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mruddy"
      }
   }
]
