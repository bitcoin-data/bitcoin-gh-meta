[
   {
      "author_association" : "MEMBER",
      "body" : "<details><summary>Resulting diff for faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13</summary>\r\n\r\n```diff\r\ndiff --git a/abandontransaction b/abandontransaction\r\nindex 4ce0ab0..4727471 100644\r\n--- a/abandontransaction\r\n+++ b/abandontransaction\r\n@@ -9,8 +9,6 @@ It has no effect on transactions which are already abandoned.\r\n Arguments:\r\n 1. txid    (string, required) The transaction id\r\n \r\n-Result:\r\n-\r\n Examples:\r\n > bitcoin-cli abandontransaction \"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\"\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"abandontransaction\", \"params\": [\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\ndiff --git a/estimaterawfee b/estimaterawfee\r\nindex 300ff13..8284dcf 100644\r\n--- a/estimaterawfee\r\n+++ b/estimaterawfee\r\n@@ -39,5 +39,5 @@ Result:\r\n \r\n Results are returned for any horizon which tracks blocks up to the confirmation target.\r\n \r\n-Example:\r\n+Examples:\r\n > bitcoin-cli estimaterawfee 6 0.9\r\ndiff --git a/estimatesmartfee b/estimatesmartfee\r\nindex 3cad235..b787d02 100644\r\n--- a/estimatesmartfee\r\n+++ b/estimatesmartfee\r\n@@ -29,5 +29,5 @@ fee estimation is able to return based on how long it has been running.\r\n An error is returned if not enough transactions and blocks\r\n have been observed to make an estimate for any number of blocks.\r\n \r\n-Example:\r\n+Examples:\r\n > bitcoin-cli estimatesmartfee 6\r\ndiff --git a/getrawmempool b/getrawmempool\r\nindex e995089..7050878 100644\r\n--- a/getrawmempool\r\n+++ b/getrawmempool\r\n@@ -7,7 +7,7 @@ Hint: use getmempoolentry to fetch a specific transaction from the mempool.\r\n Arguments:\r\n 1. verbose    (boolean, optional, default=false) True for a json object, false for array of transaction ids\r\n \r\n-Result: (for verbose = false):\r\n+Result (for verbose = false):\r\n [                     (json array of string)\r\n   \"transactionid\"     (string) The transaction id\r\n   ,...\r\ndiff --git a/importaddress b/importaddress\r\nindex e0f1865..9c15eea 100644\r\n--- a/importaddress\r\n+++ b/importaddress\r\n@@ -2,12 +2,6 @@ importaddress \"address\" ( \"label\" rescan p2sh )\r\n \r\n Adds an address or script (in hex) that can be watched as if it were in your wallet but cannot be used to spend. Requires a new wallet backup.\r\n \r\n-Arguments:\r\n-1. address    (string, required) The Bitcoin address (or hex-encoded script)\r\n-2. label      (string, optional, default=\"\") An optional label\r\n-3. rescan     (boolean, optional, default=true) Rescan the wallet for transactions\r\n-4. p2sh       (boolean, optional, default=false) Add the P2SH version of the script as well\r\n-\r\n Note: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\r\n may report that the imported address exists but related transactions are still missing, leading to temporarily incorrect/bogus balances and unspent outputs until rescan completes.\r\n If you have the full public key, you should call importpubkey instead of this.\r\n@@ -15,6 +9,12 @@ If you have the full public key, you should call importpubkey instead of this.\r\n Note: If you import a non-standard raw script in hex form, outputs sending to it will be treated\r\n as change, and not show up in many RPCs.\r\n \r\n+Arguments:\r\n+1. address    (string, required) The Bitcoin address (or hex-encoded script)\r\n+2. label      (string, optional, default=\"\") An optional label\r\n+3. rescan     (boolean, optional, default=true) Rescan the wallet for transactions\r\n+4. p2sh       (boolean, optional, default=false) Add the P2SH version of the script as well\r\n+\r\n Examples:\r\n \r\n Import an address with rescan\r\ndiff --git a/importmulti b/importmulti\r\nindex 51a6f51..a6afbb2 100644\r\n--- a/importmulti\r\n+++ b/importmulti\r\n@@ -4,6 +4,9 @@ Import addresses/scripts (with private or public keys, redeem script (P2SH)), op\r\n If an address/script is imported without all of the private keys required to spend from that address, it will be watchonly. The 'watchonly' option must be set to true in this case or a warning will be returned.\r\n Conversely, if all the private keys are provided and the address/script is spendable, the watchonly option must be set to false, or a warning will be returned.\r\n \r\n+Note: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\r\n+may report that the imported keys, addresses or scripts exists but related transactions are still missing.\r\n+\r\n Arguments:\r\n 1. requests                                                         (json array, required) Data to be imported\r\n      [\r\n@@ -36,12 +39,11 @@ Arguments:\r\n        \"rescan\": bool,                                              (boolean, optional, default=true) Stating if should rescan the blockchain after all imports\r\n      }\r\n \r\n-Note: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\r\n-may report that the imported keys, addresses or scripts exists but related transactions are still missing.\r\n+Result:\r\n+\r\n+Response is an array with the same size as the input that has the execution result :\r\n+  [{\"success\": true}, {\"success\": true, \"warnings\": [\"Ignoring irrelevant private key\"]}, {\"success\": false, \"error\": {\"code\": -1, \"message\": \"Internal Server Error\"}}, ...]\r\n \r\n Examples:\r\n > bitcoin-cli importmulti '[{ \"scriptPubKey\": { \"address\": \"<my address>\" }, \"timestamp\":1455191478 }, { \"scriptPubKey\": { \"address\": \"<my 2nd address>\" }, \"label\": \"example 2\", \"timestamp\": 1455191480 }]'\r\n > bitcoin-cli importmulti '[{ \"scriptPubKey\": { \"address\": \"<my address>\" }, \"timestamp\":1455191478 }]' '{ \"rescan\": false}'\r\n-\r\n-Response is an array with the same size as the input that has the execution result :\r\n-  [{\"success\": true}, {\"success\": true, \"warnings\": [\"Ignoring irrelevant private key\"]}, {\"success\": false, \"error\": {\"code\": -1, \"message\": \"Internal Server Error\"}}, ...]\r\ndiff --git a/importprivkey b/importprivkey\r\nindex d083a48..01793fd 100644\r\n--- a/importprivkey\r\n+++ b/importprivkey\r\n@@ -3,14 +3,14 @@ importprivkey \"privkey\" ( \"label\" rescan )\r\n Adds a private key (as returned by dumpprivkey) to your wallet. Requires a new wallet backup.\r\n Hint: use importmulti to import more than one private key.\r\n \r\n+Note: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\r\n+may report that the imported key exists but related transactions are still missing, leading to temporarily incorrect/bogus balances and unspent outputs until rescan completes.\r\n+\r\n Arguments:\r\n 1. privkey    (string, required) The private key (see dumpprivkey)\r\n 2. label      (string, optional, default=current label if address exists, otherwise \"\") An optional label\r\n 3. rescan     (boolean, optional, default=true) Rescan the wallet for transactions\r\n \r\n-Note: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\r\n-may report that the imported key exists but related transactions are still missing, leading to temporarily incorrect/bogus balances and unspent outputs until rescan completes.\r\n-\r\n Examples:\r\n \r\n Dump a private key\r\ndiff --git a/importpubkey b/importpubkey\r\nindex 3c79e07..54354e1 100644\r\n--- a/importpubkey\r\n+++ b/importpubkey\r\n@@ -2,14 +2,14 @@ importpubkey \"pubkey\" ( \"label\" rescan )\r\n \r\n Adds a public key (in hex) that can be watched as if it were in your wallet but cannot be used to spend. Requires a new wallet backup.\r\n \r\n+Note: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\r\n+may report that the imported pubkey exists but related transactions are still missing, leading to temporarily incorrect/bogus balances and unspent outputs until rescan completes.\r\n+\r\n Arguments:\r\n 1. pubkey    (string, required) The hex-encoded public key\r\n 2. label     (string, optional, default=\"\") An optional label\r\n 3. rescan    (boolean, optional, default=true) Rescan the wallet for transactions\r\n \r\n-Note: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\r\n-may report that the imported pubkey exists but related transactions are still missing, leading to temporarily incorrect/bogus balances and unspent outputs until rescan completes.\r\n-\r\n Examples:\r\n \r\n Import a public key with rescan\r\ndiff --git a/invalidateblock b/invalidateblock\r\nindex bb1513e..6d22805 100644\r\n--- a/invalidateblock\r\n+++ b/invalidateblock\r\n@@ -5,8 +5,6 @@ Permanently marks a block as invalid, as if it violated a consensus rule.\r\n Arguments:\r\n 1. blockhash    (string, required) the hash of the block to mark as invalid\r\n \r\n-Result:\r\n-\r\n Examples:\r\n > bitcoin-cli invalidateblock \"blockhash\"\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"invalidateblock\", \"params\": [\"blockhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\ndiff --git a/listunspent b/listunspent\r\nindex b068fc6..0960a1c 100644\r\n--- a/listunspent\r\n+++ b/listunspent\r\n@@ -22,7 +22,7 @@ Arguments:\r\n        \"minimumSumAmount\": amount,    (numeric or string, optional, default=unlimited) Minimum sum value of all UTXOs in BTC\r\n      }\r\n \r\n-Result\r\n+Result:\r\n [                   (array of json object)\r\n   {\r\n     \"txid\" : \"txid\",          (string) the transaction id \r\n@@ -43,7 +43,7 @@ Result\r\n   ,...\r\n ]\r\n \r\n-Examples\r\n+Examples:\r\n > bitcoin-cli listunspent \r\n > bitcoin-cli listunspent 6 9999999 \"[\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\",\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\"]\"\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listunspent\", \"params\": [6, 9999999 \"[\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\",\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\"]\"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\ndiff --git a/listwalletdir b/listwalletdir\r\nindex 54ea06a..9a3c26e 100644\r\n--- a/listwalletdir\r\n+++ b/listwalletdir\r\n@@ -1,5 +1,7 @@\r\n listwalletdir\r\n Returns a list of wallets in the wallet directory.\r\n+\r\n+Result:\r\n {\r\n   \"wallets\" : [                (json array of objects)\r\n     {\r\ndiff --git a/preciousblock b/preciousblock\r\nindex 786992d..2135eee 100644\r\n--- a/preciousblock\r\n+++ b/preciousblock\r\n@@ -9,8 +9,6 @@ The effects of preciousblock are not retained across restarts.\r\n Arguments:\r\n 1. blockhash    (string, required) the hash of the block to mark as precious\r\n \r\n-Result:\r\n-\r\n Examples:\r\n > bitcoin-cli preciousblock \"blockhash\"\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"preciousblock\", \"params\": [\"blockhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\ndiff --git a/reconsiderblock b/reconsiderblock\r\nindex f3ee35b..c1dc5bd 100644\r\n--- a/reconsiderblock\r\n+++ b/reconsiderblock\r\n@@ -6,8 +6,6 @@ This can be used to undo the effects of invalidateblock.\r\n Arguments:\r\n 1. blockhash    (string, required) the hash of the block to reconsider\r\n \r\n-Result:\r\n-\r\n Examples:\r\n > bitcoin-cli reconsiderblock \"blockhash\"\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"reconsiderblock\", \"params\": [\"blockhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\ndiff --git a/resendwallettransactions b/resendwallettransactions\r\nindex d349b7e..865257b 100644\r\n--- a/resendwallettransactions\r\n+++ b/resendwallettransactions\r\n@@ -2,5 +2,7 @@ resendwallettransactions\r\n Immediately re-broadcast unconfirmed wallet transactions to all peers.\r\n Intended only for testing; the wallet code periodically re-broadcasts\r\n automatically.\r\n+\r\n+Result:\r\n Returns an RPC error if -walletbroadcast is set to false.\r\n Returns array of transaction ids that were re-broadcast.\r\ndiff --git a/settxfee b/settxfee\r\nindex 579448a..bb72205 100644\r\n--- a/settxfee\r\n+++ b/settxfee\r\n@@ -5,7 +5,7 @@ Set the transaction fee per kB for this wallet. Overrides the global -paytxfee c\r\n Arguments:\r\n 1. amount    (numeric or string, required) The transaction fee in BTC/kB\r\n \r\n-Result\r\n+Result:\r\n true|false        (boolean) Returns true if successful\r\n \r\n Examples:\r\ndiff --git a/submitblock b/submitblock\r\nindex f0602ae..9141363 100644\r\n--- a/submitblock\r\n+++ b/submitblock\r\n@@ -7,8 +7,6 @@ Arguments:\r\n 1. hexdata    (string, required) the hex-encoded block data to submit\r\n 2. dummy      (string, optional, default=ignored) dummy value, for compatibility with BIP22. This value is ignored.\r\n \r\n-Result:\r\n-\r\n Examples:\r\n > bitcoin-cli submitblock \"mydata\"\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitblock\", \"params\": [\"mydata\"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\ndiff --git a/walletpassphrase b/walletpassphrase\r\nindex 8cf7ba3..40002fd 100644\r\n--- a/walletpassphrase\r\n+++ b/walletpassphrase\r\n@@ -3,14 +3,14 @@ walletpassphrase \"passphrase\" timeout\r\n Stores the wallet decryption key in memory for 'timeout' seconds.\r\n This is needed prior to performing transactions related to private keys such as sending bitcoins\r\n \r\n-Arguments:\r\n-1. passphrase    (string, required) The wallet passphrase\r\n-2. timeout       (numeric, required) The time to keep the decryption key in seconds; capped at 100000000 (~3 years).\r\n-\r\n Note:\r\n Issuing the walletpassphrase command while the wallet is already unlocked will set a new unlock\r\n time that overrides the old one.\r\n \r\n+Arguments:\r\n+1. passphrase    (string, required) The wallet passphrase\r\n+2. timeout       (numeric, required) The time to keep the decryption key in seconds; capped at 100000000 (~3 years).\r\n+\r\n Examples:\r\n \r\n Unlock the wallet for 60 seconds\r\n```\r\n</details>",
      "created_at" : "2018-12-17T21:48:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-448011112",
      "id" : 448011112,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14987",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0ODAxMTExMg==",
      "updated_at" : "2019-01-25T19:19:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448011112",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15279](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15279.html) (wallet: Clarify rescanblockchain doc by MarcoFalke)\n* [#15272](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15272.html) (doc: correct logging return type and RPC example by fanquake)\n* [#15245](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15245.html) (remove deprecated mentions of signrawtransaction from fundraw help by instagibbs)\n* [#15226](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15226.html) (Allow creating blank (empty) wallets (alternative) by achow101)\n* [#15157](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15157.html) (rpc: Bumpfee units change, satoshis to BTC by benthecarman)\n* [#15006](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15006.html) (Add option to create an encrypted wallet by achow101)\n* [#14918](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14918.html) (RPCHelpMan: Check default values are given at compile-time by MarcoFalke)\n* [#14898](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14898.html) (nextpagepointer flag for listtransactions by hosseinamin)\n* [#14707](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14707.html) ([RPC] Include coinbase transactions in receivedby RPCs by andrewtoth)\n* [#14459](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14459.html) (docs: Consistent type names in RPC help descriptions by ch4ot1c)\n* [#13756](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13756.html) (wallet: \"avoid_reuse\" wallet flag for improved privacy by kallewoof)\n* [#13541](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13541.html) (wallet/rpc: sendrawtransaction maxfeerate by kallewoof)\n* [#11413](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/11413.html) ([wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-12-18T00:47:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-448054422",
      "id" : 448054422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14987",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0ODA1NDQyMg==",
      "updated_at" : "2019-01-29T00:33:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/448054422",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242571174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242571174"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Drop `RPCResult`?",
      "commit_id" : "faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13",
      "created_at" : "2018-12-18T15:01:47Z",
      "diff_hunk" : "@@ -94,10 +94,11 @@ static UniValue getnetworkhashps(const JSONRPCRequest& request)\n                 {\n                     {\"nblocks\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"120\", \"The number of blocks, or -1 for blocks since last difficulty change.\"},\n                     {\"height\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"-1\", \"To estimate at the time of the given height.\"},\n-                }}\n-                .ToString() +\n-            \"\\nResult:\\n\"\n+                },\n+                RPCResult{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242571174",
      "id" : 242571174,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU3MTE3NA==",
      "original_commit_id" : "fa97fbe4236fa0b744ba7f184443de09f04eeed7",
      "original_position" : 8,
      "path" : "src/rpc/mining.cpp",
      "position" : 8,
      "pull_request_review_id" : 186111883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987",
      "updated_at" : "2019-01-25T19:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242571174",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242594136"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242594136"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be `explicit`? :-)\r\n\r\nAll reviewers of this PR: please review PR #14505 and make the `explicit` checking an automatic Travis check :-)",
      "commit_id" : "faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13",
      "created_at" : "2018-12-18T15:55:37Z",
      "diff_hunk" : "@@ -106,17 +106,33 @@ struct RPCArg {\n     std::string ToDescriptionString(bool implicitly_required = false) const;\n };\n \n+struct RPCResult {\n+    const std::string m_result;\n+\n+    RPCResult(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242594136",
      "id" : 242594136,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU5NDEzNg==",
      "original_commit_id" : "fa97fbe4236fa0b744ba7f184443de09f04eeed7",
      "original_position" : 7,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 186142002,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987",
      "updated_at" : "2019-01-25T19:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242594136",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242596254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242596254"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO we could ignore explicit here, this is utility code, nothing to worry about..",
      "commit_id" : "faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13",
      "created_at" : "2018-12-18T16:00:34Z",
      "diff_hunk" : "@@ -106,17 +106,33 @@ struct RPCArg {\n     std::string ToDescriptionString(bool implicitly_required = false) const;\n };\n \n+struct RPCResult {\n+    const std::string m_result;\n+\n+    RPCResult(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242596254",
      "id" : 242596254,
      "in_reply_to_id" : 242594136,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU5NjI1NA==",
      "original_commit_id" : "fa97fbe4236fa0b744ba7f184443de09f04eeed7",
      "original_position" : 7,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 186144862,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987",
      "updated_at" : "2019-01-25T19:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242596254",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242623753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242623753"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it is better to label the sections instead of having a jungle of `{}`",
      "commit_id" : "faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13",
      "created_at" : "2018-12-18T17:05:09Z",
      "diff_hunk" : "@@ -94,10 +94,11 @@ static UniValue getnetworkhashps(const JSONRPCRequest& request)\n                 {\n                     {\"nblocks\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"120\", \"The number of blocks, or -1 for blocks since last difficulty change.\"},\n                     {\"height\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"-1\", \"To estimate at the time of the given height.\"},\n-                }}\n-                .ToString() +\n-            \"\\nResult:\\n\"\n+                },\n+                RPCResult{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242623753",
      "id" : 242623753,
      "in_reply_to_id" : 242571174,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjYyMzc1Mw==",
      "original_commit_id" : "fa97fbe4236fa0b744ba7f184443de09f04eeed7",
      "original_position" : 8,
      "path" : "src/rpc/mining.cpp",
      "position" : 8,
      "pull_request_review_id" : 186179903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987",
      "updated_at" : "2019-01-25T19:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242623753",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242639410"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242639410"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's pretty obviously what always comes after args but ok.",
      "commit_id" : "faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13",
      "created_at" : "2018-12-18T17:50:47Z",
      "diff_hunk" : "@@ -94,10 +94,11 @@ static UniValue getnetworkhashps(const JSONRPCRequest& request)\n                 {\n                     {\"nblocks\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"120\", \"The number of blocks, or -1 for blocks since last difficulty change.\"},\n                     {\"height\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"-1\", \"To estimate at the time of the given height.\"},\n-                }}\n-                .ToString() +\n-            \"\\nResult:\\n\"\n+                },\n+                RPCResult{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242639410",
      "id" : 242639410,
      "in_reply_to_id" : 242571174,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjYzOTQxMA==",
      "original_commit_id" : "fa97fbe4236fa0b744ba7f184443de09f04eeed7",
      "original_position" : 8,
      "path" : "src/rpc/mining.cpp",
      "position" : 8,
      "pull_request_review_id" : 186199783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987",
      "updated_at" : "2019-01-25T19:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242639410",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r243502928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243502928"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IMO we should follow the explicit recommendation in our developer notes:\r\n\r\n> - By default, declare single-argument constructors `explicit`.\r\n>   - *Rationale*: This is a precaution to avoid unintended conversions that might\r\n>   arise when single-argument constructors are used as implicit conversion\r\n>   functions.\r\n\r\n:-)",
      "commit_id" : "faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13",
      "created_at" : "2018-12-21T07:08:31Z",
      "diff_hunk" : "@@ -106,17 +106,33 @@ struct RPCArg {\n     std::string ToDescriptionString(bool implicitly_required = false) const;\n };\n \n+struct RPCResult {\n+    const std::string m_result;\n+\n+    RPCResult(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#discussion_r243502928",
      "id" : 243502928,
      "in_reply_to_id" : 242594136,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzUwMjkyOA==",
      "original_commit_id" : "fa97fbe4236fa0b744ba7f184443de09f04eeed7",
      "original_position" : 7,
      "path" : "src/rpc/util.h",
      "position" : null,
      "pull_request_review_id" : 187290451,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14987",
      "updated_at" : "2019-01-25T19:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243502928",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK faa90fe9d5e688fdd311a819721f6e911cc441a5",
      "created_at" : "2019-01-16T11:52:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-454752235",
      "id" : 454752235,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14987",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDc1MjIzNQ==",
      "updated_at" : "2019-01-16T11:52:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454752235",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "A bunch of the changes add redundant \"Result:\" headers when there were conditional results, eg for `getblockheader`:\r\n\r\n    +Result:\r\n    +\r\n     Result (for verbose = true):\r\n\r\nCould be worth doing:\r\n\r\n    struct RPCResult {\r\n         std::string m_cond;\r\n         std::string m_result;\r\n         explicit RPCResult(std::string result) : m_result{result} { }\r\n         explicit RPCResult(std::string cond, std::string result) : m_cond{cond}, m_result{result} { }\r\n    }\r\n    struct RPCResults {\r\n        std::vector<RPCResult> m_results;\r\n        RPCResults(RPCResult result) : m_results{{result}} { }\r\n        RPCResults(std::initializer_list<RPCResult> results) : m_results{results} { }\r\n        std::string ToDescription() const;\r\n    }\r\n\r\nand changing `RPCHelpMan()` to take `RPCResults` instead. Then you can supply either `RPCResult(\"foo\")` for unconditional results, or `{ RPCResult{\"for verbose=true\", \"...results...\"}, RPCResult{\"for verbose=false\"}, \"...other results...\"} }` for conditional results, or `RPCResults{}` if you're not giving any result examples.\r\n\r\nPatch at https://github.com/ajtowns/bitcoin/commit/1ca7fb3f00b95a04133018a431853a75f790c02e (feel free to include it as a fixup if you like it)",
      "created_at" : "2019-01-25T15:24:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-457608435",
      "id" : 457608435,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14987",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NzYwODQzNQ==",
      "updated_at" : "2019-01-25T15:24:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457608435",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks. I stole your changes and squashed them with some minor fixups. Hope you don't mind.",
      "created_at" : "2019-01-25T19:21:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-457692968",
      "id" : 457692968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14987",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NzY5Mjk2OA==",
      "updated_at" : "2019-01-25T19:21:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457692968",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13\r\n\r\nHelp differences checked with:\r\n\r\n    mkdir BEFORE AFTER\r\n    git checkout faa1522e^ && make && make check && ./bitcoind -regtest\r\n    for a in $(./bitcoin-cli -regtest help | grep '^[^=]' | sed 's/ .*//') estimaterawfee setmocktime echo echojson signrawtransaction invalidateblock reconsiderblock waitfornewblock waitforblock waitforblockheight syncwithvalidationinterfacequeue resendwallettransactions; do ./bitcoin-cli -regtest help $a > BEFORE/$a.txt; done\r\n    git checkout faa1522e && make && make check && ./bitcoind -regtest\r\n    for a in $(./bitcoin-cli -regtest help | grep '^[^=]' | sed 's/ .*//') estimaterawfee setmocktime echo echojson signrawtransaction invalidateblock reconsiderblock waitfornewblock waitforblock waitforblockheight syncwithvalidationinterfacequeue resendwallettransactions; do ./bitcoin-cli -regtest help $a > AFTER/$a.txt; done\r\n    git diff --color-moved=dimmed_zebra --no-index BEFORE/ AFTER/\r\n\r\n(there isn't a way to just list all the RPC commands including hidden ones?)",
      "created_at" : "2019-01-29T07:21:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-458433653",
      "id" : 458433653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14987",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1ODQzMzY1Mw==",
      "updated_at" : "2019-01-29T07:21:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458433653",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns I modified `CRPCTable::help` to print even hidden ones to get the diff in https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-448011112\r\n\r\nAnyway, this has two ACKs, three upvotes (which I count as Concept ACK) and only conflicts with prs that have review and are mine, so I am going to merge this.\r\n\r\nSorry for the merge conflicts :(",
      "created_at" : "2019-01-29T14:57:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-458570305",
      "id" : 458570305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14987",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1ODU3MDMwNQ==",
      "updated_at" : "2019-01-29T14:57:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458570305",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
