[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478276038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478276038"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ACK on using a sized type here.\r\nHowever, changing from signed to unsigned is, in principle, a P2P protocol change.\r\nThis needs to be carefully reviewed for potential unexpected by-effects.",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-27T09:17:22Z",
      "diff_hunk" : "@@ -425,7 +425,7 @@ class CInv\n     // Combined-message helper methods\n     bool IsGenTxMsg()     const { return type == MSG_TX || type == MSG_WTX || type == MSG_WITNESS_TX; }\n \n-    int type;\n+    uint32_t type;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478276038",
      "id" : 478276038,
      "line" : 428,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3NjAzOA==",
      "original_commit_id" : "407175e0c2bc797599ebd9c0a1f2ec89ad7af136",
      "original_line" : 428,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 14,
      "pull_request_review_id" : 476535312,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478276038",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "According to https://en.bitcoin.it/wiki/Protocol_documentation#Inventory_Vectors (section written in 2010 by \"MagicalTux\") this is unsigned. Though, our python tests also treat this as signed. https://btcinformation.org/en/developer-reference#inv doesn't say anything about signedness.\r\n\r\nWould be good to at least update the python test framework and also add a p2p test.",
      "created_at" : "2020-08-27T09:31:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-681837009",
      "id" : 681837009,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MTgzNzAwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-27T09:31:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/681837009",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Would be good to at least update the python test framework and also add a p2p test.\r\n\r\nUpdated the python test framework and added test coverage.",
      "created_at" : "2020-08-27T14:13:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-681975627",
      "id" : 681975627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MTk3NTYyNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-27T20:10:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/681975627",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478463149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478463149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We generally don't test the test framework. Sending an uint32_t{-1} and observing the node doesn't crash with sanitizers enabled should be a sufficient smoke test. Maybe add an assert_debug_log to observe how the inv will be formatted.\r\n\r\n```\r\n            LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\r\n",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-27T14:29:58Z",
      "diff_hunk" : "@@ -125,6 +128,16 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_negative_type(self):\n+        self.log.info(\"Test inv with negative type raises argument out of range error\")\n+        invalid_inv = msg_inv([CInv(t=-1, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_message(invalid_inv)\n+        except struct.error as e:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478463149",
      "id" : 478463149,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ2MzE0OQ==",
      "original_commit_id" : "9e05ed27fd6dbe7af78eed08abd8a1957f2905d5",
      "original_line" : 136,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : null,
      "pull_request_review_id" : 476779308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478463149",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478596148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478596148"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks Marco. Trying some stuff to see how the CI reacts to it.",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-27T17:54:49Z",
      "diff_hunk" : "@@ -125,6 +128,16 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_negative_type(self):\n+        self.log.info(\"Test inv with negative type raises argument out of range error\")\n+        invalid_inv = msg_inv([CInv(t=-1, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_message(invalid_inv)\n+        except struct.error as e:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478596148",
      "id" : 478596148,
      "in_reply_to_id" : 478463149,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU5NjE0OA==",
      "original_commit_id" : "9e05ed27fd6dbe7af78eed08abd8a1957f2905d5",
      "original_line" : 136,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : null,
      "pull_request_review_id" : 476954186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478596148",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478598930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478598930"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        inv_with_signed_type = msg_inv([CInv(t=0xffffffff, h=1)])\r\n```\r\n\r\nSerialized -1 as signed integer is identical to 0xffffffff serialized as unsigned integer, so might as well use the latter",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-27T17:59:40Z",
      "diff_hunk" : "@@ -125,6 +129,27 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_int_types(self):\n+        self.log.info(\"Test inv with signed `type` raises argument out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:\n+            assert_equal(\"argument out of range\", str(e))\n+        else:\n+            raise AssertionError(\"No exception raised\")\n+\n+        # Repeat, passing signed integer CInv type format to override default.\n+        LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478598930",
      "id" : 478598930,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU5ODkzMA==",
      "original_commit_id" : "6c0f4aefe373bb89188e91464326dabf0f9f3397",
      "original_line" : 144,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : null,
      "pull_request_review_id" : 476957755,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478598930",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478607004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478607004"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That was breaking this method in `messages.py::CInv` with `KeyError: 4294967295` from calling `CInv::typemap[4294967295]`\r\n```python\r\n    def __repr__(self):\r\n        return \"CInv(type=%s hash=%064x)\" \\\r\n            % (self.typemap[abs(self.type)], self.hash)\r\n```",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-27T18:14:26Z",
      "diff_hunk" : "@@ -125,6 +129,27 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_int_types(self):\n+        self.log.info(\"Test inv with signed `type` raises argument out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:\n+            assert_equal(\"argument out of range\", str(e))\n+        else:\n+            raise AssertionError(\"No exception raised\")\n+\n+        # Repeat, passing signed integer CInv type format to override default.\n+        LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478607004",
      "id" : 478607004,
      "in_reply_to_id" : 478598930,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNzAwNA==",
      "original_commit_id" : "6c0f4aefe373bb89188e91464326dabf0f9f3397",
      "original_line" : 144,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : null,
      "pull_request_review_id" : 476968075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478607004",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThanks for fixing UBSan fuzzing finds!",
      "created_at" : "2020-08-27T18:18:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682112273",
      "id" : 682112273,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MjExMjI3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-27T18:18:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682112273",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478611091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478611091"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Even when adding type `0xffffffff: \"Error\"`?",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-27T18:22:06Z",
      "diff_hunk" : "@@ -125,6 +129,27 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_int_types(self):\n+        self.log.info(\"Test inv with signed `type` raises argument out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:\n+            assert_equal(\"argument out of range\", str(e))\n+        else:\n+            raise AssertionError(\"No exception raised\")\n+\n+        # Repeat, passing signed integer CInv type format to override default.\n+        LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478611091",
      "id" : 478611091,
      "in_reply_to_id" : 478598930,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxMTA5MQ==",
      "original_commit_id" : "6c0f4aefe373bb89188e91464326dabf0f9f3397",
      "original_line" : 144,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : null,
      "pull_request_review_id" : 476973299,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478611091",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478613666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478613666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Travis seem happy. I have the following minor cleanups in mind but will wait for feedback before pushing.\r\n```diff\r\ntest/functional/p2p_invalid_messages.py\r\n@@ -142,12 +142,12 @@ class InvalidMessagesTest(BitcoinTestFramework):\r\n         LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\r\n         inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])\r\n-        with self.nodes[0].assert_debug_log([\"got inv: 0xffffffff 00000\"]):\r\n+        with self.nodes[0].assert_debug_log([\"got inv: 0xffffffff \"]):\r\n             self.nodes[0].add_p2p_connection(P2PInterface()).send_message(inv_with_signed_type)\r\n \r\n         # Sanity check with valid unsigned inv type and same format override.\r\n         inv_with_unsigned_type = msg_inv([CInv(t=MSG_WTX, h=1, f=LE_signed_int)])\r\n-        with self.nodes[0].assert_debug_log([\"got inv: wtx 0000\"]):\r\n+        with self.nodes[0].assert_debug_log([\"got inv: wtx \"]):\r\n\r\ntest/functional/test_framework/messages.py\r\n@@ -251,7 +251,7 @@ class CInv:\r\n     def __init__(self, t=0, h=0, f=\"<I\"):\r\n         self.type = t\r\n         self.hash = h\r\n-        self.inv_type_format = f  # default format is unsigned int\r\n+        self.inv_type_format = f  # default is little endian unsigned int\r\n```\r\n",
      "commit_id" : "6c0f4aefe373bb89188e91464326dabf0f9f3397",
      "created_at" : "2020-08-27T18:26:58Z",
      "diff_hunk" : "@@ -125,6 +129,27 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_int_types(self):\n+        self.log.info(\"Test inv with signed `type` raises argument out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:\n+            assert_equal(\"argument out of range\", str(e))\n+        else:\n+            raise AssertionError(\"No exception raised\")\n+\n+        # Repeat, passing signed integer CInv type format to override default.\n+        LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478613666",
      "id" : 478613666,
      "in_reply_to_id" : 478598930,
      "line" : 144,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxMzY2Ng==",
      "original_commit_id" : "6c0f4aefe373bb89188e91464326dabf0f9f3397",
      "original_line" : 144,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : 41,
      "pull_request_review_id" : 476976623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-27T18:26:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478613666",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478635081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478635081"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, simplified, good idea. LMK if we should drop the first test.",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-27T19:07:05Z",
      "diff_hunk" : "@@ -125,6 +129,27 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_int_types(self):\n+        self.log.info(\"Test inv with signed `type` raises argument out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])  # inv type must be an unsigned integer\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:\n+            assert_equal(\"argument out of range\", str(e))\n+        else:\n+            raise AssertionError(\"No exception raised\")\n+\n+        # Repeat, passing signed integer CInv type format to override default.\n+        LE_signed_int = \"<i\"  # Python format chars for little-endian signed int\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1, f=LE_signed_int)])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478635081",
      "id" : 478635081,
      "in_reply_to_id" : 478598930,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzNTA4MQ==",
      "original_commit_id" : "6c0f4aefe373bb89188e91464326dabf0f9f3397",
      "original_line" : 144,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : null,
      "pull_request_review_id" : 477003878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478635081",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack Just to confirm: if the test changes we're dropped in this change set (keeping only the changes to `src/protocol.{cpp,h}`) then all functional tests would still pass, right?",
      "created_at" : "2020-08-28T05:48:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682338614",
      "id" : 682338614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MjMzODYxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-28T07:55:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682338614",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478844800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478844800"
         }
      },
      "author_association" : "MEMBER",
      "body" : "imo could drop the test framework self-test",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-28T05:50:37Z",
      "diff_hunk" : "@@ -125,6 +128,22 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_integer_type(self):\n+        self.log.info(\"Test inv message with MSG_TX type as signed int raises out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478844800",
      "id" : 478844800,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0NDgwMA==",
      "original_commit_id" : "1bb9a9221d494bbe57164e7d4638cc52a34cd006",
      "original_line" : 136,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : null,
      "pull_request_review_id" : 477255792,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478844800",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @jonasnick Just to confirm: if the test changes we're dropped in this change set (keeping only the changes to `src/protocol.{cpp,h}`) then all functional tests would still pass, right?\r\n\r\nRight. I pushed the changes to `src/protocol.{h/cpp}` several times in other PR changesets (#19610, #19611) before dropping them, and the CI passes.",
      "created_at" : "2020-08-28T07:53:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682384295",
      "id" : 682384295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MjM4NDI5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-28T07:53:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682384295",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478926070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478926070"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done, but I think both of these tests only tested the framework change anyway.",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-28T08:15:18Z",
      "diff_hunk" : "@@ -125,6 +128,22 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_inv_msg_with_signed_integer_type(self):\n+        self.log.info(\"Test inv message with MSG_TX type as signed int raises out of range error\")\n+        inv_with_signed_type = msg_inv([CInv(t=-MSG_TX, h=1)])\n+        try:\n+            self.nodes[0].add_p2p_connection(P2PInterface()).build_message(inv_with_signed_type)\n+        except struct.error as e:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r478926070",
      "id" : 478926070,
      "in_reply_to_id" : 478844800,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkyNjA3MA==",
      "original_commit_id" : "1bb9a9221d494bbe57164e7d4638cc52a34cd006",
      "original_line" : 136,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/p2p_invalid_messages.py",
      "position" : null,
      "pull_request_review_id" : 477482527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478926070",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> According to https://en.bitcoin.it/wiki/Protocol_documentation#Inventory_Vectors (section written in 2010 by \"MagicalTux\") this is unsigned. Though, our python tests also treat this as signed. https://btcinformation.org/en/developer-reference#inv doesn't say anything about signedness.\r\n\r\nbtcinformation.org does show this as uint32_t: https://btcinformation.org/en/developer-reference#data-messages. That was added by @harding to the bitcoin.org developer docs here: https://github.com/bitcoin-dot-org/Bitcoin.org/commit/1634212dd5550bb9b610341668b4b7b5fa3690a5#diff-693f5b3e9d88b97c899694c8d1656cbbR110\r\n\r\nNote that even though comparing an int to a uint32_t causes a UBSan warning, it's not actually undefined behaviour: https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#:~:text=%2Dfsanitize%3Dimplicit%2Dinteger%2D,the%20new%20value%20is%20negative. However, I think it's still worth changing this, so that we're always comparing / xor'ing a uint32_t with a uint32_t, so concept ACK.",
      "created_at" : "2020-08-28T11:38:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682478111",
      "id" : 682478111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MjQ3ODExMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-28T11:38:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682478111",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Great links @jnewbery, thanks.\r\n\r\n> Note that even though comparing an int to a uint32_t causes a UBSan warning, it's not actually undefined behaviour: [clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#:~:text=%2Dfsanitize%3Dimplicit%2Dinteger%2D,the%20new%20value%20is%20negative](https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#:~:text=%2Dfsanitize%3Dimplicit%2Dinteger%2D,the%20new%20value%20is%20negative).\r\n\r\n\"-fsanitize=implicit-integer-sign-change: Implicit conversion between integer types, if that changes the sign of the value...issues caught by this sanitizer are not undefined behavior, but are often unintentional.\"",
      "created_at" : "2020-08-28T11:54:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-682484118",
      "id" : 682484118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MjQ4NDExOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-28T11:54:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682484118",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479241586"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479241586"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this `abs(â¦)` is correct. There should be no reason to take an absolute value here, convert, say, `-1` to `1`.\r\n\r\nmaybe\r\n```\r\nself.typemap.get(self.type, \"Error\")\r\n```\r\n",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-28T12:36:37Z",
      "diff_hunk" : "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",\n     }\n \n     def __init__(self, t=0, h=0):\n         self.type = t\n         self.hash = h\n \n     def deserialize(self, f):\n-        self.type = struct.unpack(\"<i\", f.read(4))[0]\n+        self.type = struct.unpack(\"<I\", f.read(4))[0]\n         self.hash = deser_uint256(f)\n \n     def serialize(self):\n         r = b\"\"\n-        r += struct.pack(\"<i\", self.type)\n+        r += struct.pack(\"<I\", self.type)\n         r += ser_uint256(self.hash)\n         return r\n \n     def __repr__(self):\n         return \"CInv(type=%s hash=%064x)\" \\\n-            % (self.typemap[self.type], self.hash)\n+            % (self.typemap[abs(self.type)], self.hash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479241586",
      "id" : 479241586,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI0MTU4Ng==",
      "original_commit_id" : "7bfc631a1157848d2d249ecd2c29665aa263d714",
      "original_line" : 268,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/messages.py",
      "position" : null,
      "pull_request_review_id" : 477691326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479241586",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479242384"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479242384"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd prefer to report anything that is unkonwn as \"Error\" instead of specifically adding `0xffffffff`  here.",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-28T12:37:16Z",
      "diff_hunk" : "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479242384",
      "id" : 479242384,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI0MjM4NA==",
      "original_commit_id" : "7bfc631a1157848d2d249ecd2c29665aa263d714",
      "original_line" : 249,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/messages.py",
      "position" : null,
      "pull_request_review_id" : 477691753,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479242384",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479297020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479297020"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for reviewing. The thought was to not allow shallow errors of type `KeyError` to hide deeper issues, like argument out of datatype range.",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-28T13:36:48Z",
      "diff_hunk" : "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",\n     }\n \n     def __init__(self, t=0, h=0):\n         self.type = t\n         self.hash = h\n \n     def deserialize(self, f):\n-        self.type = struct.unpack(\"<i\", f.read(4))[0]\n+        self.type = struct.unpack(\"<I\", f.read(4))[0]\n         self.hash = deser_uint256(f)\n \n     def serialize(self):\n         r = b\"\"\n-        r += struct.pack(\"<i\", self.type)\n+        r += struct.pack(\"<I\", self.type)\n         r += ser_uint256(self.hash)\n         return r\n \n     def __repr__(self):\n         return \"CInv(type=%s hash=%064x)\" \\\n-            % (self.typemap[self.type], self.hash)\n+            % (self.typemap[abs(self.type)], self.hash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479297020",
      "id" : 479297020,
      "in_reply_to_id" : 479241586,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5NzAyMA==",
      "original_commit_id" : "7bfc631a1157848d2d249ecd2c29665aa263d714",
      "original_line" : 268,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/messages.py",
      "position" : null,
      "pull_request_review_id" : 477734211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479297020",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479304476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479304476"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure what to do here. This was only needed for the test. I tried a few [different tests](https://github.com/bitcoin/bitcoin/commit/6c0f4aefe373bb89188e91464326dabf0f9f3397); the first one doesn't require adding entries to `typemap`. I don't think any of the tests cover the `protocol.{h,cpp} CInv::type` type change, only the test framework change.",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-28T13:44:42Z",
      "diff_hunk" : "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479304476",
      "id" : 479304476,
      "in_reply_to_id" : 479242384,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwNDQ3Ng==",
      "original_commit_id" : "7bfc631a1157848d2d249ecd2c29665aa263d714",
      "original_line" : 249,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/messages.py",
      "position" : null,
      "pull_request_review_id" : 477740252,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479304476",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479462943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479462943"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Dropped this line.",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-28T18:14:29Z",
      "diff_hunk" : "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",\n     }\n \n     def __init__(self, t=0, h=0):\n         self.type = t\n         self.hash = h\n \n     def deserialize(self, f):\n-        self.type = struct.unpack(\"<i\", f.read(4))[0]\n+        self.type = struct.unpack(\"<I\", f.read(4))[0]\n         self.hash = deser_uint256(f)\n \n     def serialize(self):\n         r = b\"\"\n-        r += struct.pack(\"<i\", self.type)\n+        r += struct.pack(\"<I\", self.type)\n         r += ser_uint256(self.hash)\n         return r\n \n     def __repr__(self):\n         return \"CInv(type=%s hash=%064x)\" \\\n-            % (self.typemap[self.type], self.hash)\n+            % (self.typemap[abs(self.type)], self.hash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479462943",
      "id" : 479462943,
      "in_reply_to_id" : 479241586,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2Mjk0Mw==",
      "original_commit_id" : "7bfc631a1157848d2d249ecd2c29665aa263d714",
      "original_line" : 268,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/messages.py",
      "position" : null,
      "pull_request_review_id" : 477934035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:14:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479462943",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479463133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479463133"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Dropped this line.",
      "commit_id" : "7984c39be11ca04460883365e1ae2a496aaa6c0e",
      "created_at" : "2020-08-28T18:14:56Z",
      "diff_hunk" : "@@ -244,27 +244,28 @@ class CInv:\n         MSG_TX | MSG_WITNESS_FLAG: \"WitnessTx\",\n         MSG_BLOCK | MSG_WITNESS_FLAG: \"WitnessBlock\",\n         MSG_FILTERED_BLOCK: \"filtered Block\",\n-        4: \"CompactBlock\",\n-        5: \"WTX\",\n+        MSG_CMPCT_BLOCK: \"CompactBlock\",\n+        MSG_WTX: \"WTX\",\n+        0xffffffff: \"Error\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#discussion_r479463133",
      "id" : 479463133,
      "in_reply_to_id" : 479242384,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2MzEzMw==",
      "original_commit_id" : "7bfc631a1157848d2d249ecd2c29665aa263d714",
      "original_line" : 249,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/messages.py",
      "position" : null,
      "pull_request_review_id" : 477934282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19818",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-28T18:14:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479463133",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks everyone for your feedback. I wrote a [few tests](https://github.com/bitcoin/bitcoin/commit/6c0f4aefe373bb89188e91464326dabf0f9f3397) but they all covered the change to the CInv class in the test framework, not the CInv change in `protocol.{h,cpp}`, so I've simplified and removed them in the latest push.",
      "created_at" : "2020-08-28T18:19:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-683032897",
      "id" : 683032897,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzAzMjg5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-28T18:21:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683032897",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for addressing the comments, the code changes look good to me now.",
      "created_at" : "2020-08-29T12:51:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-683286347",
      "id" : 683286347,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzI4NjM0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-29T12:51:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683286347",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> All the values we ever assign to CInv::type are non-negative within the reach of a signed 32 bit integer. GetDataMsg is uint32_t and in some places we |= a variable of type uint32_t into CInv::type\r\n\r\nBitwise arithmetic should definitely use unsigned integers, good point.\r\n\r\n> Actually serializing a signed integer in the way we do it is not portable, it just works because all platforms use two's complement, but that's not guaranteed.\r\n\r\nI thought this was already guaranteed in C++11, but no, apparently only [C++20](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0907r1.html) will guarantee two's complement signed integers.",
      "created_at" : "2020-09-02T14:17:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-685766893",
      "id" : 685766893,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTc2Njg5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T14:20:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685766893",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 407175e0c2bc797599ebd9c0a1f2ec89ad7af136",
      "created_at" : "2020-09-03T11:29:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19818#issuecomment-686426437",
      "id" : 686426437,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19818",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjQyNjQzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T11:29:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686426437",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
