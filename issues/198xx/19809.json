{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Prefix log messages with function name if `-logfunctionnames` is set.\r\n\r\nYes, exactly like `-logthreadnames` but for function names instead of thread names :)\r\n\r\nThis is a small developer ergonomics improvement: I've found this to be a cheap/simple way to correlate log output and originating function.\r\n\r\nFor me it beats the ordinary cycle of 1.) try to figure out a regexp matching the static part of the dynamic log message, 2.) `git grep -E 'Using .* MiB out of .* requested for signature cache'`, 3.) `mcedit filename.cpp` (`openemacs filename.cpp` works too!) and 4.) search for log message and scroll up to find the function name :)\r\n\r\nWithout any logging parameters:\r\n\r\n```\r\n$ src/bitcoind -regtest\r\n2020-08-25T03:29:04Z Using RdRand as an additional entropy source\r\n2020-08-25T03:29:04Z Using 16 MiB out of 32/2 requested for signature cache, able to store 524288 elements\r\n2020-08-25T03:29:04Z Using 16 MiB out of 32/2 requested for script execution cache, able to store 524288 elements\r\n2020-08-25T03:29:04Z Loaded best chain: hashBestChain=0fff88f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e22ff height=0 date=2011-02-02T23:16:42Z progress=1.000000\r\n2020-08-25T03:29:04Z block tree size = 1\r\n2020-08-25T03:29:04Z nBestHeight = 0\r\n2020-08-25T03:29:04Z Imported mempool transactions from disk: 0 succeeded, 0 failed, 0 expired, 0 already there, 0 waiting for initial broadcast\r\n2020-08-25T03:29:04Z 0 addresses found from DNS seeds\r\n```\r\n\r\nWith `-logthreadnames` and `-logfunctionnames`:\r\n\r\n```\r\n$ src/bitcoind -regtest -logthreadnames -logfunctionnames\r\n2020-08-25T03:29:04Z [init] [ReportHardwareRand] Using RdRand as an additional entropy source\r\n2020-08-25T03:29:04Z [init] [InitSignatureCache] Using 16 MiB out of 32/2 requested for signature cache, able to store 524288 elements\r\n2020-08-25T03:29:04Z [init] [InitScriptExecutionCache] Using 16 MiB out of 32/2 requested for script execution cache, able to store 524288 elements\r\n2020-08-25T03:29:04Z [init] [LoadChainTip] Loaded best chain: hashBestChain=0fff88f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e22ff height=0 date=2011-02-02T23:16:42Z progress=1.000000\r\n2020-08-25T03:29:04Z [init] [AppInitMain] block tree size = 1\r\n2020-08-25T03:29:04Z [init] [AppInitMain] nBestHeight = 0\r\n2020-08-25T03:29:04Z [loadblk] [LoadMempool] Imported mempool transactions from disk: 0 succeeded, 0 failed, 0 expired, 0 already there, 0 waiting for initial broadcast\r\n2020-08-25T03:29:04Z [dnsseed] [ThreadDNSAddressSeed] 0 addresses found from DNS seeds\r\n```",
   "closed_at" : "2021-02-18T13:38:14Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 24,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19809/comments",
   "created_at" : "2020-08-25T20:50:38Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19809/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/19809",
   "id" : 685808830,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : "",
         "id" : 241832923,
         "name" : "Utils/log/libs",
         "node_id" : "MDU6TGFiZWwyNDE4MzI5MjM=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19809/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDczNDc5NDg2",
   "number" : 19809,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/19809.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19809",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/19809.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19809"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "log: Prefix log messages with function name and source code location if -logsourcelocations is set",
   "updated_at" : "2021-02-18T13:38:14Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19809",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
