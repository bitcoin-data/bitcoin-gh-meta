[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19954 (tor: make a TORv3 hidden service instead of TORv2 by vasild)\n* #19031 (Implement ADDRv2 support (part of BIP155) by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-08-31T14:47:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-683826463",
      "id" : 683826463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzgyNjQ2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-21T12:27:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683826463",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If https://github.com/bitcoin/bitcoin/pull/19503 gets merged then it could be used to configure the stream to (un)ser in V2 format instead of the currently used `ADDRV2_FORMAT` flag that is ORed into the stream version.",
      "created_at" : "2020-09-01T10:25:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-684742011",
      "id" : 684742011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDc0MjAxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T10:25:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684742011",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. First read-through looks promising and happy to see the additional unit test coverage. \r\n\r\nEdit: noting here for myself that local debug build is clean and unit tests are green.",
      "created_at" : "2020-09-01T13:46:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-684865867",
      "id" : 684865867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDg2NTg2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T14:43:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684865867",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This PR now contains #19841, needed for the `SHA3_256` implementation.",
      "created_at" : "2020-09-02T08:03:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-685427804",
      "id" : 685427804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTQyNzgwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T08:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685427804",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Would it make sense to benchmark how fast addr2 messages are deserialized? Maybe we should even benchmark every message type?",
      "created_at" : "2020-09-05T13:03:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-687608367",
      "id" : 687608367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzYwODM2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-05T13:03:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687608367",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Would it make sense to benchmark how fast addr2 messages are deserialized? Maybe we should even benchmark every message type?\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```diff\r\ndiff --git i/src/bench/addrman.cpp w/src/bench/addrman.cpp\r\nindex ebdad5a4b..db6b1c9fa 100644\r\n--- i/src/bench/addrman.cpp\r\n+++ w/src/bench/addrman.cpp\r\n@@ -1,20 +1,24 @@\r\n // Copyright (c) 2020-2020 The Bitcoin Core developers\r\n // Distributed under the MIT software license, see the accompanying\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n #include <addrman.h>\r\n #include <bench/bench.h>\r\n+#include <netaddress.h>\r\n #include <random.h>\r\n+#include <serialize.h>\r\n+#include <streams.h>\r\n #include <util/time.h>\r\n+#include <version.h>\r\n \r\n #include <vector>\r\n \r\n /* A \"source\" is a source address from which we have received a bunch of other addresses. */\r\n \r\n-static constexpr size_t NUM_SOURCES = 64;\r\n+static constexpr size_t NUM_SOURCES = 1000;\r\n static constexpr size_t NUM_ADDRESSES_PER_SOURCE = 256;\r\n \r\n static std::vector<CAddress> g_sources;\r\n static std::vector<std::vector<CAddress>> g_addresses;\r\n \r\n static void CreateAddresses()\r\n@@ -135,6 +139,36 @@ static void AddrManGood(benchmark::Bench& bench)\r\n }\r\n \r\n BENCHMARK(AddrManAdd);\r\n BENCHMARK(AddrManSelect);\r\n BENCHMARK(AddrManGetAddr);\r\n BENCHMARK(AddrManGood);\r\n+\r\n+static void AddressUnser(benchmark::Bench& bench, int add_to_version)\r\n+{\r\n+    CreateAddresses();\r\n+\r\n+    CDataStream s_orig(SER_NETWORK, PROTOCOL_VERSION | add_to_version);\r\n+    s_orig << g_sources;\r\n+\r\n+    bench.run([&] {\r\n+        CDataStream s(s_orig);\r\n+\r\n+        std::vector<CAddress> unserialized;\r\n+        s >> unserialized;\r\n+\r\n+        assert(s.empty());\r\n+    });\r\n+}\r\n+\r\n+static void AddressUnserV1(benchmark::Bench& bench)\r\n+{\r\n+    AddressUnser(bench, 0);\r\n+}\r\n+\r\n+static void AddressUnserV2(benchmark::Bench& bench)\r\n+{\r\n+    AddressUnser(bench, ADDRV2_FORMAT);\r\n+}\r\n+\r\n+BENCHMARK(AddressUnserV1);\r\n+BENCHMARK(AddressUnserV2);\r\n```\r\n</details>\r\n\r\nResults (one operation is \"unserialize 1000 addresses\"):\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=\"AddressUnser.*\"\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           39,362.00 |           25,405.21 |    0.3% |      0.00 | `AddressUnserV1`\r\n|           49,457.00 |           20,219.58 |    0.0% |      0.00 | `AddressUnserV2`\r\n```\r\n\r\nUnserialize in V2 is expected to be somewhat slower and it is indeed. Looks ok to me.",
      "created_at" : "2020-09-07T13:38:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-688332202",
      "id" : 688332202,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODMzMjIwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-07T13:38:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688332202",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased now that the SHA3_256 implementation is in `master`.",
      "created_at" : "2020-09-10T18:45:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-690614950",
      "id" : 690614950,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MDYxNDk1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-10T18:45:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690614950",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486669845"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486669845"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just a nit, feel free to leave as is.\r\n\r\nNo real reason why this needs to be in netaddress.h or restricted to `CNetAddr`. Maybe it can move to one of the util/*.h files or even a new one. It's probably useful elsewhere.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-10T22:32:17Z",
      "diff_hunk" : "@@ -192,6 +192,17 @@ class CNetAddr\n         friend class CSubNet;\n \n     private:\n+        /**\n+         * Check whether a container begins with the given prefix.\n+         */\n+        template <typename T1, size_t PREFIX_LEN>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486669845",
      "id" : 486669845,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2OTg0NQ==",
      "original_commit_id" : "e57bedde3199a36ef558e1b8bd6e9278ad9b72ec",
      "original_line" : 198,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486355793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486669845",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486671228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486671228"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's not technically true; EOF can be reached in ADDRv1 mode.\r\n\r\nI don't think this comment adds much; every deserializer can always fail.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-10T22:35:57Z",
      "diff_hunk" : "@@ -177,16 +188,27 @@ class CNetAddr\n         template <typename Stream>\n         void Serialize(Stream& s) const\n         {\n-            SerializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                SerializeV2Stream(s);\n+            } else {\n+                SerializeV1Stream(s);\n+            }\n         }\n \n         /**\n          * Unserialize from a stream.\n+         * @throws std::ios_base::failure if the stream is in ADDRv2 format and\n+         * the data is invalid and cannot be unserialized; ADDRv1 format",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486671228",
      "id" : 486671228,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3MTIyOA==",
      "original_commit_id" : "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "original_line" : 201,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486355793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486671228",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486672929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486672929"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: you're using both \"Bip155\" and \"BIP155\" is this commit. I prefer \"BIP155\".",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-10T22:40:32Z",
      "diff_hunk" : "@@ -203,11 +225,41 @@ class CNetAddr\n                    std::equal(std::begin(prefix), std::end(prefix), std::begin(obj));\n         }\n \n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum Bip155Network : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486672929",
      "id" : 486672929,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3MjkyOQ==",
      "original_commit_id" : "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "original_line" : 231,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486355793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486672929",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486674423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486674423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Comment is wrong here, I think (I2P, not TORv2).",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-10T22:44:46Z",
      "diff_hunk" : "@@ -400,6 +400,70 @@ BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n     BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n     s.clear();\n \n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486674423",
      "id" : 486674423,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3NDQyMw==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 438,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486355793,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486674423",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952064"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952064"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9eb5b089 s/I2P/CJDNS/",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T10:19:09Z",
      "diff_hunk" : "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952064",
      "id" : 486952064,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk1MjA2NA==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 448,
      "original_position" : 203,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486684814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952064",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952355"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9eb5b089 s/TORv2/CJDNS/",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T10:19:43Z",
      "diff_hunk" : "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)\n+                           \"10\"                               // address length\n+                           \"fc000001000200030004000500060007\" // address\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"fc00:1:2:3:4:5:6:7\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid CJDNS, with bogus length.\n+    s << MakeSpan(ParseHex(\"06\" // network type (TORv2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952355",
      "id" : 486952355,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk1MjM1NQ==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 458,
      "original_position" : 213,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486684814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952355",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486961774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486961774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it make sense to have `NET_ONION_V2` and `NET_ONION_V3`, with associated `IsOnionV2()` and `IsOnionV3()` bool helpers as subsets of `IsTor()/IsOnion()`?\r\n\r\nDoing so might also clean up `GetBip155Network()`, `SetIP()`, and `ToStringIP()` by removing the size checks to a better place.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T10:39:49Z",
      "diff_hunk" : "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486961774",
      "id" : 486961774,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk2MTc3NA==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 55,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 31,
      "pull_request_review_id" : 486684814,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486961774",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486973456"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486973456"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Semi-related, at some point it might be helpful to be able to expose network types in `getpeerinfo`, rather than clients trying to guess like we currently have to do in #19643.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T11:06:05Z",
      "diff_hunk" : "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486973456",
      "id" : 486973456,
      "in_reply_to_id" : 486961774,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3MzQ1Ng==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 55,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 31,
      "pull_request_review_id" : 486712046,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486973456",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486989858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486989858"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, I did consider making it more visible but refrained because of the wretched `std::array` argument (which was imposed by gcc 4.8) - I think it is not very friendly like this.\r\n\r\nMoved now to `util/string.h` since you mention this. Once support for gcc 4.8 is dropped we can improve it to take some more generic argument.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T11:43:01Z",
      "diff_hunk" : "@@ -192,6 +192,17 @@ class CNetAddr\n         friend class CSubNet;\n \n     private:\n+        /**\n+         * Check whether a container begins with the given prefix.\n+         */\n+        template <typename T1, size_t PREFIX_LEN>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486989858",
      "id" : 486989858,
      "in_reply_to_id" : 486669845,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk4OTg1OA==",
      "original_commit_id" : "e57bedde3199a36ef558e1b8bd6e9278ad9b72ec",
      "original_line" : 198,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486732794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486989858",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486992188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486992188"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to \"BIP155\", that way its also more consistent with the rest of the code.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T11:48:15Z",
      "diff_hunk" : "@@ -203,11 +225,41 @@ class CNetAddr\n                    std::equal(std::begin(prefix), std::end(prefix), std::begin(obj));\n         }\n \n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum Bip155Network : uint8_t {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486992188",
      "id" : 486992188,
      "in_reply_to_id" : 486672929,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MjE4OA==",
      "original_commit_id" : "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "original_line" : 231,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486735839,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486992188",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993463"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993463"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T11:51:06Z",
      "diff_hunk" : "@@ -400,6 +400,70 @@ BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n     BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n     s.clear();\n \n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993463",
      "id" : 486993463,
      "in_reply_to_id" : 486674423,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MzQ2Mw==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 438,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486737526,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993463",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993794"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T11:51:55Z",
      "diff_hunk" : "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993794",
      "id" : 486993794,
      "in_reply_to_id" : 486952064,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5Mzc5NA==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 448,
      "original_position" : 203,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486737951,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993794",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486994154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486994154"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T11:52:48Z",
      "diff_hunk" : "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)\n+                           \"10\"                               // address length\n+                           \"fc000001000200030004000500060007\" // address\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"fc00:1:2:3:4:5:6:7\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid CJDNS, with bogus length.\n+    s << MakeSpan(ParseHex(\"06\" // network type (TORv2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486994154",
      "id" : 486994154,
      "in_reply_to_id" : 486952355,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NDE1NA==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 458,
      "original_position" : 213,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 486738417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486994154",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486997592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486997592"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removed.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T12:00:08Z",
      "diff_hunk" : "@@ -177,16 +188,27 @@ class CNetAddr\n         template <typename Stream>\n         void Serialize(Stream& s) const\n         {\n-            SerializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                SerializeV2Stream(s);\n+            } else {\n+                SerializeV1Stream(s);\n+            }\n         }\n \n         /**\n          * Unserialize from a stream.\n+         * @throws std::ios_base::failure if the stream is in ADDRv2 format and\n+         * the data is invalid and cannot be unserialized; ADDRv1 format",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486997592",
      "id" : 486997592,
      "in_reply_to_id" : 486671228,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NzU5Mg==",
      "original_commit_id" : "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "original_line" : 201,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 486742903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486997592",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487054042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487054042"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I did consider this but did not make them separate because:\r\n\r\n* Intrinsically, TORv2 and TORv3 addresses belong to the same network - the TOR network. It is more like odd and even IPv4 addresses, not so much as IPv4 and IPv6 addresses.\r\n* Given that TORv2 is going to be dropped soon, we would have to clean up our code and remove any remains from it which would be easier if this is kept just as `NET_ONION`.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T13:43:40Z",
      "diff_hunk" : "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487054042",
      "id" : 487054042,
      "in_reply_to_id" : 486961774,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1NDA0Mg==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 55,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 31,
      "pull_request_review_id" : 486818128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487054042",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed review suggestions and added TORv3 address parsing with some tests.",
      "created_at" : "2020-09-11T13:44:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691104139",
      "id" : 691104139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTEwNDEzOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-11T13:44:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691104139",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487203263"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487203263"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I considered suggesting this too, but outside of netaddress.*, the distinction probably doesn't matter (e.g. the decision whether to use a proxy and which one doesn't need to distinguish between TorV2 and TorV3), so this approach allows keeping the changes more local.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T17:59:44Z",
      "diff_hunk" : "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487203263",
      "id" : 487203263,
      "in_reply_to_id" : 486961774,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIwMzI2Mw==",
      "original_commit_id" : "9eb5b089c5852ba569fc879786b3b01be7596273",
      "original_line" : 55,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 31,
      "pull_request_review_id" : 487012496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487203263",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As a test I created a TORv3 bitcoin service, and connected to it with this branch:\r\n\r\n```\r\n\r\n$ ./src/bitcoin-cli getpeerinfo\r\n[\r\n  {\r\n    \"id\": 1,\r\n    \"addr\": \"kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion\",\r\n```\r\n\r\n",
      "created_at" : "2020-09-11T18:01:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691235868",
      "id" : 691235868,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTIzNTg2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-11T18:01:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691235868",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487219577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487219577"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why do this for NET_INTERNAL, but not for IPv4 or TORv2?",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T18:32:36Z",
      "diff_hunk" : "@@ -272,6 +341,48 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                // Recognize NET_INTERNAL embedded in IPv6.\n+                if (m_net == NET_IPV6 && HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487219577",
      "id" : 487219577,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxOTU3Nw==",
      "original_commit_id" : "3472f6444205edf15f00ecc31f5b8749110fecaa",
      "original_line" : 367,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 487033621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487219577",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Connected to @sipa from my tor v2 address.\r\n\r\n```\r\n2020-09-11T18:44:21Z New outbound peer connected: version: 70016, blocks=647799, peer=5, peeraddr=kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion:8333 (full-relay)\r\n```\r\ngetpeerinfo:\r\n```\r\n  {\r\n    \"id\": 5,\r\n    \"addr\": \"kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion\",\r\n    \"addrbind\": \"127.0.0.1:36454\",\r\n    \"services\": \"0000000000000409\",\r\n```",
      "created_at" : "2020-09-11T18:48:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691256306",
      "id" : 691256306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTI1NjMwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-11T18:48:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691256306",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487246685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487246685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Because IPv4 and TORv2 have their own BIP155 network ids and should not be disguised as IPv6.\r\n\r\n`NET_INTERNAL` is not gossiped, but addrman may keep such addresses as \"source\" of other addresses and thus end up (un)serializing them when saving its database to disk in a V2 stream (not in this PR).\r\n\r\nIn this PR we may end up having some TORv3 addresses in addrman and try to serialize them in V1 stream. They will go as 16 zeroes.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T19:26:34Z",
      "diff_hunk" : "@@ -272,6 +341,48 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                // Recognize NET_INTERNAL embedded in IPv6.\n+                if (m_net == NET_IPV6 && HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487246685",
      "id" : 487246685,
      "in_reply_to_id" : 487219577,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI0NjY4NQ==",
      "original_commit_id" : "3472f6444205edf15f00ecc31f5b8749110fecaa",
      "original_line" : 367,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 487068302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487246685",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> from my tor v2 address.\r\n\r\nTor hidden service connections don't have a \"from\" address ;)",
      "created_at" : "2020-09-11T20:33:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691299573",
      "id" : 691299573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTI5OTU3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-11T20:33:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691299573",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487279246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487279246"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Following an [IRC discussion](http://www.erisian.com.au/bitcoin-core-dev/log-2020-09-11.html#l-406) - I changed it to recognize and ignore (unserialize as invalid) embedded IPv4 and TORv2 in IPv6 (when in addrv2 message).",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-11T20:38:07Z",
      "diff_hunk" : "@@ -272,6 +341,48 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                // Recognize NET_INTERNAL embedded in IPv6.\n+                if (m_net == NET_IPV6 && HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487279246",
      "id" : 487279246,
      "in_reply_to_id" : 487219577,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3OTI0Ng==",
      "original_commit_id" : "3472f6444205edf15f00ecc31f5b8749110fecaa",
      "original_line" : 367,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 487109939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487279246",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ignored embedded IPv4 and TORv2 in IPv6 when unserializing in V2 format, as per BIP155 + tests to confirm they render as invalid.",
      "created_at" : "2020-09-12T08:00:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691439676",
      "id" : 691439676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTQzOTY3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-12T08:00:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691439676",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487869783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487869783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8036a267 Perhaps call this function `SetBIP155Network` as it sets `m_net` whereas `GetBIP155Network` reads it.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T12:24:19Z",
      "diff_hunk" : "@@ -5,18 +5,111 @@\n \n #include <netaddress.h>\n \n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::RecognizeBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487869783",
      "id" : 487869783,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2OTc4Mw==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 55,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487869783",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487871749"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487871749"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8036a267 These two \"Deduce\" words make the two functions seem similar, whereas one function reads `m_net` and the other sets `m_net`.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T12:27:26Z",
      "diff_hunk" : "@@ -186,20 +220,56 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Deduce the BIP155 network id of this address.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487871749",
      "id" : 487871749,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3MTc0OQ==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 265,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487871749",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487880342"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487880342"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8036a267 nit, perhaps s/object/IPV6 object/",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T12:41:34Z",
      "diff_hunk" : "@@ -272,6 +368,65 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            scopeId = 0;\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                if (m_net != NET_IPV6) {\n+                    return;\n+                }\n+\n+                // Do some special checks on IPv6 addresses.\n+\n+                // Recognize NET_INTERNAL embedded in IPv6, such addresses are not\n+                // gossiped but could be coming from addrman, when unserializing from\n+                // disk.\n+                if (HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {\n+                    m_net = NET_INTERNAL;\n+                    memmove(m_addr.data(), m_addr.data() + INTERNAL_IN_IPV6_PREFIX.size(),\n+                            ADDR_INTERNAL_SIZE);\n+                    m_addr.resize(ADDR_INTERNAL_SIZE);\n+                    return;\n+                }\n+\n+                if (!HasPrefix(m_addr, IPV4_IN_IPV6_PREFIX) &&\n+                    !HasPrefix(m_addr, TORV2_IN_IPV6_PREFIX)) {\n+                    return;\n+                }\n+\n+                // IPv4 and TORv2 are not supposed to be embedded in IPv6 (like in V1\n+                // encoding). Unserialize as !IsValid(), thus ignoring them.\n+            } else {\n+                // If we receive an unknown BIP155 network id (from the future?) then\n+                // ignore the address - unserialize as !IsValid().\n+                s.ignore(address_size);\n+            }\n+\n+            // Mimic a default-constructed object which is !IsValid() and thus will not",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487880342",
      "id" : 487880342,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg4MDM0Mg==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 425,
      "original_position" : 258,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487880342",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487887872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487887872"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8036a267 suggest s/Sneak/Bitwise-OR the/ (here and line 348) as this operation isn't covert or sneaky :)",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T12:53:16Z",
      "diff_hunk" : "@@ -261,17 +278,243 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487887872",
      "id" : 487887872,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg4Nzg3Mg==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 315,
      "original_position" : 85,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487887872",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487930052"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487930052"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1046e17c perhaps\r\n```diff\r\n-    static const char* suffix = \".onion\";\r\n-    static constexpr size_t suffix_len = 6;\r\n+    static const std::string suffix{\".onion\"};\r\n+    static const size_t suffix_len{suffix.size()};\r\n```\r\n",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T13:46:08Z",
      "diff_hunk" : "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487930052",
      "id" : 487930052,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkzMDA1Mg==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 234,
      "original_position" : 188,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487930052",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487941591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487941591"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1046e17 the previous code used `c_str()`, but maybe use `data()` while retouching this \r\n\r\n-----\r\n\r\nDeveloper notes on `c_str()` just in case (ignore if this is noise):\r\n\r\n- Use `.c_str()` sparingly. Its only valid use is to pass C++ strings to C functions that take NULL-terminated\r\n  strings.\r\n\r\n  - Do not use it when passing a sized array (so along with `.size()`). Use `.data()` instead to get a pointer to the raw data.\r\n\r\n    - *Rationale*: Although this is guaranteed to be safe starting with C++11, `.data()` communicates the intent better.\r\n\r\n  - In cases where do you call `.c_str()`, you might want to additionally check that the string does not contain embedded '\\0' characters, because it will (necessarily) truncate the string. This might be used to hide parts of the string from logging or to circumvent checks. If a use of strings is sensitive to this, take care to check the string for embedded NULL characters first and reject it if there are any (see `ParsePrechecks` in `strencodings.cpp` for an example).\r\n",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T13:57:04Z",
      "diff_hunk" : "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;\n+\n+    if (str.size() <= suffix_len || str.substr(str.size() - suffix_len) != suffix) {\n+        return false;\n+    }\n+\n+    const auto& input = DecodeBase32(str.substr(0, str.size() - suffix_len).c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487941591",
      "id" : 487941591,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk0MTU5MQ==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 242,
      "original_position" : 194,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487941591",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487964378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487964378"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1046e17c nit, this might be more readable with one element per line:\r\n```diff\r\n-                     a[0] << 8 | a[1], a[2] << 8 | a[3],\r\n-                     a[4] << 8 | a[5], a[6] << 8 | a[7],\r\n-                     a[8] << 8 | a[9], a[10] << 8 | a[11],\r\n-                     a[12] << 8 | a[13], a[14] << 8 | a[15]);\r\n+                      a[0] << 8 | a[1],\r\n+                      a[2] << 8 | a[3],\r\n+                      a[4] << 8 | a[5],\r\n+                      a[6] << 8 | a[7],\r\n+                      a[8] << 8 | a[9],\r\n+                     a[10] << 8 | a[11],\r\n+                     a[12] << 8 | a[13],\r\n+                     a[14] << 8 | a[15]);\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T14:16:21Z",
      "diff_hunk" : "@@ -328,28 +480,65 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     a[0] << 8 | a[1], a[2] << 8 | a[3],\n+                     a[4] << 8 | a[5], a[6] << 8 | a[7],\n+                     a[8] << 8 | a[9], a[10] << 8 | a[11],\n+                     a[12] << 8 | a[13], a[14] << 8 | a[15]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487964378",
      "id" : 487964378,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NDM3OA==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 489,
      "original_position" : 259,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487964378",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487966148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487966148"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1046e17c nit suggestion if you retouch: s/onion_address/tor v3 onion address/",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T14:17:53Z",
      "diff_hunk" : "@@ -328,28 +480,65 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     a[0] << 8 | a[1], a[2] << 8 | a[3],\n+                     a[4] << 8 | a[5], a[6] << 8 | a[7],\n+                     a[8] << 8 | a[9], a[10] << 8 | a[11],\n+                     a[12] << 8 | a[13], a[14] << 8 | a[15]);\n+}\n+\n std::string CNetAddr::ToStringIP() const\n {\n-    if (IsTor())\n-        return EncodeBase32(m_addr) + \".onion\";\n-    if (IsInternal())\n+    switch (m_net) {\n+    case NET_IPV4:\n+    case NET_IPV6: {\n+        CService serv(*this, 0);\n+        struct sockaddr_storage sockaddr;\n+        socklen_t socklen = sizeof(sockaddr);\n+        if (serv.GetSockAddr((struct sockaddr*)&sockaddr, &socklen)) {\n+            char name[1025] = \"\";\n+            if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name,\n+                             sizeof(name), nullptr, 0, NI_NUMERICHOST))\n+                return std::string(name);\n+        }\n+        if (m_net == NET_IPV4) {\n+            return strprintf(\"%u.%u.%u.%u\", m_addr[0], m_addr[1], m_addr[2], m_addr[3]);\n+        }\n+        return IPv6ToString(m_addr);\n+    }\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return EncodeBase32(m_addr) + \".onion\";\n+        case ADDR_TORV3_SIZE: {\n+\n+            uint8_t checksum[torv3::CHECKSUM_LEN];\n+            torv3::Checksum(m_addr, checksum);\n+\n+            // onion_address = base32(PUBKEY | CHECKSUM | VERSION) + \".onion\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487966148",
      "id" : 487966148,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NjE0OA==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 520,
      "original_position" : 293,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487966148",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487967348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487967348"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1046e17c nit suggestion if you retouch: s/CHECKSUM/tor v3 checksum/",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T14:19:02Z",
      "diff_hunk" : "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487967348",
      "id" : 487967348,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NzM0OA==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 205,
      "original_position" : 155,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487967348",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487979053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487979053"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1046e17c `IsCJDNS()`...should CJDNS IP strings be in IPv4 dotted-quad or IPv6 colon-hexadecimal notation?",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T14:31:58Z",
      "diff_hunk" : "@@ -742,7 +931,7 @@ std::string CService::ToStringPort() const\n \n std::string CService::ToStringIPPort() const\n {\n-    if (IsIPv4() || IsTor() || IsInternal()) {\n+    if (IsIPv4() || IsTor() || IsI2P() || IsInternal()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487979053",
      "id" : 487979053,
      "line" : 947,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk3OTA1Mw==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 947,
      "original_position" : 381,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 397,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487979053",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487983214"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487983214"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1046e17c would be good to add an explanation of why `pad` is needed, maybe in a doxygen doc for the function in the header file `strencodings.h`",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-14T14:37:31Z",
      "diff_hunk" : "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {\n+        while (str.size() % 8) {\n+            str += '=';\n+        }\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487983214",
      "id" : 487983214,
      "line" : 215,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4MzIxNA==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 215,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/util/strencodings.cpp",
      "position" : 17,
      "pull_request_review_id" : 487698118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487983214",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488699095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488699095"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`SetBIP155Network` would be incorrect because `m_net`, which is being set, is of type `Network`, not `BIP155Network`.\r\n\r\nRenamed to this function to `SetNetFromBIP155Network()` to imply \"set m_net from variable of type BIP155Network\".",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:10:17Z",
      "diff_hunk" : "@@ -5,18 +5,111 @@\n \n #include <netaddress.h>\n \n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::RecognizeBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488699095",
      "id" : 488699095,
      "in_reply_to_id" : 487869783,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5OTA5NQ==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 55,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488725498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488699095",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488699524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488699524"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Reworded.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:10:55Z",
      "diff_hunk" : "@@ -186,20 +220,56 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Deduce the BIP155 network id of this address.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488699524",
      "id" : 488699524,
      "in_reply_to_id" : 487871749,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5OTUyNA==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 265,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 488726102,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488699524",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488700181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700181"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to \"default-constructed CNetAddr object\".",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:11:47Z",
      "diff_hunk" : "@@ -272,6 +368,65 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            scopeId = 0;\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                if (m_net != NET_IPV6) {\n+                    return;\n+                }\n+\n+                // Do some special checks on IPv6 addresses.\n+\n+                // Recognize NET_INTERNAL embedded in IPv6, such addresses are not\n+                // gossiped but could be coming from addrman, when unserializing from\n+                // disk.\n+                if (HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {\n+                    m_net = NET_INTERNAL;\n+                    memmove(m_addr.data(), m_addr.data() + INTERNAL_IN_IPV6_PREFIX.size(),\n+                            ADDR_INTERNAL_SIZE);\n+                    m_addr.resize(ADDR_INTERNAL_SIZE);\n+                    return;\n+                }\n+\n+                if (!HasPrefix(m_addr, IPV4_IN_IPV6_PREFIX) &&\n+                    !HasPrefix(m_addr, TORV2_IN_IPV6_PREFIX)) {\n+                    return;\n+                }\n+\n+                // IPv4 and TORv2 are not supposed to be embedded in IPv6 (like in V1\n+                // encoding). Unserialize as !IsValid(), thus ignoring them.\n+            } else {\n+                // If we receive an unknown BIP155 network id (from the future?) then\n+                // ignore the address - unserialize as !IsValid().\n+                s.ignore(address_size);\n+            }\n+\n+            // Mimic a default-constructed object which is !IsValid() and thus will not",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488700181",
      "id" : 488700181,
      "in_reply_to_id" : 487880342,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMDE4MQ==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 425,
      "original_position" : 258,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 488727003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700181",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488700491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700491"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to just \"Add ADDRV2_FORMAT ...\"",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:12:13Z",
      "diff_hunk" : "@@ -261,17 +278,243 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488700491",
      "id" : 488700491,
      "in_reply_to_id" : 487887872,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMDQ5MQ==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 315,
      "original_position" : 85,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 488727462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700491",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488700691"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700691"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:12:29Z",
      "diff_hunk" : "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488700691",
      "id" : 488700691,
      "in_reply_to_id" : 487930052,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMDY5MQ==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 234,
      "original_position" : 188,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488727710,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700691",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488703662"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488703662"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, both `c_str()` and `data()` return the same thing. I kept it to `c_str()` because `DecodeBase32()` expects a nul-terminated string and `c_str()` has always been returning such string, whereas `data()` does so only after C++11. I.e. `c_str()` is more widely known to return a nul-terminated string.\r\n\r\nAnyway, I added a check whether the string contains an embedded `'\\0'` plus a test for it.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:16:25Z",
      "diff_hunk" : "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;\n+\n+    if (str.size() <= suffix_len || str.substr(str.size() - suffix_len) != suffix) {\n+        return false;\n+    }\n+\n+    const auto& input = DecodeBase32(str.substr(0, str.size() - suffix_len).c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488703662",
      "id" : 488703662,
      "in_reply_to_id" : 487941591,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMzY2Mg==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 242,
      "original_position" : 194,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488731848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488703662",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488704636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488704636"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I copied that verbatim from https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135, but anyway - I now prefixed it with \"TORv3\".",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:17:40Z",
      "diff_hunk" : "@@ -328,28 +480,65 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     a[0] << 8 | a[1], a[2] << 8 | a[3],\n+                     a[4] << 8 | a[5], a[6] << 8 | a[7],\n+                     a[8] << 8 | a[9], a[10] << 8 | a[11],\n+                     a[12] << 8 | a[13], a[14] << 8 | a[15]);\n+}\n+\n std::string CNetAddr::ToStringIP() const\n {\n-    if (IsTor())\n-        return EncodeBase32(m_addr) + \".onion\";\n-    if (IsInternal())\n+    switch (m_net) {\n+    case NET_IPV4:\n+    case NET_IPV6: {\n+        CService serv(*this, 0);\n+        struct sockaddr_storage sockaddr;\n+        socklen_t socklen = sizeof(sockaddr);\n+        if (serv.GetSockAddr((struct sockaddr*)&sockaddr, &socklen)) {\n+            char name[1025] = \"\";\n+            if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name,\n+                             sizeof(name), nullptr, 0, NI_NUMERICHOST))\n+                return std::string(name);\n+        }\n+        if (m_net == NET_IPV4) {\n+            return strprintf(\"%u.%u.%u.%u\", m_addr[0], m_addr[1], m_addr[2], m_addr[3]);\n+        }\n+        return IPv6ToString(m_addr);\n+    }\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return EncodeBase32(m_addr) + \".onion\";\n+        case ADDR_TORV3_SIZE: {\n+\n+            uint8_t checksum[torv3::CHECKSUM_LEN];\n+            torv3::Checksum(m_addr, checksum);\n+\n+            // onion_address = base32(PUBKEY | CHECKSUM | VERSION) + \".onion\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488704636",
      "id" : 488704636,
      "in_reply_to_id" : 487966148,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNDYzNg==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 520,
      "original_position" : 293,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488733174,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488704636",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488704804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488704804"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I copied that verbatim from https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135, but anyway - I now prefixed it with \"TORv3\".",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:17:52Z",
      "diff_hunk" : "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488704804",
      "id" : 488704804,
      "in_reply_to_id" : 487967348,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNDgwNA==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 205,
      "original_position" : 155,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488733386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488704804",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488705470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488705470"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "To my understanding CJDNS addresses have the same representation as IPv6, just different meaning.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:18:43Z",
      "diff_hunk" : "@@ -742,7 +931,7 @@ std::string CService::ToStringPort() const\n \n std::string CService::ToStringIPPort() const\n {\n-    if (IsIPv4() || IsTor() || IsInternal()) {\n+    if (IsIPv4() || IsTor() || IsI2P() || IsInternal()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488705470",
      "id" : 488705470,
      "in_reply_to_id" : 487979053,
      "line" : 947,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNTQ3MA==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 947,
      "original_position" : 381,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 397,
      "pull_request_review_id" : 488734346,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488705470",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488706011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488706011"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't know why the padding is needed! :) But I added a comment on what the newly added parameter does.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:19:25Z",
      "diff_hunk" : "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {\n+        while (str.size() % 8) {\n+            str += '=';\n+        }\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488706011",
      "id" : 488706011,
      "in_reply_to_id" : 487983214,
      "line" : 215,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNjAxMQ==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 215,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/util/strencodings.cpp",
      "position" : 17,
      "pull_request_review_id" : 488735051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488706011",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488707063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488707063"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to `ReadBE16()`, must be more readable now.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:20:43Z",
      "diff_hunk" : "@@ -328,28 +480,65 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     a[0] << 8 | a[1], a[2] << 8 | a[3],\n+                     a[4] << 8 | a[5], a[6] << 8 | a[7],\n+                     a[8] << 8 | a[9], a[10] << 8 | a[11],\n+                     a[12] << 8 | a[13], a[14] << 8 | a[15]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488707063",
      "id" : 488707063,
      "in_reply_to_id" : 487964378,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNzA2Mw==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 489,
      "original_position" : 259,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488736423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488707063",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488735488"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488735488"
         }
      },
      "author_association" : "MEMBER",
      "body" : "80c77c31 nit, indenting is off by one for the NET_IPV4, NET_IPV6, and NET_ONION cases",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:56:43Z",
      "diff_hunk" : "@@ -5,18 +5,112 @@\n \n #include <netaddress.h>\n \n+#include <crypto/common.h>\n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)\n+{\n+    switch (possible_bip155_net) {\n+    case BIP155Network::IPV4:\n+        if (address_size == ADDR_IPV4_SIZE) {\n+           m_net = NET_IPV4;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv4 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV4_SIZE));\n+    case BIP155Network::IPV6:\n+        if (address_size == ADDR_IPV6_SIZE) {\n+           m_net = NET_IPV6;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv6 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV6_SIZE));\n+    case BIP155Network::TORV2:\n+        if (address_size == ADDR_TORV2_SIZE) {\n+           m_net = NET_ONION;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 TORv2 address with length %u (should be %u)\", address_size,\n+                      ADDR_TORV2_SIZE));\n+    case BIP155Network::TORV3:\n+        if (address_size == ADDR_TORV3_SIZE) {\n+            m_net = NET_ONION;\n+            return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488735488",
      "id" : 488735488,
      "line" : 86,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczNTQ4OA==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 86,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 83,
      "pull_request_review_id" : 488774041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488735488",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488736535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488736535"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8d2b60cb nit, while touching this line\r\n```suggestion\r\nbool CNetAddr::SetSpecial(const std::string& str)\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T14:58:03Z",
      "diff_hunk" : "@@ -101,24 +194,77 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // TORv3 CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n- * Parse a TORv2 address and set this object to it.\n+ * Parse a TOR address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488736535",
      "id" : 488736535,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczNjUzNQ==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 232,
      "original_position" : 184,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488774041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488736535",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488741844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488741844"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8d2b60cb nit, clang format\r\n```diff\r\n-static std::string IPv6ToString(Span<const uint8_t> a) {\r\n+static std::string IPv6ToString(Span<const uint8_t> a)\r\n+{\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T15:04:36Z",
      "diff_hunk" : "@@ -328,28 +482,71 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488741844",
      "id" : 488741844,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0MTg0NA==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 485,
      "original_position" : 256,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488774041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488741844",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488743740"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488743740"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8d2b60cb nit, clang format while touching this\r\n```diff\r\n-uint32_t CNetAddr::GetNetClass() const {\r\n+uint32_t CNetAddr::GetNetClass() const\r\n+{\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T15:07:04Z",
      "diff_hunk" : "@@ -429,20 +626,20 @@ uint32_t CNetAddr::GetLinkedIPv4() const\n }\n \n uint32_t CNetAddr::GetNetClass() const {\n-    uint32_t net_class = NET_IPV6;\n-    if (IsLocal()) {\n-        net_class = 255;\n-    }\n+    // Make sure that if we return NET_IPV6, then IsIPv6() is true. The callers expect that.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488743740",
      "id" : 488743740,
      "line" : 634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0Mzc0MA==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 634,
      "original_position" : 351,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 358,
      "pull_request_review_id" : 488774041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488743740",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488747663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488747663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8d2b60cb With clang-format-12 these two `clang-format` declarations don't seem needed for me; ignore me if they are needed for other versions.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T15:12:12Z",
      "diff_hunk" : "@@ -328,28 +482,71 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    // clang-format off\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     ReadBE16(&a[0]),\n+                     ReadBE16(&a[2]),\n+                     ReadBE16(&a[4]),\n+                     ReadBE16(&a[6]),\n+                     ReadBE16(&a[8]),\n+                     ReadBE16(&a[10]),\n+                     ReadBE16(&a[12]),\n+                     ReadBE16(&a[14]));\n+    // clang-format on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488747663",
      "id" : 488747663,
      "line" : 501,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0NzY2Mw==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 501,
      "original_position" : 268,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 272,
      "pull_request_review_id" : 488774041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488747663",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488755139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488755139"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Heh, I recognize that address ;)",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T15:22:05Z",
      "diff_hunk" : "@@ -245,33 +247,300 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"1122:3344:5566:7788:9900:aabb:ccdd:eeff\");\n \n     // TORv2\n-    addr.SetSpecial(\"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n     BOOST_REQUIRE(addr.IsValid());\n     BOOST_REQUIRE(addr.IsTor());\n \n     BOOST_CHECK(!addr.IsBindAny());\n     BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n \n+    // TORv3\n+    const char* torv3_addr = \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\";\n+    BOOST_REQUIRE(addr.SetSpecial(torv3_addr));\n+    BOOST_REQUIRE(addr.IsValid());\n+    BOOST_REQUIRE(addr.IsTor());\n+\n+    BOOST_CHECK(!addr.IsBindAny());\n+    BOOST_CHECK_EQUAL(addr.ToString(), torv3_addr);\n+\n+    // TORv3, broken, with wrong checksum\n+    BOOST_CHECK(!addr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscsad.onion\"));\n+\n+    // TORv3, broken, with wrong version\n+    BOOST_CHECK(!addr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscrye.onion\"));\n+\n+    // TORv3, malicious\n+    BOOST_CHECK(!addr.SetSpecial(std::string{\n+        \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd\\0wtf.onion\", 66}));\n+\n     // Internal\n     addr.SetInternal(\"esffpp\");\n     BOOST_REQUIRE(!addr.IsValid()); // \"internal\" is considered invalid\n     BOOST_REQUIRE(addr.IsInternal());\n \n     BOOST_CHECK(!addr.IsBindAny());\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n+\n+    // Totally bogus\n+    BOOST_CHECK(!addr.SetSpecial(\"totally bogus\"));\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488755139",
      "id" : 488755139,
      "line" : 356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NTEzOQ==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 356,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : 128,
      "pull_request_review_id" : 488774041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488755139",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488773437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488773437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "80c77c31 \r\n```suggestion\r\n            if (IsInternal()) {\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T15:47:02Z",
      "diff_hunk" : "@@ -250,6 +328,25 @@ class CNetAddr\n             s << serialized;\n         }\n \n+        /**\n+         * Serialize as ADDRv2 / BIP155.\n+         */\n+        template <typename Stream>\n+        void SerializeV2Stream(Stream& s) const\n+        {\n+            if (m_net == NET_INTERNAL) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488773437",
      "id" : 488773437,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3MzQzNw==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 337,
      "original_position" : 185,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 488774041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488773437",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488782076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488782076"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T15:59:10Z",
      "diff_hunk" : "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {\n+        while (str.size() % 8) {\n+            str += '=';\n+        }\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488782076",
      "id" : 488782076,
      "in_reply_to_id" : 487983214,
      "line" : 215,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4MjA3Ng==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 215,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/util/strencodings.cpp",
      "position" : 17,
      "pull_request_review_id" : 488834601,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488782076",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488782327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488782327"
         }
      },
      "author_association" : "MEMBER",
      "body" : "SGTM.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T15:59:29Z",
      "diff_hunk" : "@@ -5,18 +5,111 @@\n \n #include <netaddress.h>\n \n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::RecognizeBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488782327",
      "id" : 488782327,
      "in_reply_to_id" : 487869783,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4MjMyNw==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 55,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488834905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488782327",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488783575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488783575"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My comment wasn't about the syntax, but rather why not use std::string and size().",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T16:01:19Z",
      "diff_hunk" : "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488783575",
      "id" : 488783575,
      "in_reply_to_id" : 487930052,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4MzU3NQ==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 234,
      "original_position" : 188,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 488836506,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488783575",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488925305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488925305"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "clang-format 12 puts everything in one line for me.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T19:38:25Z",
      "diff_hunk" : "@@ -328,28 +482,71 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    // clang-format off\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     ReadBE16(&a[0]),\n+                     ReadBE16(&a[2]),\n+                     ReadBE16(&a[4]),\n+                     ReadBE16(&a[6]),\n+                     ReadBE16(&a[8]),\n+                     ReadBE16(&a[10]),\n+                     ReadBE16(&a[12]),\n+                     ReadBE16(&a[14]));\n+    // clang-format on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488925305",
      "id" : 488925305,
      "in_reply_to_id" : 488747663,
      "line" : 501,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyNTMwNQ==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 501,
      "original_position" : 268,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 272,
      "pull_request_review_id" : 489011149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488925305",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488927739"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488927739"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T19:41:16Z",
      "diff_hunk" : "@@ -5,18 +5,112 @@\n \n #include <netaddress.h>\n \n+#include <crypto/common.h>\n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)\n+{\n+    switch (possible_bip155_net) {\n+    case BIP155Network::IPV4:\n+        if (address_size == ADDR_IPV4_SIZE) {\n+           m_net = NET_IPV4;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv4 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV4_SIZE));\n+    case BIP155Network::IPV6:\n+        if (address_size == ADDR_IPV6_SIZE) {\n+           m_net = NET_IPV6;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv6 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV6_SIZE));\n+    case BIP155Network::TORV2:\n+        if (address_size == ADDR_TORV2_SIZE) {\n+           m_net = NET_ONION;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 TORv2 address with length %u (should be %u)\", address_size,\n+                      ADDR_TORV2_SIZE));\n+    case BIP155Network::TORV3:\n+        if (address_size == ADDR_TORV3_SIZE) {\n+            m_net = NET_ONION;\n+            return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488927739",
      "id" : 488927739,
      "in_reply_to_id" : 488735488,
      "line" : 86,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyNzczOQ==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 86,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 83,
      "pull_request_review_id" : 489013065,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488927739",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928062"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T19:41:38Z",
      "diff_hunk" : "@@ -101,24 +194,77 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // TORv3 CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n- * Parse a TORv2 address and set this object to it.\n+ * Parse a TOR address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928062",
      "id" : 488928062,
      "in_reply_to_id" : 488736535,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyODA2Mg==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 232,
      "original_position" : 184,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 489013311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928062",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928234"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928234"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T19:41:49Z",
      "diff_hunk" : "@@ -429,20 +626,20 @@ uint32_t CNetAddr::GetLinkedIPv4() const\n }\n \n uint32_t CNetAddr::GetNetClass() const {\n-    uint32_t net_class = NET_IPV6;\n-    if (IsLocal()) {\n-        net_class = 255;\n-    }\n+    // Make sure that if we return NET_IPV6, then IsIPv6() is true. The callers expect that.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928234",
      "id" : 488928234,
      "in_reply_to_id" : 488743740,
      "line" : 634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyODIzNA==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 634,
      "original_position" : 351,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 358,
      "pull_request_review_id" : 489013439,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928234",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928476"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T19:42:06Z",
      "diff_hunk" : "@@ -250,6 +328,25 @@ class CNetAddr\n             s << serialized;\n         }\n \n+        /**\n+         * Serialize as ADDRv2 / BIP155.\n+         */\n+        template <typename Stream>\n+        void SerializeV2Stream(Stream& s) const\n+        {\n+            if (m_net == NET_INTERNAL) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928476",
      "id" : 488928476,
      "in_reply_to_id" : 488773437,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyODQ3Ng==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 337,
      "original_position" : 185,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 489013641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928476",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928831"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-15T19:42:31Z",
      "diff_hunk" : "@@ -328,28 +482,71 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928831",
      "id" : 488928831,
      "in_reply_to_id" : 488741844,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyODgzMQ==",
      "original_commit_id" : "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "original_line" : 485,
      "original_position" : 256,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 489013910,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928831",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review re-ACK per `git diff 8d2b60c 3eef1e6`",
      "created_at" : "2020-09-16T08:13:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-693249494",
      "id" : 693249494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MzI0OTQ5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-16T08:13:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/693249494",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489373250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489373250"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, now I see `std::string` instead of `char*`. There is no need to create a `std::string` object.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T11:45:44Z",
      "diff_hunk" : "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489373250",
      "id" : 489373250,
      "in_reply_to_id" : 487930052,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MzI1MA==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 234,
      "original_position" : 188,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 489540751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489373250",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489428777"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489428777"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The word \"deduce\" in the doc here is still confusing. Suggestion:\r\n> Set `m_net` after validating the serialised address. This currently checks if the address length matches what is expected for the serialised BIP155 id.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T13:17:32Z",
      "diff_hunk" : "@@ -186,20 +220,56 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Deduce the BIP155 network id of this address.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489428777",
      "id" : 489428777,
      "in_reply_to_id" : 487871749,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQyODc3Nw==",
      "original_commit_id" : "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "original_line" : 265,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 489613987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489428777",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489430515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489430515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe add:\r\n> returns false for unrecognised (future) network ids, which must be ignored (BIP155).",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T13:19:48Z",
      "diff_hunk" : "@@ -186,17 +202,52 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Get the BIP155 network id of this address.\n+         * Must not be called for IsInternal() objects.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.\n+         * @returns true if the network was recognized and `m_net` was set",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489430515",
      "id" : 489430515,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQzMDUxNQ==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 245,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 489613987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489430515",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489481220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489481220"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe add a test where `address` is shorter than the announced `address length` (which itself is valid). Is this code covered by fuzzing?",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T14:27:35Z",
      "diff_hunk" : "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489481220",
      "id" : 489481220,
      "line" : 409,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4MTIyMA==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 409,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : 181,
      "pull_request_review_id" : 489613987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489481220",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489486995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489486995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggest adding a test for unknown with reasonable length.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T14:34:51Z",
      "diff_hunk" : "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Valid IPv6, contains embedded \"internal\".\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"fd6b88c08724ca978112ca1bbdcafac2\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsInternal());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"zklycewkdo64v6wc.internal\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv6, contains embedded IPv4.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"00000000000000000000ffff01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(!addr.IsValid());\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, contains embedded TORv2.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"fd87d87eeb430102030405060708090a\")); // address\n+    s >> addr;\n+    BOOST_CHECK(!addr.IsValid());\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Unknown, with extreme length.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489486995",
      "id" : 489486995,
      "line" : 540,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4Njk5NQ==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 540,
      "original_position" : 183,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : 312,
      "pull_request_review_id" : 489613987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489486995",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489493199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489493199"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I get that:\r\n1. `0210` indicates IPv6 (in which the internal is embedded)\r\n2. `0xFD + sha256(\"bitcoin\")[0:5]` is the prefix for internal, which explains `fd6b88c08724`\r\n\r\nBut how is the rest (`ca978112ca1bbdcafac2`) generated? Might be worth a comment. Either way, it matches the pre-existing v1 test.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T14:42:45Z",
      "diff_hunk" : "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489493199",
      "id" : 489493199,
      "line" : 363,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5MzE5OQ==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 363,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : 135,
      "pull_request_review_id" : 489613987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489493199",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489499300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489499300"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This needs a strong warning:\r\n```\r\n// length should have been checked before calling this function\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T14:50:23Z",
      "diff_hunk" : "@@ -29,7 +32,18 @@ CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n     case NET_IPV6:\n         return BIP155Network::IPV6;\n     case NET_ONION:\n-        return BIP155Network::TORV2;\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489499300",
      "id" : 489499300,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5OTMwMA==",
      "original_commit_id" : "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "original_line" : 41,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 38,
      "pull_request_review_id" : 489613987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489499300",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "concept ACK, tested ACK: Built and tested unit and functional on OSX 10.14\r\nWas able to `addnode` onionV3 addresses and connect after launching with `-proxy=127.0.0.1:9050  -onlynet=onion`.\r\nReviewing code next...",
      "created_at" : "2020-09-16T16:35:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-693522705",
      "id" : 693522705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MzUyMjcwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-16T16:35:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/693522705",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489740694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489740694"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: `HasReason` is a class but the commit message is talking about moving a function.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T20:39:31Z",
      "diff_hunk" : "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489740694",
      "id" : 489740694,
      "line" : 161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MDY5NA==",
      "original_commit_id" : "6ab0a741abf3a22f57e55728674a6fb0938c2505",
      "original_line" : 161,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 9,
      "pull_request_review_id" : 490003117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489740694",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489748399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489748399"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\nbool CNetAddr::SetNetFromBIP155Network(const uint8_t possible_bip155_net, const size_t address_size)\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T20:54:52Z",
      "diff_hunk" : "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489748399",
      "id" : 489748399,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0ODM5OQ==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 56,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 53,
      "pull_request_review_id" : 490003117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489748399",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489764805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489764805"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: same with the string one below\r\n```suggestion\r\nstd::string EncodeBase32(Span<const unsigned char> input, const bool pad)\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T21:28:12Z",
      "diff_hunk" : "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489764805",
      "id" : 489764805,
      "line" : 204,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2NDgwNQ==",
      "original_commit_id" : "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "original_line" : 204,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/strencodings.cpp",
      "position" : 5,
      "pull_request_review_id" : 490003117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489764805",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489776345"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489776345"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this and https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489764805 below are  following these two guidelines:\r\n\r\n- https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#S-const\r\n```cpp\r\nvoid g(const int i);        // pedantic\r\n```\r\n- https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-in",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T21:54:38Z",
      "diff_hunk" : "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489776345",
      "id" : 489776345,
      "in_reply_to_id" : 489748399,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NjM0NQ==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 56,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 53,
      "pull_request_review_id" : 490047344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489776345",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489806866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489806866"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Then I disagree with that guideline :) Using const in function arguments unlocks potential compiler optimizations and clarifies the code of that function. Not doing it just to ensure that people are not confused when they afterward encounter another function that does not follow that practice seems backward. We are also already using const in function args in many places of the codebase, so \"rarely declared const\" doesn't apply.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T23:23:42Z",
      "diff_hunk" : "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489806866",
      "id" : 489806866,
      "in_reply_to_id" : 489748399,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgwNjg2Ng==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 56,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 53,
      "pull_request_review_id" : 490082933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489806866",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489811092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489811092"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Anyway, it's just a nit so feel free to ignore obviously.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-16T23:37:19Z",
      "diff_hunk" : "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489811092",
      "id" : 489811092,
      "in_reply_to_id" : 489748399,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgxMTA5Mg==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 56,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 53,
      "pull_request_review_id" : 490087575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489811092",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489972622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489972622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, fair points. Curious what people think.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T05:04:45Z",
      "diff_hunk" : "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489972622",
      "id" : 489972622,
      "in_reply_to_id" : 489748399,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3MjYyMg==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 56,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 53,
      "pull_request_review_id" : 490244920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489972622",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Note that the `ADDRV2_FORMAT` constant may be replaced with another mechanism, but that can easily be done in a followup PR.\r\n\r\nDo you mean this one: https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-684742011 or something else?",
      "created_at" : "2020-09-17T12:58:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694214035",
      "id" : 694214035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NDIxNDAzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-17T12:58:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694214035",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490240329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490240329"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[reworded a little](https://github.com/bitcoin/bitcoin/compare/3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd..65a8d3199d3b40da679a3cf225f37e80965f7615#diff-76d15e11a95be7a4aee1eb89de6098caR267)",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T13:23:31Z",
      "diff_hunk" : "@@ -186,17 +202,52 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Get the BIP155 network id of this address.\n+         * Must not be called for IsInternal() objects.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.\n+         * @returns true if the network was recognized and `m_net` was set",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490240329",
      "id" : 490240329,
      "in_reply_to_id" : 489430515,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MDMyOQ==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 245,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 490589585,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490240329",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490246733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490246733"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added [a new test](https://github.com/bitcoin/bitcoin/compare/3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd..65a8d3199d3b40da679a3cf225f37e80965f7615#diff-03fc2f333374fd229824451793c40462R385).\r\n\r\nYes, it is fuzzed:\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/test/fuzz/deserialize.cpp#L185",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T13:30:26Z",
      "diff_hunk" : "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490246733",
      "id" : 490246733,
      "in_reply_to_id" : 489481220,
      "line" : 409,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NjczMw==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 409,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : 181,
      "pull_request_review_id" : 490596297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490246733",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490248299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490248299"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[Added new test](https://github.com/bitcoin/bitcoin/compare/3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd..65a8d3199d3b40da679a3cf225f37e80965f7615#diff-03fc2f333374fd229824451793c40462R550)",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T13:32:15Z",
      "diff_hunk" : "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Valid IPv6, contains embedded \"internal\".\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"fd6b88c08724ca978112ca1bbdcafac2\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsInternal());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"zklycewkdo64v6wc.internal\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv6, contains embedded IPv4.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"00000000000000000000ffff01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(!addr.IsValid());\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, contains embedded TORv2.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"fd87d87eeb430102030405060708090a\")); // address\n+    s >> addr;\n+    BOOST_CHECK(!addr.IsValid());\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Unknown, with extreme length.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490248299",
      "id" : 490248299,
      "in_reply_to_id" : 489486995,
      "line" : 540,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0ODI5OQ==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 540,
      "original_position" : 183,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : 312,
      "pull_request_review_id" : 490598009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490248299",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490250124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490250124"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added some comments: https://github.com/bitcoin/bitcoin/compare/3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd..65a8d3199d3b40da679a3cf225f37e80965f7615#diff-03fc2f333374fd229824451793c40462R425",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T13:34:17Z",
      "diff_hunk" : "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490250124",
      "id" : 490250124,
      "in_reply_to_id" : 489493199,
      "line" : 363,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MDEyNA==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 363,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : 135,
      "pull_request_review_id" : 490600035,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490250124",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490274796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490274796"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The length cannot be something else than `ADDR_TORV2_SIZE` or `ADDR_TORV3_SIZE`. There is no code path that would lead to such scenario and if it happens it means some memory corruption or some future bug. It is the same as `m_net` being equal to `NET_MAX` for example.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T14:06:33Z",
      "diff_hunk" : "@@ -29,7 +32,18 @@ CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n     case NET_IPV6:\n         return BIP155Network::IPV6;\n     case NET_ONION:\n-        return BIP155Network::TORV2;\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490274796",
      "id" : 490274796,
      "in_reply_to_id" : 489499300,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3NDc5Ng==",
      "original_commit_id" : "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "original_line" : 41,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 38,
      "pull_request_review_id" : 490632799,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490274796",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490275161"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490275161"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed!",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T14:07:02Z",
      "diff_hunk" : "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490275161",
      "id" : 490275161,
      "in_reply_to_id" : 489740694,
      "line" : 161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3NTE2MQ==",
      "original_commit_id" : "6ab0a741abf3a22f57e55728674a6fb0938c2505",
      "original_line" : 161,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 9,
      "pull_request_review_id" : 490633407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490275161",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490289235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490289235"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My take is the same as the isocpp guidelines - no `const` for function arguments that are passed by value.\r\n\r\nWhenever I see `void func(const int x);` my reaction is \"Huh!? Did the author realize that no matter what the function body is it cannot modify the caller's variable given as an argument? Or did the author mean `const int* x` or `const int& x`?\r\n\r\nYes, the compiler may do some optimizations inside the function body, but that is out-weighted by the above. And I guess modern compilers may do the optimizations even without the presence of `const`.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T14:24:50Z",
      "diff_hunk" : "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490289235",
      "id" : 490289235,
      "in_reply_to_id" : 489748399,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4OTIzNQ==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 56,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 53,
      "pull_request_review_id" : 490652111,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490289235",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490289645"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490289645"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Lets have the conversation in just one place: https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489748399",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T14:25:17Z",
      "diff_hunk" : "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490289645",
      "id" : 490289645,
      "in_reply_to_id" : 489764805,
      "line" : 204,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4OTY0NQ==",
      "original_commit_id" : "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "original_line" : 204,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/util/strencodings.cpp",
      "position" : 5,
      "pull_request_review_id" : 490652633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490289645",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[Filtered code coverage report](https://people.freebsd.org/~vd/pr19845_65a8d3199_coverage/) (files not modified by this PR are omitted and not modified lines in files that are otherwise modified are dimmed).\r\n\r\n[List of modified and not covered lines](https://people.freebsd.org/~vd/pr19845_65a8d3199_coverage/modified_and_not_covered.html).",
      "created_at" : "2020-09-17T14:32:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694276899",
      "id" : 694276899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NDI3Njg5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-17T14:32:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694276899",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490380216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490380216"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"not unrecognised\" -> \"not recognised\" or \"unrecognised\"",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T16:14:48Z",
      "diff_hunk" : "@@ -186,20 +220,58 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Get the BIP155 network id of this address.\n+         * Must not be called for IsInternal() objects.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Set `m_net` from the provided BIP155 network id and size after validation.\n+         * @retval true the network was recognized, is valid and `m_net` was set\n+         * @retval false not unrecognised (from future?) and should be silently ignored",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490380216",
      "id" : 490380216,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM4MDIxNg==",
      "original_commit_id" : "65a8d3199d3b40da679a3cf225f37e80965f7615",
      "original_line" : 267,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 490770782,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490380216",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 65a8d31 per `git diff 3eef1e6 65a8d31` modulo doc fix\r\n\r\nChanged all the bogus length tests to test the bounds values of 0, (address size - 1), and (address size + 1) to check behavior; it was the same.",
      "created_at" : "2020-09-17T18:09:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694407882",
      "id" : 694407882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NDQwNzg4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-17T18:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694407882",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490536683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490536683"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-17T20:17:41Z",
      "diff_hunk" : "@@ -186,20 +220,58 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Get the BIP155 network id of this address.\n+         * Must not be called for IsInternal() objects.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Set `m_net` from the provided BIP155 network id and size after validation.\n+         * @retval true the network was recognized, is valid and `m_net` was set\n+         * @retval false not unrecognised (from future?) and should be silently ignored",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490536683",
      "id" : 490536683,
      "in_reply_to_id" : 490380216,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUzNjY4Mw==",
      "original_commit_id" : "65a8d3199d3b40da679a3cf225f37e80965f7615",
      "original_line" : 267,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 490956496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490536683",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Should be all good for re-review.",
      "created_at" : "2020-09-18T08:49:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694742633",
      "id" : 694742633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NDc0MjYzMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-18T08:49:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694742633",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK b9c46e0a935a14063913f0c999922f8e22bce61d per `git diff 65a8d31 b9c46e0`",
      "created_at" : "2020-09-18T09:52:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694772999",
      "id" : 694772999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NDc3Mjk5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-18T09:52:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694772999",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491089742"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491089742"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree with @vasild; using `const` for by-value arguments looks strange.\r\n\r\nI would be very surprised if it enables any optimization in common cases. In the SSA transformation every assignment is treated as a new constant value, regardless of the variables that hold it or their types. This works especially well for small values, which tend to be the ones that are passed around by value.\r\n\r\nAll const does in this case is prevent accidentally modifying the *local copy* of the parameter during execution of the function. It's similar to just declaring a local variable defined in the body of the function const, but in a way that can be confused to look like it's part of the function's contract.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-18T17:24:43Z",
      "diff_hunk" : "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491089742",
      "id" : 491089742,
      "in_reply_to_id" : 489748399,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4OTc0Mg==",
      "original_commit_id" : "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "original_line" : 56,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 53,
      "pull_request_review_id" : 491651673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491089742",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491135795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491135795"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: If you write this as `= {3};` instead, the write below can become `hasher.Write(VERSION);`.\r\n\r\nYou could even do something similar with `prefix`, writing the initializer as `= {'.', 'o', 'n', 'i', 'o', 'n', ' ', ...`, but that looks kind of ugly.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-18T18:58:45Z",
      "diff_hunk" : "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491135795",
      "id" : 491135795,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzNTc5NQ==",
      "original_commit_id" : "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "original_line" : 201,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 491651673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491135795",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491158657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491158657"
         }
      },
      "author_association" : "NONE",
      "body" : "I don't see the `scopeId` variable being used in this block, could it be removed? Or is it required to be set here for something else down the line?",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-18T19:50:17Z",
      "diff_hunk" : "@@ -272,6 +370,65 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            scopeId = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491158657",
      "id" : 491158657,
      "line" : 391,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1ODY1Nw==",
      "original_commit_id" : "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "original_line" : 391,
      "original_position" : 224,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 224,
      "pull_request_review_id" : 491740446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491158657",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/20860124?v=4",
         "events_url" : "https://api.github.com/users/eriknylund/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eriknylund/followers",
         "following_url" : "https://api.github.com/users/eriknylund/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eriknylund/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eriknylund",
         "id" : 20860124,
         "login" : "eriknylund",
         "node_id" : "MDQ6VXNlcjIwODYwMTI0",
         "organizations_url" : "https://api.github.com/users/eriknylund/orgs",
         "received_events_url" : "https://api.github.com/users/eriknylund/received_events",
         "repos_url" : "https://api.github.com/users/eriknylund/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eriknylund/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eriknylund/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eriknylund"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491163005"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491163005"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's a member variable of `CNetAddr`, so yes, it is used later.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-18T20:00:35Z",
      "diff_hunk" : "@@ -272,6 +370,65 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            scopeId = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491163005",
      "id" : 491163005,
      "in_reply_to_id" : 491158657,
      "line" : 391,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MzAwNQ==",
      "original_commit_id" : "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "original_line" : 391,
      "original_position" : 224,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 224,
      "pull_request_review_id" : 491651673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491163005",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491168611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491168611"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> // length should have been checked before calling this function\r\n\r\nI disagree; length is part of the `CNetAddr` objects, so this precondition is just restating an implicit \"can only be called on a valid `CNetAddr` object\".",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-18T20:13:48Z",
      "diff_hunk" : "@@ -29,7 +32,18 @@ CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n     case NET_IPV6:\n         return BIP155Network::IPV6;\n     case NET_ONION:\n-        return BIP155Network::TORV2;\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491168611",
      "id" : 491168611,
      "in_reply_to_id" : 489499300,
      "line" : 41,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2ODYxMQ==",
      "original_commit_id" : "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "original_line" : 41,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 38,
      "pull_request_review_id" : 491651673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491168611",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491192996"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491192996"
         }
      },
      "author_association" : "NONE",
      "body" : "To my (limited) understanding the use of namespaces are rare in the project, is there a specific reason it has to be used here?",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-18T21:12:20Z",
      "diff_hunk" : "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491192996",
      "id" : 491192996,
      "line" : 197,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE5Mjk5Ng==",
      "original_commit_id" : "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "original_line" : 197,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 147,
      "pull_request_review_id" : 491783955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491192996",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/20860124?v=4",
         "events_url" : "https://api.github.com/users/eriknylund/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eriknylund/followers",
         "following_url" : "https://api.github.com/users/eriknylund/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eriknylund/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eriknylund",
         "id" : 20860124,
         "login" : "eriknylund",
         "node_id" : "MDQ6VXNlcjIwODYwMTI0",
         "organizations_url" : "https://api.github.com/users/eriknylund/orgs",
         "received_events_url" : "https://api.github.com/users/eriknylund/received_events",
         "repos_url" : "https://api.github.com/users/eriknylund/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eriknylund/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eriknylund/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eriknylund"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491201418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491201418"
         }
      },
      "author_association" : "NONE",
      "body" : "I have improved the test for this method to cover both branches. Is that something worth having in this PR already? Here's the diff and I'm happy to adjust if there's a better way to test it https://gist.github.com/eriknylund/cd2bcaf9c3b4ada8a304001c2df0bfbd",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-18T21:36:35Z",
      "diff_hunk" : "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491201418",
      "id" : 491201418,
      "line" : 211,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMTQxOA==",
      "original_commit_id" : "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "original_line" : 211,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/util/strencodings.cpp",
      "position" : 13,
      "pull_request_review_id" : 491794324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:15:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491201418",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/20860124?v=4",
         "events_url" : "https://api.github.com/users/eriknylund/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eriknylund/followers",
         "following_url" : "https://api.github.com/users/eriknylund/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eriknylund/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eriknylund",
         "id" : 20860124,
         "login" : "eriknylund",
         "node_id" : "MDQ6VXNlcjIwODYwMTI0",
         "organizations_url" : "https://api.github.com/users/eriknylund/orgs",
         "received_events_url" : "https://api.github.com/users/eriknylund/received_events",
         "repos_url" : "https://api.github.com/users/eriknylund/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eriknylund/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eriknylund/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eriknylund"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491862766"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491862766"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added the test, thanks!",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-21T08:16:38Z",
      "diff_hunk" : "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491862766",
      "id" : 491862766,
      "in_reply_to_id" : 491201418,
      "line" : 211,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2Mjc2Ng==",
      "original_commit_id" : "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "original_line" : 211,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/util/strencodings.cpp",
      "position" : 13,
      "pull_request_review_id" : 492366849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:16:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491862766",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added no-padding tests for `EncodeBase32()` by @eriknylund and a simplification around `torv3::VERSION` suggested by @sipa.\r\n\r\nThanks!",
      "created_at" : "2020-09-21T08:19:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-695971663",
      "id" : 695971663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTk3MTY2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-21T08:19:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695971663",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491866446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491866446"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to `{3}`, this also made it possible to remove the `VERSION_LEN` variable.\r\n\r\nYeah, `{'.', 'o', ...` makes it too weird. Given that `Write(MakeSpan(prefix).first(prefix_len))` (which could have been simplified to `Write(prefix)`) is used in just one place, I left it as is.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-21T08:23:28Z",
      "diff_hunk" : "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491866446",
      "id" : 491866446,
      "in_reply_to_id" : 491135795,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2NjQ0Ng==",
      "original_commit_id" : "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "original_line" : 201,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 492371682,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:23:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491866446",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491873688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491873688"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The primary reason to use a namespace - things belong together.\r\n\r\nEvery time I spot myself prefixing symbols with a common prefix I ask myself whether I am implementing a poor man's namespace. In this case, without a namespace, I would have had to prefix all the symbols with a `torv3_` prefix. E.g. `TORV3_CHECKSUM_LEN`, `TORV3_VERSION`, `Torv3Checksum()`.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-21T08:36:24Z",
      "diff_hunk" : "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491873688",
      "id" : 491873688,
      "in_reply_to_id" : 491192996,
      "line" : 197,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3MzY4OA==",
      "original_commit_id" : "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "original_line" : 197,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 147,
      "pull_request_review_id" : 492380849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T08:36:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491873688",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491896287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491896287"
         }
      },
      "author_association" : "NONE",
      "body" : "I completely agree, I think it makes things more contained, well structured and easier to comprehend. It seems to me a lot of new code would benefit from namespacing and perhaps worth considering when touching old code as well?",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-21T09:15:50Z",
      "diff_hunk" : "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491896287",
      "id" : 491896287,
      "in_reply_to_id" : 491192996,
      "line" : 197,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5NjI4Nw==",
      "original_commit_id" : "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "original_line" : 197,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 147,
      "pull_request_review_id" : 492409697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-21T09:15:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491896287",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/20860124?v=4",
         "events_url" : "https://api.github.com/users/eriknylund/events{/privacy}",
         "followers_url" : "https://api.github.com/users/eriknylund/followers",
         "following_url" : "https://api.github.com/users/eriknylund/following{/other_user}",
         "gists_url" : "https://api.github.com/users/eriknylund/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/eriknylund",
         "id" : 20860124,
         "login" : "eriknylund",
         "node_id" : "MDQ6VXNlcjIwODYwMTI0",
         "organizations_url" : "https://api.github.com/users/eriknylund/orgs",
         "received_events_url" : "https://api.github.com/users/eriknylund/received_events",
         "repos_url" : "https://api.github.com/users/eriknylund/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/eriknylund/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/eriknylund/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/eriknylund"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-tACK 7be6ff61875a8d5d2335bff5d1f16ba40557adb0 ",
      "created_at" : "2020-09-21T14:45:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-696162703",
      "id" : 696162703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NjE2MjcwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-21T14:45:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696162703",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r494391140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494391140"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sanity-checked that the new test fails with\r\n```diff\r\n-        strEnc = EncodeBase32(vstrIn[i], false);\r\n+        strEnc = EncodeBase32(vstrIn[i], true);\r\n```\r\n",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-24T15:00:59Z",
      "diff_hunk" : "@@ -13,10 +13,13 @@ BOOST_AUTO_TEST_CASE(base32_testvectors)\n {\n     static const std::string vstrIn[]  = {\"\",\"f\",\"fo\",\"foo\",\"foob\",\"fooba\",\"foobar\"};\n     static const std::string vstrOut[] = {\"\",\"my======\",\"mzxq====\",\"mzxw6===\",\"mzxw6yq=\",\"mzxw6ytb\",\"mzxw6ytboi======\"};\n+    static const std::string vstrOutNoPadding[] = {\"\",\"my\",\"mzxq\",\"mzxw6\",\"mzxw6yq\",\"mzxw6ytb\",\"mzxw6ytboi\"};\n     for (unsigned int i=0; i<sizeof(vstrIn)/sizeof(vstrIn[0]); i++)\n     {\n         std::string strEnc = EncodeBase32(vstrIn[i]);\n         BOOST_CHECK_EQUAL(strEnc, vstrOut[i]);\n+        strEnc = EncodeBase32(vstrIn[i], false);\n+        BOOST_CHECK_EQUAL(strEnc, vstrOutNoPadding[i]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r494391140",
      "id" : 494391140,
      "line" : 22,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5MTE0MA==",
      "original_commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_line" : 22,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/test/base32_tests.cpp",
      "position" : 10,
      "pull_request_review_id" : 495667597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-24T15:15:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494391140",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK 7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-26T02:47:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-699282486",
      "id" : 699282486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5OTI4MjQ4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-26T02:47:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/699282486",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495486760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495486760"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fe42411b4b07b99c591855f5f00ad45dfeec8e30\r\n\r\nnanonit -- clang-format suggests:\r\n```suggestion\r\nclass HasReason\r\n{\r\npublic:\r\n    explicit HasReason(const std::string& reason) : m_reason(reason) {}\r\n    template <typename E>\r\n    bool operator()(const E& e) const\r\n    {\r\n        return std::string(e.what()).find(m_reason) != std::string::npos;\r\n    };\r\n\r\nprivate:\r\n    const std::string m_reason;\r\n};\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-26T19:16:37Z",
      "diff_hunk" : "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>\n+    bool operator() (const E& e) const {\n+        return std::string(e.what()).find(m_reason) != std::string::npos;\n+    };\n+private:\n+    const std::string m_reason;\n+};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495486760",
      "id" : 495486760,
      "line" : 170,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Njc2MA==",
      "original_commit_id" : "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "original_line" : 170,
      "original_position" : 18,
      "original_start_line" : 161,
      "path" : "src/test/util/setup_common.h",
      "position" : 18,
      "pull_request_review_id" : 497025535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : 161,
      "start_side" : "RIGHT",
      "updated_at" : "2020-09-26T21:17:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495486760",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495487234"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495487234"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fe42411b4b07b99c591855f5f00ad45dfeec8e30\r\n\r\nWhy introduce a template in \"move\" commit?\r\nThis pull compiles with the previous `std::runtime_error` parameter.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-26T19:22:51Z",
      "diff_hunk" : "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495487234",
      "id" : 495487234,
      "line" : 164,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NzIzNA==",
      "original_commit_id" : "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "original_line" : 164,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 12,
      "pull_request_review_id" : 497025535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-26T21:17:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495487234",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495488051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495488051"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e0d73573a37bf4b519f6f61e5678572d48a64517\r\n\r\nnit:\r\n```suggestion\r\nstatic constexpr int ADDRV2_FORMAT = 0x20000000;\r\n```",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-26T19:32:37Z",
      "diff_hunk" : "@@ -13,12 +13,24 @@\n #include <compat.h>\n #include <prevector.h>\n #include <serialize.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <string>\n #include <vector>\n \n+/**\n+ * A flag that is ORed into the protocol version to designate that addresses\n+ * should be serialized in (unserialized from) v2 format (BIP155).\n+ * Make sure that this does not collide with any of the values in `version.h`\n+ * or with `SERIALIZE_TRANSACTION_NO_WITNESS`.\n+ */\n+static const int ADDRV2_FORMAT = 0x20000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495488051",
      "id" : 495488051,
      "line" : 32,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4ODA1MQ==",
      "original_commit_id" : "e0d73573a37bf4b519f6f61e5678572d48a64517",
      "original_line" : 32,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 20,
      "pull_request_review_id" : 497025535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-26T21:17:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495488051",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495730125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495730125"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We are now passing `std::ios_base::failure` as well. Now that you say it compiles with `std::runtime_error` I realized that the [former inherits the latter](https://en.cppreference.com/w/cpp/io/ios_base/failure) in C++11.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-28T07:09:01Z",
      "diff_hunk" : "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495730125",
      "id" : 495730125,
      "in_reply_to_id" : 495487234,
      "line" : 164,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMDEyNQ==",
      "original_commit_id" : "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "original_line" : 164,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.h",
      "position" : 12,
      "pull_request_review_id" : 497238142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-28T07:09:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495730125",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495730990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495730990"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, I should deploy some automatic pre-push clang-format here. Not worth invalidating ACKs though.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-28T07:10:53Z",
      "diff_hunk" : "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>\n+    bool operator() (const E& e) const {\n+        return std::string(e.what()).find(m_reason) != std::string::npos;\n+    };\n+private:\n+    const std::string m_reason;\n+};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495730990",
      "id" : 495730990,
      "in_reply_to_id" : 495486760,
      "line" : 170,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMDk5MA==",
      "original_commit_id" : "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "original_line" : 170,
      "original_position" : 18,
      "original_start_line" : 161,
      "path" : "src/test/util/setup_common.h",
      "position" : 18,
      "pull_request_review_id" : 497239226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : 161,
      "start_side" : "RIGHT",
      "updated_at" : "2020-09-28T07:10:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495730990",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495731892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495731892"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right! But I will leave it as is, because of the amount of ACKs it is buried under.",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-28T07:12:49Z",
      "diff_hunk" : "@@ -13,12 +13,24 @@\n #include <compat.h>\n #include <prevector.h>\n #include <serialize.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <string>\n #include <vector>\n \n+/**\n+ * A flag that is ORed into the protocol version to designate that addresses\n+ * should be serialized in (unserialized from) v2 format (BIP155).\n+ * Make sure that this does not collide with any of the values in `version.h`\n+ * or with `SERIALIZE_TRANSACTION_NO_WITNESS`.\n+ */\n+static const int ADDRV2_FORMAT = 0x20000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495731892",
      "id" : 495731892,
      "in_reply_to_id" : 495488051,
      "line" : 32,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMTg5Mg==",
      "original_commit_id" : "e0d73573a37bf4b519f6f61e5678572d48a64517",
      "original_line" : 32,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 20,
      "pull_request_review_id" : 497240448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-28T07:12:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495731892",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto I edited your ACK comment above to avoid having the `@jonatack` highlight and your onion address in the merge commit.",
      "created_at" : "2020-09-28T19:28:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-700235164",
      "id" : 700235164,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMDIzNTE2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-28T19:28:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700235164",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r496603855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496603855"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed in https://github.com/bitcoin/bitcoin/pull/20033",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-29T10:17:17Z",
      "diff_hunk" : "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>\n+    bool operator() (const E& e) const {\n+        return std::string(e.what()).find(m_reason) != std::string::npos;\n+    };\n+private:\n+    const std::string m_reason;\n+};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r496603855",
      "id" : 496603855,
      "in_reply_to_id" : 495486760,
      "line" : 170,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwMzg1NQ==",
      "original_commit_id" : "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "original_line" : 170,
      "original_position" : 18,
      "original_start_line" : 161,
      "path" : "src/test/util/setup_common.h",
      "position" : 18,
      "pull_request_review_id" : 498319968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : 161,
      "start_side" : "RIGHT",
      "updated_at" : "2020-09-29T10:17:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496603855",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r496603941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496603941"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed in https://github.com/bitcoin/bitcoin/pull/20033",
      "commit_id" : "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "created_at" : "2020-09-29T10:17:26Z",
      "diff_hunk" : "@@ -13,12 +13,24 @@\n #include <compat.h>\n #include <prevector.h>\n #include <serialize.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <string>\n #include <vector>\n \n+/**\n+ * A flag that is ORed into the protocol version to designate that addresses\n+ * should be serialized in (unserialized from) v2 format (BIP155).\n+ * Make sure that this does not collide with any of the values in `version.h`\n+ * or with `SERIALIZE_TRANSACTION_NO_WITNESS`.\n+ */\n+static const int ADDRV2_FORMAT = 0x20000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r496603941",
      "id" : 496603941,
      "in_reply_to_id" : 495488051,
      "line" : 32,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwMzk0MQ==",
      "original_commit_id" : "e0d73573a37bf4b519f6f61e5678572d48a64517",
      "original_line" : 32,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : 20,
      "pull_request_review_id" : 498320096,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-29T10:17:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496603941",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
