[
   {
      "author_association" : "MEMBER",
      "body" : "This implements something similar to what is discussed in #16859.\r\n\r\nMarking this as draft for now, as it builds on top of #19724.",
      "created_at" : "2020-09-01T21:10:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685134274",
      "id" : 685134274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTEzNDI3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T21:10:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685134274",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19884 (p2p: No delay in adding fixed seeds if -dnsseed=0 and peers.dat is empty by dhruv)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-09-01T23:51:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685192705",
      "id" : 685192705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTE5MjcwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T15:24:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685192705",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481853670"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481853670"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps it's a good opportunity to refactor this function:\r\n- rename `GetExtraOutboundCount` -> `GetExtraFullOutboundCount`\r\n- rename `int nOutbound` -> `uint32_t full_outbound_peers`",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-02T07:55:25Z",
      "diff_hunk" : "@@ -1760,12 +1760,12 @@ int CConnman::GetExtraOutboundCount()\n     {\n         LOCK(cs_vNodes);\n         for (const CNode* pnode : vNodes) {\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsOutboundOrBlockRelayConn()) {\n+            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\n                 ++nOutbound;\n             }\n         }\n     }\n-    return std::max(nOutbound - m_max_outbound_full_relay - m_max_outbound_block_relay, 0);\n+    return std::max(nOutbound - m_max_outbound_full_relay, 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481853670",
      "id" : 481853670,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg1MzY3MA==",
      "original_commit_id" : "720f1125992022ae71dbfd3cf47f4d8761aab99c",
      "original_line" : 1768,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 480571773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481853670",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481864952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481864952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be along the following \"ignore non-outbound-full-relay peers\"?\r\nOr probably even better: \"Consider only outbound full-relay peers not already marked for disconnection\"?",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-02T08:08:21Z",
      "diff_hunk" : "@@ -3961,13 +3961,11 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481864952",
      "id" : 481864952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg2NDk1Mg==",
      "original_commit_id" : "d3612a1fd0e61ee131feab9585bc199440547680",
      "original_line" : 4049,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 480581377,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481864952",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-09-02T08:09:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685431218",
      "id" : 685431218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTQzMTIxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T08:09:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685431218",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481871155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481871155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`nBlockRelay` doesn't seem to follow the code conventions we have for vars",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-02T08:15:20Z",
      "diff_hunk" : "@@ -1768,6 +1768,20 @@ int CConnman::GetExtraOutboundCount()\n     return std::max(nOutbound - m_max_outbound_full_relay, 0);\n }\n \n+int CConnman::GetExtraBlockRelayCount()\n+{\n+    int nBlockRelay = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481871155",
      "id" : 481871155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MTE1NQ==",
      "original_commit_id" : "f0975e75646e5b28699694ccf89d081d687ad090",
      "original_line" : 1773,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 480586630,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481871155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThe most interesting question seems to be the eviction criteria after this new block-relay peer gave us a new block, and we want to evict someone.\r\n\r\nI think the \"evict the youngest\" approach is reasonable: it would be very hard for an attacker to control our block-relay-only connections by just serving blocks faster when we connect to them periodically. They'd have to also maintain very long-lived connections to evict honest peers rather than their own Sybils.\r\n\r\n--------\r\n\r\nWe still have a couple places with `m_tx_relay == nullptr`, and in some of them we mention `block-relay-only` in a related comment. Should we converge at least those to `IsBlockOnlyConn()` check?\r\n\r\n",
      "created_at" : "2020-09-02T08:25:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685440307",
      "id" : 685440307,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTQ0MDMwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T08:25:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685440307",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483034922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483034922"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-03T14:45:23Z",
      "diff_hunk" : "@@ -1760,12 +1760,12 @@ int CConnman::GetExtraOutboundCount()\n     {\n         LOCK(cs_vNodes);\n         for (const CNode* pnode : vNodes) {\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsOutboundOrBlockRelayConn()) {\n+            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\n                 ++nOutbound;\n             }\n         }\n     }\n-    return std::max(nOutbound - m_max_outbound_full_relay - m_max_outbound_block_relay, 0);\n+    return std::max(nOutbound - m_max_outbound_full_relay, 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483034922",
      "id" : 483034922,
      "in_reply_to_id" : 481853670,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNDkyMg==",
      "original_commit_id" : "720f1125992022ae71dbfd3cf47f4d8761aab99c",
      "original_line" : 1768,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 481914330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483034922",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035233"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-03T14:45:48Z",
      "diff_hunk" : "@@ -3961,13 +3961,11 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035233",
      "id" : 483035233,
      "in_reply_to_id" : 481864952,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNTIzMw==",
      "original_commit_id" : "d3612a1fd0e61ee131feab9585bc199440547680",
      "original_line" : 4049,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 481914748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035233",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035358"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-03T14:45:58Z",
      "diff_hunk" : "@@ -1768,6 +1768,20 @@ int CConnman::GetExtraOutboundCount()\n     return std::max(nOutbound - m_max_outbound_full_relay, 0);\n }\n \n+int CConnman::GetExtraBlockRelayCount()\n+{\n+    int nBlockRelay = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035358",
      "id" : 483035358,
      "in_reply_to_id" : 481871155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNTM1OA==",
      "original_commit_id" : "f0975e75646e5b28699694ccf89d081d687ad090",
      "original_line" : 1773,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 481914913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035358",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Now that #19724 has been merged, this is ready for review.",
      "created_at" : "2020-09-03T14:46:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-686542959",
      "id" : 686542959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjU0Mjk1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T14:46:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686542959",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We still have a couple places with m_tx_relay == nullptr, and in some of them we mention block-relay-only in a related comment. Should we converge at least those to IsBlockOnlyConn() check?\r\n\r\nI actually didn't mean to necessarily include that `m_tx_relay == nullptr` in the `LogPrintf()` that I did; the clarification of changing to using the `IsBlockOnlyConn()` check was leftover from a previous version of this work where I was going to introduce a new connection type altogether, and the `m_tx_relay == nullptr` check would have been incorrect for identifying the peer type.\r\n\r\nIn this PR that change is unnecessary (though an improvement), but I guess I don't want to do a wholesale review of all the `m_tx_relay==nullptr` checks still in the code -- many of them are places where we check for `nullptr` before dereferencing, which I think would make sense to leave as-is.  Places in the code where we use that check to determine how to do something logical with that peer are different, and should be switched at some point.  If there are places like that which make this new code harder to understand, please flag and I can include fixes here, but I think since I'm not adding new peer-types I hope that wouldn't be necessary.",
      "created_at" : "2020-09-03T15:06:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-686556494",
      "id" : 686556494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjU1NjQ5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T15:06:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686556494",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483328318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483328318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it would be better to converge naming for BLOCK_RELAY and thus ease reviewing. They're commented as either block-relay or block-relay-only peers through the codebase but actually designate the same type. I'm even on which one we pick as long as we're consistent.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T00:56:58Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483328318",
      "id" : 483328318,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMyODMxOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1885,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483328318",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483329786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483329786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is making an assumption on `GetNewNodeId()` being a monotonic counter function of connections order. It may silently break id we modify ids selection to something else (like random nonces). Can we use `nTimeConnected` instead ?",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T01:02:41Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483329786",
      "id" : 483329786,
      "line" : 3923,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMyOTc4Ng==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3923,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 29,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483329786",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483332808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483332808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I would be more conservative in allegation of this new eclipse counter-measure effectiveness.\r\n\r\nI believe we should have a hierarchy of eclipse attacks classified with regards to resources they require from the attacker to successfully perform them. And thus serves as a ground to evaluate a counter-measure with regards to a scenario. The fact that a stronger attack A can easily bypass counter-measure for attack B doesn't invalidate worthiness of counter-measure B.\r\n\r\nFor this new periodic-chain-sync counter-measure, I do agree it improves against eviction logic takeover or partial addrman poisoning. However I guess it doesn't score well against total addrman poisoning or infrastructure-based eclipse.\r\n\r\nAs a suggestion, maybe we can add a prefix to any mention of eclipse attacks hinting scenario considered like `addrman-poisoning` or `eviction-gaming` ?",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T01:15:17Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483332808",
      "id" : 483332808,
      "line" : 1979,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzMjgwOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1979,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 69,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483332808",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483334138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483334138"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I suppose this doesn't protect against initial-network-connection eclipse attack like DNS cache poisoning. Maybe after some timer based on an optimistic headers-chain sync delay and observing that our tip isn't near to local clock trigger this logic anyway ?\r\n\r\nThat said, if you're effectively eclipsed since the beginning and don't have any good peers available in your addrman I don't think it would change anything.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T01:20:40Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483334138",
      "id" : 483334138,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzNDEzOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483334138",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483336732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483336732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a bit of a name collusion, maybe `second_youngest_peer` -> `next_youngest_peer`",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T01:31:11Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483336732",
      "id" : 483336732,
      "line" : 3926,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzNjczMg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3926,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483336732",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483340353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483340353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is pproper even if it's biasing a bit towards attackers. I assume they run modified clients and thus always win new block announcement races and have public sybils well-spread through /16s.\r\n\r\nWe start with Alice, Malicia as 2 block-relay connections:\r\n* Alice connection gets dropped due an external event from our node viewpoint (like network issue or Alice inbound eviction logic)\r\n* Malicia becomes the oldest connection\r\n* We open a new block-relay connection to Bob\r\n* We open a new chain-sync connection to Malicia_2\r\n* Malicia_2 announce a new best block updating her `nLastBlockTime`\r\n* We drop Bob\r\n* We have Malicia and Malicia_2 as stable block-only peers\r\n\r\nNow to conserve its advantage an attacker must ensure to update our chain tip faster than learning any headers through the new spawn chain-sync peer otherwise Malicia_2 would be evicted by Caroll, first such peer sending a better block. An attacker has to perfom useful work to keep its bias and that way breaking attack purpose ?",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T01:46:05Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay peer, if we",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483340353",
      "id" : 483340353,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MDM1Mw==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1909,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482291423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483340353",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483441294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483441294"
         }
      },
      "author_association" : "MEMBER",
      "body" : "can we make this mockable from the beginning? (std::chrono)",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T07:34:30Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483441294",
      "id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0MTI5NA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 482425041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483441294",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483443580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483443580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd also prefer to not having this assumption, and it seems to be easy to avoid.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T07:39:25Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483443580",
      "id" : 483443580,
      "in_reply_to_id" : 483329786,
      "line" : 3923,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0MzU4MA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3923,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 29,
      "pull_request_review_id" : 482428021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483443580",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483444542"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483444542"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should this ever be set back to false? For example, if we were offline for a week and we know we're catching up.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T07:41:32Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483444542",
      "id" : 483444542,
      "line" : 211,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0NDU0Mg==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 211,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 6,
      "pull_request_review_id" : 482429291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483444542",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483487568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483487568"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If `m_connman.ForEachNode` is not ordered, this algorithm may mistakenly select `second_youngest`.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T09:01:48Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483487568",
      "id" : 483487568,
      "in_reply_to_id" : 483329786,
      "line" : 3923,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4NzU2OA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3923,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 29,
      "pull_request_review_id" : 482484588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483487568",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483490780"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483490780"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: it's a little less clear that the youngest peer is the _temporary_ connection created just couple minutes ago, would be cool to explain it more explicitly.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T09:07:59Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483490780",
      "id" : 483490780,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MDc4MA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3991,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482488691,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483490780",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483496118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483496118"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I had to double-check that `nBlocksInFlight` can't be tricked with fake blocks. If you gonna update it, maybe just say \"block with a valid header\"?",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T09:17:26Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483496118",
      "id" : 483496118,
      "line" : 3937,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5NjExOA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3937,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 43,
      "pull_request_review_id" : 482495238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483496118",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'm leaning towards Concept ACK but have you considered impact with #17428 ? I fear it may reduce its usefulness.\r\n\r\nI don't think #17428 has any meaningful interaction with this.  These connections are short-lived, and generally speaking under normal circumstances rotation doesn't actually occur, because we're unlikely to get a new block from one of these connections rather than from one of our high-bandwidth compact block peers.  Even if rotation were to occur, I don't think #17428 has any meaningful negative consequences here -- keeping track of helpful block-relay peers seems an independently good idea.",
      "created_at" : "2020-09-04T15:28:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-687220322",
      "id" : 687220322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzIyMDMyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T15:28:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687220322",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483691169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483691169"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure I can change this, but keep in mind this logic is used a little further down already, in the existing outbound full-relay peer eviction algorithm.\r\n\r\nEDIT: Actually, I think while this has some logical appeal it makes the code read strictly worse -- CNode::nTimeConnected is tracked in seconds, so it's perfectly plausible that you might have two nodes that tie, and you'd presumably break the tie using nodeid anyway!  I'm just going to add a comment that we're using nodeid to make the determination of which peer is younger (ie higher NodeId).",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T15:29:37Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483691169",
      "id" : 483691169,
      "in_reply_to_id" : 483329786,
      "line" : 3923,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTE2OQ==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3923,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 29,
      "pull_request_review_id" : 482753530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483691169",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483692149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483692149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure I can add a hint -- I thought it was well-understood that we only request blocks that are on a (valid) headers chain resulting in a tip that has >= work as our tip, as we use that fact in multiple places in `net_processing`, I think.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T15:30:41Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483692149",
      "id" : 483692149,
      "in_reply_to_id" : 483496118,
      "line" : 3937,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MjE0OQ==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3937,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 43,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483692149",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483696666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483696666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Wouldn't the existing stale-tip check let us get new outbound peers in the case that our tip isn't updating at all? ",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T15:35:43Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483696666",
      "id" : 483696666,
      "in_reply_to_id" : 483334138,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5NjY2Ng==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483696666",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483699833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483699833"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you go offline for a week by shutting down bitcoind there is no issue; if you close your laptop or disconnect from the network though then yes you're right that we'll use these occasional peers to help us catch up, which is not the intent.  However, we don't have a good way to distinguish that situation in our code right now...  Arguably stale-tip checking shouldn't fire either in those circumstances but we don't try to do anything to limit that?\r\n\r\nI'm inclined to leave this, and if we somehow improve our software to detect circumstances like that, then we can update this logic accordingly.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T15:39:05Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483699833",
      "id" : 483699833,
      "in_reply_to_id" : 483444542,
      "line" : 211,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5OTgzMw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 211,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 6,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483699833",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483704479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483704479"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yep.  Most importantly, because we're always trying a new peer and exchanging best tip information, this should create a very high cost to an attacker to actually split the network for a meaningful amount of time (even if they've taking all our initial peer slots).",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T15:44:20Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay peer, if we",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483704479",
      "id" : 483704479,
      "in_reply_to_id" : 483340353,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcwNDQ3OQ==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1909,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483704479",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483713328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I re-read my comment, and I think it's pretty accurate.  If other reviewers think that the language here is somehow too strong and implies this logic is doing something it isn't, I'll reconsider.\r\n\r\nNote, by the way, that the behavior introduced here is beneficial to not just the node doing it, but to the whole network, as a node already connected to the honest network that is periodically connecting to new peers to sync tips with others is helping bridge the entire network.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T16:00:07Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483713328",
      "id" : 483713328,
      "in_reply_to_id" : 483332808,
      "line" : 1979,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMzMyOA==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1979,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 69,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713328",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483726992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483726992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed in latest version.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T16:25:50Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483726992",
      "id" : 483726992,
      "in_reply_to_id" : 483328318,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyNjk5Mg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 1885,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483726992",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483728160"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483728160"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can we punt until someone also changes the feeler logic to be the same?  Right now the logic for both is very similar, which I think helps readability.  (Also, I find `std::chrono` to be harder to work with than the tools I know, so I'm afraid I'll introduce an error if I try to make the change myself.)",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T16:26:51Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483728160",
      "id" : 483728160,
      "in_reply_to_id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyODE2MA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483728160",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750720"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed in latest version.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T17:05:55Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750720",
      "id" : 483750720,
      "in_reply_to_id" : 483490780,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDcyMA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3991,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750720",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750782"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750782"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-04T17:06:04Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750782",
      "id" : 483750782,
      "in_reply_to_id" : 483336732,
      "line" : 3926,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDc4Mg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3926,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 482754298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750782",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484274913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484274913"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My worry was that `nBlocksInFlight` might contain just a hash for an announced block (pre-compact blocks) which we have no idea about. Then announcing any random hash would trick us.\r\n\r\nYour current comment is sufficient to clarify that this is not possible.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-07T08:30:02Z",
      "diff_hunk" : "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484274913",
      "id" : 484274913,
      "in_reply_to_id" : 483496118,
      "line" : 3937,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3NDkxMw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 3937,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 43,
      "pull_request_review_id" : 483356892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484274913",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484285863"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484285863"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure what you mean by \"feeler logic to be the same\", but I'm making feeler timings mockable as part of #19869, you're very welcome to review :)\r\n\r\nMy opinion is not very strong here, we can update it later, I just thought it's a good opportunity.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-07T08:48:37Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484285863",
      "id" : 484285863,
      "in_reply_to_id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NTg2Mw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 483371971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484285863",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7\r\n\r\n----------\r\n\r\nIf we want to make a strong statement that this is *by all means* an improvement over the existing approach, we might want to increase block-relay-only conns limit (`m_max_outbound_block_relay`) by 1. Otherwise, an attacker may make (currently) 1 out of 2 our block-relay-only conns more vulnerable for eviction by feeding us blocks faster.\r\n\r\nOf course, to be a successful eclipse attack, they would have to do much more...",
      "created_at" : "2020-09-07T09:06:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688183643",
      "id" : 688183643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODE4MzY0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-07T09:06:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688183643",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-07T17:39:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688451728",
      "id" : 688451728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODQ1MTcyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-07T17:39:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688451728",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484923353"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484923353"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was assuming someone feeding you _slowly_ the most-PoW valid chain thus never triggering the stale-tip check ? I think a broader definition of eclipse attack should include slow chain feeding as it's open the door for offchain exploitation.\r\n\r\nThat said, I think eclipse attacks during the bootstrap view of your network view are a special-case and we can address them latter with smarter heuristics based on this work.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-08T13:32:38Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484923353",
      "id" : 484923353,
      "in_reply_to_id" : 483334138,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkyMzM1Mw==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 484143325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484923353",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484942044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484942044"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Update comment to reflect latest changes  (411056e) on keeping the most recent block announcement?",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-08T13:58:09Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay-only peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay-only peer, if we\n+            //   download a new block from this new block-relay-only peer.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484942044",
      "id" : 484942044,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0MjA0NA==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 1944,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484942044",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484943585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484943585"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Have you considered a `MarkExtraBlockRelayPeers` function which a) set `m_start_extra_block_relay_peers` to true if isn't and b) return the state of `m_start_extra_block_relay_peers` ? That way you can drop new `m_initial_sync_finished` I think",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-08T14:00:05Z",
      "diff_hunk" : "@@ -318,13 +320,20 @@ class CConnman\n     void SetTryNewOutboundPeer(bool flag);\n     bool GetTryNewOutboundPeer();\n \n+    void StartExtraBlockRelayPeers() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484943585",
      "id" : 484943585,
      "line" : 335,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0MzU4NQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 335,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 13,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484943585",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484945485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484945485"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same, reflect changes, \"a more recent block than one provided by next-youngest\"?",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-08T14:02:47Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484945485",
      "id" : 484945485,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0NTQ4NQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3973,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484945485",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484949893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484949893"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As alternative have you considered caching them ? We know both when we open such connections and when we drop them. It would avoid the risk of logic bug and iterating every other connections types not concerned by such eviction.\r\n\r\nI think it's more a future work direction.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-08T14:08:45Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484949893",
      "id" : 484949893,
      "in_reply_to_id" : 483329786,
      "line" : 3923,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0OTg5Mw==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3923,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 29,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484949893",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484951554"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484951554"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"so any in-flight block is a good hint that such peer will soon provide us with useful work\"",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-08T14:11:03Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay-only peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay-only\n+        // peer. We use higher nodeid as a measure for more recent connection.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484951554",
      "id" : 484951554,
      "line" : 3941,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk1MTU1NA==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3941,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484951554",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952119"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can mention `CanDirectFetch` as the completed-initial-sync-yet condition.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-08T14:11:51Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952119",
      "id" : 484952119,
      "line" : 209,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk1MjExOQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 209,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 4,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952119",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs \r\n\r\n> If we want to make a strong statement that this is _by all means_ an improvement over the existing approach, we might want to increase block-relay-only conns limit (`m_max_outbound_block_relay`) by 1. Otherwise, an attacker may make (currently) 1 out of 2 our block-relay-only conns more vulnerable for eviction by feeding us blocks faster.\r\n\r\nWhat would be the best arguments _against_ bumping `m_max_outbound_block_relay` by 1?\r\n\r\n(Personally I think (tentatively) that increasing `m_max_outbound_block_relay` is a good idea, but it would be nice to have the best arguments against too :))",
      "created_at" : "2020-09-08T14:12:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688903823",
      "id" : 688903823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODkwMzgyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-08T14:14:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688903823",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952915"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"See ThreadOpenConnections\"",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-08T14:12:53Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952915",
      "id" : 484952915,
      "line" : 3916,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk1MjkxNQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3916,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 484168129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952915",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What would be the best arguments against bumping m_max_outbound_block_relay by 1?\r\n\r\nThe best argument I'm aware of: we use up more connection slots on listening nodes, which is a limited resource.  So if we start increasing the number of outbound connections we make, we should think hard about also increasing the default number of connections we expect a listening node to be able to handle.\r\n\r\nI think that these connections should be lightweight enough that we ought to be able to allocate more inbound connection slots to low-resource peers like these; however that is not easy for us to do until we have a way to communicate to our outbound peer when we connect that we're a block-relay-only peer and not planning to re-enable transaction relay later on in the connection's lifetime.\r\n\r\nMy plan to increase this number is to: (1) first propose a p2p protocol upgrade that would inform our peer that we're block-relay only, then (2) add support for reducing resources that we allocate to such inbound peers, and then (3) propose that we increase the number of inbound connections by accounting for block-relay inbounds differently from the rest, and finally (4) then increase the default number of outbound block-relay-only peers.\r\n\r\nBut if there are other concerns about increasing this number, I'd like to hear them!  I'm currently working on steps 1 and 2 in the above.\r\n\r\nAt any rate, I'm not inclined to propose increasing the number of connections in this PR, because I didn't want to use further permanent block-relay-only connections until we made more progress reducing the resource impact.",
      "created_at" : "2020-09-08T14:33:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688918364",
      "id" : 688918364,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODkxODM2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-08T14:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688918364",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485676851"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485676851"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We do require that our initial headers-sync peer provide us with a headers chain that looks reasonable within a bounded amount of time (on the order of 20 minutes if I remember correctly -- the time scales with the expected honest chain length and very conservative notions of how long it takes to download headers).  However if we're connecting blocks slowly, we can't distinguish between our own node being too slow to validate the entire blockchain (say due to local computing/memory/disk/network resources) or our peers colluding to collectively slow us down.\r\n\r\nThis seems like something that needs human intervention to determine that initial sync is in fact going too slowly.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-09T14:53:46Z",
      "diff_hunk" : "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485676851",
      "id" : 485676851,
      "in_reply_to_id" : 483334138,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3Njg1MQ==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 4116,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 485095570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485676851",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485677705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485677705"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If #19869 is merged first, then I'll update the code here as well when I rebase.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-09T14:54:47Z",
      "diff_hunk" : "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485677705",
      "id" : 485677705,
      "in_reply_to_id" : 483441294,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3NzcwNQ==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 55,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 485096650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485677705",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485685042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485685042"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I assume you mean caching at the time we open the connection?  I think that is problematic, because in order to keep that extra state up to date in the event that peers get disconnected and we make new connections after that, you have to a lot of additional error checking and introduced added complexity.  Doing all the checks in one place, at the point in time that we care about getting to a new/correct state when we're over our maximum, seems simpler to me to reason about.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-09T15:04:09Z",
      "diff_hunk" : "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485685042",
      "id" : 485685042,
      "in_reply_to_id" : 483329786,
      "line" : 3923,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4NTA0Mg==",
      "original_commit_id" : "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "original_line" : 3923,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 29,
      "pull_request_review_id" : 485106530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485685042",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720385"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! Fixed.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-09T15:52:49Z",
      "diff_hunk" : "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay-only peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay-only peer, if we\n+            //   download a new block from this new block-relay-only peer.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720385",
      "id" : 485720385,
      "in_reply_to_id" : 484942044,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMDM4NQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 1944,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 485152718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720385",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720468"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I had a slight preference for not frequently looking at an atomic; `m_initial_sync_finished` is only used in one thread and therefore doesn't need locks.  This issue seems minor either way, so planning to leave it as-is.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-09T15:52:57Z",
      "diff_hunk" : "@@ -318,13 +320,20 @@ class CConnman\n     void SetTryNewOutboundPeer(bool flag);\n     bool GetTryNewOutboundPeer();\n \n+    void StartExtraBlockRelayPeers() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720468",
      "id" : 485720468,
      "in_reply_to_id" : 484943585,
      "line" : 335,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMDQ2OA==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 335,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 13,
      "pull_request_review_id" : 485152841,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720468",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720501"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! Fixed.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-09T15:53:01Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720501",
      "id" : 485720501,
      "in_reply_to_id" : 484945485,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMDUwMQ==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3973,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 485152894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720501",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721066"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems self-evident!  Leaving as-is.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-09T15:53:51Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay-only peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay-only\n+        // peer. We use higher nodeid as a measure for more recent connection.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721066",
      "id" : 485721066,
      "in_reply_to_id" : 484951554,
      "line" : 3941,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTA2Ng==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3941,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 485153614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721066",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721653"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that's necessary here.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-09T15:54:39Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721653",
      "id" : 485721653,
      "in_reply_to_id" : 484952119,
      "line" : 209,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTY1Mw==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 209,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 4,
      "pull_request_review_id" : 485154610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721653",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721742"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721742"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is fine as-is.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-09-09T15:54:48Z",
      "diff_hunk" : "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721742",
      "id" : 485721742,
      "in_reply_to_id" : 484952915,
      "line" : 3916,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTc0Mg==",
      "original_commit_id" : "411056e3ce2c39c929917547f22b7ca62e594882",
      "original_line" : 3916,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 485155007,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721742",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and updated to fix some documentation issues pointed out by @ariard.\r\n\r\n> I was thinking the reverse ! More #19858 having negative consequences on #17428. An attacker's sybil if selected as extra-block-relay might be able to outrun a high-bandwidth compact blocks peers such that evicting this peer from its anchor slot.\r\n\r\nI don't think that is a big concern -- by construction, only 1 out of our current 2 block-relay-only peers will be able to be rotated this way, and to maintain this attack an adversary has to continually give us the best block faster than anyone else, which makes them not much of an attacker until they stop.  And once they stop, this logic continues to protect us because it's always connecting to new peers to sync tips.\r\n\r\n> With regards to functional test coverage we are limited by #19315 and mocking addresses of P2P connections I guess ?\r\n\r\nYeah, I'm not aware of any way to test this code in our current testing framework.  I believe that even after #19315, we still will not have a way to exercise the logic in `ThreadOpenConnections`, so I think manual testing is best for this PR.",
      "created_at" : "2020-09-09T15:59:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-689657614",
      "id" : 689657614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4OTY1NzYxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-09T15:59:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/689657614",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 8ea760b10221eb01b057363693ab74cdc810fd4a",
      "created_at" : "2020-09-10T06:39:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-690023179",
      "id" : 690023179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MDAyMzE3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-10T06:39:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690023179",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If anyone is curious, I tried to exercise the eviction logic a bit with this patch added on top of this PR:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex c7b64f9d505..5a47d9d8c8d 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -2863,6 +2863,11 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\r\n \r\n     m_deserializer = MakeUnique<V1TransportDeserializer>(V1TransportDeserializer(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\r\n     m_serializer = MakeUnique<V1TransportSerializer>(V1TransportSerializer());\r\n+\r\n+    // 10% chance of initializing nLastBlockTime to current time\r\n+    if (GetRandInt(100) <= 10) {\r\n+        nLastBlockTime = GetTime();\r\n+    }\r\n }\r\n \r\n CNode::~CNode()\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 2f98663e7cf..05dd1f38a6c 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -4006,6 +4006,9 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n             if (node_state == nullptr ||\r\n                 (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\r\n                 pnode->fDisconnect = true;\r\n+                if (to_disconnect != youngest_peer.first) {\r\n+                    LogPrint(BCLog::NET, \"Block-relay peer rotation: keeping new peer=%d, disconnecting old peer=%d\\n\", youngest_peer.first, to_disconnect);\r\n+                }\r\n                 LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\r\n                 return true;\r\n             } else {\r\n```\r\n\r\nPerhaps other reviewers will find additional ways to fully exercise this code.",
      "created_at" : "2020-09-10T13:25:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-690286990",
      "id" : 690286990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MDI4Njk5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-10T13:25:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690286990",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested/Code Review ACK 8ea760b under following caveats.\r\n\r\nI observed that the new eviction logic is working as expected and extra block-relay-only peers are rotated based on their last block received time.\r\n\r\nNote for the other reviewers, I took the proposed patch with further modifications:\r\n* scale down EXTRA_PEER_CHECK_INTERVAL/EXTRA_BLOCK_RELAY_ONLY_PEER_INTERVAL to 5s and 15s\r\n* activate extra block relay peers opening independently of IBD\r\n* disable block-sync\r\n* 50% chance to initialize nLastBlockTime to current time\r\n\r\nThis interferes with protecting peers for in-flight blocks but at least underscores well the working opening and rotation.",
      "created_at" : "2020-09-15T16:24:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-692826368",
      "id" : 692826368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MjgyNjM2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-15T16:24:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692826368",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499257992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499257992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The two lock assertions added in this function need to be updated to build on current master:\r\n```diff\r\n@@ -3964,8 +3964,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n         std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\r\n         std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\r\n \r\n-        m_connman.ForEachNode([&](CNode* pnode) {\r\n-            LockAssertion lock(::cs_main);\r\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n+            AssertLockHeld(::cs_main);\r\n             if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\r\n@@ -3979,8 +3979,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n             // disconnect our second youngest.\r\n             to_disconnect = next_youngest_peer.first;\r\n         }\r\n-        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\r\n-            LockAssertion lock(::cs_main);\r\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n+            AssertLockHeld(::cs_main);\r\n             // Make sure we're not getting a ```",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-10-04T15:23:25Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499257992",
      "id" : 499257992,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1Nzk5Mg==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3984,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 501633440,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499257992",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499258411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499258411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(see #19979)",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-10-04T15:27:33Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499258411",
      "id" : 499258411,
      "in_reply_to_id" : 499257992,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1ODQxMQ==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3984,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 501633780,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499258411",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499441781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499441781"
         }
      },
      "author_association" : "MEMBER",
      "body" : "perhaps\r\n```diff\r\n     // Note that we use higher nodeid as a measure for most recent connection.\r\n-    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\r\n-    if (extra_block_relay_peers > 0) {\r\n-        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\r\n-        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\r\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\r\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\r\n```\r\n",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-10-05T08:54:49Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499441781",
      "id" : 499441781,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0MTc4MQ==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3964,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 501847787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499441781",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499443704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499443704"
         }
      },
      "author_association" : "MEMBER",
      "body" : "perhaps, as `extra_peers` isn't reused\r\n```diff\r\n-    int extra_peers = m_connman.GetExtraFullOutboundCount();\r\n-    if (extra_peers > 0) {\r\n+    if (m_connman.GetExtraFullOutboundCount() > 0) {\r\n```\r\n",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-10-05T08:57:46Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;\n+        });\n+    }\n+\n+    // Check whether we have too many OUTBOUND_FULL_RELAY peers\n+    int extra_peers = m_connman.GetExtraFullOutboundCount();\n     if (extra_peers > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499443704",
      "id" : 499443704,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0MzcwNA==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 4021,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 501847787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499443704",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499445435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499445435"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`EvictExtraOutboundPeers()` seems like a natural candidate to be separated into two functions,`EvictExtraOutboundBlockRelayPeers()` and `EvictExtraOutboundFullRelayPeers()`. This might enable better unit testing of the logic. If you agree, it may be easier to do this now than later.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-10-05T09:00:41Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499445435",
      "id" : 499445435,
      "line" : 3910,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0NTQzNQ==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3910,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 501847787,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499445435",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499769823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499769823"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, updated.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-10-05T17:49:27Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499769823",
      "id" : 499769823,
      "in_reply_to_id" : 499257992,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2OTgyMw==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3984,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 502285383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499769823",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-10-05T18:18:14Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785328",
      "id" : 499785328,
      "in_reply_to_id" : 499441781,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NTMyOA==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3964,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 502306322,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785328",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785441"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-10-05T18:18:27Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;\n+        });\n+    }\n+\n+    // Check whether we have too many OUTBOUND_FULL_RELAY peers\n+    int extra_peers = m_connman.GetExtraFullOutboundCount();\n     if (extra_peers > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785441",
      "id" : 499785441,
      "in_reply_to_id" : 499443704,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NTQ0MQ==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 4021,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 502306462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785441",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499788853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499788853"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well, there's also an argument to be made that it's simpler to have all of the outbound peer eviction logic in one place/one callback.\r\n\r\nIf there is a reason (like testing) to do so, I think splitting this up in the future could make sense, but for now I'd like to keep the changes here to be more straightforward.  So assuming this implementation is correct I'd prefer to leave it as-is.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-10-05T18:24:54Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499788853",
      "id" : 499788853,
      "in_reply_to_id" : 499445435,
      "line" : 3910,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4ODg1Mw==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3910,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 502310951,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499788853",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack Thanks for the review and testing; I've rebased to fix the silent merge conflict with the `LockAssertion` stuff and addressed your comments.",
      "created_at" : "2020-10-05T18:28:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-703809158",
      "id" : 703809158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMzgwOTE1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-05T18:28:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703809158",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Diff per `git range-diff 875e1cc 8ea760b 93a0ec1` looks good, will circle back shortly.",
      "created_at" : "2020-10-06T14:23:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-704304140",
      "id" : 704304140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNDMwNDE0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-06T14:23:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/704304140",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Should this wait until it's verified the new chain is valid?",
      "created_at" : "2020-10-20T15:58:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-712955870",
      "id" : 712955870,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjk1NTg3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T15:58:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712955870",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">Should this wait until it's verified the new chain is valid?\r\n\r\n@luke-jr I'm interpreting your question as asking: \"Should we wait to decide which peer to keep and which to evict, until after any new chain received from the new peer has been validated?\"  If that question is not what you meant, please clarify.\r\n\r\nI think a good question is exactly what we want to happen if we connect to a peer that is on another (equal-work) fork.  (There's no real need to stay connected to a peer on a less-work chain, while a peer on a more-work chain will have its blocks downloaded and validated and we'll either stay connected because they gave us new blocks, or disconnect if the chain is invalid.)\r\n\r\nWith this PR, it's very likely we'd stay connected to a peer on an equal-work and evict an older peer, because our download logic is designed to download blocks on all chains with work equal to or greater than our current tip.  And then the eviction criteria would cause the old peer to be disconnected.  I think this is okay behavior; in the event that the new fork gets extended and is valid, it's probably better for us to have been connected to the part of the network graph that was working on that tip as well as the part of the graph working on the one we had.\r\n\r\nIf the alternate chain proves to be invalid, then we can disconnect, but arguably we've done some harm by losing our previous (potentially honest) block-relay-peer.  However, I think this is a negligible problem, for two reasons: we only ever rotate 1 of our 2 block-relay-peers this way, so there's no way to use this to disconnect us from all our peers.  Also, practically speaking, mining a block in order to have a chain at equal work as our current tip is an extremely expensive attack to pull off, and so while someone could do so in order to take over 1 of our peer slots, it's not sustainable to repeat block after block.  In practice, if this were to occur I'd expect it to happen at the time of a consensus fork (like segwit2x or bcash), in which case this would resolve shortly after the forking point, as the competing chain extends an invalid block, and we'd either eventually detect that (if that chain has more work) or ignore it (if it has less work).",
      "created_at" : "2020-10-20T16:25:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-712981368",
      "id" : 712981368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMjk4MTM2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-20T16:25:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712981368",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 93a0ec1a629af533bb21418a3e134c268bc57395",
      "created_at" : "2020-10-22T13:07:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-714481343",
      "id" : 714481343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNDQ4MTM0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-22T13:07:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/714481343",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code Review ACK 93a0ec1. Changes since last ACK : new lock assertions around node iteration in `EvictExtraOutboundPeers`, more compact conditional in same function, new comments.",
      "created_at" : "2020-11-05T00:06:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-722041343",
      "id" : 722041343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyMjA0MTM0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-05T00:06:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722041343",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r517715632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517715632"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it possible to hit `node_state == nullptr` here? If not, I'd rather assert it.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-05T00:45:01Z",
      "diff_hunk" : "@@ -3953,9 +3953,53 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r517715632",
      "id" : 517715632,
      "line" : 3943,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcxNTYzMg==",
      "original_commit_id" : "daf74979d741c9ccca68145f65f4ba6e0ee899b0",
      "original_line" : 3943,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 49,
      "pull_request_review_id" : 523838338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517715632",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r518648674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518648674"
         }
      },
      "author_association" : "MEMBER",
      "body" : "daf74979 nit suggestion (or the inverse change), for symmetry with the extra full outbound code in the same function\r\n```diff\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\r\n                     pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\r\n+                return false;\r\n             }\r\n-            return false;\r\n         });\r\n```\r\n",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-06T10:08:09Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r518648674",
      "id" : 518648674,
      "line" : 3952,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0ODY3NA==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3952,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 58,
      "pull_request_review_id" : 525015009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518648674",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r518656458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518656458"
         }
      },
      "author_association" : "MEMBER",
      "body" : "daf74979 In my testing, this logging nearly always returned \"(last block received at time 0)\"; perhaps for this common case the logging could return \"(no block received)\" or similar.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-06T10:22:41Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r518656458",
      "id" : 518656458,
      "line" : 3946,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1NjQ1OA==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3946,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 52,
      "pull_request_review_id" : 525015009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T15:20:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518656458",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r520596989"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520596989"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It shouldn't be possible (as far as I understand), but this pattern of checking for nullptr seems to be present throughout the code (and we seem to have merged recent commits that add nullptr checks in analogous places, eg fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5). \r\n\r\nIn this particular place in our code, nullptr should be handled just fine if it were to somehow occur (all we'd do is mark the CNode for disconnection, which seems safe and correct), so I don't think crashing is required in this situation.  (Though likely there are other places in our code where we do assert(), so probably we'd crash anyway somewhere else...)",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-10T14:19:37Z",
      "diff_hunk" : "@@ -3953,9 +3953,53 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r520596989",
      "id" : 520596989,
      "in_reply_to_id" : 517715632,
      "line" : 3943,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5Njk4OQ==",
      "original_commit_id" : "daf74979d741c9ccca68145f65f4ba6e0ee899b0",
      "original_line" : 3943,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 49,
      "pull_request_review_id" : 527248010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520596989",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528321515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528321515"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since you're cleaning this up and adding another very similar function below, consider factoring out those loops and using a more functional style:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 48977aeadf..8456af01c5 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1822,30 +1822,14 @@ void CConnman::SetTryNewOutboundPeer(bool flag)\r\n // evict some peer that has finished the handshake)\r\n int CConnman::GetExtraFullOutboundCount()\r\n {\r\n-    int full_outbound_peers = 0;\r\n-    {\r\n-        LOCK(cs_vNodes);\r\n-        for (const CNode* pnode : vNodes) {\r\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\r\n-                ++full_outbound_peers;\r\n-            }\r\n-        }\r\n-    }\r\n-    return std::max(full_outbound_peers - m_max_outbound_full_relay, 0);\r\n+    int count{CountNodesIf([](CNode* node) {return node->IsFullOutboundConn();})};\r\n+    return std::max(count - m_max_outbound_full_relay, 0);\r\n }\r\n \r\n int CConnman::GetExtraBlockRelayCount()\r\n {\r\n-    int block_relay_peers = 0;\r\n-    {\r\n-        LOCK(cs_vNodes);\r\n-        for (const CNode* pnode : vNodes) {\r\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsBlockOnlyConn()) {\r\n-                ++block_relay_peers;\r\n-            }\r\n-        }\r\n-    }\r\n-    return std::max(block_relay_peers - m_max_outbound_block_relay, 0);\r\n+    int count{CountNodesIf([](CNode* node) {return node->IsBlockOnlyConn();})};\r\n+    return std::max(count - m_max_outbound_block_relay, 0);\r\n }\r\n \r\n void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 58a5b36918..5c8014ace5 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -299,6 +299,15 @@ public:\r\n         }\r\n     };\r\n \r\n+    using NodePred = std::function<bool(CNode*)>;\r\n+    /** Returns a count of how many fully connected peers satisfy a given predicate. */\r\n+    int CountNodesIf(const NodePred& pred) const\r\n+    {\r\n+        int count{0};\r\n+        ForEachNode([&count, &pred](CNode* node) {if (pred(node)) ++count;});\r\n+        return count;\r\n+    };\r\n+\r\n     template<typename Callable, typename CallableAfter>\r\n     void ForEachNodeThen(Callable&& pre, CallableAfter&& post)\r\n     {\r\n```\r\n\r\nI think that style is more compact, expressive, and less bug-prone than hand writing for loops.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T11:29:35Z",
      "diff_hunk" : "@@ -1820,18 +1820,32 @@ void CConnman::SetTryNewOutboundPeer(bool flag)\n // Also exclude peers that haven't finished initial connection handshake yet\n // (so that we don't decide we're over our desired connection limit, and then\n // evict some peer that has finished the handshake)\n-int CConnman::GetExtraOutboundCount()\n+int CConnman::GetExtraFullOutboundCount()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528321515",
      "id" : 528321515,
      "line" : 1830,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyMTUxNQ==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 1830,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528321515",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528322920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528322920"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree with @naumenkogs review comment https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685440307 about changing the remaining places where `m_tx_relay == nullptr` is used as a proxy for `IsBlockOnlyConn()` to use `IsBlockOnlyConn()`. There's already a commit in this branch for _Use conn_type to identify block-relay peers, rather than m_tx_relay == nullptr_, so I don't see why we wouldn't fix them all up at the same time.\r\n\r\nUsing `m_tx_relay == nullptr` is more indirect and confusing for reviewers. See for example https://github.com/bitcoin/bitcoin/pull/20217#issuecomment-728275457:\r\n\r\n> I think I'm confused because the check for block-relay-only connections in the code is sometimes to see if m_tx_relay exists, which is non-intuitive because block-relay-only also implies that addrs are not gossiped with this peer either, not just transactions, and sometimes to call IsBlockOnlyConn().",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T11:41:36Z",
      "diff_hunk" : "@@ -2557,7 +2557,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             LogPrintf(\"New outbound peer connected: version: %d, blocks=%d, peer=%d%s (%s)\\n\",\n                       pfrom.nVersion.load(), pfrom.nStartingHeight,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),\n-                      pfrom.m_tx_relay == nullptr ? \"block-relay\" : \"full-relay\");\n+                      pfrom.IsBlockOnlyConn() ? \"block-relay\" : \"full-relay\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528322920",
      "id" : 528322920,
      "line" : 2469,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyMjkyMA==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 2469,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528322920",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528325663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528325663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This variable name is very confusing. It's a different concept from `IsInitialBlockDownload()` but very similarly named. `IsInitialBlockDownload()` returns whether we've ever had a block at our tip that is within 24 hours of current time. This returns whether we've ever had a block at our tip that is within 200 minutes of current time.\r\n\r\nThe variable also isn't needed. We can just make `StartExtraBlockRelayPeers()` idempotent and always call it:\r\n\r\n```diff\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 58a5b36918..2c6221391c 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -340,8 +340,9 @@ public:\r\n     bool GetTryNewOutboundPeer();\r\n \r\n     void StartExtraBlockRelayPeers() {\r\n+        if (m_start_extra_block_relay_peers.load()) return;\r\n         LogPrint(BCLog::NET, \"net: enabling extra block-relay-only peers\\n\");\r\n-        m_start_extra_block_relay_peers = true;\r\n+        m_start_extra_block_relay_peers.store(true);\r\n     }\r\n \r\n     // Return the number of outbound peers we have in excess of our target (eg,\r\n```",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T12:05:01Z",
      "diff_hunk" : "@@ -135,6 +135,10 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n     CTxMemPool& m_mempool;\n \n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n+\n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay-only peers. */\n+    bool m_initial_sync_finished{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528325663",
      "id" : 528325663,
      "line" : 211,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyNTY2Mw==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 211,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 6,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528325663",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528330907"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528330907"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> if you close your laptop or disconnect from the network though then yes you're right that we'll use these occasional peers to help us catch up, which is not the intent.\r\n\r\nIf this is the intent (to stop making these short-lived connections if we've fallen behind the tip), then I think we can achieve that fairly easily by removing this caching variable, making `CanDirectFetch()` a public method on `PeerManager` and calling that function whenever we need to test if we should make an additional block-relay-only connection:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 48977aeadf..1de1bda9a8 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1957,7 +1957,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\r\n             conn_type = ConnectionType::BLOCK_RELAY;\r\n         } else if (GetTryNewOutboundPeer()) {\r\n             // OUTBOUND_FULL_RELAY\r\n-        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\r\n+        } else if (nTime > nNextExtraBlockRelay && m_msgproc->CanDirectFetch()) {\r\n             // Periodically connect to a peer (using regular outbound selection\r\n             // methodology from addrman) and stay connected long enough to sync\r\n             // headers, but not much else.\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 58a5b36918..c836161f83 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -635,6 +635,7 @@ public:\r\n     virtual bool SendMessages(CNode* pnode) = 0;\r\n     virtual void InitializeNode(CNode* pnode) = 0;\r\n     virtual void FinalizeNode(NodeId id, bool& update_connection_time) = 0;\r\n+    virtual bool CanDirectFetch() const = 0;\r\n \r\n protected:\r\n     /**\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex ad40d67a97..ef47d00e73 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -883,6 +883,11 @@ void RequestTx(CNodeState* state, const GenTxid& gtxid, std::chrono::microsecond\r\n \r\n } // namespace\r\n \r\n+bool PeerManager::CanDirectFetch() const\r\n+{\r\n+    return ::CanDirectFetch(m_chainparams.GetConsensus());\r\n+}\r\n+\r\n // This function is used for testing the stale tip eviction logic, see\r\n // denialofservice_tests.cpp\r\n void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds)\r\n@@ -1956,7 +1961,7 @@ void PeerManager::ProcessHeadersMessage(CNode& pfrom, const std::vector<CBlockHe\r\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, ::ChainActive().GetLocator(pindexLast), uint256()));\r\n         }\r\n \r\n-        bool fCanDirectFetch = CanDirectFetch(m_chainparams.GetConsensus());\r\n+        bool fCanDirectFetch = CanDirectFetch();\r\n         // If this set of headers is valid and ends in a block with at least as\r\n         // much work as our tip, download as much as possible.\r\n         if (fCanDirectFetch && pindexLast->IsValid(BLOCK_VALID_TREE) && ::ChainActive().Tip()->nChainWork <= pindexLast->nChainWork) {\r\n@@ -3261,7 +3266,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n         }\r\n \r\n         // If we're not close to tip yet, give up and let parallel block fetch work its magic\r\n-        if (!fAlreadyInFlight && !CanDirectFetch(m_chainparams.GetConsensus()))\r\n+        if (!fAlreadyInFlight && !CanDirectFetch())\r\n             return;\r\n \r\n         if (IsWitnessEnabled(pindex->pprev, m_chainparams.GetConsensus()) && !nodestate->fSupportsDesiredCmpctVersion) {\r\n@@ -4073,7 +4078,7 @@ void PeerManager::CheckForStaleTipAndEvictPeers()\r\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\r\n     }\r\n \r\n-    if (!m_initial_sync_finished && CanDirectFetch(m_chainparams.GetConsensus())) {\r\n+    if (!m_initial_sync_finished && CanDirectFetch()) {\r\n         m_connman.StartExtraBlockRelayPeers();\r\n         m_initial_sync_finished = true;\r\n     }\r\ndiff --git a/src/net_processing.h b/src/net_processing.h\r\nindex 6e3e032831..88bf7ff2a6 100644\r\n--- a/src/net_processing.h\r\n+++ b/src/net_processing.h\r\n@@ -93,6 +93,11 @@ public:\r\n      */\r\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message);\r\n \r\n+    /**\r\n+     * Return whether our tip block's time is close enough to current time that we can directly fetch.\r\n+     */\r\n+    bool CanDirectFetch() const;\r\n+\r\n private:\r\n     /**\r\n      * Potentially mark a node discouraged based on the contents of a BlockValidationState object\r\n```\r\n\r\nThat approach may be preferable for a couple of reasons:\r\n\r\n- Placing the logic that checks/sets the condition under which we'll make additional block-relay-only peers in the same place that it makes those connections makes it much easier to reason about those state transitions. Currently `m_start_extra_block_relay_peers` is set based on a loop in net_processing and then read on a timer in net.\r\n- Caching the state internally makes it more difficult to test all the code paths. If the start_extra_block_relay_peers condition is set by a call into PeerManager, then that interface can be mocked and code paths can be hit more easily in unit/fuzz testing.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T12:48:11Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528330907",
      "id" : 528330907,
      "in_reply_to_id" : 483444542,
      "line" : 211,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzMDkwNw==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 211,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 6,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528330907",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528331824"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528331824"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think `cs_main` is needed for this lambda. Unless I've missed something, we're not accessing anything in here that is guarded by cs_main.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T12:55:50Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528331824",
      "id" : 528331824,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzMTgyNA==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3966,
      "original_position" : 28,
      "original_start_line" : 3965,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528331824",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528334380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528334380"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's better/more defensive not to add asserts in the p2p stack if we can gracefully handle the condition. Here we can just set `fDisconnect` and hopefully `FinalizeNode()` will handle cleaning up the state.\r\n\r\nAt most, we should use `Assume()` (https://github.com/bitcoin/bitcoin/pull/20255) which will crash in tests and continue in production.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T13:17:05Z",
      "diff_hunk" : "@@ -3953,9 +3953,53 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528334380",
      "id" : 528334380,
      "in_reply_to_id" : 517715632,
      "line" : 3943,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzNDM4MA==",
      "original_commit_id" : "daf74979d741c9ccca68145f65f4ba6e0ee899b0",
      "original_line" : 3943,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 49,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528334380",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528334554"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528334554"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's strange to return `true` here and `false` below, and then throw away that return value. It'd be clearer to always return the same value.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T13:18:42Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528334554",
      "id" : 528334554,
      "line" : 3947,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzNDU1NA==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3947,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 53,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528334554",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528335350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528335350"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not disconnect the worst peer (the one that has been longest without providing a block)?\r\ne.g.:\r\n\r\n- connect to block-relay-only peer 1. It never provides any blocks.\r\n- connect to block-relay-only peer 2. It provides blocks.\r\n- connect to extra block-relay-only peer 3. It provides one block in the time it's connected.\r\n\r\nWith this logic we'd disconnect peer 2, but I think it'd be strictly better to disconnect peer 1.\r\n\r\nDoing this would (I think) make the logic simpler, since you'd only need to keep track of the worst peer in the `ForEachNode()` lambda, rather than keeping track of two peers and then deciding which to disconnect.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T13:25:30Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528335350",
      "id" : 528335350,
      "line" : 3914,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzNTM1MA==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3914,
      "original_position" : 20,
      "original_start_line" : 3956,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : 3912,
      "start_side" : "RIGHT",
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528335350",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528335481"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528335481"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            CNodeState* node_state = State(pnode->GetId());\r\n```\r\n\r\n(`*` and `&` should bind to the left in new code)",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T13:26:29Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528335481",
      "id" : 528335481,
      "line" : 3942,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzNTQ4MQ==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3942,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 48,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528335481",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528338603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528338603"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree that splitting this function would be a better structure. There's no shared state between the top and bottom half of the function, and splitting logic into smaller pieces makes it easier to follow. It also allows guard clauses and early exits, which reduces deep nesting and is a very clear way of expressing the intent of the function.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T13:51:18Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528338603",
      "id" : 528338603,
      "in_reply_to_id" : 499445435,
      "line" : 3910,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzODYwMw==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3910,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528338603",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528339390"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528339390"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In general, it's better to avoid default capture in lambdas, since if that lambda is used outside the scope that it's defined, it can lead to dangling references. That can't happen here, but I think it's just best practice to explicitly state what you'll need.\r\n\r\n```suggestion\r\n        m_connman.ForEachNode([&youngest_peer, &next_youngest_peer](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n```",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T13:57:26Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528339390",
      "id" : 528339390,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzOTM5MA==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3965,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528339390",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528339455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528339455"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's best to capture simple types by value (and again, explicitly rather than by default):\r\n\r\n```suggestion\r\n        m_connman.ForNode(to_disconnect, [time_in_seconds](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n```",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-22T13:58:00Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528339455",
      "id" : 528339455,
      "line" : 3935,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzOTQ1NQ==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3935,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 41,
      "pull_request_review_id" : 536052508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528339455",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531432433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531432433"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A peer would never provide us a block if we provided them a block earlier.\r\n\r\nSo, an attacker can try being veeeery fast at sending blocks to a victim (I assume it's possible) so that other peers are worst, and slowly evict them one by one.\r\nThis of course assumes an attacker has eviction capabilities.\r\n\r\nCurrent approach of this PR is more conservative and wouldn't allow this.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-27T07:53:30Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531432433",
      "id" : 531432433,
      "in_reply_to_id" : 528335350,
      "line" : 3914,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQzMjQzMw==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3914,
      "original_position" : 20,
      "original_start_line" : 3956,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 539766657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : 3912,
      "start_side" : "RIGHT",
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531432433",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531475462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531475462"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Essentially this means that we have one 'fixed' block-relay-only peer (even across restarts due to anchor connections) and one evictable block-relay-only peer.\r\n\r\nYou may be right that this makes it more difficult for an adversary to take over both block-relay-only connections, although it seems like it'd be very difficult to pull off - the adversary would need to take over a large part of the victim's addrman, be lucky with timings of blocks and additional block-relay-only connections, and be sufficiently well connected to the network that they can always win a block race against *all* of the victim's other connections.\r\n\r\nIn any case, if this is the model (one fixed and one evictable block-relay-only peer), then it'd be much better to explicitly document that rather than it be a consequence of the logic here.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-27T09:20:17Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531475462",
      "id" : 531475462,
      "in_reply_to_id" : 528335350,
      "line" : 3914,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ3NTQ2Mg==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3914,
      "original_position" : 20,
      "original_start_line" : 3956,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 539820527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : 3912,
      "start_side" : "RIGHT",
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531475462",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm curious how the timings for this mechanism were chosen:\r\n\r\n- we'll connect to an additional block-relay-only peer every 300 seconds on average\r\n- we'll consider eviction of the additional block-relay-peer every 45 seconds\r\n- if the youngest block-relay-connection is less than 30 seconds old, then we won't disconnect it.\r\n\r\nThat means that the additional block-relay-only connection has a lifetime of 30-75 seconds (52.5 on average), and we make one every 300 seconds. We therefore have an additional block-relay-only connection for 52.5/300 = 17.5% of the time. Put differently, this PR increases the average number of block-relay-only connections we have from 2 to 2.175.\r\n\r\nWould it be simpler to simply increase the number of block-relay-only connections to 3, and then periodically evict the worst/youngest? That empty slot would then be filled using the normal mechanism in `ThreadOpenConnections()`. That seems like it'd give just as much protection as this approach (a new connection is tried every 300 seconds), but without adding yet another complex timing interaction between net and net_processing which is difficult to reason about and test. The downsides would be potentially a bit more churn in connections (since 100% of blocks can now cause the second-oldest block-relay-only peer to be evicted instead of 17.5% of blocks), a bit more resource usage on the node (which should be fine - if it can handle an additional connection 17.5% of the time, it can handle it 100% of the time), and a bit more usage of listening sockets (which again should be fine, it's much less of an impact than when we added block-relay-only connections in the first place).",
      "created_at" : "2020-11-27T09:34:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-734740321",
      "id" : 734740321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDc0MDMyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T09:34:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734740321",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery I think the biggest difference between what is implemented here and what you seem to be suggesting is that your proposed approach would be much more aggressive about making outbound connections. When we increase the target number of connections we want to make, `ThreadOpenConnections` will constantly be trying to achieve that target, making connection attempts whenever we are below our target.  In this PR, we use a feeler-like approach to making these additional connections, which should be lower load on the network, as we just make one connection *attempt* every 5 minutes.\r\n\r\nAs for your question about how the times were chosen - the only new parameter here is the frequency of these block-relay-only connections (the existing 30 second and 45 second timers were re-used from the existing outbound peer eviction logic, and those were based on making sure we checked frequently enough that we didn't persist connections for a long time, while trying to give reasonably enough time for headers sync and block download to occur).  I figured adding about 2 connections every 10 minutes was not such a big increase in outbound connection initiation amount, though if reviewers are concerned about the frequency we could reduce it.  \r\n\r\nThe trade-off here is that the more frequently we make connections (and therefore add edges to the network graph of nodes), the more security we have against partitioning attacks, but also the more network load we sustain. I don't think we have a great framework for evaluating the load, so I'd just eyeball it and observe after we deploy it, and we can always tune it if we think it's excessive or insufficient.  From watching the logs on my own node to verify how frequently connections are made and how much bandwidth is used by these connections, these numbers seemed fine to me, fwiw.\r\n\r\nAlso, I don't think that we gain all that much in complexity reduction by going that route, as we still need to have intelligent eviction logic, which I think is where the meat of the complexity lies.  I took a quick look right now, and I believe the additional changes to `net.cpp` to support feeler-like connection behavior (versus just having a target of 3 peers, of which we'd always try to evict 1) seems to be about 4 lines of code (not including comments), and is patterned off the existing feeler logic. Not too bad?",
      "created_at" : "2020-11-27T15:00:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-734874989",
      "id" : 734874989,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDg3NDk4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T15:00:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734874989",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531657452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531657452"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Happy to pick this up in a followup PR. I don't think we need to clutter this one further with style cleanups now that this has some review and ACKs.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-27T15:18:39Z",
      "diff_hunk" : "@@ -2557,7 +2557,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             LogPrintf(\"New outbound peer connected: version: %d, blocks=%d, peer=%d%s (%s)\\n\",\n                       pfrom.nVersion.load(), pfrom.nStartingHeight,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),\n-                      pfrom.m_tx_relay == nullptr ? \"block-relay\" : \"full-relay\");\n+                      pfrom.IsBlockOnlyConn() ? \"block-relay\" : \"full-relay\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531657452",
      "id" : 531657452,
      "in_reply_to_id" : 528322920,
      "line" : 2469,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1NzQ1Mg==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 2469,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 540051203,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531657452",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531659645"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531659645"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I thought I did document this in`net.h`, but I think it would make sense to put a writeup of how all this works on our wiki, which I'd be happy to do after this is merged.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-27T15:23:26Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531659645",
      "id" : 531659645,
      "in_reply_to_id" : 528335350,
      "line" : 3914,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1OTY0NQ==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3914,
      "original_position" : 20,
      "original_start_line" : 3956,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 540053944,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : 3912,
      "start_side" : "RIGHT",
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531659645",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531660586"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531660586"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Feel free to pick this up in a future PR if you like; I'm leaving this as-is for now as I think this is easier to review and understand if this all happens in the same scheduler callback.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-27T15:25:24Z",
      "diff_hunk" : "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531660586",
      "id" : 531660586,
      "in_reply_to_id" : 499445435,
      "line" : 3910,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MDU4Ng==",
      "original_commit_id" : "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "original_line" : 3910,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 540055066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531660586",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531669010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531669010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this would mean that we stop using block-relay-only peer rotation when our tip is stale, which might be when we want these connections happening the most?  It becomes arguable whether we should just rely on stale-tip-checking + full outbound peer rotation at that point, but I think we would want to carefully reason about our protections in that scenario.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-27T15:42:57Z",
      "diff_hunk" : "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531669010",
      "id" : 531669010,
      "in_reply_to_id" : 483444542,
      "line" : 211,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2OTAxMA==",
      "original_commit_id" : "013b41fc27110a288d93dde73325602526a692f5",
      "original_line" : 211,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 6,
      "pull_request_review_id" : 540065426,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531669010",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531673223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531673223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, that seems correct.  I'll add a commit that removes this.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-11-27T15:51:56Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531673223",
      "id" : 531673223,
      "in_reply_to_id" : 528331824,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3MzIyMw==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3966,
      "original_position" : 28,
      "original_start_line" : 3965,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 540070536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531673223",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(Oops, prematurely hit submit on this comment before I finished writing.)\r\n\r\n@jnewbery I fixed the unnecessary lock assertion in the latest commit.  My strong preference for now is to merge this PR as-is, as no problems seem to have emerged in review and testing thus far, it has several ACKs, this PR represents a substantial improvement in our peering behavior, and frankly this work has gotten stale for me, having been several months since I last worked on this extensively.  So if we can save minor improvements or tweaks for future work that would make progress much easier -- I'm not inclined to do minor rewrites at this point (and if there are major problems remaining I should just close this PR!).\r\n\r\nI think for some of the changes (like the `m_tx_relay==nullptr` thing), we could easily do that in a followup refactoring-only PR.  For some of the initialization sequence points that came up, I believe the code here is reasonable and correct, but there is room for further improvement too -- I think it's worth careful consideration of behavior changes that might be introduced in doing so, and since those seem non-essential to the behavior introduced here, I think this PR shouldn't be held up for such minor optimizations.\r\n\r\nI'd like to focus any further discussion on this PR on the actual behavior introduced (such as concerns about the timing of connections, maintenance or cognitive complexities introduced, or behaviors I've glossed over as unimportant such as the initialization sequence, if I'm mistaken and there are indeed significant concerns around how that will work).",
      "created_at" : "2020-11-27T15:54:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-734895473",
      "id" : 734895473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNDg5NTQ3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-27T16:01:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734895473",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebasing for the silent merge conflict with #20188, so squashed the lock annotation fix in while I was at it.",
      "created_at" : "2020-11-29T23:00:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-735471517",
      "id" : 735471517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNTQ3MTUxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-29T23:00:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735471517",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs @sipa @jonatack @ariard Care to re-review?",
      "created_at" : "2020-12-01T14:04:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-736572336",
      "id" : 736572336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNjU3MjMzNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-01T14:04:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736572336",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Am re-testing with added logging on a node, re-review soon.",
      "created_at" : "2020-12-02T17:43:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-737387735",
      "id" : 737387735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzM4NzczNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-08T14:03:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737387735",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-12-09T15:25:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-741842906",
      "id" : 741842906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MTg0MjkwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-09T15:25:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741842906",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reviewers may be interested in the article in today's Bitcoin Optech about this PR: https://bitcoinops.org/en/newsletters/2020/12/09/#bitcoin-core-pr-review-club",
      "created_at" : "2020-12-09T16:18:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-741880853",
      "id" : 741880853,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MTg4MDg1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-09T16:18:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741880853",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-12-10T08:20:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742361701",
      "id" : 742361701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjM2MTcwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T08:20:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742361701",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r539986106"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539986106"
         }
      },
      "author_association" : "MEMBER",
      "body" : "To be clear, there was a bug here (no critical behavior, just meaningless code).\r\nIt was already useless to check for \"BlockRelayConn\", because they were filtered out later in \"if (pnode->m_tx_relay == nullptr)\". All good after this change.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-12-10T08:55:15Z",
      "diff_hunk" : "@@ -3913,13 +3913,11 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(::cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already\n-            if (!pnode->IsOutboundOrBlockRelayConn() || pnode->fDisconnect) return;\n+            if (!pnode->IsFullOutboundConn() || pnode->fDisconnect) return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r539986106",
      "id" : 539986106,
      "line" : 3970,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4NjEwNg==",
      "original_commit_id" : "efa0e0df05620bf1ac74de3ec8d752990b00d32a",
      "original_line" : 3970,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 77,
      "pull_request_review_id" : 548972778,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-10T13:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539986106",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 7dc24baf7c88f3b03fa2aa59fc4cba332d7e7a69\r\n\r\n--------\r\n\r\nI find it slightly confusing that `IsBlockOnlyConn`really means *outbound* block-only conn. It makes the code-review harder for me, and I assume even more for new developers.\r\nNot sure what we could do here though.\r\n\r\n-------\r\n\r\nShoot, another \"needs rebase\"",
      "created_at" : "2020-12-10T09:33:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742400827",
      "id" : 742400827,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjQwMDgyNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T09:34:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742400827",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs Thanks for the re-review -- I just rebased again to deal with the merge conflict, another trivial change.\r\n\r\n> I find it slightly confusing that `IsBlockOnlyConn` really means outbound block-only conn. It makes the code-review harder for me, and I assume even more for new developers.\r\n\r\nI do as well!  On my to-do list is to propose and implement support for negotiating block-relay only behavior at connection time; I think at that point we can add better understanding to our code for inbound versus outbound block-relay-only peers (as right now we have no way of knowing that an inbound peer is a block-relay-only peer).  ",
      "created_at" : "2020-12-10T13:55:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742535428",
      "id" : 742535428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjUzNTQyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T13:55:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742535428",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs @sipa @jonatack @ariard you previously reviewed this, but there have been a few (silent) merge conflicts, so a re-ACK would be appreciated.\r\n\r\nIn the meantime it would be good if other maintainers refrained from merging conflicting pulls, see the list by DrahtBot: https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685192705",
      "created_at" : "2020-12-10T13:55:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742535758",
      "id" : 742535758,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjUzNTc1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T13:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742535758",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Logging used for my testing: https://github.com/jonatack/bitcoin/commit/8986db429738cb1f8e0057e4ac41af1a89bc714e (a variant of Suhas' patch above).",
      "created_at" : "2020-12-10T15:44:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742602943",
      "id" : 742602943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjYwMjk0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T15:45:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742602943",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code Review ACK b3a515c, only change since last time is dropping a useless `cs_main` taking. I manually tested a previous version of the PR, and not substantial change has been introduced since then which would alter behavior IMO.\r\n\r\n__________\r\n\r\n> The trade-off here is that the more frequently we make connections (and therefore add edges to the network graph of nodes), the more security we have against partitioning attacks, but also the more network load we sustain. I don't think we have a great framework for evaluating the load, so I'd just eyeball it and observe after we deploy it, and we can always tune it if we think it's excessive or insufficient.\r\n\r\nAFAIU this PR, I'm not worried about the network load introduced by this PR, whatever the metric we're picking (connection slots/application bandwidth/IP/TCP bandwidth). Let's assume a really worst-case scenario, where the victim node is always fallen-behind from a better-work chain by ~5 headers and has to download them every 5 min (EXTRA_BLOCK_RELAY_ONLY_PEER_INTERVAL). 80 * 5 * 12 * 24 * 30 = 3_456_000, this node will consume 3.45 MB by month from the network ? If I get the math right, I think that's fairly acceptable.\r\n\r\nThat said, I would be glad if we start to develop and sustain frameworks to evaluate question like network load which rightfully spawn up in this kind of work. Beyond agreeing on security model efficiency, having sound quantitative model would ease reaching Concept ACK/NACK.\r\n\r\n> I thought I did document this innet.h, but I think it would make sense to put a writeup of how all this works on our wiki, which I'd be happy to do after this is merged.                                       \r\n\r\nI know I'm a minority opinion, but I still feel we should have a sound discussion before dissociating further rationale from code by writing more documentation in the wiki instead of in-tree.                    \r\n\r\nContra:\r\n* splitting code rationale from code paths increase the risk of documentation being airy, hard to link back and easy outdated                                                                                      \r\n* rationale should be submitted to the same review process, wiki is free to edit for project members,, IMO code rationale is a much important than code correctness, because ultimately rationale is leading how code\r\nshould be\r\n* increase project reliance on centralized GH infrastructure of duplicated git copies\r\n\r\nI'm a big fan of the code documentation approach which has been done for #19988, and I hope to stick more to this kind of code documentation standard in the future.",
      "created_at" : "2020-12-10T16:06:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742616282",
      "id" : 742616282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjYxNjI4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T18:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742616282",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540791588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540791588"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Isn't this suggestion (changing `m_tx_relay == nullptr` to `IsBlockOnlyConn()` when logging a new outbound peer) already done? I think github is confusing me...\r\n\r\nAnyway, changing that entire `x ? \"y\" : \"z\"` to just be `pfrom.ConnectionTypeAsString()` seems like it might be better.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-12-11T09:01:42Z",
      "diff_hunk" : "@@ -2557,7 +2557,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             LogPrintf(\"New outbound peer connected: version: %d, blocks=%d, peer=%d%s (%s)\\n\",\n                       pfrom.nVersion.load(), pfrom.nStartingHeight,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),\n-                      pfrom.m_tx_relay == nullptr ? \"block-relay\" : \"full-relay\");\n+                      pfrom.IsBlockOnlyConn() ? \"block-relay\" : \"full-relay\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540791588",
      "id" : 540791588,
      "in_reply_to_id" : 528322920,
      "line" : 2469,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc5MTU4OA==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 2469,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 549912405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-11T10:21:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540791588",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540799536"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540799536"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If this does get refactored further, making it `bool HasExtraBlockRelay()` and `bool HasExtraFullOutbound` and returning `count > m_max_x` instead of `max(0, count - m_max_x)` would be an idea too.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-12-11T09:15:04Z",
      "diff_hunk" : "@@ -1820,18 +1820,32 @@ void CConnman::SetTryNewOutboundPeer(bool flag)\n // Also exclude peers that haven't finished initial connection handshake yet\n // (so that we don't decide we're over our desired connection limit, and then\n // evict some peer that has finished the handshake)\n-int CConnman::GetExtraOutboundCount()\n+int CConnman::GetExtraFullOutboundCount()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540799536",
      "id" : 540799536,
      "in_reply_to_id" : 528321515,
      "line" : 1830,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc5OTUzNg==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 1830,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 5,
      "pull_request_review_id" : 549912405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-11T10:21:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540799536",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540817510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540817510"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Might have been better to have made it:\r\n\r\n```c++\r\n        CNodeState* state = State(pnode->GetId());\r\n        int blocks_in_flight = (state == nullptr ? 0 : state->nBlocksInFlight);\r\n```\r\n\r\nAs it is, it looks like `node_state == nullptr` is something that could happen and requires special casing to ensure we do disconnect it immediately, whereas in reality it's never reachable (we ensure we have `CNodeState` prior to adding it to `vNodes`, and remove it only after removing from `vNodes`).\r\n\r\nThere are plenty of other places in the code where we `assert` if `State()` returns a `nullptr`, so I think an `assert` here would also be fine.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-12-11T09:42:39Z",
      "diff_hunk" : "@@ -3953,9 +3953,53 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540817510",
      "id" : 540817510,
      "in_reply_to_id" : 517715632,
      "line" : 3943,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgxNzUxMA==",
      "original_commit_id" : "daf74979d741c9ccca68145f65f4ba6e0ee899b0",
      "original_line" : 3943,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 49,
      "pull_request_review_id" : 549912405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-11T10:21:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540817510",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540821050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540821050"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems better to use the names from `ConnectionTypeAsString` in comments than the shouty enums (ie `outbound-full-relay`) here).",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-12-11T09:48:10Z",
      "diff_hunk" : "@@ -3909,11 +3909,54 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;\n+        });\n+    }\n+\n+    // Check whether we have too many OUTBOUND_FULL_RELAY peers\n+    if (m_connman.GetExtraFullOutboundCount() > 0) {\n+        // If we have more OUTBOUND_FULL_RELAY peers than we target, disconnect one.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540821050",
      "id" : 540821050,
      "line" : 3958,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgyMTA1MA==",
      "original_commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_line" : 3958,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 64,
      "pull_request_review_id" : 549912405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-11T10:21:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540821050",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Testing this, I'm seeing some cases where the extra block-relay peer is being evicted for sending a tx, [...]\r\n\r\nLooking into this a bit further: I'm only seeing this coming from nodes advertising themselves as 0.20.1, and the timing seems like it's consistent with a 5s poisson delay since the connection is established. Not all 0.20.1 nodes are failing this way. I've just added some additional logging, and it looks like the txs they're advertising aren't particularly strange, but all the violating nodes seem to be running on cloud hosting (digital ocean, amazon, google cloud). So seems plausible that they're just buggy and lying about their version details?\r\n\r\nOne thing that might be worth considering: our sybil mitigation only works for concurrent connections -- our 10 regular outbounds all have to be in different netgroups because they're simultaneously connected, but 10 sequential extra block-relay-only could all end up to the same netgroup. Could fix this by keeping track of the last 10 extra connections we've tried, and trying to choose the next one from a different netgroup. ",
      "created_at" : "2020-12-16T11:44:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-746160585",
      "id" : 746160585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NjE2MDU4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T11:44:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746160585",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Testing this, I'm seeing some cases where the extra block-relay peer is being evicted for sending a tx ...\r\n\r\nI'm surprised that your log isn't showing the \"send version message\" line. You obviously have NET logging enabled since you're seeing the \"receive version message\" line. These are outbound connections, so I'd expect to see \"send version message\" (in `InitializeNode()`) between \"Added connection peer\" (in `ConnectNode()`) and \"receive version message\" (in `ProcessMessage()`). Very odd.\r\n\r\nEven if we did have that logging in `PushNodeVersion()`, it doesn't include what the fRelay was set to. That'd be evidence that the peer is misbehaving and we don't have a bug.\r\n\r\nPerhaps peer message capture would help here (#19509)",
      "created_at" : "2020-12-16T12:55:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-746247194",
      "id" : 746247194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NjI0NzE5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T12:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746247194",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, with logips enabled, I see those nodes also don't appear to be telling me my IP address, instead reporting their own IP in both `us=` and `peeraddr=`. Might just be a proxy that's munging the version message both ways, and losing the relay bit as well as address info.\r\n\r\nEdited to add:\r\n\r\nI think about 12%  of the extra block-relay-only connections my peer is opening get disconnected for this reason\r\n\r\nExample:\r\n\r\n```\r\n2020-12-16T13:12:01Z Added connection to [their_ip]:8333 peer=157\r\n2020-12-16T13:12:01Z sending version (103 bytes) peer=157\r\n2020-12-16T13:12:01Z ABCD, sent version message peer=157 block-relay-only m_ignore_incoming_txs==0, pnode.m_tx_relay == nullptr, relaytxes=0\r\n```\r\n\r\nNote: we are signalling no tx relay in the version message we send\r\n\r\n```\r\n2020-12-16T13:12:01Z send version message: version 70016, blocks=661619, us=[::]:0, them=[their_ip]:8333, peer=157\r\n2020-12-16T13:12:01Z received: version (102 bytes) peer=157\r\n2020-12-16T13:12:01Z sending verack (0 bytes) peer=157\r\n2020-12-16T13:12:01Z receive version message: /Satoshi:0.20.1/: version 70015, blocks=661619, us=[their_ip]:8333, peer=157, peeraddr=[their_ip]:8333\r\n```\r\n\r\nNote: they are claiming to be 0.20.1, and are telling us our ip is the same as their ip.\r\n\r\n```\r\n2020-12-16T13:12:01Z received: verack (0 bytes) peer=157\r\n2020-12-16T13:12:01Z New outbound peer connected: version: 70015, blocks=661619, peer=157, peeraddr=[their_ip]:8333 (block-relay)\r\n2020-12-16T13:12:01Z sending sendheaders (0 bytes) peer=157\r\n2020-12-16T13:12:01Z sending sendcmpct (9 bytes) peer=157\r\n2020-12-16T13:12:01Z sending sendcmpct (9 bytes) peer=157\r\n2020-12-16T13:12:01Z sending ping (8 bytes) peer=157\r\n2020-12-16T13:12:01Z initial getheaders (661618) to peer=157 (startheight:661619)\r\n2020-12-16T13:12:01Z sending getheaders (1029 bytes) peer=157\r\n2020-12-16T13:12:02Z received: sendheaders (0 bytes) peer=157\r\n2020-12-16T13:12:02Z received: sendcmpct (9 bytes) peer=157\r\n2020-12-16T13:12:02Z received: sendcmpct (9 bytes) peer=157\r\n2020-12-16T13:12:02Z received: ping (8 bytes) peer=157\r\n2020-12-16T13:12:02Z sending pong (8 bytes) peer=157\r\n2020-12-16T13:12:02Z received: getheaders (1029 bytes) peer=157\r\n2020-12-16T13:12:02Z getheaders 661619 to end from peer=157\r\n2020-12-16T13:12:02Z sending headers (82 bytes) peer=157\r\n2020-12-16T13:12:02Z received: feefilter (8 bytes) peer=157\r\n2020-12-16T13:12:02Z received: feefilter of 0.00001000 BTC/kvB from peer=157\r\n2020-12-16T13:12:02Z received: pong (8 bytes) peer=157\r\n2020-12-16T13:12:02Z received: headers (82 bytes) peer=157\r\n```\r\n\r\nEverthing looks fine so far. Except 8s later we get sent some txids, despite saying we don't want them. The txids themselves don't seem particularly suspicious.\r\n\r\n```\r\n2020-12-16T13:12:10Z received: inv (1261 bytes) peer=157\r\n2020-12-16T13:12:10Z got inv: tx 75bd60faafd08519ef2e792df0545c9392df41bf291d1134e7a5db9710ced23b  have peer=157\r\n2020-12-16T13:12:10Z transaction (75bd60faafd08519ef2e792df0545c9392df41bf291d1134e7a5db9710ced23b) inv sent in violation of protocol, disconnecting peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 75bd60faafd08519ef2e792df0545c9392df41bf291d1134e7a5db9710ced23b have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 7b449d756f6dda691f992987e17bf3f7dc34e0ea0ce65d43622401bc8f60dd88 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx bcb93b03d029cb3ec2d778b7d52dd3ec6dd281c5a3a0a5db9fb2acda71638c44 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 5b5a2b221caa73ed6b703add97c72f826ac70148b973cf375e7a53db0a1fb379 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 81921bce2a40d6a461996feec5a47b1a4121d0da247d837e6e4dea899230b659 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 7a34e32d7077960769e5c0cbacad4a12dda84418204a2652c491a570058fcb0a have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx af263f51587ff049cc64222d6660c63abb13458c92902d639882e2d3ab7287d6 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 3d4b1ecae99adc8c8077ae091d88ca269c71c76c18de7a871b3218d6ba08356d have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 390071b455d1ed37f6c16863e08fcc97a53331a1f0ecd5d8f397658c8524afac have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx d21e808b5d6dd2ed4e6e462b8beef3a4dcc3e791324bd7c8f7cc4c9f29dfba5d have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9a7d584b6cd86fb404f9cd4f64278f00111db009ccbcf1c7838cc32990149e4e new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 79c47859b388197e2f54e84b8e4127c774cd411a1d7e212a9260f69616bed798 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 43ee2d62b43292aa5f93456afeea622201f8617041d41b3a5270b8d069074787 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx f6ec29d439fe01ff4253086aa31ac82e03304fe1b8bb335b1afcf9be24140787 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx d81d8167089003070e65d909c51365f5906b30b0b9d41a842b0e87bdaa4b3f95 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx f6e90b5f427eba175ef3b464556b2deb2a6b6239f8ea45f82c6c3f99702ab740 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx e3f89991c70433914ca25c371a3ede00f3909bc72fc4c6debabe996f459fe095 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 4af670a50a53b3949528a375cd958818c436efafbf8cf2d9476ba251e0624d03 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 99c9200154e040337c4d853897930c6fb6ba5e052f2a9b801aa9a85d08cd4563 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx a2706abb0f8470c0e84aa07801fef1a56b1d2184b316bd13f1a18716a27da43e new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 5d41a07d349067fadc2ca165c32c2a1f369756006b512590fee88db0d3b05538 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 0e25bc1d72e1d6585e8e0b5a6e30e228136d8f25e8af15600c5b23d16d99dce0 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9c7d8fa67e81da350ae834bbefb9dc2955a18067512129fee672cc28c1118629 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9d4bc391dc0f4ee61e39f0ed65ef3f611a461a2bd54b216aa0263265fa50cca4 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9d9a74778fbaa7605f3386142f3ac5169a333ca5a846863394ff3c9e9ae69778 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx bf464249cf02bc4caac19c04d6a0cb76ea1628531e6d52b0d8dc9e3d2f1a5477 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 457df7291de77b3b5ca0871ad87621c819efab6fb1471842e88fb7959ab1e2ca new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 3f644cb1a138d6dd1bfd461470172b7dab8e161f5b6b056cc477eda781414aee have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9e6dd4d37cc7a56fd188ffe99cc1dc523901e18f8b6ec02e8b99c5ed6f3f608a new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx e64861304f5f7d829c82d559c0c1c7c57c5cb5e51bdfd96f10fcf04abb858408 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 13bc931cd0a09e546b9d1b16c66964b33cb872e5eec65d21c2344dec1b317baa have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 038ee30078d52b1af945b16578ff4c302040248be273809aa285f7667a8f7edc have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 36a363550c4c8a5fbb38b69cfde0a938faa06fa300836d769cb085da963174a3 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx b09beb484f21adcec10665aa526132331f117e748997a41d9330370c8ce580f5 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 12b3adb1fc1ccfbeec6d0700b1fce0b8e6a2dbe85e227745dca4f388b8b2d926 have peer=157\r\n2020-12-16T13:12:10Z disconnecting peer=157\r\n2020-12-16T13:12:10Z Cleared nodestate for peer=157\r\n```",
      "created_at" : "2020-12-16T13:49:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-746312882",
      "id" : 746312882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NjMxMjg4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T15:27:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746312882",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> One thing that might be worth considering: our sybil mitigation only works for concurrent connections -- our 10 regular outbounds all have to be in different netgroups because they're simultaneously connected, but 10 sequential extra block-relay-only could all end up to the same netgroup. Could fix this by keeping track of the last 10 extra connections we've tried, and trying to choose the next one from a different netgroup.\r\n\r\n@ajtowns I think this is an interesting idea -- seems like it would be a strict improvement in security (in a mathematical sense, ie I can't imagine how our security could be any worse off with that approach); but I'm not sure if the additional complexity is worth the potential gain?  Not intrinsically opposed, but maybe this isn't low-hanging fruit either.",
      "created_at" : "2020-12-16T14:33:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-746385941",
      "id" : 746385941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NjM4NTk0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T14:33:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746385941",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r544365851"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544365851"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've updated the documentation on the wiki:\r\nhttps://github.com/bitcoin-core/bitcoin-devwiki/wiki/P2P-Design-Philosophy/_compare/452d8a0c96503ac7158a975acf7d55cd674a3735\r\n\r\nPlease let me know if you think anything is missing and I'd be happy to clarify further.",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-12-16T14:57:27Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r544365851",
      "id" : 544365851,
      "in_reply_to_id" : 528335350,
      "line" : 3914,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM2NTg1MQ==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3914,
      "original_position" : 20,
      "original_start_line" : 3956,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 553768939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : 3912,
      "start_side" : "RIGHT",
      "updated_at" : "2020-12-16T14:57:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544365851",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r545824316"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545824316"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@jonatack If you have a patch to do this, please feel free to open a PR (I agree that this is mildly annoying).",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-12-18T13:16:42Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r545824316",
      "id" : 545824316,
      "in_reply_to_id" : 518656458,
      "line" : 3946,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgyNDMxNg==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3946,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 52,
      "pull_request_review_id" : 555475907,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-18T13:16:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545824316",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r546246953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546246953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "thanks @sdaftuar, done in #20723",
      "commit_id" : "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "created_at" : "2020-12-19T14:55:55Z",
      "diff_hunk" : "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r546246953",
      "id" : 546246953,
      "in_reply_to_id" : 518656458,
      "line" : 3946,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI0Njk1Mw==",
      "original_commit_id" : "93a0ec1a629af533bb21418a3e134c268bc57395",
      "original_line" : 3946,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 52,
      "pull_request_review_id" : 555946666,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-19T14:55:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546246953",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "IIUC, since this merge, an extra outbound-full-relay connection is made upon a stale tip(3 block intervals), and an extra outbound-block-relay connection is now made every 5 minutes. Is there still value in the former?",
      "created_at" : "2021-01-01T02:22:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-753242410",
      "id" : 753242410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzI0MjQxMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-01T02:22:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753242410",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> IIUC, since this merge, an extra outbound-full-relay connection is made upon a stale tip(3 block intervals), and an extra outbound-block-relay connection is now made every 5 minutes. Is there still value in the former?\r\n\r\nYes I think there is. The stale tip logic more aggressively seeks out a new peer to connect to (staying in that state until a new connection is actually made) while this logic fires once on a selection from addrman and gives up even if no connection is made. Moreover the stale tip logic is an eviction algorithm for full relay peers, while this logic is only for block relay peers. I think having rotation logic for both makes sense, though there is probably room to improve the interaction between these two behaviors in all the various cases we can think of. \r\n",
      "created_at" : "2021-01-01T02:38:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-753243816",
      "id" : 753243816,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzI0MzgxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-01T02:38:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753243816",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar Thanks for explaining. Could this be a way to improve the interaction between the two behaviors?:\r\n\r\n1. Upon stale tip, seek extra outbound-block-relay more aggressively rather than a 5 minute interval (stay in that state until the tip is no longer stale). \r\n2. Novel block discovery by the extra outbound-block-relay triggers outbound-full-relay eviction.\r\n3. Eliminate extra outbound-full-relay connections.\r\n\r\nPerhaps the simpler starting point is just to implement (2)? Are there any downsides/known attacks if we do that?",
      "created_at" : "2021-01-02T05:09:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-753432802",
      "id" : 753432802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MzQzMjgwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-02T05:09:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753432802",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   }
]
