[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Downloading arbitrary blocks is certainly possible (this is how neutrino clients work) however, downloading old blocks would not include their UNDO data. This means you might be able to download old blocks to (for example) rescan a wallet but you would not be able to handle a deeper chain reorg than the original prune depth.\r\n\r\nWhat might be possible is to increase the prune depth by 1 with every new incoming block, until a new desired prune depth is reached. The mechanism there would be to simply NOT delete the oldest block from disk until the new prune depth is reached. This would require no extra historical block downloads or weird half-validation.\r\n\r\nWould that be sufficient for you use-case, @ProofOfKeags ?",
      "created_at" : "2023-02-14T18:01:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1430157210",
      "id" : 1430157210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585VPnea",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1430157210/reactions"
      },
      "updated_at" : "2023-02-14T18:01:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1430157210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Slightly related: https://github.com/bitcoin/bitcoin/issues/21267.",
      "created_at" : "2023-03-22T10:58:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1479351248",
      "id" : 1479351248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585YLRvQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1479351248/reactions"
      },
      "updated_at" : "2023-03-22T10:58:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1479351248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "See https://github.com/bitcoin/bitcoin/issues/24286#issuecomment-1479666190 I think these two issues can be closed and a feature we could work on is a neutrino mode for a wallet attached to a pruning node... ?",
      "created_at" : "2023-03-22T14:28:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1479668791",
      "id" : 1479668791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585YMfQ3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1479668791/reactions"
      },
      "updated_at" : "2023-03-22T14:28:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1479668791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> See [#24286 (comment)](https://github.com/bitcoin/bitcoin/issues/24286#issuecomment-1479666190) I think these two issues can be closed and a feature we could work on is a neutrino mode for a wallet attached to a pruning node... ?\r\n\r\nyeah, I have been working on it @pinheadmz. Just answered in https://github.com/bitcoin/bitcoin/issues/21267. Got sidetracked with some other useful features to make the mainnet tests that have been running less painful.",
      "created_at" : "2023-03-22T14:36:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1479682702",
      "id" : 1479682702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585YMiqO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1479682702/reactions"
      },
      "updated_at" : "2023-03-22T15:04:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1479682702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> would not be able to handle a deeper chain reorg than the original prune depth.\r\n\r\nThe smallest prune size is 550MB. If we have a 140 block reorg, we have a pretty apocalyptic scenario. afaiu there are numerous assumptions within bitcoin core that a 100 block reorg is impossible. Under that assumption, your described limitation isn't actually a limitation.",
      "created_at" : "2023-03-22T23:27:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1480381691",
      "id" : 1480381691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585YPNT7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1480381691/reactions"
      },
      "updated_at" : "2023-03-22T23:27:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1480381691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4033651?v=4",
         "events_url" : "https://api.github.com/users/ProofOfKeags/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ProofOfKeags/followers",
         "following_url" : "https://api.github.com/users/ProofOfKeags/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ProofOfKeags/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ProofOfKeags",
         "id" : 4033651,
         "login" : "ProofOfKeags",
         "node_id" : "MDQ6VXNlcjQwMzM2NTE=",
         "organizations_url" : "https://api.github.com/users/ProofOfKeags/orgs",
         "received_events_url" : "https://api.github.com/users/ProofOfKeags/received_events",
         "repos_url" : "https://api.github.com/users/ProofOfKeags/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ProofOfKeags/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ProofOfKeags/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ProofOfKeags"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Under that assumption, your described limitation isn't actually a limitation.\r\n\r\nSure, but then if you're not re-downloading old blocks for reorg protection I can think of two other use cases:\r\n1. serving old blocks to bootstrapping nodes\r\n2. wallet rescans\r\n\r\nSince we are talking about pruned nodes anyway I don't think (1) matters, does it? That's why I think we should just focus on neutrino wallet + pruned node as the feature, which is being discussed in the other linked issue.",
      "created_at" : "2023-03-23T14:04:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1481257230",
      "id" : 1481257230,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585YSjEO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1481257230/reactions"
      },
      "updated_at" : "2023-03-23T14:04:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1481257230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> serving old blocks to bootstrapping nodes\r\n\r\na node should just serve the blocks it has. The cursor rewind should cause it to download earlier blocks as if it was doing IBD only it doesn't have to do any consensus validation except that the block data matches the expected blockhash\r\n\r\n> wallet rescans\r\n\r\nA rescan has to go back to the wallet birthday irrespective of the pruning cursor.\r\n\r\nOne other thing to note. I no longer personally need this feature, but I'm simply describing the need as I understand it should people want to be using manual pruning in the future.\r\n\r\n",
      "created_at" : "2023-03-29T21:13:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1489330250",
      "id" : 1489330250,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585YxWBK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1489330250/reactions"
      },
      "updated_at" : "2023-03-29T21:13:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1489330250",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4033651?v=4",
         "events_url" : "https://api.github.com/users/ProofOfKeags/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ProofOfKeags/followers",
         "following_url" : "https://api.github.com/users/ProofOfKeags/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ProofOfKeags/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ProofOfKeags",
         "id" : 4033651,
         "login" : "ProofOfKeags",
         "node_id" : "MDQ6VXNlcjQwMzM2NTE=",
         "organizations_url" : "https://api.github.com/users/ProofOfKeags/orgs",
         "received_events_url" : "https://api.github.com/users/ProofOfKeags/received_events",
         "repos_url" : "https://api.github.com/users/ProofOfKeags/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ProofOfKeags/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ProofOfKeags/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ProofOfKeags"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I no longer personally need this feature, but I'm simply describing the need as I understand it should people want to be using manual pruning in the future.\r\n\r\nOk thanks for engaging me anyway. I still don't see why anyone would want this feature except for re-scanning an old wallet on a pruned node. If you can provide a reasonable use case we can keep this issue open, but otherwise I think we should close and follow #21267\r\n\r\n> a node should just serve the blocks it has.\r\n\r\nActually pruned nodes are never supposed to serve any blocks deeper than tip-288: \r\n\r\nhttps://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki#counter-measures-for-peer-fingerprinting\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/5c2bb2b54cc7fceef4b9db631536ee6ed8129864/src/net_processing.cpp#L2165-L2173",
      "created_at" : "2023-03-31T14:27:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1492010672",
      "id" : 1492010672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585Y7kaw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1492010672/reactions"
      },
      "updated_at" : "2023-03-31T14:27:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1492010672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I still don't see why anyone would want this feature except for re-scanning an old wallet on a pruned node\r\n\r\nWe ran into this issue as a result of having different dependent services that wanted access to different amounts of block history. If you prune to height N, and you install a different service that wants height N-M, the only solution is to do a full resync and download all the way back to N-N (aka 0). When M is small, this is needlessly expensive.\r\n\r\nIt is probably a rare use case, these days as many bitcoiners are now opting for full archive nodes or ditching running a node altogether, making pruning of any kind a declining use case at this point. I certainly wouldn't contest closing it. I think it was more of an artifact of the time when it was opened, and pruning was more necessary for home node viability.",
      "created_at" : "2023-03-31T18:20:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1492411342",
      "id" : 1492411342,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585Y9GPO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1492411342/reactions"
      },
      "updated_at" : "2023-03-31T18:20:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1492411342",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4033651?v=4",
         "events_url" : "https://api.github.com/users/ProofOfKeags/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ProofOfKeags/followers",
         "following_url" : "https://api.github.com/users/ProofOfKeags/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ProofOfKeags/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ProofOfKeags",
         "id" : 4033651,
         "login" : "ProofOfKeags",
         "node_id" : "MDQ6VXNlcjQwMzM2NTE=",
         "organizations_url" : "https://api.github.com/users/ProofOfKeags/orgs",
         "received_events_url" : "https://api.github.com/users/ProofOfKeags/received_events",
         "repos_url" : "https://api.github.com/users/ProofOfKeags/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ProofOfKeags/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ProofOfKeags/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ProofOfKeags"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> the only solution is to do a full resync and download all the way back to N-N (aka 0).\r\n\r\nThere is also `getblockfrompeer` https://github.com/bitcoin/bitcoin/pull/20295 I just tried this on my pruned node to inspect blocks below the prune depth, pretty neat!",
      "created_at" : "2023-04-06T14:12:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19807#issuecomment-1499130274",
      "id" : 1499130274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19807",
      "node_id" : "IC_kwDOABII585ZWumi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1499130274/reactions"
      },
      "updated_at" : "2023-04-06T14:12:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1499130274",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   }
]
