{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This adds a new optional build executable called `bitcoin-wallet-unlock`. This program invokes [Pinentry](https://www.gnupg.org/related_software/pinentry/index.en.html) (part of GnuPG) to securely read the user's wallet passphrase. This is intended to be used by users of `bitcion-cli`, as `bitcoin-qt` already reads wallet passphrases securely.\r\n\r\n### Details\r\n\r\nNormally parameters to Bitcoin RPC methods are passed as program arguments to `bitcoin-cli`. This is insecure for `walletpassphrase` for two reasons:\r\n * The passphrase will be leaked to other processes via the command name, e.g. another user running `top` or `ps` might see the passphrase in the clear.\r\n * In all likelihood the command invocation will end up in the user's shell history.\r\n\r\nA commonly cited workaround is to use `bitcoin-cli -stdin walletpassphrase`. In this mode the command arguments are provided to `bitcoin-cli` over stdin, and this allows the user to enter a passphrase (and timeout) without the issues described above. However, it is still not perfect, as `bitcoin-cli` keeps stdin in `ICANON` mode. This means that if you literally type `bitcoin-cli -stdin walletpassphrase` and enter a passphrase and timeout value, the passphrase you type will be echoed on the terminal in the clear. Another person shoulder-surfing will be able to see the cleartext passphrase, as can any process doing a screen capture.\r\n\r\nPinentry solves this problem and a few others. When reading from the TTY, Pinentry disables echoing to the console, which means that shoulder-surfers can't see the passphrase. Pinentry has some other nifty features. For example, if you invoke pinentry from a terminal emulator in a graphical session in most cases it can automatically upgrade to a graphical input method, e.g. using GTK. This is what input looks like by default for me in GNOME when running `bitcoin-wallet-unlock` from a terminal: https://monad.io/bwemqwkg.png\r\n\r\nThis implementation of `bitcoin-wallet-unlock` allows using `-p` to force a particular pinentry backend, and `-t` to force TTY input. Extra arguments passed to `bitcoin-wallet-unlock` will be forwarded to the underlying pinentry program; there's an example of this in the comment for `GetPinentryPassphrase()`. Communication with Pinentry is done using a limited subset of the assuan protocol, which is described [here](http://info2html.sourceforge.net/cgi-bin/info2html-demo/info2html?(pinentry)Protocol).\r\n\r\nThese are the caveats I know of with this PR:\r\n * Since the HTTP client code in `bitcoin-cli` isn't well factored, I am just execing `bitcoin-cli`, rather than actually making the RPC request from the `bitcoin-wallet-unlock` program. This feels a little bit hacky, but minimizes code churn.\r\n * The default behavior is to use a relative path for `bitcoin-cli` and `pinentry` when calling `execvp()`. This could potentially cause a malicious program to be invoked if an attacker can put bad things in the users PATH. This can be mitigated by invoking `bitcoin-wallet-unlock` with absolute paths, e.g. `bitcoin-wallet-unlock -c /usr/bin/bitcoin-cli -p /usr/bin/pinentry`.\r\n * Graphical pinentry methods can delegate to a desktop password manager (e.g. with `gnome-keyring-daemon` on GNOME) when pinentry is linked with libsecret. That is a cool feautre, but I don't enable this because I don't think it's secure (it's trivial to dump the plaintext passwords with these once you're logged in as a user).\r\n * This code is not portable to Windows as it uses `pipe()` and `exec()` (although I suspect most Windows users are using `bitcoin-qt`).",
   "closed_at" : "2018-07-29T15:05:41Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 6,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13335/comments",
   "created_at" : "2018-05-28T08:28:54Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13335/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/13335",
   "id" : 326941967,
   "labels" : [
      {
         "color" : "0052cc",
         "default" : false,
         "id" : 98279177,
         "name" : "RPC/REST/ZMQ",
         "node_id" : "MDU6TGFiZWw5ODI3OTE3Nw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ"
      },
      {
         "color" : "99a810",
         "default" : false,
         "id" : 749416508,
         "name" : "Up for grabs",
         "node_id" : "MDU6TGFiZWw3NDk0MTY1MDg=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs"
      },
      {
         "color" : "08a781",
         "default" : false,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13335/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MTkwODY3NTcx",
   "number" : 13335,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/13335.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13335",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/13335.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13335"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Implement pinentry wrapper to unlock bitcoin wallet",
   "updated_at" : "2018-07-29T15:05:41Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13335",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/2734?v=4",
      "events_url" : "https://api.github.com/users/eklitzke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/eklitzke/followers",
      "following_url" : "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/eklitzke",
      "id" : 2734,
      "login" : "eklitzke",
      "node_id" : "MDQ6VXNlcjI3MzQ=",
      "organizations_url" : "https://api.github.com/users/eklitzke/orgs",
      "received_events_url" : "https://api.github.com/users/eklitzke/received_events",
      "repos_url" : "https://api.github.com/users/eklitzke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/eklitzke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/eklitzke"
   }
}
