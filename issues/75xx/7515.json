{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "Trying to build on OpenBSD 5.8.\n\n```\n# gmake\nMaking all in src\ngmake[1]: Entering directory '/home/bitcoin/bitcoin/src'\ngmake[2]: Entering directory '/home/bitcoin/bitcoin/src'\n  CXX      crypto/libbitcoinconsensus_la-hmac_sha256.lo\n  CXX      crypto/libbitcoinconsensus_la-hmac_sha512.lo\n  CXX      crypto/libbitcoinconsensus_la-ripemd160.lo\n  CXX      crypto/libbitcoinconsensus_la-sha1.lo\n  CXX      crypto/libbitcoinconsensus_la-sha256.lo\n  CXX      crypto/libbitcoinconsensus_la-sha512.lo\n  CXX      libbitcoinconsensus_la-arith_uint256.lo\n  CXX      consensus/libbitcoinconsensus_la-merkle.lo\n  CXX      libbitcoinconsensus_la-hash.lo\n  CXX      primitives/libbitcoinconsensus_la-block.lo\n  CXX      primitives/libbitcoinconsensus_la-transaction.lo\n  CXX      libbitcoinconsensus_la-pubkey.lo\n  CXX      script/libbitcoinconsensus_la-bitcoinconsensus.lo\n  CXX      script/libbitcoinconsensus_la-interpreter.lo\n  CXX      script/libbitcoinconsensus_la-script.lo\n  CXX      script/libbitcoinconsensus_la-script_error.lo\n  CXX      libbitcoinconsensus_la-uint256.lo\n  CXX      libbitcoinconsensus_la-utilstrencodings.lo\ngmake[3]: Entering directory '/home/bitcoin/bitcoin/src/secp256k1'\ngcc -I. -g -O2 -Wall -Wextra -Wno-unused-function -c src/gen_context.c -o gen_context.o\ngcc gen_context.o -o gen_context\n./gen_context\n  CC       src/libsecp256k1_la-secp256k1.lo\n  CCLD     libsecp256k1.la\ngmake[3]: Leaving directory '/home/bitcoin/bitcoin/src/secp256k1'\n  CXXLD    libbitcoinconsensus.la\n\n*** Warning: This system can not link to static lib archive secp256k1/libsecp256k1.la.\n*** I have the capability to make that library automatically link in when\n*** you link to this library.  But I can only do this if you have a\n*** shared version of the library, which you do not appear to have.\n  CXX      bitcoind-bitcoind.o\n  CXX      libbitcoin_server_a-addrman.o\n  CXX      libbitcoin_server_a-alert.o\n  CXX      libbitcoin_server_a-bloom.o\n  CXX      libbitcoin_server_a-chain.o\n  CXX      libbitcoin_server_a-checkpoints.o\n  CXX      libbitcoin_server_a-httprpc.o\nIn file included from ui_interface.h:12:0,\n                 from httprpc.cpp:16:\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp: In member function 'boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::operator()(T1, T2, T3) [with R = bool; T1 = const std::basic_string<char>&; T2 = const std::basic_string<char>&; T3 = unsigned int; Combiner = boost::signals2::last_value<bool>; Group = int; GroupCompare = std::less<int>; SlotFunction = boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; Mutex = boost::signals2::mutex; boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type = bool]':\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp:51:36: warning: '*((void*)& value +1)' may be used uninitialized in this function [-Wmaybe-uninitialized]\n         if(value) return value.get();\n                                    ^\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp:41:21: note: '*((void*)& value +1)' was declared here\n         optional<T> value;\n                     ^\nAt global scope:\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\n  CXX      libbitcoin_server_a-httpserver.o\nIn file included from ui_interface.h:12:0,\n                 from httpserver.cpp:13:\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp: In member function 'boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::operator()(T1, T2, T3) [with R = bool; T1 = const std::basic_string<char>&; T2 = const std::basic_string<char>&; T3 = unsigned int; Combiner = boost::signals2::last_value<bool>; Group = int; GroupCompare = std::less<int>; SlotFunction = boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)>; Mutex = boost::signals2::mutex; boost::signals2::detail::signal3_impl<R, T1, T2, T3, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type = bool]':\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp:51:36: warning: '*((void*)& value +1)' may be used uninitialized in this function [-Wmaybe-uninitialized]\n         if(value) return value.get();\n                                    ^\n/home/bitcoin/bitcoin/boost/include/boost/signals2/last_value.hpp:41:21: note: '*((void*)& value +1)' was declared here\n         optional<T> value;\n                     ^\nAt global scope:\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\n  CXX      libbitcoin_server_a-init.o\nIn file included from addrman.h:14:0,\n                 from init.cpp:12:\ninit.cpp: In function 'bool AppInit2(boost::thread_group&, CScheduler&)':\ninit.cpp:1095:61: error: 'OPENSSL_VERSION' was not declared in this scope\n     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n                                                             ^\nutil.h:77:39: note: in definition of macro 'LogPrintf'\n #define LogPrintf(...) LogPrint(NULL, __VA_ARGS__)\n                                       ^\ninit.cpp:1095:76: error: 'OpenSSL_version' was not declared in this scope\n     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n                                                                            ^\nutil.h:77:39: note: in definition of macro 'LogPrintf'\n #define LogPrintf(...) LogPrint(NULL, __VA_ARGS__)\n                                       ^\nIn file included from /home/bitcoin/bitcoin/boost/include/boost/system/system_error.hpp:14:0,\n                 from /home/bitcoin/bitcoin/boost/include/boost/thread/exceptions.hpp:22,\n                 from /home/bitcoin/bitcoin/boost/include/boost/thread/pthread/thread_data.hpp:10,\n                 from /home/bitcoin/bitcoin/boost/include/boost/thread/pthread/condition_variable.hpp:12,\n                 from /home/bitcoin/bitcoin/boost/include/boost/thread/condition_variable.hpp:16,\n                 from sync.h:11,\n                 from addrman.h:12,\n                 from init.cpp:12:\n/home/bitcoin/bitcoin/boost/include/boost/system/error_code.hpp: At global scope:\n/home/bitcoin/bitcoin/boost/include/boost/system/error_code.hpp:221:36: warning: 'boost::system::posix_category' defined but not used [-Wunused-variable]\n     static const error_category &  posix_category = generic_category();\n                                    ^\n/home/bitcoin/bitcoin/boost/include/boost/system/error_code.hpp:222:36: warning: 'boost::system::errno_ecat' defined but not used [-Wunused-variable]\n     static const error_category &  errno_ecat     = generic_category();\n                                    ^\n/home/bitcoin/bitcoin/boost/include/boost/system/error_code.hpp:223:36: warning: 'boost::system::native_ecat' defined but not used [-Wunused-variable]\n     static const error_category &  native_ecat    = system_category();\n                                    ^\ncc1plus: warning: unrecognized command line option \"-Wno-self-assign\"\nMakefile:3916: recipe for target 'libbitcoin_server_a-init.o' failed\ngmake[2]: *** [libbitcoin_server_a-init.o] Error 1\ngmake[2]: Leaving directory '/home/bitcoin/bitcoin/src'\nMakefile:7057: recipe for target 'all-recursive' failed\ngmake[1]: *** [all-recursive] Error 1\ngmake[1]: Leaving directory '/home/bitcoin/bitcoin/src'\nMakefile:666: recipe for target 'all-recursive' failed\ngmake: *** [all-recursive] Error 1\n```\n",
   "closed_at" : "2016-02-11T11:52:07Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/17176322?v=4",
      "events_url" : "https://api.github.com/users/dotgodly/events{/privacy}",
      "followers_url" : "https://api.github.com/users/dotgodly/followers",
      "following_url" : "https://api.github.com/users/dotgodly/following{/other_user}",
      "gists_url" : "https://api.github.com/users/dotgodly/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/dotgodly",
      "id" : 17176322,
      "login" : "dotgodly",
      "node_id" : "MDQ6VXNlcjE3MTc2MzIy",
      "organizations_url" : "https://api.github.com/users/dotgodly/orgs",
      "received_events_url" : "https://api.github.com/users/dotgodly/received_events",
      "repos_url" : "https://api.github.com/users/dotgodly/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/dotgodly/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/dotgodly/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/dotgodly"
   },
   "comments" : 20,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7515/comments",
   "created_at" : "2016-02-11T11:00:09Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7515/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/7515",
   "id" : 132943071,
   "labels" : [
      {
         "color" : "770000",
         "default" : false,
         "id" : 234878,
         "name" : "Linux/Unix",
         "node_id" : "MDU6TGFiZWwyMzQ4Nzg=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Linux/Unix"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7515/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWUxMzI5NDMwNzE=",
   "number" : 7515,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "recipe for target 'libbitcoin_server_a-init.o' failed",
   "updated_at" : "2016-02-16T12:43:50Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7515",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/17176322?v=4",
      "events_url" : "https://api.github.com/users/dotgodly/events{/privacy}",
      "followers_url" : "https://api.github.com/users/dotgodly/followers",
      "following_url" : "https://api.github.com/users/dotgodly/following{/other_user}",
      "gists_url" : "https://api.github.com/users/dotgodly/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/dotgodly",
      "id" : 17176322,
      "login" : "dotgodly",
      "node_id" : "MDQ6VXNlcjE3MTc2MzIy",
      "organizations_url" : "https://api.github.com/users/dotgodly/orgs",
      "received_events_url" : "https://api.github.com/users/dotgodly/received_events",
      "repos_url" : "https://api.github.com/users/dotgodly/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/dotgodly/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/dotgodly/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/dotgodly"
   }
}
