[
   {
      "author_association" : "MEMBER",
      "body" : "Thanks. Was about to push a fix after @ryanofsky reported on it lately. ",
      "created_at" : "2021-04-14T18:23:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21682#issuecomment-819735520",
      "id" : 819735520,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21682",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxOTczNTUyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-14T18:23:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819735520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/19951#discussion_r611257547",
      "created_at" : "2021-04-14T18:24:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21682#issuecomment-819736113",
      "id" : 819736113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21682",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxOTczNjExMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-14T18:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819736113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've looked at that test before and I don't think that specific `BOOST_CHECK` makes much sense TBH :)\r\n\r\n1.) I don't understand why we test if `ToString()` output includes `%zone_id`: it clearly doesn't on some platforms, so we cannot rely on it anyways. Then why test it?\r\n\r\n2.) And perhaps more fundamentally: why would we even _want_ to have `%zone_id` in our `ToString()` output? I think the expectation is to get say `2001:0db8:85a3::8a2e:0370:7334 ` and not `2001:0db8:85a3::8a2e:0370:7334%2` when doing `ipv6_addr.ToString()` :)\r\n\r\nSuggested solution:\r\n\r\n```diff\r\ndiff --git a/src/test/net_tests.cpp b/src/test/net_tests.cpp\r\nindex 8eab26f3d..61cb381aa 100644\r\n--- a/src/test/net_tests.cpp\r\n+++ b/src/test/net_tests.cpp\r\n@@ -307,10 +307,6 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\r\n     BOOST_REQUIRE(addr.IsValid());\r\n     BOOST_REQUIRE(addr.IsIPv6());\r\n     BOOST_CHECK(!addr.IsBindAny());\r\n-    const std::string addr_str{addr.ToString()};\r\n-    BOOST_CHECK(addr_str == scoped_addr || addr_str == \"fe80:0:0:0:0:0:0:1\");\r\n-    // The fallback case \"fe80:0:0:0:0:0:0:1\" is needed for macOS 10.14/10.15 and (probably) later.\r\n     // Test that the delimiter \"%\" and default zone id of 0 can be omitted for the default scope.\r\n     BOOST_REQUIRE(LookupHost(link_local + \"%0\", addr, false));\r\n     BOOST_REQUIRE(addr.IsValid());\r\n     BOOST_REQUIRE(addr.IsIPv6());\r\n```\r\n\r\n:)\r\n\r\n\r\n",
      "created_at" : "2021-04-14T22:45:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/21682#issuecomment-819897122",
      "id" : 819897122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21682",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxOTg5NzEyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-14T22:48:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819897122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
