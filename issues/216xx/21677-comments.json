[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK but this seems a bitâ¦ arbitrary. If you want to be 100% certain to not step on an existing one, could you open a (real) file descriptor, connected to something like a `pipe()` or `/dev/null` etc, and use that? Or do you use the fact that it needs to be a non-allocated file descriptor somewhere?",
      "created_at" : "2021-04-14T10:03:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21677#issuecomment-819397974",
      "id" : 819397974,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21677",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxOTM5Nzk3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-14T10:03:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819397974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21630 (fuzz: split FuzzedSock interface and implementation by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-04-14T11:28:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21677#issuecomment-819446295",
      "id" : 819446295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21677",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxOTQ0NjI5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-14T11:28:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819446295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21677#discussion_r613218721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21677"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613218721"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe this should receive similar treatment:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/03ecceedf6f15d2062e95b4533c5cea092c4c696/src/test/util/net.h#L78-L83",
      "commit_id" : "6262182b3f1c9540291fb8de3bf7a785e7113c55",
      "created_at" : "2021-04-14T12:52:14Z",
      "diff_hunk" : "@@ -577,15 +577,15 @@ class FuzzedSock : public Sock\n public:\n     explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n     {\n-          m_socket = fuzzed_data_provider.ConsumeIntegral<SOCKET>();\n+          m_socket = fuzzed_data_provider.ConsumeIntegralInRange<SOCKET>(INVALID_SOCKET - 1, INVALID_SOCKET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21677#discussion_r613218721",
      "id" : 613218721,
      "line" : 580,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzIxODcyMQ==",
      "original_commit_id" : "6464d106024ebba783bc99a1a91042c5266f02bf",
      "original_line" : 580,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : 5,
      "pull_request_review_id" : 635580449,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21677",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-14T22:23:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613218721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> ... could you open a (real) file descriptor, connected to ...\r\n\r\nRight! It does not need to be connected to anything. Just reuse this:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/03ecceedf6f15d2062e95b4533c5cea092c4c696/src/test/sock_tests.cpp#L30-L35\r\n\r\nplus a `close()` in the `FuzzedSocket` destructor.",
      "created_at" : "2021-04-14T12:55:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21677#issuecomment-819495706",
      "id" : 819495706,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21677",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxOTQ5NTcwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-14T12:55:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819495706",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Concept ACK but this seems a bitâ¦ arbitrary. If you want to be 100% certain to not step on an existing one, could you open a (real) file descriptor, connected to something like a `pipe()` or `/dev/null` etc, and use that? Or do you use the fact that it needs to be a non-allocated file descriptor somewhere?\r\n\r\nThe nice thing about going with `INVALID_SOCKET - 1` is that it doesn't involve slowdowns due to syscalls, and that reading or writing from fd `INVALID_SOCKET - 1` is guaranteed to fail (unless the fuzzing harness has four billion open file descriptors :)).\r\n\r\nNote that `INVALID_SOCKET - 1` is 4 294 967 294, and that POSIX requires file descriptor id re-use on `close`.\r\n\r\nNote that this PR is only a short-term bug fix to avoid file descriptors stdin (0), stdout (1), stderr (2) and other likely to be used file descriptors while awaiting [vasild's suggested cleanup/refactoring](https://github.com/bitcoin/bitcoin/pull/21630#discussion_r611413951).",
      "created_at" : "2021-04-14T22:20:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21677#issuecomment-819885553",
      "id" : 819885553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21677",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxOTg4NTU1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-14T22:22:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819885553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21677#discussion_r613625113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21677"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613625113"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done!",
      "commit_id" : "6262182b3f1c9540291fb8de3bf7a785e7113c55",
      "created_at" : "2021-04-14T22:24:02Z",
      "diff_hunk" : "@@ -577,15 +577,15 @@ class FuzzedSock : public Sock\n public:\n     explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n     {\n-          m_socket = fuzzed_data_provider.ConsumeIntegral<SOCKET>();\n+          m_socket = fuzzed_data_provider.ConsumeIntegralInRange<SOCKET>(INVALID_SOCKET - 1, INVALID_SOCKET);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21677#discussion_r613625113",
      "id" : 613625113,
      "in_reply_to_id" : 613218721,
      "line" : 580,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzYyNTExMw==",
      "original_commit_id" : "6464d106024ebba783bc99a1a91042c5266f02bf",
      "original_line" : 580,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/test/fuzz/util.h",
      "position" : 5,
      "pull_request_review_id" : 636127975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21677",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-14T22:24:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613625113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The chosen constant `INVALID_SOCKET - 1` is bigger than `FD_SETSIZE`, so those dummy sockets are not selectable:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2cd834e6c09dbbb676ecac4a36d8f0f56b4fe4b2/src/compat.h#L100-L106\r\n\r\nI think that's ok. I am working on a change to convert `IsSelectableSocket(bare SOCKET or sock.Get())` to `sock.IsSelectable()` so that the mocked sockets could override that.",
      "created_at" : "2021-04-15T06:08:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21677#issuecomment-820142172",
      "id" : 820142172,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21677",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMDE0MjE3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-15T06:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820142172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/21700 reduces the usage of `Sock::Get()` to tests and `CreateSockTCP()` which is not to be mocked. It also changes `IsSelectableSocket()` to be a method of `Sock()` so that `FuzzedSock` can override it nicely.",
      "created_at" : "2021-04-15T15:18:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21677#issuecomment-820512529",
      "id" : 820512529,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21677",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMDUxMjUyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-15T15:18:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820512529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
