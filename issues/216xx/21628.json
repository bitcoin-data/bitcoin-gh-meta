{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Building master @ 41a8d2b96ff5cbc2efa9b0996f30228d0a625fdb (sqlite):\r\n```bash\r\n./autogen.sh\r\n./configure --without-bdb --without-gui --with-sqlite\r\n  with wallet     = yes\r\n    with sqlite   = yes\r\n    with bdb      = no\r\ngmake -j8\r\nsrc/test/test_bitcoin --run_test=wallet_tests --log_level=all\r\n...\r\nwallet/test/wallet_tests.cpp:696: Entering test case \"CreateWallet\"\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:734: info: check m_node.chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, false, error) has passed\r\nwallet/test/wallet_tests.cpp:740: info: check rescan_completed has passed\r\nwallet/test/wallet_tests.cpp:741: info: check addtx_count == 2 has passed\r\nwallet/test/wallet_tests.cpp:744: info: check wallet->mapWallet.count(block_tx.GetHash()) == 1U has passed\r\nwallet/test/wallet_tests.cpp:745: info: check wallet->mapWallet.count(mempool_tx.GetHash()) == 1U has passed\r\nwallet/test/wallet_tests.cpp:753: info: check addtx_count == 4 has passed\r\nwallet/test/wallet_tests.cpp:767: info: check rescan_completed has passed\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:772: info: check m_node.chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, false, error) has passed\r\nwallet/test/wallet_tests.cpp:780: info: check addtx_count == 4 has passed\r\nwallet/test/wallet_tests.cpp:783: info: check wallet->mapWallet.count(block_tx.GetHash()) == 1U has passed\r\nwallet/test/wallet_tests.cpp:784: info: check wallet->mapWallet.count(mempool_tx.GetHash()) == 1U has passed\r\nwallet/test/wallet_tests.cpp:696: Leaving test case \"CreateWallet\"; testing time: 201296644us\r\nwallet/test/wallet_tests.cpp:791: Entering test case \"ZapSelectTx\"\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:810: info: check wallet->HasWalletSpend(prev_hash) has passed\r\nwallet/test/wallet_tests.cpp:811: info: check wallet->mapWallet.count(block_hash) == 1u has passed\r\nwallet/test/wallet_tests.cpp:814: info: check wallet->ZapSelectTx(vHashIn, vHashOut) == DBErrors::LOAD_OK has passed\r\nwallet/test/wallet_tests.cpp:816: info: check !wallet->HasWalletSpend(prev_hash) has passed\r\nwallet/test/wallet_tests.cpp:817: info: check wallet->mapWallet.count(block_hash) == 0u has passed\r\nwallet/test/wallet_tests.cpp:791: Leaving test case \"ZapSelectTx\"; testing time: 200866629us\r\n```\r\n\r\nCompare that to running the same tests after building with just bdb:\r\n```bash\r\ngmake clean\r\n./configure --without-gui --with-sqlite=no\r\n  with wallet     = yes\r\n    with sqlite   = no\r\n    with bdb      = yes\r\ngmake -j8\r\nsrc/test/test_bitcoin --run_test=wallet_tests --log_level=all\r\n...\r\nwallet/test/wallet_tests.cpp:696: Entering test case \"CreateWallet\"\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:734: info: check m_node.chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, false, error) has passed\r\nwallet/test/wallet_tests.cpp:740: info: check rescan_completed has passed\r\nwallet/test/wallet_tests.cpp:741: info: check addtx_count == 2 has passed\r\nwallet/test/wallet_tests.cpp:744: info: check wallet->mapWallet.count(block_tx.GetHash()) == 1U has passed\r\nwallet/test/wallet_tests.cpp:745: info: check wallet->mapWallet.count(mempool_tx.GetHash()) == 1U has passed\r\nwallet/test/wallet_tests.cpp:753: info: check addtx_count == 4 has passed\r\nwallet/test/wallet_tests.cpp:767: info: check rescan_completed has passed\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:772: info: check m_node.chain->broadcastTransaction(MakeTransactionRef(mempool_tx), DEFAULT_TRANSACTION_MAXFEE, false, error) has passed\r\nwallet/test/wallet_tests.cpp:780: info: check addtx_count == 4 has passed\r\nwallet/test/wallet_tests.cpp:783: info: check wallet->mapWallet.count(block_tx.GetHash()) == 1U has passed\r\nwallet/test/wallet_tests.cpp:784: info: check wallet->mapWallet.count(mempool_tx.GetHash()) == 1U has passed\r\nwallet/test/wallet_tests.cpp:696: Leaving test case \"CreateWallet\"; testing time: 2139054us\r\nwallet/test/wallet_tests.cpp:791: Entering test case \"ZapSelectTx\"\r\nwallet/test/wallet_tests.cpp:69: info: check SignTransaction(mtx, &keystore, coins, SIGHASH_ALL, input_errors) has passed\r\nwallet/test/wallet_tests.cpp:810: info: check wallet->HasWalletSpend(prev_hash) has passed\r\nwallet/test/wallet_tests.cpp:811: info: check wallet->mapWallet.count(block_hash) == 1u has passed\r\nwallet/test/wallet_tests.cpp:814: info: check wallet->ZapSelectTx(vHashIn, vHashOut) == DBErrors::LOAD_OK has passed\r\nwallet/test/wallet_tests.cpp:816: info: check !wallet->HasWalletSpend(prev_hash) has passed\r\nwallet/test/wallet_tests.cpp:817: info: check wallet->mapWallet.count(block_hash) == 0u has passed\r\nwallet/test/wallet_tests.cpp:791: Leaving test case \"ZapSelectTx\"; testing time: 1821042us\r\n```\r\n\r\nIn the sqlite case,`CreateWallet` is taking ~100x longer: `201296644us` vs `2139054us`. `ZapWalletTx` is similar: `200866629us` vs `1821042us`. [Full logs here](https://gist.github.com/fanquake/09e983acf0792482534f0fe7e916a03a).\r\n\r\nI thought this might be some weird macOS behaviour, but I tested on Linux, and am also seeing up to 27x difference. `CreateWallet`: `27905993us` vs `1092394us`. `ZapWalletTx`: `28024310us` vs `969432us`. [Full logs here](https://gist.github.com/fanquake/a1104888b5574af00a40a9998cfd0b36).",
   "closed_at" : "2021-04-13T14:32:36Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 3,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21628/comments",
   "created_at" : "2021-04-07T06:04:00Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21628/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/21628",
   "id" : 852041145,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      },
      {
         "color" : "08a781",
         "default" : false,
         "description" : null,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21628/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU4NTIwNDExNDU=",
   "number" : 21628,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Up to 100x perfomance difference for sqlite vs BDB in CreateWallet test ",
   "updated_at" : "2021-04-13T14:32:36Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21628",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
