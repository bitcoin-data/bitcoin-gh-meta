[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "In response to @jnewbery's [comment](https://github.com/bitcoin/bitcoin/pull/19995#pullrequestreview-505540213)\r\n\r\n> I think I'd prefer log-shedding to be done globally, with a special log at the end of a log suppression period that tallies up which log locations have been suppressed.\r\n\r\nI disagree on the global schedding, i think the source location based schedding is over all the better approach.\r\nI agree with your point that it could be confusing to drop some logs in the context of user issues but schedding should only kick in if there is an attack or something is horribly wrong, so i would think that almost all logs provided by users would be complete. We can also always tell if rate limiting is taking place since we log when it starts/stops and in those cases a partial log is better then no log.\r\n\r\n(This is obviously mostly an opinion and I am totally willing to be convinced of global log-schedding if enough reviewers favor it)",
      "created_at" : "2021-04-05T12:49:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-813376120",
      "id" : 813376120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMzM3NjEyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-05T12:49:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813376120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25306](https://github.com/bitcoin/bitcoin/pull/25306) (logging: add LogPrintfCategory to log unconditionally with category by jonatack)\n* [#25287](https://github.com/bitcoin/bitcoin/pull/25287) (logging: threshold log level by klementtan)\n* [#25203](https://github.com/bitcoin/bitcoin/pull/25203) (logging: update to severity-based logging by jonatack)\n* [#24950](https://github.com/bitcoin/bitcoin/pull/24950) (Add config option to set max debug log size by tehelsper)\n* [#23443](https://github.com/bitcoin/bitcoin/pull/23443) (p2p: Erlay support signaling by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-04-05T15:08:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-813443768",
      "id" : 813443768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMzQ0Mzc2OA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813443768/reactions"
      },
      "updated_at" : "2022-06-09T08:22:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813443768",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> schedding should only kick in if there is an attack or something is horribly wrong, so i would think that almost all logs provided by users would be complete.\r\n\r\nRight, and those cases are exactly where we need the best possible logs.\r\n\r\n> We can also always tell if rate limiting is taking place since we log when it starts/stops and in those cases a partial log is better then no log.\r\n\r\nI guarantee you that not everyone will know this and most people will miss a single log line saying \"rate-limiting log x\".\r\n\r\nI can only speak from my own experience of supporting network equipment for several years - partial logs are often worse than no logs at all since they're so misleading.",
      "created_at" : "2021-04-06T07:39:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-813901411",
      "id" : 813901411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMzkwMTQxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-06T07:39:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813901411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Strongest possible Concept ACK: this mitigation will kill an entire bug class (the \"disk fill via logging\" bug class). \r\n\r\nThanks for taking up this work @dergoegge.\r\n\r\nWill test and review.",
      "created_at" : "2021-04-06T07:55:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-813912391",
      "id" : 813912391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMzkxMjM5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-06T07:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813912391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jnewbery \r\n\r\n> I think I'd prefer log-shedding to be done globally, with a special log at the end of a log suppression period that tallies up which log locations have been suppressed.\r\n\r\nClarifying questions to fully understand what is suggested:\r\n\r\nLet's assume that log location A is a misplaced `LogPrintf` in a code path that the attacker can make us take.\r\n\r\nIn the case of an attacker using log location A to fill our disk by making us log from there repeatedly, is the suggestion then that _all_ log locations should be suppressed during the suppression period (instead of suppressing only the \"attacker controlled\" log location A)?\r\n\r\nTo make your suggestion clear: could you exemplify what the special log entry at the end of the log suppression period would look like? (A patch or even a separate PR would be even better, but an example log entry would probably clarify enough!)",
      "created_at" : "2021-04-06T08:27:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-813933612",
      "id" : 813933612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxMzkzMzYxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-06T08:27:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/813933612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r608211735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608211735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "this line is tripping up the linter:\r\n```\r\nsrc/test/logging_tests.cpp: Expected 0 argument(s) after format string but found 1 argument(s): LogPrintf(fmt, args...)\r\n```",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-04-06T22:08:27Z",
      "diff_hunk" : "@@ -33,4 +32,109 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n     SetMockTime(0);\n }\n \n+void GetLogFileSize(size_t& size)\n+{\n+    boost::system::error_code ec;\n+    size = fs::file_size(LogInstance().m_file_path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), LogInstance().m_file_path);\n+    BOOST_CHECK(!ec);\n+}\n+\n+template <typename... Args>\n+void LogFromFixedLocation(const char* fmt, const Args&... args)\n+{\n+    LogPrintf(fmt, args...);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r608211735",
      "id" : 608211735,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODIxMTczNQ==",
      "original_commit_id" : "fa114ff2d4b098891569d4f1d67c1e46850cbd5e",
      "original_line" : 46,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 629448028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-16T15:19:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608211735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r613296430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613296430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Both windows CI builds are failing on this line. See [cirrus](https://cirrus-ci.com/task/6258137339527168?logs=ci#L642).",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-04-14T14:26:09Z",
      "diff_hunk" : "@@ -33,4 +32,108 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n     SetMockTime(0);\n }\n \n+void GetLogFileSize(size_t& size)\n+{\n+    boost::system::error_code ec;\n+    size = fs::file_size(LogInstance().m_file_path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), LogInstance().m_file_path);\n+    BOOST_CHECK(!ec);\n+}\n+\n+void LogFromFixedLocation(const std::string& str)\n+{\n+    LogPrintf(\"%s\\n\", str);\n+}\n+\n+BOOST_AUTO_TEST_CASE(rate_limiting)\n+{\n+    // This allows us to check for exact size differences in the log file.\n+    bool prev_log_timestamps = LogInstance().m_log_sourcelocations;\n+    LogInstance().m_log_timestamps = false;\n+    bool prev_log_sourcelocations = LogInstance().m_log_sourcelocations;\n+    LogInstance().m_log_sourcelocations = false;\n+    bool prev_log_threadnames = LogInstance().m_log_threadnames;\n+    LogInstance().m_log_threadnames = false;\n+\n+    // A string containing 1023 bytes.\n+    std::string s1023(1023, 'a');\n+\n+    SetMockTime(std::chrono::seconds{1});\n+\n+    size_t prev_log_file_size, curr_log_file_size;\n+    GetLogFileSize(prev_log_file_size);\n+\n+    // Log 1 MiB, this should be allowed.\n+    for (int i = 0; i < 1024; ++i) {\n+        LogFromFixedLocation(s1023);\n+    }\n+    GetLogFileSize(curr_log_file_size);\n+    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 1024 * 1024);\n+\n+    LogFromFixedLocation(\"This should trigger rate limiting\");\n+    GetLogFileSize(prev_log_file_size);\n+\n+    // Log 0.5 MiB, this should not be allowed and all messages should be dropped.\n+    for (int i = 0; i < 512; ++i) {\n+        LogFromFixedLocation(s1023);\n+    }\n+    GetLogFileSize(curr_log_file_size);\n+    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 0);\n+\n+    // Let one hour pass.\n+    SetMockTime(std::chrono::seconds{60 * 60 + 1});\n+    LogFromFixedLocation(\"This should trigger the quota usage reset\");\n+    GetLogFileSize(prev_log_file_size);\n+\n+    // Log 1 MiB, this should be allowed since the usage was reset.\n+    for (int i = 0; i < 1024; ++i) {\n+        LogFromFixedLocation(s1023);\n+    }\n+    GetLogFileSize(curr_log_file_size);\n+    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 1024 * 1024);\n+\n+    LogFromFixedLocation(\"This should trigger rate limiting\");\n+    GetLogFileSize(prev_log_file_size);\n+\n+    // Log 1 MiB, this should not be allowed and all messages should be dropped.\n+    for (int i = 0; i < 1024; ++i) {\n+        LogFromFixedLocation(s1023);\n+    }\n+    GetLogFileSize(curr_log_file_size);\n+    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 0);\n+\n+    LogFromFixedLocation(\"This should also be dropped and bring the total of dropped bytes above 1 MiB.\");\n+    GetLogFileSize(curr_log_file_size);\n+    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 0);\n+\n+    // Let another hour pass\n+    SetMockTime(std::chrono::seconds{2 * (60 * 60 + 1)});\n+    LogFromFixedLocation(\"Normally this would reset the usage but it does not because we dropped more than 1 MiB in the previous hour.\");\n+    GetLogFileSize(prev_log_file_size);\n+\n+    // Log 1 MiB, this should not be allowed and all messages should be dropped.\n+    for (int i = 0; i < 1024; ++i) {\n+        LogFromFixedLocation(s1023);\n+    }\n+    GetLogFileSize(curr_log_file_size);\n+    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 0);\n+\n+    // Let another hour pass\n+    SetMockTime(std::chrono::seconds{3 * (60 * 60 + 1)});\n+    LogFromFixedLocation(\"This should trigger the quota usage reset\");\n+    GetLogFileSize(prev_log_file_size);\n+\n+    // Log 1 MiB, this should be allowed since the usage was reset.\n+    for (int i = 0; i < 1024; ++i) {\n+        LogFromFixedLocation(s1023);\n+    }\n+    GetLogFileSize(curr_log_file_size);\n+    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 1024 * 1024);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r613296430",
      "id" : 613296430,
      "line" : 136,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzI5NjQzMA==",
      "original_commit_id" : "1653167de64b15df306158d0d2e9bef9c8bea79e",
      "original_line" : 136,
      "original_position" : 108,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : 107,
      "pull_request_review_id" : 635686766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-04-16T15:19:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613296430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@dergoegge \r\n\r\nThanks for your work on this PR!\r\n\r\nWould you be willing to implement also @jnewbery's suggestions as a separate PR?\r\n\r\nI tried to summarise his suggestion in https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-813933612. I'm not certain I got it right though - @jnewbery, feel free to chime in :)\r\n\r\nI think it makes sense to do it as separate PR since it deviates in important ways from the original suggestion. By having two separate PRs we would see which of the two approaches to address this type of attack that have consensus support.\r\n\r\nPersonally I think I could live with both approaches: as long as we kill the disk-fill-via-logging bug class sooner rather than later I'm happy :)",
      "created_at" : "2021-04-16T04:09:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-820891905",
      "id" : 820891905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMDg5MTkwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-16T04:09:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820891905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Would you be willing to implement also jnewbery's suggestions as a separate PR?\r\n\r\n@practicalswift Sure, thats a good idea :)\r\n",
      "created_at" : "2021-04-16T12:25:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-821138307",
      "id" : 821138307,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMTEzODMwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-16T12:25:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/821138307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "concept ACK (not that I'm sure if my opinion is relevant) and I think this makes more sense than the global alternative.",
      "created_at" : "2021-04-17T09:45:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-821797545",
      "id" : 821797545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyMTc5NzU0NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-17T09:45:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/821797545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "node_id" : "MDQ6VXNlcjE1MzAyODM=",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-04-23T09:36:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-825534545",
      "id" : 825534545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgyNTUzNDU0NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-23T09:36:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825534545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nðµï¸ @sipa has been requested to review this pull request as specified in the REVIEWERS file.",
      "created_at" : "2021-05-03T09:32:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-831141878",
      "id" : 831141878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzMTE0MTg3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-03T09:32:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831141878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-06-12T04:41:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-859997363",
      "id" : 859997363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1OTk5NzM2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-12T04:41:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859997363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@dergoegge Thanks for working on this. Would you mind rebasing? I would like to review the updated version :)",
      "created_at" : "2021-06-12T08:04:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-860018394",
      "id" : 860018394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MDAxODM5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-12T08:04:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860018394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift Rebased :)\r\n\r\nFor anyone reviewing this: I made a rpc [here](https://github.com/dergoegge/bitcoin/commit/8e6d15d6be06834d1f634f4a54ea646be8bc3491) that can log excessive amounts of \"a\"s from different locations which might be useful for testing.\r\n`bitcoin-cli excessivelog <location (1-5)> <num_bytes>`\r\n\r\nâ ï¸One thing to note with that rpc is that the rate limiting logic still prints the last message that triggered the limiting to disk, so something like `bitcoin-cli excessivelog 1 536870912` would still log ~512MiB to disk. Logging to console is also never suppressed (unless -printtoconsole=0)  â ï¸\r\n\r\nA simple example to use the rpc:\r\n```bash\r\nbitcoin-cli excessivelog 1 1048500 # log just under 1MiB\r\nbitcoin-cli excessivelog 1 100 # this should get the total amount logged above 1MiB and the rate limiting logic should kick in\r\n```",
      "created_at" : "2021-06-12T11:02:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-860037566",
      "id" : 860037566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MDAzNzU2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-12T11:02:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860037566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "concept ACK \r\nI think this PR makes more sense than the global alternative, because global rate limiting would open another attack vector.\r\nAn attacker could trigger the global limit in one category and conceal another attack from the log.",
      "created_at" : "2021-06-16T17:01:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-862552556",
      "id" : 862552556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MjU1MjU1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-16T17:01:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862552556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1223908?v=4",
         "events_url" : "https://api.github.com/users/Emzy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Emzy/followers",
         "following_url" : "https://api.github.com/users/Emzy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Emzy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Emzy",
         "id" : 1223908,
         "login" : "Emzy",
         "node_id" : "MDQ6VXNlcjEyMjM5MDg=",
         "organizations_url" : "https://api.github.com/users/Emzy/orgs",
         "received_events_url" : "https://api.github.com/users/Emzy/received_events",
         "repos_url" : "https://api.github.com/users/Emzy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Emzy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Emzy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Emzy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I moved the rate limiting logic into its own method.\r\n[log_ratelimiting.0](https://github.com/dergoegge/bitcoin/tree/log_ratelimiting.0) -> [log_ratelimiting.1](https://github.com/dergoegge/bitcoin/tree/log_ratelimiting.1)\r\n\r\n<details>\r\n<summary>git range-diff master log_ratelimiting.0 log_ratelimiting.1</summary>\r\n\r\n```\r\n1:  76c59a1cc ! 1:  a3a2cfd64 log: Mitigate disk filling attacks by rate limiting LogPrintf\r\n    @@ Metadata\r\n      ## Commit message ##\r\n         log: Mitigate disk filling attacks by rate limiting LogPrintf\r\n     \r\n    +    Co-authored-by: dergoegge <n.goeggi@gmail.com>\r\n    +\r\n      ## src/init/common.cpp ##\r\n     @@ src/init/common.cpp: void AddLoggingArgs(ArgsManager& argsman)\r\n          argsman.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\r\n    @@ src/logging.cpp: namespace BCLog {\r\n     -void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line)\r\n     +static constexpr uint64_t HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION{1024 * 1024};\r\n     +\r\n    ++bool BCLog::Logger::RateLimit(std::string& str, const std::string& logging_function, const SourceLocation& source_location)\r\n    ++{\r\n    ++    if (!m_rate_limiting) {\r\n    ++        // Rate limiting is disabled.\r\n    ++        return false;\r\n    ++    }\r\n    ++\r\n    ++    const std::chrono::seconds now = GetTime<std::chrono::seconds>();\r\n    ++    QuotaUsage& quota_usage = m_quota_usage_per_source_location[source_location];\r\n    ++    // Is the quota exceeded before this log call?\r\n    ++    bool quota_exceeded_before = quota_usage.m_bytes_logged > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\r\n    ++\r\n    ++    bool dont_skip = false;\r\n    ++    // Every hour the quota usage for a source location is reset.\r\n    ++    if ((now - quota_usage.m_last_reset) > std::chrono::hours{1}) {\r\n    ++        // Should logging to disk continue to be disabled?\r\n    ++        bool quota_still_exceeded = quota_usage.m_bytes_dropped > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\r\n    ++\r\n    ++        if (quota_still_exceeded) {\r\n    ++            str = LogTimestampStr(strprintf(\r\n    ++                \"Not restarting logging from %s:%d (%s): \"\r\n    ++                \"because %d messages (%d MiB) were dropped during the last hour which still exceeds the limit of %d MiB.\\n\",\r\n    ++                source_location.first, source_location.second, logging_function, quota_usage.m_messages_dropped,\r\n    ++                quota_usage.m_bytes_dropped / (1024 * 1024), HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION / (1024 * 1024)));\r\n    ++        } else if (quota_exceeded_before) {\r\n    ++            str = LogTimestampStr(strprintf(\r\n    ++                \"Restarting logging from %s:%d (%s): \"\r\n    ++                \"%d messages (%d MiB) were dropped during the last hour.\\n\"\r\n    ++                \"%s\",\r\n    ++                source_location.first, source_location.second, logging_function, quota_usage.m_messages_dropped,\r\n    ++                quota_usage.m_bytes_dropped / (1024 * 1024), str));\r\n    ++            --m_rate_limited_locations;\r\n    ++        }\r\n    ++\r\n    ++        // Dont skip the reset logs.\r\n    ++        dont_skip = quota_exceeded_before || quota_still_exceeded;\r\n    ++\r\n    ++        // Logging to disk is only re-enabled if the number of dropped bytes did not exceed the limit.\r\n    ++        if (!quota_still_exceeded) quota_usage.m_bytes_logged = 0;\r\n    ++        quota_usage.m_messages_dropped = 0;\r\n    ++        quota_usage.m_bytes_dropped = 0;\r\n    ++        quota_usage.m_last_reset = now;\r\n    ++    }\r\n    ++\r\n    ++    if (!quota_exceeded_before) quota_usage.m_bytes_logged += str.size();\r\n    ++\r\n    ++    bool quota_exceeded_after = quota_usage.m_bytes_logged > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\r\n    ++    if (!quota_exceeded_after) {\r\n    ++        // The limits were not exceeded and the message should not be dropped.\r\n    ++        return false;\r\n    ++    }\r\n    ++\r\n    ++    if (!quota_exceeded_before) {\r\n    ++        str = LogTimestampStr(strprintf(\r\n    ++            \"Excessive logging detected from %s:%d (%s): \"\r\n    ++            \">%d MiB logged during the last hour. \"\r\n    ++            \"Suppressing logging to disk from this source location for up to one hour. \"\r\n    ++            \"Console logging unaffected. Last log entry: %s\",\r\n    ++            source_location.first, source_location.second, logging_function,\r\n    ++            HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION / (1024 * 1024), str));\r\n    ++        ++m_rate_limited_locations;\r\n    ++    } else if (!dont_skip) {\r\n    ++        // The log message should be dropped.\r\n    ++        quota_usage.m_messages_dropped++;\r\n    ++        quota_usage.m_bytes_dropped += str.size();\r\n    ++        return true;\r\n    ++    }\r\n    ++\r\n    ++    return false;\r\n    ++}\r\n    ++\r\n     +void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const SourceLocation& source_location, const bool skip_disk_usage_rate_limiting)\r\n      {\r\n          StdLockGuard scoped_lock(m_cs);\r\n    @@ src/logging.cpp: void BCLog::Logger::LogPrintStr(const std::string& str, const s\r\n      \r\n     +    // Rate limit logging to disk to avoid disk filling attacks.\r\n     +    bool skip_writing_to_disk_due_to_rate_limiting{false};\r\n    -+    if (!skip_disk_usage_rate_limiting && m_rate_limiting) {\r\n    -+        const std::chrono::seconds now = GetTime<std::chrono::seconds>();\r\n    -+        QuotaUsage& quota_usage = m_quota_usage_per_source_location[source_location];\r\n    -+        // Is the quota exceeded before this log call?\r\n    -+        bool quota_exceeded_before = quota_usage.m_bytes_logged > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\r\n    -+\r\n    -+        bool dont_skip = false;\r\n    -+        // Every hour the quota usage for a source location is reset.\r\n    -+        if ((now - quota_usage.m_last_reset) > std::chrono::hours{1}) {\r\n    -+            // Should logging to disk continue to be disabled?\r\n    -+            bool quota_still_exceeded = quota_usage.m_bytes_dropped > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\r\n    -+\r\n    -+            if (quota_still_exceeded) {\r\n    -+                str_prefixed = LogTimestampStr(strprintf(\"Not restarting logging from %s:%d (%s): because %d messages (%d MiB) were dropped during the last hour which still exceeds the limit of %d MiB.\\n\", source_location.first, source_location.second, logging_function, quota_usage.m_messages_dropped, quota_usage.m_bytes_dropped / (1024 * 1024), HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION / (1024 * 1024)));\r\n    -+            } else if (quota_exceeded_before) {\r\n    -+                str_prefixed = LogTimestampStr(strprintf(\"Restarting logging from %s:%d (%s): %d messages (%d MiB) were dropped during the last hour.\\n\", source_location.first, source_location.second, logging_function, quota_usage.m_messages_dropped, quota_usage.m_bytes_dropped / (1024 * 1024)));\r\n    -+            }\r\n    -+\r\n    -+            // Dont skip the reset logs.\r\n    -+            dont_skip = quota_exceeded_before || quota_still_exceeded;\r\n    -+\r\n    -+            // Logging to disk is only re-enabled if the number of dropped bytes did not exceed the limit.\r\n    -+            if (!quota_still_exceeded) quota_usage.m_bytes_logged = 0;\r\n    -+            quota_usage.m_messages_dropped = 0;\r\n    -+            quota_usage.m_bytes_dropped = 0;\r\n    -+            quota_usage.m_last_reset = now;\r\n    -+        }\r\n    ++    if (!skip_disk_usage_rate_limiting) {\r\n    ++        skip_writing_to_disk_due_to_rate_limiting = RateLimit(str_prefixed, logging_function, source_location);\r\n    ++    }\r\n     +\r\n    -+        if (!quota_exceeded_before) quota_usage.m_bytes_logged += str_prefixed.size();\r\n    -+\r\n    -+        bool quota_exceeded_after = quota_usage.m_bytes_logged > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\r\n    -+        if (quota_exceeded_after) {\r\n    -+            if (!quota_exceeded_before) {\r\n    -+                str_prefixed = LogTimestampStr(strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour. Suppressing logging to disk from this source location for up to one hour. Console logging unaffected. Last log entry: %s\", source_location.first, source_location.second, logging_function, HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION / (1024 * 1024), str_prefixed));\r\n    -+            } else if (!dont_skip) {\r\n    -+                skip_writing_to_disk_due_to_rate_limiting = !dont_skip;\r\n    -+                quota_usage.m_messages_dropped++;\r\n    -+                quota_usage.m_bytes_dropped += str_prefixed.size();\r\n    -+            }\r\n    -+        }\r\n    ++    if (m_rate_limited_locations > 0) {\r\n    ++        str_prefixed.insert(0, \"[*] \");\r\n     +    }\r\n     +\r\n          m_started_new_line = !str.empty() && str[str.size()-1] == '\\n';\r\n    @@ src/logging.h: namespace BCLog {\r\n              std::list<std::string> m_msgs_before_open GUARDED_BY(m_cs);\r\n              bool m_buffering GUARDED_BY(m_cs) = true; //!< Buffer messages before logging can be started.\r\n     +        std::unordered_map<SourceLocation, QuotaUsage, SourceLocationHasher> m_quota_usage_per_source_location GUARDED_BY(m_cs);\r\n    ++        std::atomic_int m_rate_limited_locations;\r\n      \r\n              /**\r\n               * m_started_new_line is a state variable that will suppress printing of\r\n    @@ src/logging.h: namespace BCLog {\r\n              fs::path m_file_path;\r\n              std::atomic<bool> m_reopen_file{false};\r\n      \r\n    ++        /** Evaluate if a log message should not be printed to disk.\r\n    ++         *\r\n    ++         * @param[in,out] The log message.\r\n    ++         *                The rate limiting logic message may change the message\r\n    ++         *                to signal the start or end of a supression period.\r\n    ++         * @param[in]     The function from which the log message originated.\r\n    ++         * @param[in]     The source location from which the log message originated.\r\n    ++         */\r\n    ++        bool RateLimit(std::string& str, const std::string& logging_function, const SourceLocation& source_location) EXCLUSIVE_LOCKS_REQUIRED(m_cs);\r\n    ++\r\n              /** Send a string to the log output */\r\n     -        void LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line);\r\n     +        void LogPrintStr(const std::string& str, const std::string& logging_function, const SourceLocation& source_location, const bool skip_disk_usage_rate_limiting);\r\n2:  855d05e43 = 2:  5b46965aa test: Add logging test for rate limiting\r\n```\r\n</details>\r\n\r\nI also decided to move forward with the approach in this PR and will close #21706. See the updated PR description for reasoning.",
      "created_at" : "2021-06-17T19:07:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-863494151",
      "id" : 863494151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MzQ5NDE1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-17T19:07:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863494151",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nMaybe it would be good to set m_last_reset to the current time when it start limiting so it takes 1 hour until the next reset?",
      "created_at" : "2021-06-19T12:48:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-864401970",
      "id" : 864401970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDQwMTk3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-19T12:48:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864401970",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12678227?v=4",
         "events_url" : "https://api.github.com/users/Thoragh/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Thoragh/followers",
         "following_url" : "https://api.github.com/users/Thoragh/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Thoragh/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Thoragh",
         "id" : 12678227,
         "login" : "Thoragh",
         "node_id" : "MDQ6VXNlcjEyNjc4MjI3",
         "organizations_url" : "https://api.github.com/users/Thoragh/orgs",
         "received_events_url" : "https://api.github.com/users/Thoragh/received_events",
         "repos_url" : "https://api.github.com/users/Thoragh/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Thoragh/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Thoragh/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Thoragh"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Maybe it would be good to set m_last_reset to the current time when it start limiting so it takes 1 hour until the next reset?\r\n\r\n@Thoragh Thanks for the suggestion, Im gonna test that out. It might make sense to do but it does make the approach a bit more conservative because a source location might have to wait longer before it can log again (at least 1hour). ",
      "created_at" : "2021-06-20T20:33:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-864608309",
      "id" : 864608309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDYwODMwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-20T20:33:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864608309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655806917"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655806917"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    argsman.AddArg(\"-logratelimiting\", strprintf(\"Rate limit debug logging to disk (default: %u)\", DEFAULT_LOGRATELIMITING), ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);\r\n```\r\nOptional change; most of the other boolean arguments do specify `ALLOW_ANY`, I don't know why. But since `ALLOW_BOOL` exists, may as well use it -- if nothing else, it documents that the argument is a flag rather than some kind of rate threshold (integer value).",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T01:17:13Z",
      "diff_hunk" : "@@ -76,6 +76,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-logratelimiting\", strprintf(\"Rate limit debug logging to disk (default: %u)\", DEFAULT_LOGRATELIMITING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655806917",
      "id" : 655806917,
      "line" : 79,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTgwNjkxNw==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 79,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : 4,
      "pull_request_review_id" : 688980292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T06:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655806917",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655865672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655865672"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n\r\n    // Log 1024-character lines (1023 plus newline) to make the math simple.\r\n```",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T04:25:14Z",
      "diff_hunk" : "@@ -30,4 +30,115 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n     BOOST_CHECK_EQUAL(micro_timer.LogMsg(\"test micros\"), \"tests: test micros (1000000.00Î¼s)\");\n }\n \n+void GetLogFileSize(size_t& size)\n+{\n+    boost::system::error_code ec;\n+    size = fs::file_size(LogInstance().m_file_path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), LogInstance().m_file_path);\n+    BOOST_CHECK(!ec);\n+}\n+\n+void LogFromFixedLocation(const std::string& str)\n+{\n+    LogPrintf(\"%s\\n\", str);\n+}\n+\n+BOOST_AUTO_TEST_CASE(rate_limiting)\n+{\n+#if defined(_WIN32)\n+    // TODO\n+    // Since windows prints \\r\\n to file instead of \\n, the log file size\n+    // does not match up with the internal \"bytes logged\" count.\n+    // This test relies on matching file sizes with expected values.\n+    return;\n+#endif\n+\n+    // This allows us to check for exact size differences in the log file.\n+    bool prev_log_timestamps = LogInstance().m_log_sourcelocations;\n+    LogInstance().m_log_timestamps = false;\n+    bool prev_log_sourcelocations = LogInstance().m_log_sourcelocations;\n+    LogInstance().m_log_sourcelocations = false;\n+    bool prev_log_threadnames = LogInstance().m_log_threadnames;\n+    LogInstance().m_log_threadnames = false;\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655865672",
      "id" : 655865672,
      "line" : 63,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTg2NTY3Mg==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 63,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : 34,
      "pull_request_review_id" : 688980292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T06:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655865672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655885112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655885112"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\nsize_t GetLogFileSize()\r\n```",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T05:24:44Z",
      "diff_hunk" : "@@ -30,4 +30,115 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n     BOOST_CHECK_EQUAL(micro_timer.LogMsg(\"test micros\"), \"tests: test micros (1000000.00Î¼s)\");\n }\n \n+void GetLogFileSize(size_t& size)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655885112",
      "id" : 655885112,
      "line" : 33,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTg4NTExMg==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 33,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : 4,
      "pull_request_review_id" : 688980292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T06:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655885112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655888433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655888433"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I would prefer `struct` here to `std::pair`. I think `pair` should be used in situations where two items are grouped together for some deep, fundamental reason, for example, a map key and its value. If you just happen to want to combine two things, but later it could be (say) three, then I think a `struct` is better. Also, it's easier to read, `location.file` and `location.line`.",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T05:33:15Z",
      "diff_hunk" : "@@ -32,6 +38,23 @@ struct LogCategory {\n     bool active;\n };\n \n+// Replace with std::source_location when switching to C++20.\n+using SourceLocation = std::pair<const char*, int>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655888433",
      "id" : 655888433,
      "line" : 42,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTg4ODQzMw==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 42,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 35,
      "pull_request_review_id" : 688980292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T06:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655888433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655890465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655890465"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems like this doesn't need to be atomic.",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T05:38:45Z",
      "diff_hunk" : "@@ -70,6 +93,8 @@ namespace BCLog {\n         FILE* m_fileout GUARDED_BY(m_cs) = nullptr;\n         std::list<std::string> m_msgs_before_open GUARDED_BY(m_cs);\n         bool m_buffering GUARDED_BY(m_cs) = true; //!< Buffer messages before logging can be started.\n+        std::unordered_map<SourceLocation, QuotaUsage, SourceLocationHasher> m_quota_usage_per_source_location GUARDED_BY(m_cs);\n+        std::atomic_int m_rate_limited_locations;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655890465",
      "id" : 655890465,
      "line" : 97,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTg5MDQ2NQ==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 97,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 59,
      "pull_request_review_id" : 688980292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T06:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655890465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655903333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655903333"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's this for? Maybe add a comment.",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T06:08:36Z",
      "diff_hunk" : "@@ -254,6 +327,16 @@ void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& loggi\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n+    // Rate limit logging to disk to avoid disk filling attacks.\n+    bool skip_writing_to_disk_due_to_rate_limiting{false};\n+    if (!skip_disk_usage_rate_limiting) {\n+        skip_writing_to_disk_due_to_rate_limiting = RateLimit(str_prefixed, logging_function, source_location);\n+    }\n+\n+    if (m_rate_limited_locations > 0) {\n+        str_prefixed.insert(0, \"[*] \");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655903333",
      "id" : 655903333,
      "line" : 337,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTkwMzMzMw==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 337,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 100,
      "pull_request_review_id" : 688980292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T06:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655903333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655906309"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655906309"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Comment needed describing what this function does at a high level and documenting the return value.",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T06:14:54Z",
      "diff_hunk" : "@@ -239,13 +239,86 @@ namespace BCLog {\n     }\n }\n \n-void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line)\n+static constexpr uint64_t HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION{1024 * 1024};\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655906309",
      "id" : 655906309,
      "line" : 243,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTkwNjMwOQ==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 243,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 6,
      "pull_request_review_id" : 688980292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T06:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655906309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655912029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655912029"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Consider moving this down to just before it's needed.",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T06:26:45Z",
      "diff_hunk" : "@@ -254,6 +327,16 @@ void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& loggi\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n+    // Rate limit logging to disk to avoid disk filling attacks.\n+    bool skip_writing_to_disk_due_to_rate_limiting{false};\n+    if (!skip_disk_usage_rate_limiting) {\n+        skip_writing_to_disk_due_to_rate_limiting = RateLimit(str_prefixed, logging_function, source_location);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655912029",
      "id" : 655912029,
      "line" : 334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTkxMjAyOQ==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 334,
      "original_position" : 97,
      "original_start_line" : 331,
      "path" : "src/logging.cpp",
      "position" : 97,
      "pull_request_review_id" : 688980292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : 331,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-22T06:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655912029",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655915216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655915216"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure it's worth creating this variable `skip_writing_to_disk_due_to_rate_limiting`, maybe:\r\n```\r\nif (m_print_to_file && (skip_disk_usage_rate_limiting || !RateLimit(str_prefixed, logging_function, source_location))) {\r\n```",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T06:32:53Z",
      "diff_hunk" : "@@ -270,7 +353,7 @@ void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& loggi\n     for (const auto& cb : m_print_callbacks) {\n         cb(str_prefixed);\n     }\n-    if (m_print_to_file) {\n+    if (m_print_to_file && !skip_writing_to_disk_due_to_rate_limiting) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655915216",
      "id" : 655915216,
      "line" : 356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTkxNTIxNg==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 356,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 111,
      "pull_request_review_id" : 688980292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T06:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655915216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655933116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655933116"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point. I think the more specific ones were added later and the idea is to prefer using them for new code.",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T07:04:12Z",
      "diff_hunk" : "@@ -76,6 +76,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-logratelimiting\", strprintf(\"Rate limit debug logging to disk (default: %u)\", DEFAULT_LOGRATELIMITING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r655933116",
      "id" : 655933116,
      "in_reply_to_id" : 655806917,
      "line" : 79,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTkzMzExNg==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 79,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : 4,
      "pull_request_review_id" : 689130292,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T07:04:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655933116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r656316492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/656316492"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If i understand the code correctly, `dont_skip` is used to make sure the hourly reset messages are printed.\r\nMaybe the code could be simplified by removing `dont_skip` and calling `LogPrintf` instead for the hourly messages?\r\n",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-22T15:08:18Z",
      "diff_hunk" : "@@ -239,13 +239,86 @@ namespace BCLog {\n     }\n }\n \n-void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line)\n+static constexpr uint64_t HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION{1024 * 1024};\n+\n+bool BCLog::Logger::RateLimit(std::string& str, const std::string& logging_function, const SourceLocation& source_location)\n+{\n+    if (!m_rate_limiting) {\n+        // Rate limiting is disabled.\n+        return false;\n+    }\n+\n+    const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n+    QuotaUsage& quota_usage = m_quota_usage_per_source_location[source_location];\n+    // Is the quota exceeded before this log call?\n+    bool quota_exceeded_before = quota_usage.m_bytes_logged > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\n+\n+    bool dont_skip = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r656316492",
      "id" : 656316492,
      "line" : 256,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NjMxNjQ5Mg==",
      "original_commit_id" : "01ba3285d40ca70e14e7b8664f98135c55b280a6",
      "original_line" : 256,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 19,
      "pull_request_review_id" : 689639316,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-22T15:08:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/656316492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12678227?v=4",
         "events_url" : "https://api.github.com/users/Thoragh/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Thoragh/followers",
         "following_url" : "https://api.github.com/users/Thoragh/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Thoragh/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Thoragh",
         "id" : 12678227,
         "login" : "Thoragh",
         "node_id" : "MDQ6VXNlcjEyNjc4MjI3",
         "organizations_url" : "https://api.github.com/users/Thoragh/orgs",
         "received_events_url" : "https://api.github.com/users/Thoragh/received_events",
         "repos_url" : "https://api.github.com/users/Thoragh/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Thoragh/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Thoragh/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Thoragh"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r657510892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/657510892"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We want the rate limiting messages like \"restarting logging from...\" to also be printed to the console, so we have to call `RateLimit` before that and store the result. I am still gonna change the name of `skip_writing_to_disk_due_to_rate_limiting` because its a bit long.",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-23T22:50:38Z",
      "diff_hunk" : "@@ -270,7 +353,7 @@ void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& loggi\n     for (const auto& cb : m_print_callbacks) {\n         cb(str_prefixed);\n     }\n-    if (m_print_to_file) {\n+    if (m_print_to_file && !skip_writing_to_disk_due_to_rate_limiting) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r657510892",
      "id" : 657510892,
      "in_reply_to_id" : 655915216,
      "line" : 356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzUxMDg5Mg==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 356,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 111,
      "pull_request_review_id" : 691205788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-23T22:50:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/657510892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r657518350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/657518350"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That is correct!\r\nBut this does unfortunately not work because we hold a lock here https://github.com/bitcoin/bitcoin/blob/a2916ae5043436d3fd22acb44c5663227fa7eb90/src/logging.cpp#L317\r\n\r\nA recursive call to `LogPrintf` also feels a bit dangerous to me.",
      "commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "created_at" : "2021-06-23T23:10:42Z",
      "diff_hunk" : "@@ -239,13 +239,86 @@ namespace BCLog {\n     }\n }\n \n-void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line)\n+static constexpr uint64_t HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION{1024 * 1024};\n+\n+bool BCLog::Logger::RateLimit(std::string& str, const std::string& logging_function, const SourceLocation& source_location)\n+{\n+    if (!m_rate_limiting) {\n+        // Rate limiting is disabled.\n+        return false;\n+    }\n+\n+    const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n+    QuotaUsage& quota_usage = m_quota_usage_per_source_location[source_location];\n+    // Is the quota exceeded before this log call?\n+    bool quota_exceeded_before = quota_usage.m_bytes_logged > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\n+\n+    bool dont_skip = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r657518350",
      "id" : 657518350,
      "in_reply_to_id" : 656316492,
      "line" : 256,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzUxODM1MA==",
      "original_commit_id" : "01ba3285d40ca70e14e7b8664f98135c55b280a6",
      "original_line" : 256,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 19,
      "pull_request_review_id" : 691214683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-23T23:10:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/657518350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[`log_ratelimiting.2`](https://github.com/dergoegge/bitcoin/tree/log_ratelimiting.2) -> [`log_ratelimiting.3`](https://github.com/dergoegge/bitcoin/tree/log_ratelimiting.3)\r\n\r\n<details>\r\n<summary>git range-diff log_ratelimiting.2...log_ratelimiting.3</summary>\r\n\r\n```c++\r\n1:  01ba3285d ! 1:  2cab018d9 log: Mitigate disk filling attacks by rate limiting LogPrintf\r\n    @@ src/init/common.cpp: void AddLoggingArgs(ArgsManager& argsman)\r\n          argsman.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\r\n          argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n          argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\r\n    -+    argsman.AddArg(\"-logratelimiting\", strprintf(\"Rate limit debug logging to disk (default: %u)\", DEFAULT_LOGRATELIMITING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\r\n    ++    argsman.AddArg(\"-logratelimiting\", strprintf(\"Rate limit debug logging to disk (default: %u)\", DEFAULT_LOGRATELIMITING), ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);\r\n      }\r\n      \r\n      void SetLoggingOptions(const ArgsManager& args)\r\n    @@ src/logging.cpp: namespace BCLog {\r\n     +            str = LogTimestampStr(strprintf(\r\n     +                \"Not restarting logging from %s:%d (%s): \"\r\n     +                \"because %d messages (%d MiB) were dropped during the last hour which still exceeds the limit of %d MiB.\\n\",\r\n    -+                source_location.first, source_location.second, logging_function, quota_usage.m_messages_dropped,\r\n    ++                source_location.m_file, source_location.m_line, logging_function, quota_usage.m_messages_dropped,\r\n     +                quota_usage.m_bytes_dropped / (1024 * 1024), HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION / (1024 * 1024)));\r\n     +        } else if (quota_exceeded_before) {\r\n     +            str = LogTimestampStr(strprintf(\r\n     +                \"Restarting logging from %s:%d (%s): \"\r\n     +                \"%d messages (%d MiB) were dropped during the last hour.\\n\"\r\n     +                \"%s\",\r\n    -+                source_location.first, source_location.second, logging_function, quota_usage.m_messages_dropped,\r\n    ++                source_location.m_file, source_location.m_line, logging_function, quota_usage.m_messages_dropped,\r\n     +                quota_usage.m_bytes_dropped / (1024 * 1024), str));\r\n     +            --m_rate_limited_locations;\r\n     +        }\r\n    @@ src/logging.cpp: namespace BCLog {\r\n     +            \">%d MiB logged during the last hour. \"\r\n     +            \"Suppressing logging to disk from this source location for up to one hour. \"\r\n     +            \"Console logging unaffected. Last log entry: %s\",\r\n    -+            source_location.first, source_location.second, logging_function,\r\n    ++            source_location.m_file, source_location.m_line, logging_function,\r\n     +            HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION / (1024 * 1024), str));\r\n     +        ++m_rate_limited_locations;\r\n     +    } else if (!dont_skip) {\r\n    @@ src/logging.cpp: namespace BCLog {\r\n      \r\n          if (m_log_sourcelocations && m_started_new_line) {\r\n     -        str_prefixed.insert(0, \"[\" + RemovePrefix(source_file, \"./\") + \":\" + ToString(source_line) + \"] [\" + logging_function + \"] \");\r\n    -+        str_prefixed.insert(0, \"[\" + RemovePrefix(source_location.first, \"./\") + \":\" + ToString(source_location.second) + \"] [\" + logging_function + \"] \");\r\n    ++        str_prefixed.insert(0, \"[\" + RemovePrefix(source_location.m_file, \"./\") + \":\" + ToString(source_location.m_line) + \"] [\" + logging_function + \"] \");\r\n          }\r\n      \r\n          if (m_log_threadnames && m_started_new_line) {\r\n    @@ src/logging.cpp: void BCLog::Logger::LogPrintStr(const std::string& str, const s\r\n          str_prefixed = LogTimestampStr(str_prefixed);\r\n      \r\n     +    // Rate limit logging to disk to avoid disk filling attacks.\r\n    -+    bool skip_writing_to_disk_due_to_rate_limiting{false};\r\n    -+    if (!skip_disk_usage_rate_limiting) {\r\n    -+        skip_writing_to_disk_due_to_rate_limiting = RateLimit(str_prefixed, logging_function, source_location);\r\n    -+    }\r\n    ++    bool log_quota_exceeded = !skip_disk_usage_rate_limiting &&\r\n    ++                              RateLimit(str_prefixed, logging_function, source_location);\r\n     +\r\n    ++    // To avoid confusion caused by dropped log messages when debugging an issue, we prefix log lines with \"[*]\"\r\n    ++    // when there are any supressed source locations.\r\n     +    if (m_rate_limited_locations > 0) {\r\n     +        str_prefixed.insert(0, \"[*] \");\r\n     +    }\r\n    @@ src/logging.cpp: void BCLog::Logger::LogPrintStr(const std::string& str, const s\r\n              cb(str_prefixed);\r\n          }\r\n     -    if (m_print_to_file) {\r\n    -+    if (m_print_to_file && !skip_writing_to_disk_due_to_rate_limiting) {\r\n    ++    if (m_print_to_file && !log_quota_exceeded) {\r\n              assert(m_fileout != nullptr);\r\n      \r\n              // reopen the log file, if requested\r\n    @@ src/logging.h: struct LogCategory {\r\n      };\r\n      \r\n     +// Replace with std::source_location when switching to C++20.\r\n    -+using SourceLocation = std::pair<const char*, int>;\r\n    ++struct SourceLocation {\r\n    ++    const char* m_file{nullptr};\r\n    ++    int m_line{0};\r\n    ++\r\n    ++    bool operator==(const SourceLocation& other) const\r\n    ++    {\r\n    ++        return m_file && other.m_file &&\r\n    ++               std::strcmp(m_file, other.m_file) == 0 &&\r\n    ++               m_line == other.m_line;\r\n    ++    }\r\n    ++};\r\n    ++\r\n     +struct SourceLocationHasher {\r\n     +    size_t operator()(const SourceLocation& source_location) const noexcept\r\n     +    {\r\n     +        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.\r\n    -+        return static_cast<size_t>(CSipHasher(0, 0).Write(std::hash<const char*>{}(source_location.first)).Write(std::hash<int>{}(source_location.second)).Finalize());\r\n    ++        return static_cast<size_t>(CSipHasher(0, 0).Write(std::hash<const char*>{}(source_location.m_file)).Write(std::hash<int>{}(source_location.m_line)).Finalize());\r\n     +    }\r\n     +};\r\n     +\r\n    @@ src/logging.h: namespace BCLog {\r\n              std::list<std::string> m_msgs_before_open GUARDED_BY(m_cs);\r\n              bool m_buffering GUARDED_BY(m_cs) = true; //!< Buffer messages before logging can be started.\r\n     +        std::unordered_map<SourceLocation, QuotaUsage, SourceLocationHasher> m_quota_usage_per_source_location GUARDED_BY(m_cs);\r\n    -+        std::atomic_int m_rate_limited_locations;\r\n    ++        int m_rate_limited_locations GUARDED_BY(m_cs) = 0;\r\n      \r\n              /**\r\n               * m_started_new_line is a state variable that will suppress printing of\r\n    @@ src/logging.h: namespace BCLog {\r\n      \r\n     +        /** Evaluate if a log message should not be printed to disk.\r\n     +         *\r\n    -+         * @param[in,out] str                 The log message.\r\n    -+         *                                    The rate limiting logic message may change the message\r\n    -+         *                                    to signal the start or end of a supression period.\r\n    -+         * @param[in]     logging_function    The function name from which the log message originated.\r\n    -+         * @param[in]     source_location     The source location from which the log message originated.\r\n    ++         * @param[in,out] str              The log message.\r\n    ++         *                                 The rate limiting logic message may change the message\r\n    ++         *                                 to signal the start or end of a supression period.\r\n    ++         * @param[in]     logging_function The function name from which the log message originated.\r\n    ++         * @param[in]     source_location  The source location from which the log message originated.\r\n    ++         *\r\n    ++         * @return true if the message should not be printed to disk, false otherwise.\r\n     +         */\r\n     +        bool RateLimit(std::string& str, const std::string& logging_function, const SourceLocation& source_location) EXCLUSIVE_LOCKS_REQUIRED(m_cs);\r\n     +\r\n    @@ src/logging.h: static inline void LogPrintf_(const std::string& logging_function\r\n              }\r\n     -        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line);\r\n     +\r\n    -+        const SourceLocation source_location = std::make_pair(source_file, source_line);\r\n    ++        const SourceLocation source_location{source_file, source_line};\r\n     +        LogInstance().LogPrintStr(log_msg, logging_function, source_location, skip_disk_usage_rate_limiting);\r\n          }\r\n      }\r\n2:  a2916ae50 ! 2:  e51bd0bdc test: Add logging test for rate limiting\r\n    @@ src/test/logging_tests.cpp: BOOST_AUTO_TEST_CASE(logging_timer)\r\n          BOOST_CHECK_EQUAL(micro_timer.LogMsg(\"test micros\"), \"tests: test micros (1000000.00Î¼s)\");\r\n      }\r\n      \r\n    -+void GetLogFileSize(size_t& size)\r\n    ++size_t GetLogFileSize()\r\n     +{\r\n     +    boost::system::error_code ec;\r\n    -+    size = fs::file_size(LogInstance().m_file_path, ec);\r\n    ++    size_t size = fs::file_size(LogInstance().m_file_path, ec);\r\n     +    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), LogInstance().m_file_path);\r\n     +    BOOST_CHECK(!ec);\r\n    ++    return size;\r\n     +}\r\n     +\r\n     +void LogFromFixedLocation(const std::string& str)\r\n    @@ src/test/logging_tests.cpp: BOOST_AUTO_TEST_CASE(logging_timer)\r\n     +    bool prev_log_threadnames = LogInstance().m_log_threadnames;\r\n     +    LogInstance().m_log_threadnames = false;\r\n     +\r\n    ++    // Log 1024-character lines (1023 plus newline) to make the math simple.\r\n     +    std::string log_message(1023, 'a');\r\n     +\r\n     +    SetMockTime(std::chrono::seconds{1});\r\n     +\r\n     +    size_t prev_log_file_size, curr_log_file_size;\r\n    -+    GetLogFileSize(prev_log_file_size);\r\n    ++    prev_log_file_size = GetLogFileSize();\r\n     +\r\n     +    // Log 1 MiB, this should be allowed.\r\n     +    for (int i = 0; i < 1024; ++i) {\r\n     +        LogFromFixedLocation(log_message);\r\n     +    }\r\n    -+    GetLogFileSize(curr_log_file_size);\r\n    ++    curr_log_file_size = GetLogFileSize();\r\n     +    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 1024 * 1024);\r\n     +\r\n     +    LogFromFixedLocation(\"This should trigger rate limiting\");\r\n    -+    GetLogFileSize(prev_log_file_size);\r\n    ++    prev_log_file_size = GetLogFileSize();\r\n     +\r\n     +    // Log 0.5 MiB, this should not be allowed and all messages should be dropped.\r\n     +    for (int i = 0; i < 512; ++i) {\r\n     +        LogFromFixedLocation(log_message);\r\n     +    }\r\n    -+    GetLogFileSize(curr_log_file_size);\r\n    ++    curr_log_file_size = GetLogFileSize();\r\n     +    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 0);\r\n     +\r\n     +    // Let one hour pass.\r\n     +    SetMockTime(std::chrono::seconds{60 * 60 + 1});\r\n     +    LogFromFixedLocation(\"This should trigger the quota usage reset\");\r\n    -+    GetLogFileSize(prev_log_file_size);\r\n    ++    prev_log_file_size = GetLogFileSize();\r\n     +\r\n     +    // Log 1 MiB, this should be allowed since the usage was reset.\r\n     +    for (int i = 0; i < 1024; ++i) {\r\n     +        LogFromFixedLocation(log_message);\r\n     +    }\r\n    -+    GetLogFileSize(curr_log_file_size);\r\n    ++    curr_log_file_size = GetLogFileSize();\r\n     +    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 1024 * 1024);\r\n     +\r\n     +    LogFromFixedLocation(\"This should trigger rate limiting\");\r\n    -+    GetLogFileSize(prev_log_file_size);\r\n    ++    prev_log_file_size = GetLogFileSize();\r\n     +\r\n     +    // Log 1 MiB, this should not be allowed and all messages should be dropped.\r\n     +    for (int i = 0; i < 1024; ++i) {\r\n     +        LogFromFixedLocation(log_message);\r\n     +    }\r\n    -+    GetLogFileSize(curr_log_file_size);\r\n    ++    curr_log_file_size = GetLogFileSize();\r\n     +    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 0);\r\n     +\r\n     +    LogFromFixedLocation(\"This should also be dropped and bring the total of dropped bytes above 1 MiB.\");\r\n    -+    GetLogFileSize(curr_log_file_size);\r\n    ++    curr_log_file_size = GetLogFileSize();\r\n     +    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 0);\r\n     +\r\n     +    // Let another hour pass\r\n     +    SetMockTime(std::chrono::seconds{2 * (60 * 60 + 1)});\r\n     +    LogFromFixedLocation(\"Normally this would reset the usage but it does not because we dropped more than 1 MiB in the previous hour.\");\r\n    -+    GetLogFileSize(prev_log_file_size);\r\n    ++    prev_log_file_size = GetLogFileSize();\r\n     +\r\n     +    // Log 1 MiB, this should not be allowed and all messages should be dropped.\r\n     +    for (int i = 0; i < 1024; ++i) {\r\n     +        LogFromFixedLocation(log_message);\r\n     +    }\r\n    -+    GetLogFileSize(curr_log_file_size);\r\n    ++    curr_log_file_size = GetLogFileSize();\r\n     +    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 0);\r\n     +\r\n     +    // Let another hour pass\r\n     +    SetMockTime(std::chrono::seconds{3 * (60 * 60 + 1)});\r\n     +    LogFromFixedLocation(\"This should trigger the quota usage reset\");\r\n    -+    GetLogFileSize(prev_log_file_size);\r\n    ++    prev_log_file_size = GetLogFileSize();\r\n     +\r\n     +    // Log 1 MiB, this should be allowed since the usage was reset.\r\n     +    for (int i = 0; i < 1024; ++i) {\r\n     +        LogFromFixedLocation(log_message);\r\n     +    }\r\n    -+    GetLogFileSize(curr_log_file_size);\r\n    ++    curr_log_file_size = GetLogFileSize();\r\n     +    BOOST_CHECK(curr_log_file_size - prev_log_file_size == 1024 * 1024);\r\n     +\r\n     +    LogInstance().m_log_timestamps = prev_log_timestamps;\r\n\r\n```\r\n\r\n</details>",
      "created_at" : "2021-06-24T15:34:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-867736556",
      "id" : 867736556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NzczNjU1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-24T15:34:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/867736556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r658061925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658061925"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There is a comment in `src/logging.h`.",
      "commit_id" : "e51bd0bdc7ac39ec7354382fe75fc5bdb7695f63",
      "created_at" : "2021-06-24T15:36:50Z",
      "diff_hunk" : "@@ -239,13 +239,86 @@ namespace BCLog {\n     }\n }\n \n-void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line)\n+static constexpr uint64_t HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION{1024 * 1024};\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r658061925",
      "id" : 658061925,
      "in_reply_to_id" : 655906309,
      "line" : 243,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1ODA2MTkyNQ==",
      "original_commit_id" : "a2916ae5043436d3fd22acb44c5663227fa7eb90",
      "original_line" : 243,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 6,
      "pull_request_review_id" : 691914652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-06-24T15:36:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658061925",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Reviewers, please take a look at this alternate approach: https://github.com/bitcoin/bitcoin/pull/22350.",
      "created_at" : "2021-06-27T21:31:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-869226443",
      "id" : 869226443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2OTIyNjQ0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-27T21:31:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/869226443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "fwiw prefer the more traditional log rotation approach in #22350; i find it cognitively easier to think in terms of stale logs rather than source suppression.",
      "created_at" : "2021-07-14T17:33:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-880079584",
      "id" : 880079584,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg4MDA3OTU4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-14T17:33:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880079584",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/177646?v=4",
         "events_url" : "https://api.github.com/users/narula/events{/privacy}",
         "followers_url" : "https://api.github.com/users/narula/followers",
         "following_url" : "https://api.github.com/users/narula/following{/other_user}",
         "gists_url" : "https://api.github.com/users/narula/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/narula",
         "id" : 177646,
         "login" : "narula",
         "node_id" : "MDQ6VXNlcjE3NzY0Ng==",
         "organizations_url" : "https://api.github.com/users/narula/orgs",
         "received_events_url" : "https://api.github.com/users/narula/received_events",
         "repos_url" : "https://api.github.com/users/narula/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/narula/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/narula/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/narula"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-09-23T21:11:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-926164049",
      "id" : 926164049,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII5843NCRR",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-23T21:11:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926164049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@dergoegge Would you mind rebasing? I would like to re-review it after rebase :)\r\n\r\nFWIW I prefer this solution to the more complex log rotation approach taken in #22350. I find the simpler approach taken in this PR much easier to reason about. This PR solves the issue at hand in the simplest possible way IMO.",
      "created_at" : "2021-10-05T16:11:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-934552951",
      "id" : 934552951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII5843tCV3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934552951/reactions"
      },
      "updated_at" : "2021-10-05T16:11:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934552951",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift Thanks for the nudge! :)\r\n\r\nRebased on latest master.",
      "created_at" : "2021-10-05T18:49:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-934677093",
      "id" : 934677093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII5843tgpl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934677093/reactions"
      },
      "updated_at" : "2021-10-05T18:49:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934677093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "In an attempt to make this more reviewable, i split the changes into multiple commits.\r\n\r\n@practicalswift pinging you, since you were previously interested in reviewing",
      "created_at" : "2022-02-17T17:59:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1043248338",
      "id" : 1043248338,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII584-LrTS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1043248338/reactions"
      },
      "updated_at" : "2022-02-17T17:59:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1043248338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813712733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813712733"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Limit is a separate word, so perhaps:\r\n\r\n```suggestion\r\n    class LogRateLimiter\r\n```",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T09:49:14Z",
      "diff_hunk" : "@@ -66,6 +94,49 @@ namespace BCLog {\n         ALL         = ~(uint32_t)0,\n     };\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRatelimiter",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813712733",
      "id" : 813712733,
      "line" : 98,
      "node_id" : "PRRC_kwDOABII584wgEVd",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 98,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 62,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813712733/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813712733",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813713028"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813713028"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        const std::chrono::seconds m_reset_interval;\r\n```",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T09:49:34Z",
      "diff_hunk" : "@@ -66,6 +94,49 @@ namespace BCLog {\n         ALL         = ~(uint32_t)0,\n     };\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRatelimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::seconds m_last_reset;\n+        //! Interval after which the window is reset.\n+        std::chrono::seconds m_reset_interval;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813713028",
      "id" : 813713028,
      "line" : 104,
      "node_id" : "PRRC_kwDOABII584wgEaE",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 104,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 68,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813713028/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813713028",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813714442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813714442"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        //! The maximum number of bytes that can be logged within one window.\r\n```",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T09:51:14Z",
      "diff_hunk" : "@@ -66,6 +94,49 @@ namespace BCLog {\n         ALL         = ~(uint32_t)0,\n     };\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRatelimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::seconds m_last_reset;\n+        //! Interval after which the window is reset.\n+        std::chrono::seconds m_reset_interval;\n+        //! Remaining bytes in the current window interval.\n+        uint64_t m_available_bytes;\n+        //! Number of bytes that were not consumed within the current window.\n+        uint64_t m_dropped_bytes{0};\n+        //! The maximum number of bytes that can be logged withon one window.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813714442",
      "id" : 813714442,
      "line" : 109,
      "node_id" : "PRRC_kwDOABII584wgEwK",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 109,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 73,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813714442/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813714442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813734077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813734077"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You've done existence checking above (\"We create a new rate limit window...\"), so you can use `std::unordered_map::at()` instead of the `[]` operator. `[]` will insert a new item in the map if the key doesn't exist, whereas `at()` will throw. Using `[]` therefore requires defining a default constructor for the value object.\r\n\r\nIf you make that replacement here and two lines below, you can remove the default constructor for `LotRatelimiter`, and then make the const members `const`:\r\n\r\n<details><summary>diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/logging.cpp b/src/logging.cpp\r\nindex c96483366d..6df6ffcf80 100644\r\n--- a/src/logging.cpp\r\n+++ b/src/logging.cpp\r\n@@ -269,10 +269,10 @@ void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& loggi\r\n         m_ratelimiters.emplace(source_location, LogRatelimiter{RATELIMIT_WINDOW_SIZE, RATELIMIT_WINDOW_MAX_BYTES});\r\n     }\r\n \r\n-    uint64_t dropped_bytes = m_ratelimiters[source_location].GetDroppedBytes();\r\n+    uint64_t dropped_bytes = m_ratelimiters.at(source_location).GetDroppedBytes();\r\n     bool was_ratelimited = m_supressed_locations.find(source_location) != m_supressed_locations.end();\r\n     bool is_ratelimited = !skip_ratelimiting && m_ratelimit &&\r\n-                          !m_ratelimiters[source_location].Consume(str_prefixed.size());\r\n+                          !m_ratelimiters.at(source_location).Consume(str_prefixed.size());\r\n     if (!is_ratelimited && was_ratelimited) {\r\n         // Logging will restart for this source location.\r\n         m_supressed_locations.erase(source_location);\r\ndiff --git a/src/logging.h b/src/logging.h\r\nindex e3df9b45d0..7fa811ef1e 100644\r\n--- a/src/logging.h\r\n+++ b/src/logging.h\r\n@@ -101,25 +101,26 @@ namespace BCLog {\r\n         //! Timestamp of the last window reset.\r\n         std::chrono::seconds m_last_reset;\r\n         //! Interval after which the window is reset.\r\n-        std::chrono::seconds m_reset_interval;\r\n+        const std::chrono::seconds m_reset_interval;\r\n         //! Remaining bytes in the current window interval.\r\n         uint64_t m_available_bytes;\r\n         //! Number of bytes that were not consumed within the current window.\r\n         uint64_t m_dropped_bytes{0};\r\n         //! The maximum number of bytes that can be logged withon one window.\r\n-        uint64_t m_max_bytes;\r\n+        const uint64_t m_max_bytes;\r\n \r\n         //! Reset the window if the window interval has passed since the last reset.\r\n         void MaybeReset();\r\n \r\n     public:\r\n-        LogRatelimiter() {}\r\n+        LogRatelimiter() = delete;\r\n \r\n         LogRatelimiter(std::chrono::seconds interval, uint64_t max_bytes)\r\n```\r\n\r\n</details>",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T10:14:17Z",
      "diff_hunk" : "@@ -262,7 +264,43 @@ void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& loggi\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n-    m_started_new_line = !str.empty() && str[str.size()-1] == '\\n';\n+    if (m_ratelimiters.find(source_location) == m_ratelimiters.end()) {\n+        // We create a new rate limit window for this source location on its first log attempt.\n+        m_ratelimiters.emplace(source_location, LogRatelimiter{RATELIMIT_WINDOW_SIZE, RATELIMIT_WINDOW_MAX_BYTES});\n+    }\n+\n+    uint64_t dropped_bytes = m_ratelimiters[source_location].GetDroppedBytes();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813734077",
      "id" : 813734077,
      "line" : 272,
      "node_id" : "PRRC_kwDOABII584wgJi9",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 272,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 44,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813734077/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813734077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813734356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813734356"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        const uint64_t m_max_bytes;\r\n```",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T10:14:37Z",
      "diff_hunk" : "@@ -66,6 +94,49 @@ namespace BCLog {\n         ALL         = ~(uint32_t)0,\n     };\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRatelimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::seconds m_last_reset;\n+        //! Interval after which the window is reset.\n+        std::chrono::seconds m_reset_interval;\n+        //! Remaining bytes in the current window interval.\n+        uint64_t m_available_bytes;\n+        //! Number of bytes that were not consumed within the current window.\n+        uint64_t m_dropped_bytes{0};\n+        //! The maximum number of bytes that can be logged withon one window.\n+        uint64_t m_max_bytes;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813734356",
      "id" : 813734356,
      "line" : 110,
      "node_id" : "PRRC_kwDOABII584wgJnU",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 110,
      "original_position" : 74,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 74,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813734356/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813734356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813779163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813779163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do the `m_reset_interval` and `m_max_bytes` members need to be parametrized and provided in the constructor? The `LogRatelimiter` object is only ever constructed with `RATELIMIT_WINDOW_SIZE` and `RATELIMIT_WINDOW_MAX_BYTES` except in the unit test, which could easily be modified to use the same value. The log `Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour...` also implicitly assumes that the objects have been constructed with these constants.",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T11:11:19Z",
      "diff_hunk" : "@@ -66,6 +94,49 @@ namespace BCLog {\n         ALL         = ~(uint32_t)0,\n     };\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRatelimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::seconds m_last_reset;\n+        //! Interval after which the window is reset.\n+        std::chrono::seconds m_reset_interval;\n+        //! Remaining bytes in the current window interval.\n+        uint64_t m_available_bytes;\n+        //! Number of bytes that were not consumed within the current window.\n+        uint64_t m_dropped_bytes{0};\n+        //! The maximum number of bytes that can be logged withon one window.\n+        uint64_t m_max_bytes;\n+\n+        //! Reset the window if the window interval has passed since the last reset.\n+        void MaybeReset();\n+\n+    public:\n+        LogRatelimiter() {}\n+\n+        LogRatelimiter(std::chrono::seconds interval, uint64_t max_bytes)\n+            : m_reset_interval{interval}, m_available_bytes{max_bytes}, m_max_bytes{max_bytes}\n+        {\n+            m_last_reset = GetTime<std::chrono::seconds>();\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813779163",
      "id" : 813779163,
      "line" : 122,
      "node_id" : "PRRC_kwDOABII584wgUjb",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 122,
      "original_position" : 86,
      "original_start_line" : 118,
      "path" : "src/logging.h",
      "position" : 86,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813779163/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 118,
      "start_side" : "RIGHT",
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813779163",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813779499"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813779499"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`m_last_reset` can be set in the initializer list:\r\n\r\n```\r\n        LogRatelimiter(std::chrono::seconds interval, uint64_t max_bytes)\r\n            : m_last_reset{GetTime<std::chrono::seconds>()}\r\n            , m_reset_interval{interval}\r\n            , m_available_bytes{max_bytes}\r\n            , m_max_bytes{max_bytes}\r\n        {}\r\n```",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T11:11:50Z",
      "diff_hunk" : "@@ -66,6 +94,49 @@ namespace BCLog {\n         ALL         = ~(uint32_t)0,\n     };\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRatelimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::seconds m_last_reset;\n+        //! Interval after which the window is reset.\n+        std::chrono::seconds m_reset_interval;\n+        //! Remaining bytes in the current window interval.\n+        uint64_t m_available_bytes;\n+        //! Number of bytes that were not consumed within the current window.\n+        uint64_t m_dropped_bytes{0};\n+        //! The maximum number of bytes that can be logged withon one window.\n+        uint64_t m_max_bytes;\n+\n+        //! Reset the window if the window interval has passed since the last reset.\n+        void MaybeReset();\n+\n+    public:\n+        LogRatelimiter() {}\n+\n+        LogRatelimiter(std::chrono::seconds interval, uint64_t max_bytes)\n+            : m_reset_interval{interval}, m_available_bytes{max_bytes}, m_max_bytes{max_bytes}\n+        {\n+            m_last_reset = GetTime<std::chrono::seconds>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813779499",
      "id" : 813779499,
      "line" : 121,
      "node_id" : "PRRC_kwDOABII584wgUor",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 121,
      "original_position" : 85,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 85,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813779499/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813779499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813800882"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813800882"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I know you've just copied the other consts here, but current style is to prefer:\r\n\r\n```suggestion\r\nstatic constexpr bool DEFAULT_RATELIMITLOGGING{true};\r\n```",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T11:43:24Z",
      "diff_hunk" : "@@ -6,28 +6,56 @@\n #ifndef BITCOIN_LOGGING_H\n #define BITCOIN_LOGGING_H\n \n+#include <crypto/siphash.h>\n #include <fs.h>\n #include <tinyformat.h>\n #include <threadsafety.h>\n #include <util/string.h>\n+#include <util/time.h>\n \n #include <atomic>\n #include <cstdint>\n #include <functional>\n #include <list>\n #include <mutex>\n #include <string>\n+#include <unordered_map>\n+#include <unordered_set>\n #include <vector>\n \n static const bool DEFAULT_LOGTIMEMICROS = false;\n static const bool DEFAULT_LOGIPS        = false;\n static const bool DEFAULT_LOGTIMESTAMPS = true;\n static const bool DEFAULT_LOGTHREADNAMES = false;\n static const bool DEFAULT_LOGSOURCELOCATIONS = false;\n+static const bool DEFAULT_RATELIMITLOGGING = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813800882",
      "id" : 813800882,
      "line" : 31,
      "node_id" : "PRRC_kwDOABII584wgZ2y",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 31,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 26,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813800882/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813800882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813801020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813801020"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        bool m_ratelimit{DEFAULT_RATELIMITLOGGING};\r\n```",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T11:43:38Z",
      "diff_hunk" : "@@ -98,12 +174,13 @@ namespace BCLog {\n         bool m_log_time_micros = DEFAULT_LOGTIMEMICROS;\n         bool m_log_threadnames = DEFAULT_LOGTHREADNAMES;\n         bool m_log_sourcelocations = DEFAULT_LOGSOURCELOCATIONS;\n+        bool m_ratelimit = DEFAULT_RATELIMITLOGGING;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813801020",
      "id" : 813801020,
      "line" : 177,
      "node_id" : "PRRC_kwDOABII584wgZ48",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 177,
      "original_position" : 123,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 123,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813801020/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813801020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813811058"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813811058"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd be tempted to remove all the log file size checks. Don't the `LogFromLocationAndExpect()` checks already show that the expected messages are being written to the log?",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T11:58:26Z",
      "diff_hunk" : "@@ -30,4 +31,140 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n     BOOST_CHECK_EQUAL(sec_timer.LogMsg(\"test secs\"), \"tests: test secs (1.00s)\");\n }\n \n+BOOST_AUTO_TEST_CASE(logging_ratelimit_window)\n+{\n+    SetMockTime(std::chrono::minutes{1});\n+    BCLog::LogRatelimiter window{std::chrono::minutes{1}, 1000};\n+\n+    // Check that window gets initialised correctly.\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 1000ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    BOOST_CHECK(window.Consume(500));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 500ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    BOOST_CHECK(window.Consume(500));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 0ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    // Consuming another 500 bytes after already having consumed a 1000 bytes should fail.\n+    BOOST_CHECK(!window.Consume(500));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 0ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 500ull);\n+\n+    // Advance time by one minute. This should trigger a window reset.\n+    SetMockTime(std::chrono::minutes{2});\n+\n+    // Check that the window resets as expected when new bytes are consumed.\n+    BOOST_CHECK(window.Consume(100));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 900ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+}\n+\n+void LogFromLocation(int location, std::string message)\n+{\n+    switch (location) {\n+    case 0:\n+        LogPrintf(\"%s\\n\", message);\n+        break;\n+    case 1:\n+        LogPrintf(\"%s\\n\", message);\n+        break;\n+    case 2:\n+        LogPrintfWithoutRateLimiting(\"%s\\n\", message);\n+        break;\n+    case 3:\n+        LogPrint(BCLog::ALL, \"%s\\n\", message);\n+        break;\n+    default:\n+        BOOST_CHECK_MESSAGE(false, \"Unkown log location\");\n+    }\n+}\n+\n+void LogFromLocationAndExpect(int location, std::string message, std::string expect)\n+{\n+    ASSERT_DEBUG_LOG(expect);\n+    LogFromLocation(location, message);\n+}\n+\n+BOOST_AUTO_TEST_CASE(rate_limiting)\n+{\n+    bool prev_log_timestamps = LogInstance().m_log_sourcelocations;\n+    LogInstance().m_log_timestamps = false;\n+    bool prev_log_sourcelocations = LogInstance().m_log_sourcelocations;\n+    LogInstance().m_log_sourcelocations = false;\n+    bool prev_log_threadnames = LogInstance().m_log_threadnames;\n+    LogInstance().m_log_threadnames = false;\n+\n+    // Log 1024-character lines (1023 plus newline) to make the math simple.\n+    std::string log_message(1023, 'a');\n+\n+    SetMockTime(std::chrono::hours{1});\n+\n+    size_t log_file_size = std::filesystem::file_size(LogInstance().m_file_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813811058",
      "id" : 813811058,
      "line" : 105,
      "node_id" : "PRRC_kwDOABII584wgcVy",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 105,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : 83,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813811058/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813811058",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813812736"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813812736"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This shouldn't be a `BOOST_CHECK`, which is used to check program logic. This is to catch errors in the unit test code. I think just remove it and let the compiler warn.\r\n\r\n```suggestion\r\n    // no default case, so the compiler can warn about missing cases\r\n```",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T12:01:00Z",
      "diff_hunk" : "@@ -30,4 +31,140 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n     BOOST_CHECK_EQUAL(sec_timer.LogMsg(\"test secs\"), \"tests: test secs (1.00s)\");\n }\n \n+BOOST_AUTO_TEST_CASE(logging_ratelimit_window)\n+{\n+    SetMockTime(std::chrono::minutes{1});\n+    BCLog::LogRatelimiter window{std::chrono::minutes{1}, 1000};\n+\n+    // Check that window gets initialised correctly.\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 1000ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    BOOST_CHECK(window.Consume(500));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 500ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    BOOST_CHECK(window.Consume(500));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 0ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    // Consuming another 500 bytes after already having consumed a 1000 bytes should fail.\n+    BOOST_CHECK(!window.Consume(500));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 0ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 500ull);\n+\n+    // Advance time by one minute. This should trigger a window reset.\n+    SetMockTime(std::chrono::minutes{2});\n+\n+    // Check that the window resets as expected when new bytes are consumed.\n+    BOOST_CHECK(window.Consume(100));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 900ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+}\n+\n+void LogFromLocation(int location, std::string message)\n+{\n+    switch (location) {\n+    case 0:\n+        LogPrintf(\"%s\\n\", message);\n+        break;\n+    case 1:\n+        LogPrintf(\"%s\\n\", message);\n+        break;\n+    case 2:\n+        LogPrintfWithoutRateLimiting(\"%s\\n\", message);\n+        break;\n+    case 3:\n+        LogPrint(BCLog::ALL, \"%s\\n\", message);\n+        break;\n+    default:\n+        BOOST_CHECK_MESSAGE(false, \"Unkown log location\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813812736",
      "id" : 813812736,
      "line" : 81,
      "node_id" : "PRRC_kwDOABII584wgcwA",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 81,
      "original_position" : 59,
      "original_start_line" : 80,
      "path" : "src/test/logging_tests.cpp",
      "position" : 59,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813812736/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 80,
      "start_side" : "RIGHT",
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813812736",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813813835"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813813835"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it'd be nice to unify the various logprint macros by introducing new categories:\r\n\r\n- `UNCONDITIONAL_RATE_LIMITED` replaces `LogPrintf`\r\n- `UNCONDITIONAL_ALWAYS` replaces `LogPrintfWithoutRateLimiting`\r\n\r\nor similar.",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T12:02:33Z",
      "diff_hunk" : "@@ -181,18 +257,31 @@ static inline void LogPrintf_(const std::string& logging_function, const std::st\n             /* Original format string will have newline so don't add one here */\n             log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line);\n+\n+        const SourceLocation source_location{source_file, source_line};\n+        LogInstance().LogPrintStr(log_msg, logging_function, source_location, skip_ratelimiting);\n     }\n }\n \n-#define LogPrintf(...) LogPrintf_(__func__, __FILE__, __LINE__, __VA_ARGS__)\n+// Unconditional logging. Uses basic rate limiting to mitigate disk filling attacks.\n+#define LogPrintf(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_ratelimiting */ false, __VA_ARGS__)\n+\n+// Unconditional logging WITHOUT rate limiting. Use only for log messages that\n+// MUST NOT be rate limited no matter how often they are logged. That requirement\n+// should be extremely rare, so please use with care. Prefer LogPrintf(...) if\n+// possible.\n+#define LogPrintfWithoutRateLimiting(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_ratelimiting */ true, __VA_ARGS__)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813813835",
      "id" : 813813835,
      "line" : 273,
      "node_id" : "PRRC_kwDOABII584wgdBL",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 273,
      "original_position" : 170,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 170,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813813835/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813813835",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813814387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813814387"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do we have any idea if the new logic in this function impacts performance?",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-02-24T12:03:20Z",
      "diff_hunk" : "@@ -247,13 +249,13 @@ namespace BCLog {\n     }\n } // namespace BCLog\n \n-void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line)\n+void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const SourceLocation& source_location, bool skip_ratelimiting)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r813814387",
      "id" : 813814387,
      "line" : 252,
      "node_id" : "PRRC_kwDOABII584wgdJz",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 252,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 23,
      "pull_request_review_id" : 892204452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813814387/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-24T12:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/813814387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r820637222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820637222"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think i would like to keep them, as `LogFromLocationAndExpect` uses the log callbacks which fire regardless of whether or not the message is actually printed to the console or disk.\r\n\r\nI think these checks make sense just to be really sure that the file sizes change as expected. I have had bugs while writing this where the messages from the rate limiting logic where printed at the wrong time, so simply relying on those is not enough IMO.",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-03-07T11:58:35Z",
      "diff_hunk" : "@@ -30,4 +31,140 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n     BOOST_CHECK_EQUAL(sec_timer.LogMsg(\"test secs\"), \"tests: test secs (1.00s)\");\n }\n \n+BOOST_AUTO_TEST_CASE(logging_ratelimit_window)\n+{\n+    SetMockTime(std::chrono::minutes{1});\n+    BCLog::LogRatelimiter window{std::chrono::minutes{1}, 1000};\n+\n+    // Check that window gets initialised correctly.\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 1000ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    BOOST_CHECK(window.Consume(500));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 500ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    BOOST_CHECK(window.Consume(500));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 0ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    // Consuming another 500 bytes after already having consumed a 1000 bytes should fail.\n+    BOOST_CHECK(!window.Consume(500));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 0ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 500ull);\n+\n+    // Advance time by one minute. This should trigger a window reset.\n+    SetMockTime(std::chrono::minutes{2});\n+\n+    // Check that the window resets as expected when new bytes are consumed.\n+    BOOST_CHECK(window.Consume(100));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 900ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+}\n+\n+void LogFromLocation(int location, std::string message)\n+{\n+    switch (location) {\n+    case 0:\n+        LogPrintf(\"%s\\n\", message);\n+        break;\n+    case 1:\n+        LogPrintf(\"%s\\n\", message);\n+        break;\n+    case 2:\n+        LogPrintfWithoutRateLimiting(\"%s\\n\", message);\n+        break;\n+    case 3:\n+        LogPrint(BCLog::ALL, \"%s\\n\", message);\n+        break;\n+    default:\n+        BOOST_CHECK_MESSAGE(false, \"Unkown log location\");\n+    }\n+}\n+\n+void LogFromLocationAndExpect(int location, std::string message, std::string expect)\n+{\n+    ASSERT_DEBUG_LOG(expect);\n+    LogFromLocation(location, message);\n+}\n+\n+BOOST_AUTO_TEST_CASE(rate_limiting)\n+{\n+    bool prev_log_timestamps = LogInstance().m_log_sourcelocations;\n+    LogInstance().m_log_timestamps = false;\n+    bool prev_log_sourcelocations = LogInstance().m_log_sourcelocations;\n+    LogInstance().m_log_sourcelocations = false;\n+    bool prev_log_threadnames = LogInstance().m_log_threadnames;\n+    LogInstance().m_log_threadnames = false;\n+\n+    // Log 1024-character lines (1023 plus newline) to make the math simple.\n+    std::string log_message(1023, 'a');\n+\n+    SetMockTime(std::chrono::hours{1});\n+\n+    size_t log_file_size = std::filesystem::file_size(LogInstance().m_file_path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r820637222",
      "id" : 820637222,
      "in_reply_to_id" : 813811058,
      "line" : 105,
      "node_id" : "PRRC_kwDOABII584w6e4m",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 105,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : 83,
      "pull_request_review_id" : 901593560,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820637222/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-07T11:58:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820637222",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r820924461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820924461"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Are you suggesting to get rid of `LogPrintf` completely or to define it as the following?\r\n```c++\r\n#define LogPrintf(...) LogPrint(UNCONDITIONAL_RATE_LIMITED, __VA_ARGS__)\r\n```\r\nI would not be a fan of replacing every usage of `LogPrintf` in this PR.",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-03-07T17:17:00Z",
      "diff_hunk" : "@@ -181,18 +257,31 @@ static inline void LogPrintf_(const std::string& logging_function, const std::st\n             /* Original format string will have newline so don't add one here */\n             log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line);\n+\n+        const SourceLocation source_location{source_file, source_line};\n+        LogInstance().LogPrintStr(log_msg, logging_function, source_location, skip_ratelimiting);\n     }\n }\n \n-#define LogPrintf(...) LogPrintf_(__func__, __FILE__, __LINE__, __VA_ARGS__)\n+// Unconditional logging. Uses basic rate limiting to mitigate disk filling attacks.\n+#define LogPrintf(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_ratelimiting */ false, __VA_ARGS__)\n+\n+// Unconditional logging WITHOUT rate limiting. Use only for log messages that\n+// MUST NOT be rate limited no matter how often they are logged. That requirement\n+// should be extremely rare, so please use with care. Prefer LogPrintf(...) if\n+// possible.\n+#define LogPrintfWithoutRateLimiting(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_ratelimiting */ true, __VA_ARGS__)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r820924461",
      "id" : 820924461,
      "in_reply_to_id" : 813813835,
      "line" : 273,
      "node_id" : "PRRC_kwDOABII584w7lAt",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 273,
      "original_position" : 170,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 170,
      "pull_request_review_id" : 902002043,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820924461/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-07T17:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/820924461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r824216339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824216339"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here are some benchmarks using the code from #18815:\r\n\r\nmerge base:\r\n```\r\n|               ns/op |                op/s |    err% |          ins/op |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|---------------:|--------:|----------:|:----------\r\n|                3.63 |      275,623,892.70 |    0.5% |           54.00 |          13.00 |    0.0% |      0.01 | `LoggingNoCategory`\r\n|               40.65 |       24,600,010.03 |    0.9% |          659.00 |         155.00 |    0.0% |      0.01 | `LoggingNoFile`\r\n|            2,165.69 |          461,746.80 |    0.2% |       19,809.05 |       3,709.01 |    0.1% |      0.01 | `LoggingNoThreadNames`\r\n|            2,189.45 |          456,736.09 |    0.8% |       19,842.05 |       3,717.01 |    0.2% |      0.01 | `LoggingYoCategory`\r\n|            2,224.15 |          449,609.33 |    0.9% |       20,373.05 |       3,839.01 |    0.1% |      0.01 | `LoggingYoThreadNames`\r\n\r\n```\r\n\r\npull request:\r\n```\r\n|               ns/op |                op/s |    err% |          ins/op |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|---------------:|--------:|----------:|:----------\r\n|                3.88 |      257,848,736.66 |    1.2% |           54.00 |          13.00 |    0.0% |      0.01 | `LoggingNoCategory`\r\n|               40.29 |       24,820,332.51 |    2.5% |          663.00 |         155.00 |    0.0% |      0.01 | `LoggingNoFile`\r\n|            2,440.31 |          409,783.92 |    1.5% |       22,024.06 |       4,017.01 |    0.1% |      0.01 | `LoggingNoThreadNames`\r\n|            2,486.87 |          402,111.61 |    4.6% |       21,513.06 |       3,951.01 |    0.1% |      0.01 | `LoggingYoCategory`\r\n|            2,571.68 |          388,850.52 |    3.3% |       22,584.06 |       4,147.01 |    0.1% |      0.01 | `LoggingYoThreadNames`\r\n```\r\n\r\nI would say that the additional 200 - 300 nano seconds per `LogPrintf` call are negligible.",
      "commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "created_at" : "2022-03-10T22:09:28Z",
      "diff_hunk" : "@@ -247,13 +249,13 @@ namespace BCLog {\n     }\n } // namespace BCLog\n \n-void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line)\n+void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const SourceLocation& source_location, bool skip_ratelimiting)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r824216339",
      "id" : 824216339,
      "in_reply_to_id" : 813814387,
      "line" : 252,
      "node_id" : "PRRC_kwDOABII584xIIsT",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 252,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 23,
      "pull_request_review_id" : 906541897,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824216339/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-10T22:09:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824216339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r824700294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824700294"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it'd be good to get rid of `LogPrintf` completely in the future, but I'm not suggesting you do that in this PR. I'd just prefer that his PR doesn't add a new log macro.",
      "commit_id" : "4c1d7e934e391493663a76d35d1bae33ad2e3326",
      "created_at" : "2022-03-11T13:12:55Z",
      "diff_hunk" : "@@ -181,18 +257,31 @@ static inline void LogPrintf_(const std::string& logging_function, const std::st\n             /* Original format string will have newline so don't add one here */\n             log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line);\n+\n+        const SourceLocation source_location{source_file, source_line};\n+        LogInstance().LogPrintStr(log_msg, logging_function, source_location, skip_ratelimiting);\n     }\n }\n \n-#define LogPrintf(...) LogPrintf_(__func__, __FILE__, __LINE__, __VA_ARGS__)\n+// Unconditional logging. Uses basic rate limiting to mitigate disk filling attacks.\n+#define LogPrintf(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_ratelimiting */ false, __VA_ARGS__)\n+\n+// Unconditional logging WITHOUT rate limiting. Use only for log messages that\n+// MUST NOT be rate limited no matter how often they are logged. That requirement\n+// should be extremely rare, so please use with care. Prefer LogPrintf(...) if\n+// possible.\n+#define LogPrintfWithoutRateLimiting(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_ratelimiting */ true, __VA_ARGS__)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r824700294",
      "id" : 824700294,
      "in_reply_to_id" : 813813835,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xJ-2G",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 273,
      "original_position" : 170,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 907198372,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824700294/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T13:12:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824700294",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r824828452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824828452"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I dropped the non-default constructor since we only ever constructed with `RATELIMIT_WINDOW_SIZE` and `RATELIMIT_WINDOW_MAX_BYTES`. So now a new `LogRateLimiter` will be constructed using the default constructor when `[]` is used the first time.",
      "commit_id" : "4c1d7e934e391493663a76d35d1bae33ad2e3326",
      "created_at" : "2022-03-11T15:33:30Z",
      "diff_hunk" : "@@ -262,7 +264,43 @@ void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& loggi\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n-    m_started_new_line = !str.empty() && str[str.size()-1] == '\\n';\n+    if (m_ratelimiters.find(source_location) == m_ratelimiters.end()) {\n+        // We create a new rate limit window for this source location on its first log attempt.\n+        m_ratelimiters.emplace(source_location, LogRatelimiter{RATELIMIT_WINDOW_SIZE, RATELIMIT_WINDOW_MAX_BYTES});\n+    }\n+\n+    uint64_t dropped_bytes = m_ratelimiters[source_location].GetDroppedBytes();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r824828452",
      "id" : 824828452,
      "in_reply_to_id" : 813734077,
      "line" : 266,
      "node_id" : "PRRC_kwDOABII584xKeIk",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 266,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 38,
      "pull_request_review_id" : 907381308,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824828452/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-11T15:33:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824828452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r824828709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824828709"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See https://github.com/bitcoin/bitcoin/pull/21603#discussion_r824828452",
      "commit_id" : "4c1d7e934e391493663a76d35d1bae33ad2e3326",
      "created_at" : "2022-03-11T15:33:47Z",
      "diff_hunk" : "@@ -66,6 +94,49 @@ namespace BCLog {\n         ALL         = ~(uint32_t)0,\n     };\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRatelimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::seconds m_last_reset;\n+        //! Interval after which the window is reset.\n+        std::chrono::seconds m_reset_interval;\n+        //! Remaining bytes in the current window interval.\n+        uint64_t m_available_bytes;\n+        //! Number of bytes that were not consumed within the current window.\n+        uint64_t m_dropped_bytes{0};\n+        //! The maximum number of bytes that can be logged withon one window.\n+        uint64_t m_max_bytes;\n+\n+        //! Reset the window if the window interval has passed since the last reset.\n+        void MaybeReset();\n+\n+    public:\n+        LogRatelimiter() {}\n+\n+        LogRatelimiter(std::chrono::seconds interval, uint64_t max_bytes)\n+            : m_reset_interval{interval}, m_available_bytes{max_bytes}, m_max_bytes{max_bytes}\n+        {\n+            m_last_reset = GetTime<std::chrono::seconds>();\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r824828709",
      "id" : 824828709,
      "in_reply_to_id" : 813779163,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xKeMl",
      "original_commit_id" : "6f7fd4be58c8283237023879e84d2c289d31e58b",
      "original_line" : 122,
      "original_position" : 86,
      "original_start_line" : 118,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 907381669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824828709/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-11T15:33:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/824828709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-04-08T14:34:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1092929002",
      "id" : 1092929002,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585BJMXq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092929002/reactions"
      },
      "updated_at" : "2022-04-08T14:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1092929002",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r850611668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850611668"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "typo: location (here and in two other spots)",
      "commit_id" : "f1cc42c04e9d73d235dc4a010dc85e828969112f",
      "created_at" : "2022-04-14T16:27:46Z",
      "diff_hunk" : "@@ -94,20 +94,35 @@ BOOST_AUTO_TEST_CASE(rate_limiting)\n \n     SetMockTime(std::chrono::hours{1});\n \n+    size_t log_file_size = std::filesystem::file_size(LogInstance().m_file_path);\n     // Logging 1 MiB should be allowed.\n     for (int i = 0; i < 1024; ++i) {\n         LogFromLocation(0, log_message);\n     }\n+    BOOST_CHECK_MESSAGE(log_file_size < std::filesystem::file_size(LogInstance().m_file_path), \"should be able to log 1 MiB from location 0\");\n \n+    log_file_size = std::filesystem::file_size(LogInstance().m_file_path);\n     BOOST_CHECK_NO_THROW(\n         LogFromLocationAndExpect(0, log_message, \"Excessive logging detected\"));\n+    BOOST_CHECK_MESSAGE(log_file_size < std::filesystem::file_size(LogInstance().m_file_path), \"the start of the supression period should be logged\");\n+\n+    log_file_size = std::filesystem::file_size(LogInstance().m_file_path);\n+    for (int i = 0; i < 1024; ++i) {\n+        LogFromLocation(0, log_message);\n+    }\n+    BOOST_CHECK_MESSAGE(log_file_size == std::filesystem::file_size(LogInstance().m_file_path), \"all further logs from location 0 should be dropped\");\n+\n     BOOST_CHECK_THROW(\n         LogFromLocationAndExpect(1, log_message, \"Excessive logging detected\"), std::runtime_error);\n+    BOOST_CHECK_MESSAGE(log_file_size < std::filesystem::file_size(LogInstance().m_file_path), \"locaiton 1 should be unaffected by other locations\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r850611668",
      "id" : 850611668,
      "line" : 123,
      "node_id" : "PRRC_kwDOABII584ys03U",
      "original_commit_id" : "3eaafe7cc811da3da21c722e7f6a66cf93e1d4f9",
      "original_line" : 117,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : 24,
      "pull_request_review_id" : 942522620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850611668/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T17:54:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850611668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r850617035"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850617035"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "All these checks seem unnecessary for locations that are not subject to rate limiting (e.g. special category logs, or with rate limiting disabled). Wouldn't it be better to make this entire block conditional on `!skip_rate_limiting && m_ratelimit` so that we don't needlessly add locations to `m_ratelimiters` and perform other operations for these locations?",
      "commit_id" : "f1cc42c04e9d73d235dc4a010dc85e828969112f",
      "created_at" : "2022-04-14T16:34:20Z",
      "diff_hunk" : "@@ -265,7 +265,38 @@ void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& loggi\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n-    m_started_new_line = !str.empty() && str[str.size()-1] == '\\n';\n+    uint64_t dropped_bytes = m_ratelimiters[source_location].GetDroppedBytes();\n+    bool was_ratelimited = m_supressed_locations.find(source_location) != m_supressed_locations.end();\n+    bool is_ratelimited = !skip_rate_limiting && m_ratelimit &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r850617035",
      "id" : 850617035,
      "line" : 270,
      "node_id" : "PRRC_kwDOABII584ys2LL",
      "original_commit_id" : "7654c1762580c0de7d5cbaedeb06040df63eea98",
      "original_line" : 270,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 7,
      "pull_request_review_id" : 942522620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850617035/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T17:54:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850617035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r850623650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850623650"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The naming might be confusing, maybe drop the \"debug\" in it because \"debug logging\" could be understood as the specialised logs (`-debug`), which are not subject to the rate limiting.",
      "commit_id" : "f1cc42c04e9d73d235dc4a010dc85e828969112f",
      "created_at" : "2022-04-14T16:43:11Z",
      "diff_hunk" : "@@ -76,6 +76,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit debug logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r850623650",
      "id" : 850623650,
      "line" : 79,
      "node_id" : "PRRC_kwDOABII584ys3yi",
      "original_commit_id" : "8ff8a856e70d8897e5996c06225b5fff380309b6",
      "original_line" : 79,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : 4,
      "pull_request_review_id" : 942522620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850623650/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-14T17:54:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850623650",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r850673831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850673831"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just to clarify - all the other categories (`QT`, `REINDEX`, `BENCH`, etc.) are not rate-limited?",
      "commit_id" : "f1cc42c04e9d73d235dc4a010dc85e828969112f",
      "created_at" : "2022-04-14T17:51:09Z",
      "diff_hunk" : "@@ -165,6 +164,8 @@ const CLogCategoryDesc LogCategories[] =\n #endif\n     {BCLog::UTIL, \"util\"},\n     {BCLog::BLOCKSTORE, \"blockstorage\"},\n+    {BCLog::UNCONDITIONAL_RATE_LIMITED, \"uncond_rate_limited\"},\n+    {BCLog::UNCONDITIONAL_ALWAYS, \"uncond_always\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r850673831",
      "id" : 850673831,
      "line" : 168,
      "node_id" : "PRRC_kwDOABII584ytECn",
      "original_commit_id" : "f1cc42c04e9d73d235dc4a010dc85e828969112f",
      "original_line" : 168,
      "original_position" : 13,
      "original_start_line" : 167,
      "path" : "src/logging.cpp",
      "position" : 13,
      "pull_request_review_id" : 942608550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850673831/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 167,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-14T17:58:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/850673831",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r851162186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851162186"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Replaced \"debug\" with \"unconditional\".",
      "commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "created_at" : "2022-04-15T09:02:57Z",
      "diff_hunk" : "@@ -76,6 +76,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit debug logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r851162186",
      "id" : 851162186,
      "in_reply_to_id" : 850623650,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584yu7RK",
      "original_commit_id" : "8ff8a856e70d8897e5996c06225b5fff380309b6",
      "original_line" : 79,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 943278495,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851162186/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-15T09:02:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851162186",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r851164551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851164551"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, only uses of `LogPrintf` (`LogPrint(BCLog::UNCONDITIONAL_RATE_LIMITED, ...)`) are rate limited.",
      "commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "created_at" : "2022-04-15T09:07:36Z",
      "diff_hunk" : "@@ -165,6 +164,8 @@ const CLogCategoryDesc LogCategories[] =\n #endif\n     {BCLog::UTIL, \"util\"},\n     {BCLog::BLOCKSTORE, \"blockstorage\"},\n+    {BCLog::UNCONDITIONAL_RATE_LIMITED, \"uncond_rate_limited\"},\n+    {BCLog::UNCONDITIONAL_ALWAYS, \"uncond_always\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r851164551",
      "id" : 851164551,
      "in_reply_to_id" : 850673831,
      "line" : 168,
      "node_id" : "PRRC_kwDOABII584yu72H",
      "original_commit_id" : "f1cc42c04e9d73d235dc4a010dc85e828969112f",
      "original_line" : 168,
      "original_position" : 13,
      "original_start_line" : 167,
      "path" : "src/logging.cpp",
      "position" : 13,
      "pull_request_review_id" : 943281420,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851164551/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 167,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-15T09:07:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/851164551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @mzumsande @glozow!\r\n\r\n> [...] the disk-filling attack we're trying to prevent is an attacker figuring out some unconditional logging they can trigger over and over again [...]\r\n> I assume there aren't other attacks we're looking to prevent?\r\n\r\nNone that I can think of, this PR is aimed at exactly what you described.",
      "created_at" : "2022-04-15T09:26:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1099993254",
      "id" : 1099993254,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585BkJCm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099993254/reactions"
      },
      "updated_at" : "2022-04-15T09:26:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099993254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r879701462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879701462"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Does setting the default to `BCLog::UNCONDITIONAL_RATE_LIMITED | BCLog::UNCONDITIONAL_ALWAYS` break the logic in `DefaultShrinkDebugFile()`?",
      "commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "created_at" : "2022-05-23T17:14:15Z",
      "diff_hunk" : "@@ -85,7 +158,7 @@ namespace BCLog {\n         std::atomic_bool m_started_new_line{true};\n \n         /** Log categories bitfield. */\n-        std::atomic<uint32_t> m_categories{0};\n+        std::atomic<uint32_t> m_categories{BCLog::UNCONDITIONAL_RATE_LIMITED | BCLog::UNCONDITIONAL_ALWAYS};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r879701462",
      "id" : 879701462,
      "line" : 161,
      "node_id" : "PRRC_kwDOABII5840by3W",
      "original_commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "original_line" : 161,
      "original_position" : 181,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 181,
      "pull_request_review_id" : 982117359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879701462/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-23T17:44:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879701462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r879708904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879708904"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it possible for this to return false followed by true, even if the rate limiter doesn't reset, eg:\r\n\r\n- m_available_bytes is 100\r\n- `Consume(110)` is called and returns false\r\n- `Consume(90)` is called and returns true.\r\n\r\nWhich would then cause the \"Restarting logging from ...\" and \"Excessive logging detected from...\" logs to be called before the LogRateLimiter has been reset.\r\n\r\nIf so, I think this is the fix:\r\n\r\n```diff\r\n    if (bytes > m_available_bytes) {\r\n        m_dropped_bytes += bytes;\r\n+       m_available_bytes = 0;\r\n        return false;\r\n    }",
      "commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "created_at" : "2022-05-23T17:24:25Z",
      "diff_hunk" : "@@ -337,3 +374,26 @@ void BCLog::Logger::ShrinkDebugFile()\n     else if (file != nullptr)\n         fclose(file);\n }\n+\n+void BCLog::LogRateLimiter::MaybeReset()\n+{\n+    const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n+    if ((now - m_last_reset) >= WINDOW_SIZE) {\n+        m_available_bytes = WINDOW_MAX_BYTES;\n+        m_last_reset = now;\n+        m_dropped_bytes = 0;\n+    }\n+}\n+\n+bool BCLog::LogRateLimiter::Consume(uint64_t bytes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r879708904",
      "id" : 879708904,
      "line" : 388,
      "node_id" : "PRRC_kwDOABII5840b0ro",
      "original_commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "original_line" : 388,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 102,
      "pull_request_review_id" : 982117359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879708904/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-23T17:44:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879708904",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r879711795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879711795"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should this be outside the `skip_rate_limiting` conditional, so it is prefixed to all lines?\r\n\r\n```diff\r\n                 source_location.m_file, source_location.m_line, logging_function,\r\n                 LogRateLimiter::WINDOW_MAX_BYTES / (1024 * 1024), str_prefixed));\r\n         }\r\n+    }\r\n \r\n-        // To avoid confusion caused by dropped log messages when debugging an issue,\r\n-        // we prefix log lines with \"[*]\" when there are any supressed source locations.\r\n-        if (m_supressed_locations.size() > 0) {\r\n-            str_prefixed.insert(0, \"[*] \");\r\n-        }\r\n+    // To avoid confusion caused by dropped log messages when debugging an issue,\r\n+    // we prefix log lines with \"[*]\" when there are any supressed source locations.\r\n+    if (m_supressed_locations.size() > 0) {\r\n+        str_prefixed.insert(0, \"[*] \");\r\n     }\r\n```",
      "commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "created_at" : "2022-05-23T17:28:13Z",
      "diff_hunk" : "@@ -264,7 +265,43 @@ void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& loggi\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n-    m_started_new_line = !str.empty() && str[str.size()-1] == '\\n';\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    if (!skip_rate_limiting && m_ratelimit) {\n+        was_ratelimited = m_supressed_locations.find(source_location) != m_supressed_locations.end();\n+        is_ratelimited = !m_ratelimiters[source_location].Consume(str_prefixed.size());\n+\n+        if (!is_ratelimited && was_ratelimited) {\n+            // Logging will restart for this source location.\n+            m_supressed_locations.erase(source_location);\n+\n+            str_prefixed = LogTimestampStr(strprintf(\n+                \"Restarting logging from %s:%d (%s): \"\n+                \"(%d MiB) were dropped during the last hour.\\n%s\",\n+                source_location.m_file, source_location.m_line, logging_function,\n+                m_ratelimiters[source_location].GetDroppedBytes() / (1024 * 1024), str_prefixed));\n+        } else if (is_ratelimited && !was_ratelimited) {\n+            // Logging from this source location will be supressed until the current window resets.\n+            m_supressed_locations.insert(source_location);\n+\n+            str_prefixed = LogTimestampStr(strprintf(\n+                \"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour.\"\n+                \"Suppressing logging to disk from this source location for up to one hour. \"\n+                \"Console logging unaffected. Last log entry: %s\",\n+                source_location.m_file, source_location.m_line, logging_function,\n+                LogRateLimiter::WINDOW_MAX_BYTES / (1024 * 1024), str_prefixed));\n+        }\n+\n+        // To avoid confusion caused by dropped log messages when debugging an issue,\n+        // we prefix log lines with \"[*]\" when there are any supressed source locations.\n+        if (m_supressed_locations.size() > 0) {\n+            str_prefixed.insert(0, \"[*] \");\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r879711795",
      "id" : 879711795,
      "line" : 301,
      "node_id" : "PRRC_kwDOABII5840b1Yz",
      "original_commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "original_line" : 301,
      "original_position" : 71,
      "original_start_line" : 299,
      "path" : "src/logging.cpp",
      "position" : 71,
      "pull_request_review_id" : 982117359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879711795/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 299,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-23T17:44:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879711795",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r881502715"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881502715"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good catch, fixed!",
      "commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "created_at" : "2022-05-25T10:41:52Z",
      "diff_hunk" : "@@ -85,7 +158,7 @@ namespace BCLog {\n         std::atomic_bool m_started_new_line{true};\n \n         /** Log categories bitfield. */\n-        std::atomic<uint32_t> m_categories{0};\n+        std::atomic<uint32_t> m_categories{BCLog::UNCONDITIONAL_RATE_LIMITED | BCLog::UNCONDITIONAL_ALWAYS};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r881502715",
      "id" : 881502715,
      "in_reply_to_id" : 879701462,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840iqn7",
      "original_commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "original_line" : 161,
      "original_position" : 181,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 984599352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881502715/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-25T10:41:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881502715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r881503983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881503983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, trying to consume more bytes than are available should result in no available bytes afterwards.",
      "commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "created_at" : "2022-05-25T10:43:20Z",
      "diff_hunk" : "@@ -337,3 +374,26 @@ void BCLog::Logger::ShrinkDebugFile()\n     else if (file != nullptr)\n         fclose(file);\n }\n+\n+void BCLog::LogRateLimiter::MaybeReset()\n+{\n+    const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n+    if ((now - m_last_reset) >= WINDOW_SIZE) {\n+        m_available_bytes = WINDOW_MAX_BYTES;\n+        m_last_reset = now;\n+        m_dropped_bytes = 0;\n+    }\n+}\n+\n+bool BCLog::LogRateLimiter::Consume(uint64_t bytes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r881503983",
      "id" : 881503983,
      "in_reply_to_id" : 879708904,
      "line" : 498,
      "node_id" : "PRRC_kwDOABII5840iq7v",
      "original_commit_id" : "092e023d832ca2f63e274c3eb0528602209aa5cc",
      "original_line" : 498,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 140,
      "pull_request_review_id" : 984601103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881503983/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-25T10:43:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881503983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r883765766"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883765766"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it be better to use `WINDOW_MAX_BYTES` here to reduce maintenance burden?\r\n```suggestion\r\n    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), BCLog::LogRateLimiter::WINDOW_MAX_BYTES);\r\n```",
      "commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "created_at" : "2022-05-27T16:25:59Z",
      "diff_hunk" : "@@ -150,4 +152,138 @@ BOOST_FIXTURE_TEST_CASE(logging_LogPrintMacros_CategoryName, LogSetup)\n     BOOST_CHECK_EQUAL_COLLECTIONS(log_lines.begin(), log_lines.end(), expected.begin(), expected.end());\n }\n \n+BOOST_AUTO_TEST_CASE(logging_ratelimit_window)\n+{\n+    SetMockTime(std::chrono::hours{1});\n+    BCLog::LogRateLimiter window;\n+\n+    // Check that window gets initialised correctly.\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 1024ull * 1024ull);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r883765766",
      "id" : 883765766,
      "line" : 161,
      "node_id" : "PRRC_kwDOABII5840rTIG",
      "original_commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "original_line" : 161,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : 34,
      "pull_request_review_id" : 987737220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883765766/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-27T17:15:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883765766",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r883766689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883766689"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps:\r\n\r\n```suggestion\r\n\r\n    const uint64_t MESSAGE_SIZE{512 * 1024};\r\n\r\n    BOOST_CHECK(window.Consume(MESSAGE_SIZE));\r\n    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), WINDOW_MAX_BYTES - MESSAGE_SIZE);\r\n```",
      "commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "created_at" : "2022-05-27T16:27:18Z",
      "diff_hunk" : "@@ -150,4 +152,138 @@ BOOST_FIXTURE_TEST_CASE(logging_LogPrintMacros_CategoryName, LogSetup)\n     BOOST_CHECK_EQUAL_COLLECTIONS(log_lines.begin(), log_lines.end(), expected.begin(), expected.end());\n }\n \n+BOOST_AUTO_TEST_CASE(logging_ratelimit_window)\n+{\n+    SetMockTime(std::chrono::hours{1});\n+    BCLog::LogRateLimiter window;\n+\n+    // Check that window gets initialised correctly.\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 1024ull * 1024ull);\n+    BOOST_CHECK_EQUAL(window.GetDroppedBytes(), 0ull);\n+\n+    BOOST_CHECK(window.Consume(512ull * 1024ull));\n+    BOOST_CHECK_EQUAL(window.GetAvailableBytes(), 512ull * 1024ull);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r883766689",
      "id" : 883766689,
      "line" : 165,
      "node_id" : "PRRC_kwDOABII5840rTWh",
      "original_commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "original_line" : 165,
      "original_position" : 38,
      "original_start_line" : 163,
      "path" : "src/test/logging_tests.cpp",
      "position" : 38,
      "pull_request_review_id" : 987737220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883766689/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 163,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-27T17:15:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883766689",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r883768346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883768346"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can I convince you to split this line to make it a bit more readable?\r\n\r\n```suggestion\r\n        void LogPrintStr(const std::string& str, const std::string& logging_function,\r\n                         const SourceLocation& source_location, const BCLog::LogFlags category,\r\n                         const BCLog::Level level);\r\n```",
      "commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "created_at" : "2022-05-27T16:29:33Z",
      "diff_hunk" : "@@ -107,12 +183,13 @@ namespace BCLog {\n         bool m_log_time_micros = DEFAULT_LOGTIMEMICROS;\n         bool m_log_threadnames = DEFAULT_LOGTHREADNAMES;\n         bool m_log_sourcelocations = DEFAULT_LOGSOURCELOCATIONS;\n+        bool m_ratelimit{DEFAULT_RATELIMITLOGGING};\n \n         fs::path m_file_path;\n         std::atomic<bool> m_reopen_file{false};\n \n         /** Send a string to the log output */\n-        void LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line, const BCLog::LogFlags category, const BCLog::Level level);\n+        void LogPrintStr(const std::string& str, const std::string& logging_function, const SourceLocation& source_location, const BCLog::LogFlags category, const BCLog::Level level);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r883768346",
      "id" : 883768346,
      "line" : 192,
      "node_id" : "PRRC_kwDOABII5840rTwa",
      "original_commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "original_line" : 192,
      "original_position" : 206,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 206,
      "pull_request_review_id" : 987737220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883768346/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-27T17:15:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883768346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r883793744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883793744"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is the `category != LogFlags::NONE` necessary here? I don't think anything logs with category NONE now.",
      "commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "created_at" : "2022-05-27T17:06:06Z",
      "diff_hunk" : "@@ -334,19 +339,20 @@ namespace BCLog {\n     }\n } // namespace BCLog\n \n-void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line, const BCLog::LogFlags category, const BCLog::Level level)\n+void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const SourceLocation& source_location, const BCLog::LogFlags category, const BCLog::Level level)\n {\n     StdLockGuard scoped_lock(m_cs);\n     std::string str_prefixed = LogEscapeMessage(str);\n \n-    if ((category != LogFlags::NONE || level != Level::None) && m_started_new_line) {\n+    const bool print_category{category != LogFlags::NONE && category != LogFlags::UNCONDITIONAL_ALWAYS && category != LogFlags::UNCONDITIONAL_RATE_LIMITED};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r883793744",
      "id" : 883793744,
      "line" : 347,
      "node_id" : "PRRC_kwDOABII5840rZ9Q",
      "original_commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "original_line" : 347,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 48,
      "pull_request_review_id" : 987737220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883793744/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-27T17:15:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883793744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884686588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884686588"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There are still tests that log using NONE:\r\nhttps://github.com/bitcoin/bitcoin/blob/a6377c5fe4f8d8fabbae527df888afdd9c6f771a/src/test/logging_tests.cpp#L80-L81\r\n\r\nWhat do you think of removing the NONE category entirely?",
      "commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "created_at" : "2022-05-30T10:39:03Z",
      "diff_hunk" : "@@ -334,19 +339,20 @@ namespace BCLog {\n     }\n } // namespace BCLog\n \n-void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line, const BCLog::LogFlags category, const BCLog::Level level)\n+void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const SourceLocation& source_location, const BCLog::LogFlags category, const BCLog::Level level)\n {\n     StdLockGuard scoped_lock(m_cs);\n     std::string str_prefixed = LogEscapeMessage(str);\n \n-    if ((category != LogFlags::NONE || level != Level::None) && m_started_new_line) {\n+    const bool print_category{category != LogFlags::NONE && category != LogFlags::UNCONDITIONAL_ALWAYS && category != LogFlags::UNCONDITIONAL_RATE_LIMITED};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884686588",
      "id" : 884686588,
      "in_reply_to_id" : 883793744,
      "line" : 349,
      "node_id" : "PRRC_kwDOABII5840uz78",
      "original_commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "original_line" : 349,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 50,
      "pull_request_review_id" : 989151574,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884686588/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T10:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884686588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884712427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884712427"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think those should be replaced with `LogPrintf_(..., BCLog::LogFlags::UNCONDITIONAL_ALWAYS, ...)`, since it's impossible for `LogPrintf_(..., BCLog::LogFlags::NONE, ...)` to be called in the produce code.\r\n\r\nIt seems fine to remove `BCLog::LogFlags::NONE` after that, but I don't think it's necessary in this PR.",
      "commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "created_at" : "2022-05-30T11:10:49Z",
      "diff_hunk" : "@@ -334,19 +339,20 @@ namespace BCLog {\n     }\n } // namespace BCLog\n \n-void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const std::string& source_file, const int source_line, const BCLog::LogFlags category, const BCLog::Level level)\n+void BCLog::Logger::LogPrintStr(const std::string& str, const std::string& logging_function, const SourceLocation& source_location, const BCLog::LogFlags category, const BCLog::Level level)\n {\n     StdLockGuard scoped_lock(m_cs);\n     std::string str_prefixed = LogEscapeMessage(str);\n \n-    if ((category != LogFlags::NONE || level != Level::None) && m_started_new_line) {\n+    const bool print_category{category != LogFlags::NONE && category != LogFlags::UNCONDITIONAL_ALWAYS && category != LogFlags::UNCONDITIONAL_RATE_LIMITED};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884712427",
      "id" : 884712427,
      "in_reply_to_id" : 883793744,
      "line" : 349,
      "node_id" : "PRRC_kwDOABII5840u6Pr",
      "original_commit_id" : "9d84cb2cd20d7951682ca8415488ed96a5f2cf1c",
      "original_line" : 349,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 50,
      "pull_request_review_id" : 989187978,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884712427/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884712427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "created_at" : "2022-05-30T11:11:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1141024541",
      "id" : 1141024541,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EAqcd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141024541/reactions"
      },
      "updated_at" : "2022-05-30T11:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141024541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884717374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884717374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why are you removing this include when it is needed?",
      "commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "created_at" : "2022-05-30T11:17:17Z",
      "diff_hunk" : "@@ -7,7 +7,6 @@\n #include <logging.h>\n #include <util/threadnames.h>\n #include <util/string.h>\n-#include <util/time.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884717374",
      "id" : 884717374,
      "line" : 10,
      "node_id" : "PRRC_kwDOABII5840u7c-",
      "original_commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "original_line" : 10,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 4,
      "pull_request_review_id" : 989195045,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884717374/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884717374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884721244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884721244"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could drop this and use C++11 member init?",
      "commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "created_at" : "2022-05-30T11:22:16Z",
      "diff_hunk" : "@@ -75,6 +105,47 @@ namespace BCLog {\n         Error = 4,\n     };\n \n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n+\n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::seconds m_last_reset;\n+        //! Remaining bytes in the current window interval.\n+        uint64_t m_available_bytes;\n+        //! Number of bytes that were not consumed within the current window.\n+        uint64_t m_dropped_bytes{0};\n+        //! Reset the window if the window interval has passed since the last reset.\n+        void MaybeReset();\n+\n+    public:\n+        //! Interval after which the window is reset.\n+        static constexpr std::chrono::hours WINDOW_SIZE{1};\n+        //! The maximum number of bytes that can be logged within one window.\n+        static constexpr uint64_t WINDOW_MAX_BYTES{1024 * 1024};\n+\n+        LogRateLimiter()\n+            : m_last_reset{GetTime<std::chrono::seconds>()},\n+              m_available_bytes{WINDOW_MAX_BYTES} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884721244",
      "id" : 884721244,
      "line" : 131,
      "node_id" : "PRRC_kwDOABII5840u8Zc",
      "original_commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "original_line" : 131,
      "original_position" : 153,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 153,
      "pull_request_review_id" : 989195045,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884721244/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884721244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">     * Only `LogPrintf(â¦)` is rate limited. `LogPrint(category, â¦)` (`-debug`) is not rate limited.\r\n\r\nIt looks like many of the LogPrintf messages will be going away with the update to severity-based logging and the added complexity here may be worth reevaluating (and potentially avoiding) after that.",
      "created_at" : "2022-05-30T11:24:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1141037105",
      "id" : 1141037105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EAtgx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141037105/reactions"
      },
      "updated_at" : "2022-05-30T11:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141037105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884722666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884722666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        std::chrono::steady_clock::time_point m_last_reset{std::chrono::steady_clock::now()};\r\n```\r\n\r\nLooks like you are not mocking this in the tests, so could use steady clock?\r\n\r\nIf not, new code should probably use `NodeClock::now()` over `GetTime()`.",
      "commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "created_at" : "2022-05-30T11:24:07Z",
      "diff_hunk" : "@@ -75,6 +105,47 @@ namespace BCLog {\n         Error = 4,\n     };\n \n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n+\n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::seconds m_last_reset;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884722666",
      "id" : 884722666,
      "line" : 115,
      "node_id" : "PRRC_kwDOABII5840u8vq",
      "original_commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "original_line" : 115,
      "original_position" : 137,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 137,
      "pull_request_review_id" : 989195045,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884722666/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T11:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884722666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884853910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884853910"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I moved the include to `logging.h` where it is needed for `GetTime()` etc.",
      "commit_id" : "c86d5ff02a31322612555db559e1d97ef329e27f",
      "created_at" : "2022-05-30T13:51:47Z",
      "diff_hunk" : "@@ -7,7 +7,6 @@\n #include <logging.h>\n #include <util/threadnames.h>\n #include <util/string.h>\n-#include <util/time.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884853910",
      "id" : 884853910,
      "in_reply_to_id" : 884717374,
      "line" : 10,
      "node_id" : "PRRC_kwDOABII5840vcyW",
      "original_commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "original_line" : 10,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 4,
      "pull_request_review_id" : 989385683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884853910/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T13:51:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884853910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884854133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884854133"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed it to use `NodeClock`.",
      "commit_id" : "c86d5ff02a31322612555db559e1d97ef329e27f",
      "created_at" : "2022-05-30T13:52:01Z",
      "diff_hunk" : "@@ -75,6 +105,47 @@ namespace BCLog {\n         Error = 4,\n     };\n \n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n+\n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::seconds m_last_reset;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884854133",
      "id" : 884854133,
      "in_reply_to_id" : 884722666,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5840vc11",
      "original_commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "original_line" : 115,
      "original_position" : 137,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 989386010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884854133/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T13:52:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884854133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884859900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884859900"
         }
      },
      "author_association" : "MEMBER",
      "body" : "According to the dev notes and iwyu it will need to be included in both files if both files use it.",
      "commit_id" : "c86d5ff02a31322612555db559e1d97ef329e27f",
      "created_at" : "2022-05-30T13:58:04Z",
      "diff_hunk" : "@@ -7,7 +7,6 @@\n #include <logging.h>\n #include <util/threadnames.h>\n #include <util/string.h>\n-#include <util/time.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884859900",
      "id" : 884859900,
      "in_reply_to_id" : 884717374,
      "line" : 10,
      "node_id" : "PRRC_kwDOABII5840veP8",
      "original_commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "original_line" : 10,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 4,
      "pull_request_review_id" : 989394005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884859900/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T13:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884859900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884863156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884863156"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah I wasn't aware, thanks for pointing this out. Will amend.",
      "commit_id" : "c86d5ff02a31322612555db559e1d97ef329e27f",
      "created_at" : "2022-05-30T14:01:46Z",
      "diff_hunk" : "@@ -7,7 +7,6 @@\n #include <logging.h>\n #include <util/threadnames.h>\n #include <util/string.h>\n-#include <util/time.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#discussion_r884863156",
      "id" : 884863156,
      "in_reply_to_id" : 884717374,
      "line" : 10,
      "node_id" : "PRRC_kwDOABII5840vfC0",
      "original_commit_id" : "a6377c5fe4f8d8fabbae527df888afdd9c6f771a",
      "original_line" : 10,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 4,
      "pull_request_review_id" : 989398798,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21603",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884863156/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-30T14:01:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884863156",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It looks like many of the LogPrintf messages will be going away with the update to severity-based logging and the added complexity here may be worth reevaluating (and potentially avoiding) after that.\r\n\r\n@jonatack IMO removing some of the `LogPrintf` locations (or assigning them a severity level which is not logged by default) does not really address the issue at its root like this PR is trying to do. Any remaining default logging could still cause issues as well as any logging that is introduced in the future.",
      "created_at" : "2022-05-30T14:13:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1141207648",
      "id" : 1141207648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EBXJg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141207648/reactions"
      },
      "updated_at" : "2022-05-30T14:13:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141207648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What I am working on is that no logging on by default would be externally provokable (and potentially removing LogPrintf). That along with reducing default logging in general has appeared to be the desired direction for some time now AFAICS. Of course, this could still be merged in the interim and then removed if no longer needed, but I'm targeting the next release.",
      "created_at" : "2022-05-30T14:21:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1141216700",
      "id" : 1141216700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EBZW8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141216700/reactions"
      },
      "updated_at" : "2022-05-30T14:26:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141216700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reACK c86d5ff02a31322612555db559e1d97ef329e27f",
      "created_at" : "2022-05-30T14:36:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1141231549",
      "id" : 1141231549,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EBc-9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141231549/reactions"
      },
      "updated_at" : "2022-05-30T14:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1141231549",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What I am working on is that no logging on by default would be externally provokable (and potentially removing LogPrintf). That along with reducing default logging in general has appeared to be the desired direction for some time now AFAICS. Of course, this could still be merged in the interim and then removed if no longer needed, but I'm targeting the next release.\r\n\r\nWith https://github.com/bitcoin/bitcoin/pull/25202/commits/bd971bffb02c7b06aac9a479f7e5ed8f71de2bec, category-based logging with a severity `>= BCLog::Level::Warning` is equivalent to `LogPrintf` from the viewpoint of disk filling attacks.\r\nI think that it would be really good to have this general countermeasure in place, especially with probable future PRs that convert more existing log messages to the new format, because we'll now have to be careful about not adding category-based warnings or errors that could be triggered externally. The old rule, which is no longer valid but probably still in many contributors' heads was that one only needs to be careful about `LogPrintf`, while category-base logging is not so critical.",
      "created_at" : "2022-05-31T15:29:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1142288592",
      "id" : 1142288592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EFfDQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142288592/reactions"
      },
      "updated_at" : "2022-05-31T15:29:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142288592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> convert more existing log messages to the new format, because we'll now have to be careful about not adding category-based warnings or errors that could be triggered externally\n\nYes, doing precisely this right now for all of them. Though, assuming people are in favor of that, maybe reviewers might prefer extending this rate limiting to non-default logging or otherwise it can always still be removed.",
      "created_at" : "2022-05-31T16:51:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1142381498",
      "id" : 1142381498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EF1u6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142381498/reactions"
      },
      "updated_at" : "2022-05-31T17:00:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142381498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is it possible to convert *all* of them? I think currently we don't have a way to express a log category but unconditional log severity. Unless you want to use `Warning`/`Error` for \"unconditional\".",
      "created_at" : "2022-05-31T17:04:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1142392438",
      "id" : 1142392438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EF4Z2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142392438/reactions"
      },
      "updated_at" : "2022-05-31T17:04:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142392438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke added that in #25203.",
      "created_at" : "2022-05-31T17:08:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1142396140",
      "id" : 1142396140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EF5Ts",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142396140/reactions"
      },
      "updated_at" : "2022-06-06T14:07:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142396140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Though, assuming people are in favor of that, maybe reviewers might prefer extending this rate limiting to non-default logging.\r\n\r\nGood point, I think that this would definitely be useful (here or as a follow-up) - having a rate limit only for `LogPrintf` but not for unconditionally logged category-based warnings and errors would be confusing.",
      "created_at" : "2022-05-31T18:43:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1142522007",
      "id" : 1142522007,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EGYCX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142522007/reactions"
      },
      "updated_at" : "2022-05-31T18:43:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142522007",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Good point, I think that this would definitely be useful (here or as a follow-up) - having a rate limit only for `LogPrintf` but not for unconditionally logged category-based warnings and errors would be confusing.\r\n\r\nI agree; though as an example just updated the (copious) net processing logging in #25203 and there are a only a few remaining unconditional messages (user-controlled or unusual):\r\n```\r\nsrc/net_processing.cpp:2305:                LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Large reorg, won't direct fetch to %s (%d)\\n\",\r\nsrc/net_processing.cpp:2702:            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Connected to self at %s, disconnecting\\n\", pfrom.addr.ToString());\r\nsrc/net_processing.cpp:3425:                    LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Not relaying non-mempool transaction %s from forcerelay peer=%d\\n\", tx.GetHash().ToString(), pfrom.GetId());\r\nsrc/net_processing.cpp:4190:        LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Not punishing misbehaving peer %d because it has noban permission set!\\n\", peer.m_id);\r\nsrc/net_processing.cpp:4196:        LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Not punishing misbehaving peer %d because it was manually connected!\\n\", peer.m_id);\r\nsrc/net_processing.cpp:4873:                        LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Announcing block %s not on main chain (tip=%s)\\n\",\r\n```\r\n",
      "created_at" : "2022-05-31T18:52:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1142528802",
      "id" : 1142528802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EGZsi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142528802/reactions"
      },
      "updated_at" : "2022-06-06T14:15:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142528802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> having a rate limit only for LogPrintf but not for unconditionally logged category-based warnings and errors would be confusing.\r\n\r\nAlso agree with this and i want to add that to this PR.\r\n\r\nThe two new categories I introduce here (`UNCONDITIONAL_ALWAYS` and `UNCONDITIONAL_RATE_LIMITED`) don't really make sense anymore, given that we now also have category based unconditional logging. Whether a log location should be rate limited could purely be based on the severity level.\r\nI was thinking of the following: Adding an extra severity `Always` which is logged unconditionally without rate limiting (e.g. for [this](https://github.com/bitcoin/bitcoin/blob/1b2e1d179c5b350cac69ee670e01355314f25e11/src/validation.cpp#L2517) location) and rate limiting logging to disk if `severity == None || (severity >= Warning && severity < Always)`. Additionally, categories specified by `-debug=cat` should still be logged unconditionally without rate limiting.  @mzumsande @jonatack @MarcoFalke what do y'all think of that?",
      "created_at" : "2022-06-06T12:35:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1147399881",
      "id" : 1147399881,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585EY-7J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147399881/reactions"
      },
      "updated_at" : "2022-06-06T12:35:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147399881",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-06-14T11:03:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1155035833",
      "id" : 1155035833,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585E2HK5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1155035833/reactions"
      },
      "updated_at" : "2022-06-14T11:03:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1155035833",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I was thinking of the following: Adding an extra severity `Always` which is logged unconditionally without rate limiting (e.g. for [this](https://github.com/bitcoin/bitcoin/blob/1b2e1d179c5b350cac69ee670e01355314f25e11/src/validation.cpp#L2517) location) and rate limiting logging to disk if `severity == None || (severity >= Warning && severity < Always)`. Additionally, categories specified by `-debug=cat` should still be logged unconditionally without rate limiting. @mzumsande @jonatack @MarcoFalke what do y'all think of that?\r\n\r\nSo, it seems to me that with the recent changes, we currently have \r\n1) Unconditional logging with no level and no category (`LogPrintf`)\r\n2) Conditional logging with category but no level (`LogPrint`) - not relevant to this PR\r\n3) Unconditional logging with category but no level (`LogPrintfCategory`)\r\n4) Logging with category and level, which may be unconditional depending on the level (`LogPrintLevel`)\r\n\r\nThe \"missing\" combination of logging by level but without a category is currently not possible as far as I can see.\r\n\r\nIf there would be a use case for having \"Always\" logged messages also to have a severity like \"Warning\" or \"Error\" we'd need another dimension -  but I think that at least for the current uses this is not the case, so your suggestion makes sense to me.\r\n\r\nHowever, I'm really not sure how stable the current state of the changes to the logging framework is, it seems very much in flow and I'm a little bit confused about what direction it is heading:\r\n- The severity threshold mentioned in 4) was added in #25202, but after reading [this comment](https://github.com/bitcoin/bitcoin/pull/25306#issuecomment-1150250132) by @laanwj I'm not sure it will stay.\r\n- Is the final goal for each logging message to have both a category and a level so that 1) and 2)  and 3) would vanish over time? That would probably reduce the complexity of the rate-limiting considerably.\r\n\r\n",
      "created_at" : "2022-06-22T15:01:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1163223549",
      "id" : 1163223549,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585FVWH9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163223549/reactions"
      },
      "updated_at" : "2022-06-22T15:13:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163223549",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If there is a log category with `Info`, which is also the default level, you wouldn't need an `Always` level?",
      "created_at" : "2022-06-22T15:34:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1163269607",
      "id" : 1163269607,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585FVhXn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163269607/reactions"
      },
      "updated_at" : "2022-06-22T15:34:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163269607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> If there is a log category with `Info`, which is also the default level, you wouldn't need an `Always` level?\r\n\r\nI don't see how - the \"Always\" level is meant for noisy unconditional logs that can hit the rate limit, but are so important that they should be exempt from it - basically only `UpdateTipLog` during IBD.",
      "created_at" : "2022-06-23T01:11:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1163816359",
      "id" : 1163816359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585FXm2n",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163816359/reactions"
      },
      "updated_at" : "2022-06-23T01:11:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163816359",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm about to push an update to #25203 to incorporate https://github.com/bitcoin/bitcoin/pull/25287 and the changes discussed in #25306, and the current approach is that the `None` severity level is only used internally, i.e. in src/logging.{h.cpp}, and moved to the end of the enum to permit iterating through it similar to GetNetworkNames() / `NET_MAX`.",
      "created_at" : "2022-06-23T18:14:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1164723719",
      "id" : 1164723719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585FbEYH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164723719/reactions"
      },
      "updated_at" : "2022-06-23T18:15:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164723719",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The logging you might be worried about limiting would be, with the current direction, IIRC:\r\n\r\n- LogPrintf\r\n- LogPrintfWithCategory\r\n- LogPrintLevel with level Info/Warning/Error (these levels are planned to be logged unconditionally, while Debug and Trace would not)\r\n",
      "created_at" : "2022-06-23T18:18:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21603#issuecomment-1164727482",
      "id" : 1164727482,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21603",
      "node_id" : "IC_kwDOABII585FbFS6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164727482/reactions"
      },
      "updated_at" : "2022-06-23T18:20:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164727482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
