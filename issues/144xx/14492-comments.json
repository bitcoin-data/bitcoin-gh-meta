[
   {
      "author_association" : "MEMBER",
      "body" : "From https://ftp.gnu.org/old-gnu/Manuals/autoconf-2.53/html_node/Pretty-Help-Strings.html:\r\n\r\n> Properly formatting the help strings which are used in AC_ARG_WITH (see External Software) and AC_ARG_ENABLE (see Package Options) can be challenging.\r\n\r\nSo NACK `AC_ARG_WITH` aliases.\r\n\r\nThe other alias I'm -0, don't think build scripts should offer ambiguity.",
      "created_at" : "2018-10-16T09:27:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14492#issuecomment-430167442",
      "id" : 430167442,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMDE2NzQ0Mg==",
      "updated_at" : "2018-10-16T09:27:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430167442",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> So NACK `AC_ARG_WITH` aliases.\r\n\r\nThe 'with' versus 'enable' make sense from a package perspective (you compile WITH libzmq, and you ENABLE internal tests), but this is simply a way of wording things. Note that we at the end say \"with tests\" despite using the enable alternative. I'm fairly convinced this is a special case worth considering, despite GNU docs.\r\n\r\nAs a sidenote, we are currently using 'with(out)-gui' despite it being an internal feature. It may be a part of why I keep mixing these up, actually.\r\n\r\nI'm fine with dropping the without part, but I am hopeful I can not have to run configure twice all the time as I keep writing 'disable-test' to match up e.g. 'disable-bench'.\r\n\r\n> The other alias I'm -0, don't think build scripts should offer ambiguity.\r\n\r\nThere is nothing ambiguous about accepting two versions for the same configuration option.",
      "created_at" : "2018-10-16T09:39:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14492#issuecomment-430171335",
      "id" : 430171335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMDE3MTMzNQ==",
      "updated_at" : "2018-10-17T07:50:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430171335",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> As a sidenote, we are currently using 'with(out)-gui' despite it being an internal feature. It may be a part of why I keep mixing these up, actually.\r\n\r\nFrom a quick look these should use `AC_ARG_ENABLE`\r\n```\r\n--without-daemon                     --with-daemon                     -- build bitcoind daemon (default=yes)\r\n--without-gui                        --with-gui                        -- build bitcoin-qt GUI (default=auto)\r\n--without-libs                       --with-libs                       -- build libraries (default=yes)\r\n--without-utils                      --with-utils                      -- build bitcoin-cli bitcoin-tx (default=yes)\r\n```\r\n\r\nIMO the distinction between `--enable` and `--with` is nice and we could avoid mixing that.\r\n\r\nWhat I think could help is to error if an unknown option is set which currently is ignored. cc @theuni (?)",
      "created_at" : "2018-10-18T00:07:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14492#issuecomment-430830960",
      "id" : 430830960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMDgzMDk2MA==",
      "updated_at" : "2018-10-18T00:07:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430830960",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@promag Yeah that makes sense to me. People have been using these for years though, so I'm not sure it's gonna be easy to convince people.",
      "created_at" : "2018-10-18T01:13:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14492#issuecomment-430841619",
      "id" : 430841619,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMDg0MTYxOQ==",
      "updated_at" : "2018-10-18T01:13:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430841619",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "not sure about this; yes, it's user friendlier to \"guess the right thing\" on typos, and I don't think there's any possible ambiguity here\r\n\r\non the other hand, I don't personally know enough about obscure m4 dialects to be confident about this not breaking something on some platform/autoconf/...\r\n\r\n> What I think could help is to error if an unknown option is set which currently is ignored. cc @theuni (?)\r\n\r\nI've been frustrated myself at times at invalid options silently being accepted and ignored, but I think this is not possible, or at least greatly complicated due to the pass-through logic. For exampleÃ¢ÂÂit is possible to pass secp256k1 configure arguments with regard to assembly to the top-level `configure` script.\r\n\r\n> @promag Yeah that makes sense to me. People have been using these for years though, so I'm not sure it's gonna be easy to convince people.\r\n\r\nYes, that would be more correct. Not worth the bother IMO.",
      "created_at" : "2018-10-18T08:07:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14492#issuecomment-430915076",
      "id" : 430915076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMDkxNTA3Ng==",
      "updated_at" : "2018-10-18T08:07:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430915076",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj I'm fairly sure autoconf works in exactly the same way in this regard (process chronological order and execute no-value case in order of appearance), no matter the platform/architecture/dialect. If not, it would probably break other things left and right in subtle and horrifying ways.\r\n\r\n(Am I really the only person who ever gets these two wrong? I literally get it wrong 50% of the time, even today.)",
      "created_at" : "2018-10-18T08:16:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14492#issuecomment-430917865",
      "id" : 430917865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMDkxNzg2NQ==",
      "updated_at" : "2018-10-18T08:16:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430917865",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kallewoof I just use tab completion after `./configure `, and I don't think I ever noticed the inconsistency between the cmdline option and what is printed in the summary.",
      "created_at" : "2018-10-18T08:35:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14492#issuecomment-430923825",
      "id" : 430923825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14492",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMDkyMzgyNQ==",
      "updated_at" : "2018-10-18T08:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430923825",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
