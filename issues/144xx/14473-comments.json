[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm seeing that the first time we sign, we drop the redeem_script field from the input (as well as the bip32derivs field), while adding final_scriptSig and final_scriptwitness. Then if we're asked to sign again, suddenly we convert the input from a witness_utxo into a non_witness_utxo, which causes the consistency check to fail (since the final_scriptwitness is still present.)\r\n\r\nI faintly suspect that the fact that we're dropping the redeem_script perhaps causes us to then be unable to figure out that we're looking at a P2WPKH-in-P2SH, and mistakenly fall back to something else undesirable.\r\n\r\nI'm not sure whether we should be dropping redeem_script, but we probably should not be attempting to sign an input that's already signed, which is how we mess it up.",
      "created_at" : "2018-10-13T09:09:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14473#issuecomment-429524656",
      "id" : 429524656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14473",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyOTUyNDY1Ng==",
      "updated_at" : "2018-10-13T09:10:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/429524656",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Aha, found it:\r\n\r\n* Every time we FillPSBT, we grab both the witness and non-witness versions of the utxo representation (the output only, versus the whole transaction), and put both of them into the PSBT structure, counting on some later processing to drop the redundant one.\r\n* When FillPSBT calls SignPSBTInput, the latter will always drop the non-witness representation if both are present, preferring the witness one.\r\n* But if the input is already signed, SignPSBTInput will return early, before performing that drop, leaving both representations present (an invalid PSBT.)\r\n* Then when serializing, PSBTInput::Serialize covers up the mistake by dropping one of the representations -- but _it_ always drops the witness version, leaving the non-witness one.\r\n* The resulting PSBT, with a final_scriptwitness but a non_witness_utxo, is invalid.\r\n\r\nI suspect some refactoring will be involved in the best fix for this, since the blame is distributed in several places (and it would be good to avoid other possible errors like this, which will require understanding what sorts of invariants are meant to be maintained across various functions -- which I'm not sure was precisely considered the first time around.)\r\n\r\n@achow101, as the original author, any thoughts?\r\n\r\nSome possible fixes: (1) to have SignPSBTInput always drop the redundant representation, (2) to have Serialize always drop the non-witness instead of the witness representation for consistency, (3) allow a final_scriptwitness with a non_witness_utxo (this merely includes redundant information, right?)\r\n\r\nI don't like (2) because it's arbitrary. I don't like (3) alone because it's nonintuitive that re-signing a signed transaction causes it to change, even if the resulting transaction is still valid. I think (1) would be reasonable as a quick fix. ",
      "created_at" : "2018-10-13T09:26:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14473#issuecomment-429525595",
      "id" : 429525595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14473",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyOTUyNTU5NQ==",
      "updated_at" : "2018-10-13T09:33:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/429525595",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I would think that the easiest fix is just not ever touching an input which has a final_scriptsig or final_scriptwitness. Since such inputs are final, we shouldn't be bothering to add UTXOs etc.",
      "created_at" : "2018-10-13T16:06:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14473#issuecomment-429553588",
      "id" : 429553588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14473",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyOTU1MzU4OA==",
      "updated_at" : "2018-10-13T16:06:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/429553588",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree with @sipa. If there is a `final_scriptsig` or `final_script_witness` for that input, we should skip processing of that input entirely.",
      "created_at" : "2018-10-13T17:51:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14473#issuecomment-429561737",
      "id" : 429561737,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14473",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyOTU2MTczNw==",
      "updated_at" : "2018-10-13T17:51:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/429561737",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree that seems like an easy fix, but:\r\n* Can we enforce an invariant that PartiallySignedTransaction only ever has a witness_utxo or a non_witness_utxo? That seems cleaner to me than the current situation where we sometimes have both and count on something to clean one up later, hoping it's the right one.\r\n* Failing that, could we at least enforce such an invariant by the time we're serializing, and have the serializer throw an exception, or assert or something, if it sees both fields, rather than arbitrarily guessing which one to discard (since as we've seen it has no reasonable way to guess right, and guessing wrongly just causes downstream problems?)",
      "created_at" : "2018-10-14T06:40:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/14473#issuecomment-429600862",
      "id" : 429600862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14473",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyOTYwMDg2Mg==",
      "updated_at" : "2018-10-14T06:43:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/429600862",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   }
]
