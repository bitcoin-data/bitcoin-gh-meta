{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "(attn @MarcoFalke and @practicalswift)\r\n\r\nLooking at process_messages, it seems that msg_type is an arbitrary string (up to max length), not fixed to the `NetMsgType`s in `protocol.cpp`.  The fuzzer or a dictionary has to produce valid strings; given the coverage, this obviously often succeeds.  But the code looks to drop an invalid type message pretty definitively, so would it be sensible to build a more efficient fuzzer that does a nondeterministic choice of a valid `NetMsgType`?\r\n\r\nIf so, it also opens up a version of the `process_messages` harness that does swarm testing, repeatedly hitting certain message types and omitting others, which can be very helpful sometimes (see https://www.cs.utah.edu/~regehr/papers/swarm12.pdf -- this is used a lot now in compiler testing, and in Apple's FoundationDB testing approach).\r\n\r\nI'd like to tackle this, but want to make sure the concept make sense, of\r\n\r\n1) focusing on valid types only\r\n2) applying swarm\r\n\r\nI'll also see about a translator to take the valid-messages-only inputs from the process_messages corpus and turn them into this kind of thing.  Initially they won't add coverage, but (some) fuzzers will have an easier time exploring this version, and I'm hoping swarm will be useful.\r\n\r\nAs a side issue, the harness now uses a bool to choose arbitrary # of messages to try.  Apparently repeating deep IS useful for state/coverage, since I checked and a large number of the corpus inputs get to depth 10 or deeper.\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628/comments",
   "created_at" : "2021-08-04T23:10:16Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628",
   "id" : 961190557,
   "labels" : [
      {
         "color" : "7cf575",
         "default" : false,
         "description" : null,
         "id" : 64583,
         "name" : "Feature",
         "node_id" : "MDU6TGFiZWw2NDU4Mw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU5NjExOTA1NTc=",
   "number" : 22628,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "fuzz: focused process_messages fuzz harness with swarm testing",
   "updated_at" : "2021-08-04T23:10:16Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
      "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
      "followers_url" : "https://api.github.com/users/agroce/followers",
      "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
      "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/agroce",
      "id" : 967816,
      "login" : "agroce",
      "node_id" : "MDQ6VXNlcjk2NzgxNg==",
      "organizations_url" : "https://api.github.com/users/agroce/orgs",
      "received_events_url" : "https://api.github.com/users/agroce/received_events",
      "repos_url" : "https://api.github.com/users/agroce/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/agroce"
   }
}
