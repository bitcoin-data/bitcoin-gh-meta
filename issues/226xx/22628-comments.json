[
   {
      "author_association" : "MEMBER",
      "body" : "> a nondeterministic choice of a valid NetMsgType\r\n\r\nWait, I thought fuzzing ought to be deterministic? Have you seen the `process_message_$type` fuzz targets? I am regularly cross-pollinating their inputs with the other targets. (https://github.com/bitcoin-core/qa-assets/commit/3368bee6bd327f74cd43eda78593091b9e44cff3)\r\n\r\n> As a side issue, the harness now uses a bool to choose arbitrary # of messages to try.\r\n\r\nI didn't get the issue. Is there an alternative version that is preferable?\r\n\r\n> I'll also see about a translator to take the valid-messages-only inputs from the process_messages corpus and turn them into this kind of thing. Initially they won't add coverage, but (some) fuzzers will have an easier time exploring this version, and I'm hoping swarm will be useful.\r\n\r\nInteresting. Generally I think today's fuzz engines aren't smart enough to track coverage of stateful applications sufficiently. I believe one of the greatest risks of our regular \"delete non-reduced inputs\" task (https://github.com/bitcoin-core/qa-assets/pull/64) is that it deletes supposedly redundant inputs (presumably from the same \"swarm\") that exercise the state machine in ways that no other input does. I guess `-use_value_profile` helped a bit for libFuzzer (and it's counterparts for afl), but a coverage metric that includes state is still an open research question.",
      "created_at" : "2021-08-05T06:09:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-893192150",
      "id" : 893192150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841PQfW",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-05T06:10:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/893192150",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry -- I just meant it translates the bytes from the input stream into a choice from the message types.\r\n\r\nI saw the $type ones, but they won't mix & match, right?  Though cross-pollination could be about as good...",
      "created_at" : "2021-08-05T06:16:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-893195751",
      "id" : 893195751,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841PRXn",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-05T06:16:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/893195751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I saw the $type ones, but they won't mix & match, right? Though cross-pollination could be about as good...\r\n\r\nI am also running with uniform input crossover, which should mix and match them eventually.",
      "created_at" : "2021-08-05T06:20:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-893197545",
      "id" : 893197545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841PRzp",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-05T06:20:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/893197545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that basing the reduction on `-use_value_profile=1` does give some protection here, and I'm fairly confident that fuzzing based on the smaller of two inputs with identical coverage is usually better (and there has to be some limit to corpus for effective fuzzing), but yes, the lack of a solid coverage metric is a problem.\r\n\r\nI see, it's possible by putting all this \"in process\" we can get more out of the fuzzer's heuristics, but what you're doing will certainly approximate some of this.  I think I'll still code it up and then export back to the original format, to see if we get any surprising coverage gains from this.\r\n\r\nAs to the bool -- it just requires the fuzzer to figure out that if it wants longer runs, it needs to have that turn out non-zero.  Now,  guess it being \"non-zero\" gives a huge bitwise bias towards longer runs, up to the length, so it works out ok.  But if it was based on the final bit or something, constructing longer sequences would be tough (as it is, it's fairly hard to make a short sequence, unless you just don't generate many bytes).  Not an issue here.  I tend to construct these to choose a length in an initial choice, from a range, but doing this, with \"zeros when no more fuzz data\" seems to be just as good, or maybe better in some ways.",
      "created_at" : "2021-08-05T18:31:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-893687896",
      "id" : 893687896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841RJhY",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-05T18:31:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/893687896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke should the commands in `process_messages` inputs always be null-terminated strings?  it looks like they should, but some inputs have odd things like `getaddr(` in the data.  I suppose just a fuzzer near-miss?",
      "created_at" : "2021-08-05T23:41:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-893892321",
      "id" : 893892321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841R7bh",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-05T23:41:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/893892321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I can reverse engineer it, but if I want to write an integer in bytes to be read by 'ConsumeIntegralInRange` as on line 60 of https://github.com/agroce/bitcoin/blob/process_message_focused/src/test/fuzz/process_messages_focused.cpp, what byte count and format do I need to use?  4 bytes (it grabs an int if the start range type is int?), little endian?",
      "created_at" : "2021-08-06T00:25:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-893912624",
      "id" : 893912624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841SAYw",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T00:25:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/893912624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Now, guess it being \"non-zero\" gives a huge bitwise bias towards longer runs\r\n\r\nIt only uses 1 bit of the byte. So assuming uniform bytes, there shouldn't be a bias.\r\n\r\n```cpp\r\n// Reads one byte and returns a bool, or false when no data remains.\r\ninline bool FuzzedDataProvider::ConsumeBool() {\r\n  return 1 & ConsumeIntegral<uint8_t>();\r\n}\r\n```\r\n\r\n> if I want to write an integer in bytes to be read by 'ConsumeIntegralInRange`\r\n\r\nYou can use `fuzzed_data_provider.ConsumeIntegralInRange<int32_t>(0, 22)`. Regardless of what type you use, it will only grab one byte (because one byte is enough to cover the full range).",
      "created_at" : "2021-08-06T06:52:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894044502",
      "id" : 894044502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841SglW",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T06:52:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894044502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Am I correct in interpreting this code and comment:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/7ebc4c668968da084d7258b32c5f3b2aceefc232/src/test/fuzz/FuzzedDataProvider.h#L216-L227\r\n\r\nas saying bytes for integer ranges are somehow not read from the stream in order, but pulled from a separate \"section\" at the end of the fuzz input?",
      "created_at" : "2021-08-06T16:49:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894385324",
      "id" : 894385324,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841Tzys",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T16:49:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894385324",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "... so if I want to write code to \"translate\" an existing `process_messages` input into my form, I need to\r\n\r\n1) detect valid type strings and remove them from the binary data\r\n2) append a byte with the proper index at the end of the fuzz input, to be pulled off (this won't quite work if other ranges are read in the meantime, though, so I'll need to inspect for that...)",
      "created_at" : "2021-08-06T16:53:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894387550",
      "id" : 894387550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841T0Ve",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T16:53:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894387550",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, your reading of that comment seems correct. Fuzz input translation is non-trivial for most cases. See also #20837 .\r\n\r\nI think one way to achieve your desired translation is to implement a \"FuzzedDataSerializer\" (the inverse of the FuzzedDataProvider), then re-implement `process_messages` to (only) parse the old format and at the same time write the new format.\r\n\r\nAn alternative would be to just run fuzzing from scratch (maybe seeded with the `process_messages` inputs).",
      "created_at" : "2021-08-06T17:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894401302",
      "id" : 894401302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841T3sW",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T17:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894401302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Actually, I think I may \"cheat\" and just use `ConsumeByte` to index into the message types, which should be easy to implement a \"good enough\" translator.  I think separation makes sense for lengths, but my bytes are just a compressed version of the string, so in-stream for fuzzer to change seems maybe better anyway.",
      "created_at" : "2021-08-06T17:26:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894406869",
      "id" : 894406869,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841T5DV",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T17:26:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894406869",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I started on the parse-and-write this morning, but getting the details right with my need to dump in swarm config is annoying, I'll try Bytes first.",
      "created_at" : "2021-08-06T17:27:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894407526",
      "id" : 894407526,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841T5Nm",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T17:27:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894407526",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I won't do a PR until I see if this is actually useful, but I have a swarmed/indexed process_messages fuzzer up and running now, and looks like the conversion of old corpus maybe worked at least \"ok\"",
      "created_at" : "2021-08-06T21:30:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894528577",
      "id" : 894528577,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841UWxB",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T21:30:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894528577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/agroce/bitcoin/blob/process_message_focused/src/test/fuzz/process_messages_focused.cpp\r\n\r\n\r\n",
      "created_at" : "2021-08-06T21:31:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894529274",
      "id" : 894529274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841UW76",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T21:31:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894529274",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "(the conversion was very partial, since it doesn't yet have a way to deal with invalid messages in the stream, they simply throw everything off, but 2000+ of the 10K corpus did survive as useful)",
      "created_at" : "2021-08-06T23:13:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894561178",
      "id" : 894561178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841Ueua",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T23:13:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894561178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I have one run just gaining coverage going on it, and one with full sanitizers in case this is helpful in bug finding.",
      "created_at" : "2021-08-06T23:13:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-894561432",
      "id" : 894561432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII5841UeyY",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-06T23:13:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894561432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@agroce Thanks for your paper _Looking for Lacunae in Bitcoin Coreâs Fuzzing Efforts_. If you have any progress in swarm fuzzing, please let me know. I can try it when adding fuzz target for orphan transaction handling.",
      "created_at" : "2022-05-30T02:59:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22628#issuecomment-1140632520",
      "id" : 1140632520,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22628",
      "node_id" : "IC_kwDOABII585D_KvI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1140632520/reactions"
      },
      "updated_at" : "2022-05-30T02:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1140632520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24590067?v=4",
         "events_url" : "https://api.github.com/users/chinggg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/chinggg/followers",
         "following_url" : "https://api.github.com/users/chinggg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/chinggg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/chinggg",
         "id" : 24590067,
         "login" : "chinggg",
         "node_id" : "MDQ6VXNlcjI0NTkwMDY3",
         "organizations_url" : "https://api.github.com/users/chinggg/orgs",
         "received_events_url" : "https://api.github.com/users/chinggg/received_events",
         "repos_url" : "https://api.github.com/users/chinggg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/chinggg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/chinggg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/chinggg"
      }
   }
]
