[
   {
      "author_association" : "MEMBER",
      "body" : "utACK 953ed47b.",
      "created_at" : "2019-05-19T09:57:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-493743065",
      "id" : 493743065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5Mzc0MzA2NQ==",
      "updated_at" : "2019-05-19T09:57:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493743065",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/16045/commits/953ed47b42eac7453ad7e6436098301f0cb523a4",
      "created_at" : "2019-05-20T15:24:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-494034654",
      "id" : 494034654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5NDAzNDY1NA==",
      "updated_at" : "2019-05-20T15:24:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/494034654",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16045#discussion_r290741208"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16045"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/290741208"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Iâ¦ don't think this makes the code any more understandable, I had to think for a while to understand why this was `<64` and why one'd want to skip the memset if the data is smaller than that.\r\nCalling memset with size 0 is no problem. If calling it with a NULL pointer is, then a check for a null pointer should be added, not a check on the length.",
      "commit_id" : "953ed47b42eac7453ad7e6436098301f0cb523a4",
      "created_at" : "2019-06-05T13:37:07Z",
      "diff_hunk" : "@@ -11,7 +11,9 @@ CHMAC_SHA256::CHMAC_SHA256(const unsigned char* key, size_t keylen)\n     unsigned char rkey[64];\n     if (keylen <= 64) {\n         memcpy(rkey, key, keylen);\n-        memset(rkey + keylen, 0, 64 - keylen);\n+        if (keylen < 64) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#discussion_r290741208",
      "id" : 290741208,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MDc0MTIwOA==",
      "original_commit_id" : "953ed47b42eac7453ad7e6436098301f0cb523a4",
      "original_position" : 5,
      "path" : "src/crypto/hmac_sha256.cpp",
      "position" : 5,
      "pull_request_review_id" : 246010135,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16045",
      "updated_at" : "2019-06-05T13:37:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/290741208",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16045#discussion_r290965541"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16045"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/290965541"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I might have been a bit brief in the OP - let me clarify:\r\n\r\nThe goal of this PR is _not_ try to avoid `memset(nullptr, â¦, â¦)` (plus: `rkey + keylen` cannot be `nullptr`).\r\n\r\nThe goal of the PR is to avoid `memset(p, â¦, â¦)` where `p` is a pointer which is outside of the object and thus not valid for writing.\r\n\r\nPlease note that `rkey + 64` is outside of the object.\r\n\r\nSee these discussions for context:\r\n* https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489461791\r\n* https://stackoverflow.com/questions/29844298/is-it-legal-to-call-memcpy-with-zero-length-on-a-pointer-just-past-the-end-of-an\r\n\r\nPlease re-review in light of this clarification :-)\r\n\r\nShould I add a comment in the code making the rationale more clear?",
      "commit_id" : "953ed47b42eac7453ad7e6436098301f0cb523a4",
      "created_at" : "2019-06-05T22:51:56Z",
      "diff_hunk" : "@@ -11,7 +11,9 @@ CHMAC_SHA256::CHMAC_SHA256(const unsigned char* key, size_t keylen)\n     unsigned char rkey[64];\n     if (keylen <= 64) {\n         memcpy(rkey, key, keylen);\n-        memset(rkey + keylen, 0, 64 - keylen);\n+        if (keylen < 64) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#discussion_r290965541",
      "id" : 290965541,
      "in_reply_to_id" : 290741208,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MDk2NTU0MQ==",
      "original_commit_id" : "953ed47b42eac7453ad7e6436098301f0cb523a4",
      "original_position" : 5,
      "path" : "src/crypto/hmac_sha256.cpp",
      "position" : 5,
      "pull_request_review_id" : 246296525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16045",
      "updated_at" : "2019-06-06T05:50:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/290965541",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure if it's worth a discussion, but I don't see how the call to `memset` can result in undefined behaviour when `memset` takes a pointer to one past the last element of the `rkey` array and the `size_t` argument is `0`. This can't go wrong, can it?",
      "created_at" : "2019-06-15T12:46:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-502364018",
      "id" : 502364018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMjM2NDAxOA==",
      "updated_at" : "2019-06-15T12:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502364018",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@l2a5b1 Did you read the discussion(s) linked in the OP? :-)\r\n\r\n* https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489461791\r\n* https://stackoverflow.com/questions/29844298/is-it-legal-to-call-memcpy-with-zero-length-on-a-pointer-just-past-the-end-of-an\r\n",
      "created_at" : "2019-06-15T15:22:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-502375384",
      "id" : 502375384,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMjM3NTM4NA==",
      "updated_at" : "2019-06-15T15:22:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502375384",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift Thanks, yes I did.\r\n\r\nFrom https://github.com/bitcoin/bitcoin/pull/15950#issuecomment-489461791\r\n\r\n> *p1 |= ((unsigned char)HexDigit(*psz--) << 4);\r\n\r\nI agree. Here the behaviour will be undefined when `psz` takes address one before the initial element.\r\n\r\nIn case of this pull request, taking a pointer to one past the last element of the `rkey` array is defined as long as the pointer is not dereferenced or written to.\r\n\r\n> Unfortunately the spec is not entirely clear on this (see 7.24.1.2. and 7.1.4.1. in ISO/IEC 9899:201x N1570).\r\n> \r\n> Arguments for why the pointer should be valid for writing even in the case of n is 0 are given here:\r\n> \r\n> https://stackoverflow.com/questions/29844298/is-it-legal-to-call-memcpy-with-zero-length-on-a-pointer-just-past-the-end-of-an\r\n> The discussion is about memcpy but memset should have the same pointer requirements in this case.\r\n> \r\n\r\nI am not sure if I agree with the accepted answer in the stackoverflow thread. \r\n\r\nI do agree that the spec leaves room for interpretation. \r\n\r\nMy interpretation of the spec is that it is perfectly fine that `memset` takes a pointer that is one past the last element of an array provided that the `size_t` argument is `0`.\r\n\r\nBut more importantly, if `memset` wasn't able to handle this case, I assume that it would be very well documented or common knowledge.\r\n\r\nPerhaps you can add the arguments that you think are valid or relevant from the stackoverflow thread to the pull request description.\r\n\r\n\r\n\r\n",
      "created_at" : "2019-06-15T17:21:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-502384248",
      "id" : 502384248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMjM4NDI0OA==",
      "updated_at" : "2019-06-15T17:21:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502384248",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/13120787?v=4",
         "events_url" : "https://api.github.com/users/l2a5b1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/l2a5b1/followers",
         "following_url" : "https://api.github.com/users/l2a5b1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/l2a5b1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/l2a5b1",
         "id" : 13120787,
         "login" : "l2a5b1",
         "node_id" : "MDQ6VXNlcjEzMTIwNzg3",
         "organizations_url" : "https://api.github.com/users/l2a5b1/orgs",
         "received_events_url" : "https://api.github.com/users/l2a5b1/received_events",
         "repos_url" : "https://api.github.com/users/l2a5b1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/l2a5b1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/l2a5b1"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I do agree that the spec leaves room for interpretation.\r\n\r\nIn cases where the spec is unclear I think it makes sense to err on the side of caution. From the OP:\r\n\r\n_\"Nothing urgent obviously and perhaps not even an issue (the spec is a bit unclear) but would be nice to err on the side of caution in unclear cases like this :-)\"_",
      "created_at" : "2019-06-16T20:47:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-502484644",
      "id" : 502484644,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMjQ4NDY0NA==",
      "updated_at" : "2019-06-16T20:47:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502484644",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Four utACK:s - ready for merge?",
      "created_at" : "2019-06-25T12:53:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-505430986",
      "id" : 505430986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNTQzMDk4Ng==",
      "updated_at" : "2019-06-25T12:53:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/505430986",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "NACKish lacking benchmarks showing this has any significance. We shouldn't be adding code to `src/crypto` without a more compelling reason.",
      "created_at" : "2019-06-26T15:00:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-505914452",
      "id" : 505914452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNTkxNDQ1Mg==",
      "updated_at" : "2019-06-26T15:00:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/505914452",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jamesob Benchmarking? This is not an optimisation :-)",
      "created_at" : "2019-06-26T15:05:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-505916306",
      "id" : 505916306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNTkxNjMwNg==",
      "updated_at" : "2019-06-26T15:05:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/505916306",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Although I agree on being conservative, I don't see how this could cause a problem (unless there is already a problem and this fixes it).",
      "created_at" : "2019-06-26T17:30:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16045#issuecomment-505971444",
      "id" : 505971444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNTk3MTQ0NA==",
      "updated_at" : "2019-06-26T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/505971444",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/25986871?v=4",
         "events_url" : "https://api.github.com/users/JosuGZ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JosuGZ/followers",
         "following_url" : "https://api.github.com/users/JosuGZ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JosuGZ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JosuGZ",
         "id" : 25986871,
         "login" : "JosuGZ",
         "node_id" : "MDQ6VXNlcjI1OTg2ODcx",
         "organizations_url" : "https://api.github.com/users/JosuGZ/orgs",
         "received_events_url" : "https://api.github.com/users/JosuGZ/received_events",
         "repos_url" : "https://api.github.com/users/JosuGZ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JosuGZ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JosuGZ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JosuGZ"
      }
   }
]
