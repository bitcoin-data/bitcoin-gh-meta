[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This sounds like it could help clarify expectations around mempool policy and tx relay for users and application devs. I've heard people express confusion and fear about it, though I haven't heard anyone request a doc specifically.\r\n\r\nI agree that devs should be writing tests for the assumptions they're making. I also think having a markdown doc would be appropriate for guiding the process, as code comments might not be clear/communicative enough to people not familiar with the code, and BIPs are too static. I would frame it as \"don't just broadcast any transaction and expect it to propagate, here are some restrictions enforced by Bitcoin Core policy (not necessarily exhaustive)\"\r\n\r\nwrt maintainability, not to discount the burden of maintaining docs, but policy doesn't really change that much... maybe we can give it a shot? :)",
      "created_at" : "2021-08-27T11:09:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22806#issuecomment-907123081",
      "id" : 907123081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22806",
      "node_id" : "IC_kwDOABII5842EZmJ",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-27T11:33:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907123081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As an interface used by downstream projects, like the RPC interface I believe it makes sense for us to document (and deprecating / avoid breaking) the behaviour of Bitcoin Core for the relay policy.\r\n\r\nA document in the source tree updated as the code is modified seems to me to be a good first step in this direction.\r\n\r\nPinging @ariard who's long been advocating for such a documentation.",
      "created_at" : "2021-08-27T11:19:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22806#issuecomment-907128827",
      "id" : 907128827,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22806",
      "node_id" : "IC_kwDOABII5842Ea_7",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-27T11:19:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907128827",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  like the RPC interface\r\n\r\nThe RPC documentation is affected by the same issues. (plain wrong, outdated, incomplete, ...)\r\n\r\nI think compiling the documentation or otherwise making it machine-readable and checking it for every commit by the CI is the only way to make it as reliable as possible.",
      "created_at" : "2021-08-27T12:08:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22806#issuecomment-907153891",
      "id" : 907153891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22806",
      "node_id" : "IC_kwDOABII5842EhHj",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-27T12:08:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907153891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> misunderstanding of the author\r\n> it becoming stale/outdated\r\n> it being incomplete\r\n\r\nYes that's a risk with any documentation and yes the IETF RFCs have multiple errata/addendums! Though we have 50y of history proving that's a not so bad engineering practice in the area of computer networking :)\r\n\r\nDocumentation is a formidable tool to formalize thinking and actually interrogate the well-foundedness and correctness of any code. It would also ease the understanding of new contributors and help them to review muzzy part of the codebase like the mempool. \r\n\r\n> My recommendation for users is to test all of their use cases on each upgrade of Bitcoin Core, including all edge cases they rely on, ideally with an automated test suite to minimize their repeated work. Thus they should already be aware of the policy rules they rely on, and also be notified of changes by their test suite.\r\n\r\nI agree with this.\r\n\r\nIt's unrealistic to expect Core developers to track and understand any new use case. Ultimately it's the responsibility of the application developers to think about the assumptions they're doing on Core policy and be fully-aware it might to change to their _detriment_. \r\n\r\nThat said, I think it would help application quality audit if policy changes happen in the beginning or mid release schedule. Further it's really _hard_ to ensure your test suite is reflecting Core behavior, straightforward toolchain might not exist yet (see https://github.com/rust-bitcoin/rust-bitcoinconsensus/pull/15).\r\n\r\n> If there are plans to nonetheless document the relay policy, it raises questions what to include in what form and how to keep it up-to-date/consistent.\r\n\r\nYes let's avoid the BIP process it's too much static, maybe we can try a`doc/policy/*.md` ?\r\n\r\nHappy to try the experiment with my full-rbf proposal for 0.24 and write an updated documentation of our replacement logic. Then documenting  `PreChecks`'s list of checks could be following steps if we think it's good practice.\r\n\r\n(Maybe the new package acceptance checks could be documented there too?)\r\n\r\nLastly, yes it's a maintenance burden though if we don't I think we'll let proliferate more safety risks for our downstream users and find us in thorny situations where we have to arbitrarily favor use-case A over use-case B. E.g \"zero-conf transactions\" vs \"dual-funded channels\" with the deprecation of opt-in : https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019074.html",
      "created_at" : "2021-08-28T00:46:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22806#issuecomment-907540018",
      "id" : 907540018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22806",
      "node_id" : "IC_kwDOABII5842F_Yy",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-28T00:46:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907540018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "And also documentation would help spot on inconsistencies/oddities in the policy. E.g a scriptPubKey superior to `MAX_SCRIPT_SIZE`  is considered as an always valid output by `GetDustThreshold`due to `IsUnspendable` but in fact it's not a standard scriptpubkey following `IsStandard` because `nMaxDatacarrierBytes` is 83 bytes.",
      "created_at" : "2021-08-28T00:55:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22806#issuecomment-907541161",
      "id" : 907541161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22806",
      "node_id" : "IC_kwDOABII5842F_qp",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-28T00:56:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907541161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree with most of the above (definitely worth documenting Core transaction relay policy given how Layer 2 depends on it and documentation should provide clarity and perhaps even stumble on more things we didn't realize).\r\n\r\n> Yes let's avoid the BIP process it's too much static, maybe we can try a doc/policy/*.md ?\r\n\r\nBut I think avoiding the BIP process entirely on this is suboptimal. Firstly, we have to consider alternative implementations to Core e.g. @pinheadmz was the [first](https://bitcoin.stackexchange.com/questions/88813/is-inherited-replace-by-fee-signaling-implemented-as-described-in-bip125) to discover the BIP 125 issue while reimplementing it for Bcoin. Reimplementing from scratch a spec/standard seems superior to just copying the code in Core.\r\n\r\nI think the better approach would be to document this in the Core repo under the expectation that significant step changes to tx relay policy should be BIPed. The Core docs can be a moving target while changes that deserve more scrutiny should be BIPed. I really don't like this attitude that because Core's consensus code is the ultimate authority on consensus that Core's policy code should also be the ultimate authority on policy. The former can't be avoided, the latter can be.\r\n\r\nedit: My understanding is that Layer 2 wants transaction relay policy to be as static as possible (or at least when changes are made they are well communicated in advance to Layer 2). To this end the extra scrutiny of a BIP for a significant change should be beneficial.",
      "created_at" : "2021-08-30T11:39:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22806#issuecomment-908270407",
      "id" : 908270407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22806",
      "node_id" : "IC_kwDOABII5842IxtH",
      "performed_via_github_app" : null,
      "updated_at" : "2021-08-30T11:52:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/908270407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The Core docs can be a moving target while changes that deserve more scrutiny should be BIPed. \r\n\r\nOfc Core transaction relay policy documentation could be always duplicated as a BIP, with additional information such as applications relying on specific behaviors and even references to test vectors . Now hoping it would attract more eyes because it's BIPed... maybe it gives a chance to third-party developers to object in case of annoying/harmful changes for them but I'm the opinion it would be better for the Core project to be more proactive on its policy changes, like \"best practice\" ML announcement for tightening with an open consultation period or flag day activation.\r\n\r\nOn the other side, not systematically proposing Core's policy in the BIP repo make it less authoritative IMO. Other full-node implementations or Bitcoin software should feel free to document their own policies as examples, and in fact that's an area where they could easily do far better than Core. Less legacy codes and they can experiment faster because they have less risks to break application software (though on the long term, I hope we'll be able to deploy policies in a more sandboxed approach, once the work on multiprocess/interfaces is more mature)",
      "created_at" : "2021-09-09T00:24:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22806#issuecomment-915662195",
      "id" : 915662195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22806",
      "node_id" : "IC_kwDOABII5842k-Vz",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-09T00:24:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/915662195",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it'd be worthwhile to have this, and also to make clear that anything that is relayable but is *not* specified by the spec may become un-relayable in the future -- so if you plan to make an application out of something that is a gap in our standardness definitions, your mileage may vary.",
      "created_at" : "2021-09-09T01:19:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22806#issuecomment-915685066",
      "id" : 915685066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22806",
      "node_id" : "IC_kwDOABII5842lD7K",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-09T01:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/915685066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Strong concept ACK.\r\n\r\nMy preference would be to document Bitcoin Core's relay policy in https://github.com/bitcoin-core/bitcoin-devwiki/wiki. I think a wiki is a much more suitable platform for documentation than this git repository. We already have more activity in this repo than we can manage (400+ PRs currently), and people should be able to make incremental improvements to documentation (eg fix spelling/formatting/typos) without having to go through the very heavy PR process and adding to contributors' and maintainers' burdens.\r\n\r\nI also think we should have documentation for relay policy for all versions of Bitcoin Core (not just latest/master). We can easily do that using multiple wiki pages.",
      "created_at" : "2021-09-28T12:23:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/22806#issuecomment-929150596",
      "id" : 929150596,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22806",
      "node_id" : "IC_kwDOABII5843YbaE",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-28T12:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/929150596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
