[
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack https://github.com/bitcoin/bitcoin/pull/22762#issuecomment-912441771",
      "created_at" : "2021-09-03T13:58:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#issuecomment-912561083",
      "id" : 912561083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22877",
      "node_id" : "IC_kwDOABII5842ZJO7",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-03T13:58:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912561083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701935828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701935828"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, s/can not/cannot/ here and line 52",
      "commit_id" : "fa6cf1740ee607ddf79a16a07ae49173e49646be",
      "created_at" : "2021-09-03T14:28:41Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test addrman functionality\"\"\"\n+\n+import os\n+import struct\n+\n+from test_framework.messages import ser_uint256, hash256\n+from test_framework.p2p import MAGIC_BYTES\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+def serialize_addrman(*, format=1, lowest_compatible=3):\n+    new = []\n+    tried = []\n+    INCOMPATIBILITY_BASE = 32\n+    r = MAGIC_BYTES['regtest']\n+    r += struct.pack(\"B\", format)\n+    r += struct.pack(\"B\", INCOMPATIBILITY_BASE + lowest_compatible)\n+    r += ser_uint256(1)\n+    r += struct.pack(\"i\", len(new))\n+    r += struct.pack(\"i\", len(tried))\n+    ADDRMAN_NEW_BUCKET_COUNT = 1 << 10\n+    r += struct.pack(\"i\", ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30))\n+    for _ in range(ADDRMAN_NEW_BUCKET_COUNT):\n+        r += struct.pack(\"i\", 0)\n+    checksum = hash256(r)\n+    r += checksum\n+    return r\n+\n+\n+def write_addrman(peers_dat, **kwargs):\n+    with open(peers_dat, 'wb') as f:\n+        f.write(serialize_addrman(**kwargs))\n+\n+\n+class AddrmanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        peers_dat = os.path.join(self.nodes[0].datadir, self.chain, \"peers.dat\")\n+\n+        self.log.info(\"Check that mocked addrman is valid\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat)\n+        with self.nodes[0].assert_debug_log(['Loaded 0 addresses from peers.dat']):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that addrman from future can not be read\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat, lowest_compatible=111)\n+        with self.nodes[0].assert_debug_log([\n+                f'ERROR: DeserializeDB: Deserialize or I/O error - Unsupported format of addrman database: \\\\x01. It is compatible with formats >=111, but the maximum supported by this version of {self.config[\"environment\"][\"PACKAGE_NAME\"]} is 3.: iostream error',\n+                'Recreating peers.dat',\n+        ]):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that corrupt addrman can not be read\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701935828",
      "id" : 701935828,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTkzNTgyOA==",
      "original_commit_id" : "fac6844d9f19dc2c17a47aafe26402344909e78a",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/feature_addrman.py",
      "position" : null,
      "pull_request_review_id" : 746168378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-03T14:34:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701935828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701939708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701939708"
         }
      },
      "author_association" : "MEMBER",
      "body" : "run with -checkaddrman\r\n```suggestion\r\n            self.start_node(0, [\"-checkaddrman=1\"])\r\n```\r\ncan also check that `self.nodes[0].getnodeaddresses()` is an empty array here and in the last test, to not rely only on the log\r\n\r\nI do both of these in #22831 ",
      "commit_id" : "fa6cf1740ee607ddf79a16a07ae49173e49646be",
      "created_at" : "2021-09-03T14:33:52Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test addrman functionality\"\"\"\n+\n+import os\n+import struct\n+\n+from test_framework.messages import ser_uint256, hash256\n+from test_framework.p2p import MAGIC_BYTES\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+def serialize_addrman(*, format=1, lowest_compatible=3):\n+    new = []\n+    tried = []\n+    INCOMPATIBILITY_BASE = 32\n+    r = MAGIC_BYTES['regtest']\n+    r += struct.pack(\"B\", format)\n+    r += struct.pack(\"B\", INCOMPATIBILITY_BASE + lowest_compatible)\n+    r += ser_uint256(1)\n+    r += struct.pack(\"i\", len(new))\n+    r += struct.pack(\"i\", len(tried))\n+    ADDRMAN_NEW_BUCKET_COUNT = 1 << 10\n+    r += struct.pack(\"i\", ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30))\n+    for _ in range(ADDRMAN_NEW_BUCKET_COUNT):\n+        r += struct.pack(\"i\", 0)\n+    checksum = hash256(r)\n+    r += checksum\n+    return r\n+\n+\n+def write_addrman(peers_dat, **kwargs):\n+    with open(peers_dat, 'wb') as f:\n+        f.write(serialize_addrman(**kwargs))\n+\n+\n+class AddrmanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        peers_dat = os.path.join(self.nodes[0].datadir, self.chain, \"peers.dat\")\n+\n+        self.log.info(\"Check that mocked addrman is valid\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat)\n+        with self.nodes[0].assert_debug_log(['Loaded 0 addresses from peers.dat']):\n+            self.start_node(0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701939708",
      "id" : 701939708,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTkzOTcwOA==",
      "original_commit_id" : "fac6844d9f19dc2c17a47aafe26402344909e78a",
      "original_line" : 50,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "test/functional/feature_addrman.py",
      "position" : null,
      "pull_request_review_id" : 746168378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-03T14:41:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701939708",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701942051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701942051"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is the same as [`d507068` (#22831)](https://github.com/bitcoin/bitcoin/pull/22831/commits/d5070688feb68fac59b076411f1d84131726098e)",
      "commit_id" : "fa6cf1740ee607ddf79a16a07ae49173e49646be",
      "created_at" : "2021-09-03T14:37:17Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test addrman functionality\"\"\"\n+\n+import os\n+import struct\n+\n+from test_framework.messages import ser_uint256, hash256\n+from test_framework.p2p import MAGIC_BYTES\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+def serialize_addrman(*, format=1, lowest_compatible=3):\n+    new = []\n+    tried = []\n+    INCOMPATIBILITY_BASE = 32\n+    r = MAGIC_BYTES['regtest']\n+    r += struct.pack(\"B\", format)\n+    r += struct.pack(\"B\", INCOMPATIBILITY_BASE + lowest_compatible)\n+    r += ser_uint256(1)\n+    r += struct.pack(\"i\", len(new))\n+    r += struct.pack(\"i\", len(tried))\n+    ADDRMAN_NEW_BUCKET_COUNT = 1 << 10\n+    r += struct.pack(\"i\", ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30))\n+    for _ in range(ADDRMAN_NEW_BUCKET_COUNT):\n+        r += struct.pack(\"i\", 0)\n+    checksum = hash256(r)\n+    r += checksum\n+    return r\n+\n+\n+def write_addrman(peers_dat, **kwargs):\n+    with open(peers_dat, 'wb') as f:\n+        f.write(serialize_addrman(**kwargs))\n+\n+\n+class AddrmanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        peers_dat = os.path.join(self.nodes[0].datadir, self.chain, \"peers.dat\")\n+\n+        self.log.info(\"Check that mocked addrman is valid\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat)\n+        with self.nodes[0].assert_debug_log(['Loaded 0 addresses from peers.dat']):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that addrman from future can not be read\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat, lowest_compatible=111)\n+        with self.nodes[0].assert_debug_log([\n+                f'ERROR: DeserializeDB: Deserialize or I/O error - Unsupported format of addrman database: \\\\x01. It is compatible with formats >=111, but the maximum supported by this version of {self.config[\"environment\"][\"PACKAGE_NAME\"]} is 3.: iostream error',\n+                'Recreating peers.dat',\n+        ]):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that corrupt addrman can not be read\")\n+        self.stop_node(0)\n+        with open(peers_dat, 'wb') as f:\n+            f.write(serialize_addrman()[:-1])\n+        with self.nodes[0].assert_debug_log([\n+                'ERROR: DeserializeDB: Deserialize or I/O error - CAutoFile::read: end of file: iostream error',\n+                'Recreating peers.dat',\n+        ]):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that missing addrman is recreated\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701942051",
      "id" : 701942051,
      "line" : 75,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTk0MjA1MQ==",
      "original_commit_id" : "fac6844d9f19dc2c17a47aafe26402344909e78a",
      "original_line" : 75,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/feature_addrman.py",
      "position" : 75,
      "pull_request_review_id" : 746178105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-03T14:37:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701942051",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701946246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701946246"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, done",
      "commit_id" : "fa6cf1740ee607ddf79a16a07ae49173e49646be",
      "created_at" : "2021-09-03T14:43:01Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test addrman functionality\"\"\"\n+\n+import os\n+import struct\n+\n+from test_framework.messages import ser_uint256, hash256\n+from test_framework.p2p import MAGIC_BYTES\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+def serialize_addrman(*, format=1, lowest_compatible=3):\n+    new = []\n+    tried = []\n+    INCOMPATIBILITY_BASE = 32\n+    r = MAGIC_BYTES['regtest']\n+    r += struct.pack(\"B\", format)\n+    r += struct.pack(\"B\", INCOMPATIBILITY_BASE + lowest_compatible)\n+    r += ser_uint256(1)\n+    r += struct.pack(\"i\", len(new))\n+    r += struct.pack(\"i\", len(tried))\n+    ADDRMAN_NEW_BUCKET_COUNT = 1 << 10\n+    r += struct.pack(\"i\", ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30))\n+    for _ in range(ADDRMAN_NEW_BUCKET_COUNT):\n+        r += struct.pack(\"i\", 0)\n+    checksum = hash256(r)\n+    r += checksum\n+    return r\n+\n+\n+def write_addrman(peers_dat, **kwargs):\n+    with open(peers_dat, 'wb') as f:\n+        f.write(serialize_addrman(**kwargs))\n+\n+\n+class AddrmanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        peers_dat = os.path.join(self.nodes[0].datadir, self.chain, \"peers.dat\")\n+\n+        self.log.info(\"Check that mocked addrman is valid\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat)\n+        with self.nodes[0].assert_debug_log(['Loaded 0 addresses from peers.dat']):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that addrman from future can not be read\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat, lowest_compatible=111)\n+        with self.nodes[0].assert_debug_log([\n+                f'ERROR: DeserializeDB: Deserialize or I/O error - Unsupported format of addrman database: \\\\x01. It is compatible with formats >=111, but the maximum supported by this version of {self.config[\"environment\"][\"PACKAGE_NAME\"]} is 3.: iostream error',\n+                'Recreating peers.dat',\n+        ]):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that corrupt addrman can not be read\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701946246",
      "id" : 701946246,
      "in_reply_to_id" : 701935828,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTk0NjI0Ng==",
      "original_commit_id" : "fac6844d9f19dc2c17a47aafe26402344909e78a",
      "original_line" : 61,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/feature_addrman.py",
      "position" : null,
      "pull_request_review_id" : 746183878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-03T14:43:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701946246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701946317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701946317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, done",
      "commit_id" : "fa6cf1740ee607ddf79a16a07ae49173e49646be",
      "created_at" : "2021-09-03T14:43:09Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test addrman functionality\"\"\"\n+\n+import os\n+import struct\n+\n+from test_framework.messages import ser_uint256, hash256\n+from test_framework.p2p import MAGIC_BYTES\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+def serialize_addrman(*, format=1, lowest_compatible=3):\n+    new = []\n+    tried = []\n+    INCOMPATIBILITY_BASE = 32\n+    r = MAGIC_BYTES['regtest']\n+    r += struct.pack(\"B\", format)\n+    r += struct.pack(\"B\", INCOMPATIBILITY_BASE + lowest_compatible)\n+    r += ser_uint256(1)\n+    r += struct.pack(\"i\", len(new))\n+    r += struct.pack(\"i\", len(tried))\n+    ADDRMAN_NEW_BUCKET_COUNT = 1 << 10\n+    r += struct.pack(\"i\", ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30))\n+    for _ in range(ADDRMAN_NEW_BUCKET_COUNT):\n+        r += struct.pack(\"i\", 0)\n+    checksum = hash256(r)\n+    r += checksum\n+    return r\n+\n+\n+def write_addrman(peers_dat, **kwargs):\n+    with open(peers_dat, 'wb') as f:\n+        f.write(serialize_addrman(**kwargs))\n+\n+\n+class AddrmanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        peers_dat = os.path.join(self.nodes[0].datadir, self.chain, \"peers.dat\")\n+\n+        self.log.info(\"Check that mocked addrman is valid\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat)\n+        with self.nodes[0].assert_debug_log(['Loaded 0 addresses from peers.dat']):\n+            self.start_node(0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701946317",
      "id" : 701946317,
      "in_reply_to_id" : 701939708,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTk0NjMxNw==",
      "original_commit_id" : "fac6844d9f19dc2c17a47aafe26402344909e78a",
      "original_line" : 50,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "test/functional/feature_addrman.py",
      "position" : null,
      "pull_request_review_id" : 746183993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-03T14:43:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701946317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701946658"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701946658"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for the pointer",
      "commit_id" : "fa6cf1740ee607ddf79a16a07ae49173e49646be",
      "created_at" : "2021-09-03T14:43:38Z",
      "diff_hunk" : "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test addrman functionality\"\"\"\n+\n+import os\n+import struct\n+\n+from test_framework.messages import ser_uint256, hash256\n+from test_framework.p2p import MAGIC_BYTES\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+def serialize_addrman(*, format=1, lowest_compatible=3):\n+    new = []\n+    tried = []\n+    INCOMPATIBILITY_BASE = 32\n+    r = MAGIC_BYTES['regtest']\n+    r += struct.pack(\"B\", format)\n+    r += struct.pack(\"B\", INCOMPATIBILITY_BASE + lowest_compatible)\n+    r += ser_uint256(1)\n+    r += struct.pack(\"i\", len(new))\n+    r += struct.pack(\"i\", len(tried))\n+    ADDRMAN_NEW_BUCKET_COUNT = 1 << 10\n+    r += struct.pack(\"i\", ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30))\n+    for _ in range(ADDRMAN_NEW_BUCKET_COUNT):\n+        r += struct.pack(\"i\", 0)\n+    checksum = hash256(r)\n+    r += checksum\n+    return r\n+\n+\n+def write_addrman(peers_dat, **kwargs):\n+    with open(peers_dat, 'wb') as f:\n+        f.write(serialize_addrman(**kwargs))\n+\n+\n+class AddrmanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        peers_dat = os.path.join(self.nodes[0].datadir, self.chain, \"peers.dat\")\n+\n+        self.log.info(\"Check that mocked addrman is valid\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat)\n+        with self.nodes[0].assert_debug_log(['Loaded 0 addresses from peers.dat']):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that addrman from future can not be read\")\n+        self.stop_node(0)\n+        write_addrman(peers_dat, lowest_compatible=111)\n+        with self.nodes[0].assert_debug_log([\n+                f'ERROR: DeserializeDB: Deserialize or I/O error - Unsupported format of addrman database: \\\\x01. It is compatible with formats >=111, but the maximum supported by this version of {self.config[\"environment\"][\"PACKAGE_NAME\"]} is 3.: iostream error',\n+                'Recreating peers.dat',\n+        ]):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that corrupt addrman can not be read\")\n+        self.stop_node(0)\n+        with open(peers_dat, 'wb') as f:\n+            f.write(serialize_addrman()[:-1])\n+        with self.nodes[0].assert_debug_log([\n+                'ERROR: DeserializeDB: Deserialize or I/O error - CAutoFile::read: end of file: iostream error',\n+                'Recreating peers.dat',\n+        ]):\n+            self.start_node(0)\n+\n+        self.log.info(\"Check that missing addrman is recreated\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#discussion_r701946658",
      "id" : 701946658,
      "in_reply_to_id" : 701942051,
      "line" : 75,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTk0NjY1OA==",
      "original_commit_id" : "fac6844d9f19dc2c17a47aafe26402344909e78a",
      "original_line" : 75,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/feature_addrman.py",
      "position" : 75,
      "pull_request_review_id" : 746184457,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-09-03T14:43:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701946658",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Force pushed to address feedback",
      "created_at" : "2021-09-03T14:44:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#issuecomment-912592780",
      "id" : 912592780,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22877",
      "node_id" : "IC_kwDOABII5842ZQ-M",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-03T14:44:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912592780",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I wrote some follow-ups last weekend to #22831 to add more addrman tests and rename `feature_asmap.py` to `feature_addrman_asmap.py` as they are related features, but didn't want to add them to that pull to keep it focused on just fixing the bug with regression tests.",
      "created_at" : "2021-09-03T14:58:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#issuecomment-912602594",
      "id" : 912602594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22877",
      "node_id" : "IC_kwDOABII5842ZTXi",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-03T14:58:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912602594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks like there is some kind of compiler bug or compiler behaviour change ",
      "created_at" : "2021-09-03T15:36:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#issuecomment-912627758",
      "id" : 912627758,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22877",
      "node_id" : "IC_kwDOABII5842ZZgu",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-03T15:36:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912627758",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reported issue in https://github.com/c42f/tinyformat/issues/82, worked around issue in #22879 ",
      "created_at" : "2021-09-03T15:42:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22877#issuecomment-912631793",
      "id" : 912631793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22877",
      "node_id" : "IC_kwDOABII5842Zafx",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-03T15:42:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/912631793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
