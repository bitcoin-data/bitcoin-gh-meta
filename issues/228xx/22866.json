{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "This issue is a proposal to add a CBOR RPC interface to bitcoin-core. The interface would be in addition to the current JSON-RPC, not a replacement.\r\n\r\nThe main goal of the proposal is to offer an RPC interface that is more efficient than the current JSON-RPC. Remote clients with constraints on data usage will see the biggest advantage.\r\n\r\nCBOR seems like the best choice for a minimal RPC implementation, since it has wide support in industry, and is the de-facto standard for IoT communication protocols like [CoAP](https://en.wikipedia.org/wiki/CoAP\r\n). Meaning, there is likely to be a large community outside Bitcoin to get support/developers.\r\n\r\n## Advantages\r\n\r\n- RFC standard specification: [RFC 8949](https://datatracker.ietf.org/doc/html/rfc8949)\r\n- CBOR uses binary representation\r\n  - no need for Base64 or other encoding\r\n  - well-defined data types with minimal encoding overhead\r\n- Small amount of types\r\n- Several existing free open-source libraries to fork\r\n- Many existing implementations are small (~400-750 LoC)\r\n- Decreased data transmission for remote clients\r\n\r\n## Disadvantages\r\n\r\n- Added code to the core implementation\r\n  - larger attack surface\r\n  - maintenance costs\r\n- Added complexity\r\n- Unclear data-size savings versus compressed JSON/Base64\r\n\r\n## Alternative approaches\r\n\r\n### External CBOR proxy\r\n\r\nOne possible alternative, suggested by @cfields, is to write a proxy translating CBOR to JSON.\r\n\r\nThe proxy could be stand-alone from bitcoin-core, thus removing the disadvantage of added code.\r\n\r\nAlso, the proxy could be written in a memory-safe language like Rust, decreasing the attack surface.\r\n\r\nThere would also be disadvantages to a proxy implementation:\r\n\r\n- small overhead of translating CBOR to JSON, and passing to the original JSON-RPC\r\n- installation of an additional piece of software\r\n\r\n### Internal CBOR proxy\r\n\r\nAnother alternative is to add CBOR support to Univalue, and implement the proxy in bitcoin-core.\r\n\r\nThis would have the advantage of direct access to RPC internals, and potentially reduce overall code size.\r\n\r\nThe proxy would listen on a separate port, translate the incoming CBOR to JSON, and pass the JSON to existing RPC interfaces.\r\n\r\n## Free open-source implementations\r\n\r\nHere is a list of some of the better candidates for a bitcoin-core CBOR fork:\r\n\r\n- cb0r: https://github.com/quartzjer/cb0r\r\n  - zero-allocation C implementation\r\n- cppbor: https://github.com/rantydave/cppbor\r\n  - C++17 implementation based on `std::variant`\r\n- cbor11: https://github.com/jakobvarmose/cbor11\r\n  - C++11 implementation\r\n- tinycbor: https://github.com/intel/tinycbor\r\n  - Intel implementation, includes CBOR-JSON translation\r\n  - ironically, largest LoC count of the candidates\r\n\r\n## Comparing to JSON-RPC\r\n\r\n@laanwj raised the point that compressed JSON may provide similar savings to CBOR. To test whether the savings from CBOR provides significant size reduction, I will implement a small number of RPC calls in CBOR,\r\nand compare the uncompressed and compressed sizes against the current JSON encoding.\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22866/comments",
   "created_at" : "2021-09-02T21:15:48Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22866/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/22866",
   "id" : 987171900,
   "labels" : [
      {
         "color" : "7cf575",
         "default" : false,
         "description" : null,
         "id" : 64583,
         "name" : "Feature",
         "node_id" : "MDU6TGFiZWw2NDU4Mw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22866/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU5ODcxNzE5MDA=",
   "number" : 22866,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Add CBOR RPC interface",
   "updated_at" : "2021-09-02T21:15:48Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22866",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/80422284?v=4",
      "events_url" : "https://api.github.com/users/GeneFerneau/events{/privacy}",
      "followers_url" : "https://api.github.com/users/GeneFerneau/followers",
      "following_url" : "https://api.github.com/users/GeneFerneau/following{/other_user}",
      "gists_url" : "https://api.github.com/users/GeneFerneau/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/GeneFerneau",
      "id" : 80422284,
      "login" : "GeneFerneau",
      "node_id" : "MDQ6VXNlcjgwNDIyMjg0",
      "organizations_url" : "https://api.github.com/users/GeneFerneau/orgs",
      "received_events_url" : "https://api.github.com/users/GeneFerneau/received_events",
      "repos_url" : "https://api.github.com/users/GeneFerneau/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/GeneFerneau/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/GeneFerneau/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/GeneFerneau"
   }
}
