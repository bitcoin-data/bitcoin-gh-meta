[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\n> - I think blank wallet and disable private keys options could be combined into a single, more self-explanatory \"generate keys\" option with values \"immediately\", \"on-demand\", and \"disabled\".\r\n\r\n@ryanofsky do you suggest the same for the GUI? I think we could keep both interfaces consistent.",
      "created_at" : "2019-06-19T23:37:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-503784744",
      "id" : 503784744,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16244",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMzc4NDc0NA==",
      "updated_at" : "2019-06-19T23:37:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503784744",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16341](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16341.html) (WIP: Introduce ScriptPubKeyMan interface and use it for key and script management (aka wallet boxes) by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-06-20T00:47:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-503797482",
      "id" : 503797482,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16244",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMzc5NzQ4Mg==",
      "updated_at" : "2019-07-10T16:14:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503797482",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This looks like a bug? :-)\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/e50573eb097660dc9cd8800990b3f93bdb8f6dd7/src/wallet/rpcwallet.cpp#L2786-L2789",
      "created_at" : "2019-06-20T07:45:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-503916488",
      "id" : 503916488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16244",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMzkxNjQ4OA==",
      "updated_at" : "2019-06-20T07:45:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503916488",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift Fixed.\r\n\r\n> Also, but not directly related to this PR, I think the createwallet RPC interface could be improved:\r\n\r\nI think that can be done in a followup PR.",
      "created_at" : "2019-06-20T15:06:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-504062881",
      "id" : 504062881,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16244",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNDA2Mjg4MQ==",
      "updated_at" : "2019-06-20T15:06:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504062881",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296040589"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296040589"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe pack these like:\r\n```cpp\r\nstruct WalletCreationResult\r\n{\r\n    WalletCreationStatus status;\r\n    std::string error;\r\n    std::string warning;\r\n    std::shared_ptr<CWallet> wallet;\r\n}",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-06-20T22:42:29Z",
      "diff_hunk" : "@@ -2776,55 +2772,26 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             // Empty string is invalid\n             throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Cannot encrypt a wallet with a blank password\");\n         }\n-        // Born encrypted wallets need to be blank first so that wallet creation doesn't make any unencrypted keys\n-        flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n     if (!request.params[4].isNull() && request.params[4].get_bool()) {\n         flags |= WALLET_FLAG_AVOID_REUSE;\n     }\n \n-    WalletLocation location(request.params[0].get_str());\n-    if (location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location, flags);\n+    std::string error;\n+    std::string warning;\n+    WalletCreationStatus status;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296040589",
      "id" : 296040589,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjA0MDU4OQ==",
      "original_commit_id" : "6551c47df93bfc4235418b9be58a47466a76e16c",
      "original_position" : 43,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 67,
      "pull_request_review_id" : 252572621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-09T23:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296040589",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296040726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296040726"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ð what else?",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-06-20T22:43:12Z",
      "diff_hunk" : "@@ -2776,55 +2772,26 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             // Empty string is invalid\n             throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Cannot encrypt a wallet with a blank password\");\n         }\n-        // Born encrypted wallets need to be blank first so that wallet creation doesn't make any unencrypted keys\n-        flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n     if (!request.params[4].isNull() && request.params[4].get_bool()) {\n         flags |= WALLET_FLAG_AVOID_REUSE;\n     }\n \n-    WalletLocation location(request.params[0].get_str());\n-    if (location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location, flags);\n+    std::string error;\n+    std::string warning;\n+    WalletCreationStatus status;\n+    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, request.params[0].get_str(), error, warning, status, passphrase, flags);\n     if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed.\");\n-    }\n-\n-    // Encrypt the wallet if there's a passphrase\n-    if (!passphrase.empty() && !(flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-        if (!wallet->EncryptWallet(passphrase)) {\n-            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet created but failed to encrypt.\");\n-        }\n-\n-        if (!create_blank) {\n-            // Unlock the wallet\n-            if (!wallet->Unlock(passphrase)) {\n-                throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet was encrypted but could not be unlocked\");\n-            }\n-\n-            // Set a seed for the wallet\n-            CPubKey master_pub_key = wallet->GenerateNewSeed();\n-            wallet->SetHDSeed(master_pub_key);\n-            wallet->NewKeyPool();\n-\n-            // Relock the wallet\n-            wallet->Lock();\n+        if (status == WalletCreationStatus::CREATION_FAILED) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, error);\n+        } else if (status == WalletCreationStatus::ENCRYPTION_FAILED) {\n+            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, error);\n+        } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296040726",
      "id" : 296040726,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjA0MDcyNg==",
      "original_commit_id" : "6551c47df93bfc4235418b9be58a47466a76e16c",
      "original_position" : 72,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 252572621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-09T23:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296040726",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296041059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296041059"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe `else if (status != WalletCreationStatus::SUCCESS) {` and ditch `if (!wallet) {` in L2785.",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-06-20T22:44:50Z",
      "diff_hunk" : "@@ -2776,55 +2772,26 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             // Empty string is invalid\n             throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Cannot encrypt a wallet with a blank password\");\n         }\n-        // Born encrypted wallets need to be blank first so that wallet creation doesn't make any unencrypted keys\n-        flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n     if (!request.params[4].isNull() && request.params[4].get_bool()) {\n         flags |= WALLET_FLAG_AVOID_REUSE;\n     }\n \n-    WalletLocation location(request.params[0].get_str());\n-    if (location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location, flags);\n+    std::string error;\n+    std::string warning;\n+    WalletCreationStatus status;\n+    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, request.params[0].get_str(), error, warning, status, passphrase, flags);\n     if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed.\");\n-    }\n-\n-    // Encrypt the wallet if there's a passphrase\n-    if (!passphrase.empty() && !(flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-        if (!wallet->EncryptWallet(passphrase)) {\n-            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet created but failed to encrypt.\");\n-        }\n-\n-        if (!create_blank) {\n-            // Unlock the wallet\n-            if (!wallet->Unlock(passphrase)) {\n-                throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet was encrypted but could not be unlocked\");\n-            }\n-\n-            // Set a seed for the wallet\n-            CPubKey master_pub_key = wallet->GenerateNewSeed();\n-            wallet->SetHDSeed(master_pub_key);\n-            wallet->NewKeyPool();\n-\n-            // Relock the wallet\n-            wallet->Lock();\n+        if (status == WalletCreationStatus::CREATION_FAILED) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, error);\n+        } else if (status == WalletCreationStatus::ENCRYPTION_FAILED) {\n+            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, error);\n+        } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296041059",
      "id" : 296041059,
      "in_reply_to_id" : 296040726,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjA0MTA1OQ==",
      "original_commit_id" : "6551c47df93bfc4235418b9be58a47466a76e16c",
      "original_position" : 72,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 252572621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-09T23:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296041059",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296337546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296337546"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that is necessary.",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-06-21T17:59:53Z",
      "diff_hunk" : "@@ -2776,55 +2772,26 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             // Empty string is invalid\n             throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Cannot encrypt a wallet with a blank password\");\n         }\n-        // Born encrypted wallets need to be blank first so that wallet creation doesn't make any unencrypted keys\n-        flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n     if (!request.params[4].isNull() && request.params[4].get_bool()) {\n         flags |= WALLET_FLAG_AVOID_REUSE;\n     }\n \n-    WalletLocation location(request.params[0].get_str());\n-    if (location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location, flags);\n+    std::string error;\n+    std::string warning;\n+    WalletCreationStatus status;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296337546",
      "id" : 296337546,
      "in_reply_to_id" : 296040589,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjMzNzU0Ng==",
      "original_commit_id" : "6551c47df93bfc4235418b9be58a47466a76e16c",
      "original_position" : 43,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 67,
      "pull_request_review_id" : 252957782,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-09T23:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296337546",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296341489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296341489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-06-21T18:11:54Z",
      "diff_hunk" : "@@ -2776,55 +2772,26 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             // Empty string is invalid\n             throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Cannot encrypt a wallet with a blank password\");\n         }\n-        // Born encrypted wallets need to be blank first so that wallet creation doesn't make any unencrypted keys\n-        flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n     if (!request.params[4].isNull() && request.params[4].get_bool()) {\n         flags |= WALLET_FLAG_AVOID_REUSE;\n     }\n \n-    WalletLocation location(request.params[0].get_str());\n-    if (location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location, flags);\n+    std::string error;\n+    std::string warning;\n+    WalletCreationStatus status;\n+    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, request.params[0].get_str(), error, warning, status, passphrase, flags);\n     if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed.\");\n-    }\n-\n-    // Encrypt the wallet if there's a passphrase\n-    if (!passphrase.empty() && !(flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-        if (!wallet->EncryptWallet(passphrase)) {\n-            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet created but failed to encrypt.\");\n-        }\n-\n-        if (!create_blank) {\n-            // Unlock the wallet\n-            if (!wallet->Unlock(passphrase)) {\n-                throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet was encrypted but could not be unlocked\");\n-            }\n-\n-            // Set a seed for the wallet\n-            CPubKey master_pub_key = wallet->GenerateNewSeed();\n-            wallet->SetHDSeed(master_pub_key);\n-            wallet->NewKeyPool();\n-\n-            // Relock the wallet\n-            wallet->Lock();\n+        if (status == WalletCreationStatus::CREATION_FAILED) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, error);\n+        } else if (status == WalletCreationStatus::ENCRYPTION_FAILED) {\n+            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, error);\n+        } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296341489",
      "id" : 296341489,
      "in_reply_to_id" : 296040726,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjM0MTQ4OQ==",
      "original_commit_id" : "6551c47df93bfc4235418b9be58a47466a76e16c",
      "original_position" : 72,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 252963050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-09T23:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296341489",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434142"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296434142"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`enum class`",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-06-22T04:50:13Z",
      "diff_hunk" : "@@ -49,6 +49,14 @@ std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning);\n \n+enum WalletCreationStatus {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434142",
      "id" : 296434142,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjQzNDE0Mg==",
      "original_commit_id" : "49e47c019b63ea06fd2265ad16fa3245bf2093a3",
      "original_position" : 4,
      "path" : "src/wallet/wallet.h",
      "position" : 4,
      "pull_request_review_id" : 253082199,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-09T23:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296434142",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434172"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296434172"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: out args at the end is a nice convention IMO",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-06-22T04:51:39Z",
      "diff_hunk" : "@@ -49,6 +49,14 @@ std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning);\n \n+enum WalletCreationStatus {\n+    SUCCESS,\n+    CREATION_FAILED,\n+    ENCRYPTION_FAILED\n+};\n+\n+std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning, WalletCreationStatus& status, const SecureString& passphrase, uint64_t wallet_creation_flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434172",
      "id" : 296434172,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjQzNDE3Mg==",
      "original_commit_id" : "49e47c019b63ea06fd2265ad16fa3245bf2093a3",
      "original_position" : 10,
      "path" : "src/wallet/wallet.h",
      "position" : 10,
      "pull_request_review_id" : 253082237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-09T23:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/296434172",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code-review utACK https://github.com/bitcoin/bitcoin/pull/16244/commits/49e47c019b63ea06fd2265ad16fa3245bf2093a3\r\n\r\nAgree with Russ's comments too.",
      "created_at" : "2019-06-22T10:16:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-504652330",
      "id" : 504652330,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16244",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNDY1MjMzMA==",
      "updated_at" : "2019-06-22T10:16:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504652330",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r297233439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/297233439"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think I'll leave it as is to avoid invalidating existing ACKs.",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-06-25T14:56:29Z",
      "diff_hunk" : "@@ -49,6 +49,14 @@ std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning);\n \n+enum WalletCreationStatus {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r297233439",
      "id" : 297233439,
      "in_reply_to_id" : 296434142,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzIzMzQzOQ==",
      "original_commit_id" : "49e47c019b63ea06fd2265ad16fa3245bf2093a3",
      "original_position" : 4,
      "path" : "src/wallet/wallet.h",
      "position" : 4,
      "pull_request_review_id" : 254065113,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-09T23:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/297233439",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r297233459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/297233459"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think I'll leave it as is to avoid invalidating existing ACKs.",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-06-25T14:56:31Z",
      "diff_hunk" : "@@ -49,6 +49,14 @@ std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::string& warning);\n \n+enum WalletCreationStatus {\n+    SUCCESS,\n+    CREATION_FAILED,\n+    ENCRYPTION_FAILED\n+};\n+\n+std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::string& warning, WalletCreationStatus& status, const SecureString& passphrase, uint64_t wallet_creation_flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r297233459",
      "id" : 297233459,
      "in_reply_to_id" : 296434172,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzIzMzQ1OQ==",
      "original_commit_id" : "49e47c019b63ea06fd2265ad16fa3245bf2093a3",
      "original_position" : 10,
      "path" : "src/wallet/wallet.h",
      "position" : 10,
      "pull_request_review_id" : 254065146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-09T23:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/297233459",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 49e47c019b63ea06fd2265ad16fa3245bf2093a3\r\n\r\nThis is a nice, tidy refactor PR that simplifies #15450. \r\n\r\nThere are some excellent follow-up suggestions in this PR:\r\n- https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434142\r\n- https://github.com/bitcoin/bitcoin/pull/16244#discussion_r296434172\r\n- \"new create wallet function [could take] separate option arguments instead of wallet flags (https://github.com/bitcoin/bitcoin/pull/16244#pullrequestreview-252015195)\r\n- \"blank wallet and disable private keys options could be combined into a single option\" (https://github.com/bitcoin/bitcoin/pull/16244#pullrequestreview-252015195)\r\n- return a warning (if not an error) if an ignored passphrase is provided with disable private keys option (https://github.com/bitcoin/bitcoin/pull/16244#pullrequestreview-252015195)\r\n\r\n@achow101 , @Empact, @ryanofsky : I'll happily review a PR that does those things if any of you want to open it.",
      "created_at" : "2019-07-09T13:53:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-509651561",
      "id" : 509651561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16244",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTY1MTU2MQ==",
      "updated_at" : "2019-07-09T13:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/509651561",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2019-07-09T23:50:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-509851652",
      "id" : 509851652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16244",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTg1MTY1Mg==",
      "updated_at" : "2019-07-09T23:50:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/509851652",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d\r\n\r\nRan the rebase myself and verified our merge resolves were the same.",
      "created_at" : "2019-07-10T08:55:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-509974339",
      "id" : 509974339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16244",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTk3NDMzOQ==",
      "updated_at" : "2019-07-10T08:55:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/509974339",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302107394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302107394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Light preference for making `status` the return variable, similar to how the `TransactionStatus` enum is used. ",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-07-10T14:49:07Z",
      "diff_hunk" : "@@ -2698,55 +2693,24 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             // Empty string is invalid\n             throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Cannot encrypt a wallet with a blank password\");\n         }\n-        // Born encrypted wallets need to be blank first so that wallet creation doesn't make any unencrypted keys\n-        flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n     if (!request.params[4].isNull() && request.params[4].get_bool()) {\n         flags |= WALLET_FLAG_AVOID_REUSE;\n     }\n \n-    WalletLocation location(request.params[0].get_str());\n-    if (location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location, flags);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed.\");\n-    }\n-\n-    // Encrypt the wallet if there's a passphrase\n-    if (!passphrase.empty() && !(flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-        if (!wallet->EncryptWallet(passphrase)) {\n-            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet created but failed to encrypt.\");\n-        }\n-\n-        if (!create_blank) {\n-            // Unlock the wallet\n-            if (!wallet->Unlock(passphrase)) {\n-                throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet was encrypted but could not be unlocked\");\n-            }\n-\n-            // Set a seed for the wallet\n-            CPubKey master_pub_key = wallet->GenerateNewSeed();\n-            wallet->SetHDSeed(master_pub_key);\n-            wallet->NewKeyPool();\n-\n-            // Relock the wallet\n-            wallet->Lock();\n-        }\n+    std::string error;\n+    std::string warning;\n+    WalletCreationStatus status;\n+    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, request.params[0].get_str(), error, warning, status, passphrase, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302107394",
      "id" : 302107394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjEwNzM5NA==",
      "original_commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "original_position" : 68,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 68,
      "pull_request_review_id" : 260147807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-10T15:03:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302107394",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302112502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302112502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use switch without `default` so we don't forget anything?",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-07-10T14:57:55Z",
      "diff_hunk" : "@@ -2698,55 +2693,24 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             // Empty string is invalid\n             throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Cannot encrypt a wallet with a blank password\");\n         }\n-        // Born encrypted wallets need to be blank first so that wallet creation doesn't make any unencrypted keys\n-        flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n     if (!request.params[4].isNull() && request.params[4].get_bool()) {\n         flags |= WALLET_FLAG_AVOID_REUSE;\n     }\n \n-    WalletLocation location(request.params[0].get_str());\n-    if (location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location, flags);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed.\");\n-    }\n-\n-    // Encrypt the wallet if there's a passphrase\n-    if (!passphrase.empty() && !(flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-        if (!wallet->EncryptWallet(passphrase)) {\n-            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet created but failed to encrypt.\");\n-        }\n-\n-        if (!create_blank) {\n-            // Unlock the wallet\n-            if (!wallet->Unlock(passphrase)) {\n-                throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet was encrypted but could not be unlocked\");\n-            }\n-\n-            // Set a seed for the wallet\n-            CPubKey master_pub_key = wallet->GenerateNewSeed();\n-            wallet->SetHDSeed(master_pub_key);\n-            wallet->NewKeyPool();\n-\n-            // Relock the wallet\n-            wallet->Lock();\n-        }\n+    std::string error;\n+    std::string warning;\n+    WalletCreationStatus status;\n+    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, request.params[0].get_str(), error, warning, status, passphrase, flags);\n+    if (status == WalletCreationStatus::CREATION_FAILED) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302112502",
      "id" : 302112502,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjExMjUwMg==",
      "original_commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "original_position" : 69,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 69,
      "pull_request_review_id" : 260147807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-10T15:03:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302112502",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302139984"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302139984"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe for a follow up. Trying to avoid invalidating ACKs.",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-07-10T15:46:31Z",
      "diff_hunk" : "@@ -2698,55 +2693,24 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             // Empty string is invalid\n             throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Cannot encrypt a wallet with a blank password\");\n         }\n-        // Born encrypted wallets need to be blank first so that wallet creation doesn't make any unencrypted keys\n-        flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n     if (!request.params[4].isNull() && request.params[4].get_bool()) {\n         flags |= WALLET_FLAG_AVOID_REUSE;\n     }\n \n-    WalletLocation location(request.params[0].get_str());\n-    if (location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location, flags);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed.\");\n-    }\n-\n-    // Encrypt the wallet if there's a passphrase\n-    if (!passphrase.empty() && !(flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-        if (!wallet->EncryptWallet(passphrase)) {\n-            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet created but failed to encrypt.\");\n-        }\n-\n-        if (!create_blank) {\n-            // Unlock the wallet\n-            if (!wallet->Unlock(passphrase)) {\n-                throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet was encrypted but could not be unlocked\");\n-            }\n-\n-            // Set a seed for the wallet\n-            CPubKey master_pub_key = wallet->GenerateNewSeed();\n-            wallet->SetHDSeed(master_pub_key);\n-            wallet->NewKeyPool();\n-\n-            // Relock the wallet\n-            wallet->Lock();\n-        }\n+    std::string error;\n+    std::string warning;\n+    WalletCreationStatus status;\n+    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, request.params[0].get_str(), error, warning, status, passphrase, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302139984",
      "id" : 302139984,
      "in_reply_to_id" : 302107394,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjEzOTk4NA==",
      "original_commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "original_position" : 68,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 68,
      "pull_request_review_id" : 260189261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-10T15:46:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302139984",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302140010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302140010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe for a follow up. Trying to avoid invalidating ACKs.",
      "commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "created_at" : "2019-07-10T15:46:35Z",
      "diff_hunk" : "@@ -2698,55 +2693,24 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             // Empty string is invalid\n             throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Cannot encrypt a wallet with a blank password\");\n         }\n-        // Born encrypted wallets need to be blank first so that wallet creation doesn't make any unencrypted keys\n-        flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n     if (!request.params[4].isNull() && request.params[4].get_bool()) {\n         flags |= WALLET_FLAG_AVOID_REUSE;\n     }\n \n-    WalletLocation location(request.params[0].get_str());\n-    if (location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n-    }\n-\n-    // Wallet::Verify will check if we're trying to create a wallet with a duplication name.\n-    if (!CWallet::Verify(*g_rpc_interfaces->chain, location, false, error, warning)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet file verification failed: \" + error);\n-    }\n-\n-    std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(*g_rpc_interfaces->chain, location, flags);\n-    if (!wallet) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet creation failed.\");\n-    }\n-\n-    // Encrypt the wallet if there's a passphrase\n-    if (!passphrase.empty() && !(flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n-        if (!wallet->EncryptWallet(passphrase)) {\n-            throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet created but failed to encrypt.\");\n-        }\n-\n-        if (!create_blank) {\n-            // Unlock the wallet\n-            if (!wallet->Unlock(passphrase)) {\n-                throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Wallet was encrypted but could not be unlocked\");\n-            }\n-\n-            // Set a seed for the wallet\n-            CPubKey master_pub_key = wallet->GenerateNewSeed();\n-            wallet->SetHDSeed(master_pub_key);\n-            wallet->NewKeyPool();\n-\n-            // Relock the wallet\n-            wallet->Lock();\n-        }\n+    std::string error;\n+    std::string warning;\n+    WalletCreationStatus status;\n+    std::shared_ptr<CWallet> wallet = CreateWallet(*g_rpc_interfaces->chain, request.params[0].get_str(), error, warning, status, passphrase, flags);\n+    if (status == WalletCreationStatus::CREATION_FAILED) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#discussion_r302140010",
      "id" : 302140010,
      "in_reply_to_id" : 302112502,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMjE0MDAxMA==",
      "original_commit_id" : "1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d",
      "original_position" : 69,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 69,
      "pull_request_review_id" : 260189301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16244",
      "updated_at" : "2019-07-10T15:46:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/302140010",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 1aecdf2063cbe28d4715ae5ae1a7e51b860c9f4d\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUhv2Qv+Pql8nxt70ITGbhfE0oD5zRZnD7wBrj50x1Ax+akPccN7i0kYvPitddVR\r\nYAT2ybxKuSNymCMDO97KkHHYGV15bePInlJchIvZFLOW04Gi2KVSgC6+OUkwACVA\r\npPBSdsIUAkc3YnQ+itQYhvLFhCEAaherswBj2RYmHR35sDSjkBwUKcTZLCs14BsG\r\nml3eLUJlGGW2Rv9Tyy0M+/bCpwc3mBnNPRT8KB5eNfR/L2lRSbkAkCB36p1vRpYt\r\nctquEsHXPpgVBHFtxl+4NqQteB+nE0A/0ewHZ94ARag5+l9mHvJLmms/1fpWy3WC\r\neEZ410b0M8lBtPTmgLECeLwKo6LXJsgpNLfhjtLRDmadyNrBmbFabh66uCT5qc3f\r\n1xhRiFZSbMi6QomAImP1FqrPEGAr7Uic8/yEnCGOgw9kiU52TugI9meFwG0LZEAr\r\n620FcBTW+SBGzIQC4AP4MiATAjg9Lauhdx/cZ1UBKkek2jY0sG8yEOLX7hRVNfju\r\nS/4xqbWn\r\n=CqUZ\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `68c42fd65f782cac7ed08b8a0c706ca6a49acecbeb4fbda853ab984f9e459a8f  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e89294010868c42fd65f782cac7ed08b8a0c706ca6a49acecbeb4fbda853ab984f9e459a8ff010309925b71cfbb46271cef10d97b0cfc008fff0100e7c3b7512b2cefeb6fe44d8743915b108f1045d262574f008595b8136ea7f4d380083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff0102c72d1516eac21f2a9ebcd252221384808f1045d262574f0082346fa2e9d5c39f50083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff010b65e734b14bde8802318b5c9ac4e739a08f1045d262575f008a2f3519577a15c8d0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010e331888ea9b7719275ca50f4b2f568a908f1045d262574f0086d379b1b02b7272b0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6d)\r\n\r\n</details>\r\n",
      "created_at" : "2019-07-10T17:51:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16244#issuecomment-510163037",
      "id" : 510163037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16244",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMDE2MzAzNw==",
      "updated_at" : "2019-07-10T17:51:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/510163037",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
