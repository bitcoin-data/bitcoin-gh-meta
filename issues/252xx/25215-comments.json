[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25290](https://github.com/bitcoin/bitcoin/pull/25290) ([kernel 3a/n] Decouple `CTxMemPool` from `ArgsManager` by dongcarl)\n* [#25077](https://github.com/bitcoin/bitcoin/pull/25077) (Fix chain tip data race and corrupt rest response by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-05-26T09:11:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1138328544",
      "id" : 1138328544,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25215",
      "node_id" : "IC_kwDOABII585D2YPg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138328544/reactions"
      },
      "updated_at" : "2022-06-16T09:00:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138328544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It looks like you are mostly modifying tests. If the goal it to avoid future code churn, why not add a test-only function that constructs a test-only mempool?",
      "created_at" : "2022-05-27T10:04:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1139472148",
      "id" : 1139472148,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25215",
      "node_id" : "IC_kwDOABII585D6vcU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139472148/reactions"
      },
      "updated_at" : "2022-05-27T10:04:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139472148",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke \r\n> It looks like you are mostly modifying tests. If the goal it to avoid future code churn, why not add a test-only function that constructs a test-only mempool?\r\n\r\nI agree, though in my mind `ChainTestingSetup::ChainTestingSetup` _is_ that \"test-only function that constructs a test-only mempool\", and I'm just making more tests use it! ð ",
      "created_at" : "2022-05-27T18:50:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1139940704",
      "id" : 1139940704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25215",
      "node_id" : "IC_kwDOABII585D8h1g",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139940704/reactions"
      },
      "updated_at" : "2022-05-27T19:21:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139940704",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Well, it also sets up a full chain, so it is not possible to call it twice. I am mostly asking in the context of https://github.com/bitcoin/bitcoin/pull/25073 , which I did after your suggestion (see https://github.com/bitcoin/bitcoin/pull/19909#issuecomment-1112975773 ). ",
      "created_at" : "2022-05-28T07:35:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1140195636",
      "id" : 1140195636,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25215",
      "node_id" : "IC_kwDOABII585D9gE0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1140195636/reactions"
      },
      "updated_at" : "2022-05-28T07:35:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1140195636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke \r\n\r\n> I am mostly asking in the context of #25073 , which I did after your suggestion (see [#19909 (comment)](https://github.com/bitcoin/bitcoin/pull/19909#issuecomment-1112975773) ).\r\n\r\nAh I see! I consider the cases in #25073 as ones where we don't want the `CTxMemPool` state to persist for the lifetime of the `TestingSetup`, and therefore we wouldn't have changed it in this PR at all. See \"A note on using existing mempools\" in the original description. I'm also okay with adding these new invocations of the `CTxMemPool` constructor in #25073 since they are logically necessary and avoids `clear()`.\r\n\r\nI do now see the benefit to having a standalone function that constructs a test-only mempool... It would coalesce all of the cases not addressed by this PR and 2e (mostly the `src/fuzz` ones and the new `miner_test` ones in #25073) into just one call site... I'll give it some thought.",
      "created_at" : "2022-05-31T20:13:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1142598050",
      "id" : 1142598050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25215",
      "node_id" : "IC_kwDOABII585EGqmi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142598050/reactions"
      },
      "updated_at" : "2022-05-31T20:14:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142598050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke \r\n> I'll give it some thought.\r\n\r\nGiven it some thought. I think \"making a standalone function that constructs a test-only mempool\" is not relevant to this PR and can be done in the future. In fact, it's likely easier to do with the `CTxMemPool::Options` introduced in #25290.\r\n\r\nI don't think anything we're doing here or in #25290 is mutually exclusive with your #25073, since we're not outright eliminating all `CTxMemPool` callsites, just eliminating them where they're not necessary. So if you're okay with it, I think we can table this discussion for now.",
      "created_at" : "2022-06-13T16:17:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1154119966",
      "id" : 1154119966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25215",
      "node_id" : "IC_kwDOABII585Eynke",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154119966/reactions"
      },
      "updated_at" : "2022-06-13T16:17:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154119966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25215#discussion_r897942437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897942437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm somewhat divided about this change. From a \"testing hygiene\" point of view it seems preferable to me to construct a new mempool instead of use an existing one from the global state.\r\n\r\nI also like the idea of a function to construct a default mempool for testing. But maybe I'm missing something.",
      "commit_id" : "bf65ab9088df6f7e49030f3539b51d75023a6572",
      "created_at" : "2022-06-15T12:53:59Z",
      "diff_hunk" : "@@ -207,7 +207,7 @@ BOOST_AUTO_TEST_CASE(NonCoinbasePreforwardRTTest)\n \n BOOST_AUTO_TEST_CASE(SufficientPreforwardRTTest)\n {\n-    CTxMemPool pool;\n+    CTxMemPool& pool = *Assert(m_node.mempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#discussion_r897942437",
      "id" : 897942437,
      "line" : 210,
      "node_id" : "PRRC_kwDOABII5841hYOl",
      "original_commit_id" : "bf65ab9088df6f7e49030f3539b51d75023a6572",
      "original_line" : 210,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 23,
      "pull_request_review_id" : 1007448723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897942437/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-15T12:53:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897942437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25215#discussion_r898160800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898160800"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> From a \"testing hygiene\" point of view it seems preferable to me to construct a new mempool instead of use an existing one from the global state.\r\n\r\nIn cases where we only need one mempool that does not outlive `TestingSetup` (the cases addressed in this PR), it is not a problem to use `TestingSetup`'s mempool since it's reconstructed each time. In many cases it is much more preferable to use `TestingSetup`'s mempool:\r\n\r\n- `TestingSetup`'s mempool will respect `gArgs` flags given to it by the `TestingSetup` constructor, local mempools will not. This is an easier footgun to shoot than one would think, and has already led to a case where we were fuzzing a noop: #24634\r\n- `TestingSetup`'s mempool is registered in `TestingSetup`'s `CChainState`s' `m_mempool` and perhaps in other places. Using a local mempool means that there will be a discrepancy between the mempool the test operates on and the mempool that `CChainState`s operate on.\r\n\r\nTo be clear, I'm not saying that all of our tests all have to use `TestingSetup`'s mempool, there are many places where that doesn't make sense (see this PR's original description). I'm only changing places where it's obviously correct (and a coalescing of codepaths) to use `TestingSetup`'s mempool.\r\n\r\n> I also like the idea of a function to construct a default mempool for testing.\r\n\r\nSure! I like it too. It's great for cases of `CTxMemPool` construction that this PR deliberately leaves out. It might even be able to use the `DummyChainstate` technique in `src/test/fuzz/tx_pool.cpp` to replace the `m_mempool` pointer in `CChainState`. It's just done easier after we introduce `CTxMemPool::Options` in #25290 so I think we can table it for now.",
      "commit_id" : "bf65ab9088df6f7e49030f3539b51d75023a6572",
      "created_at" : "2022-06-15T15:59:15Z",
      "diff_hunk" : "@@ -207,7 +207,7 @@ BOOST_AUTO_TEST_CASE(NonCoinbasePreforwardRTTest)\n \n BOOST_AUTO_TEST_CASE(SufficientPreforwardRTTest)\n {\n-    CTxMemPool pool;\n+    CTxMemPool& pool = *Assert(m_node.mempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#discussion_r898160800",
      "id" : 898160800,
      "in_reply_to_id" : 897942437,
      "line" : 210,
      "node_id" : "PRRC_kwDOABII5841iNig",
      "original_commit_id" : "bf65ab9088df6f7e49030f3539b51d75023a6572",
      "original_line" : 210,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/blockencodings_tests.cpp",
      "position" : 23,
      "pull_request_review_id" : 1007762754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25215",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898160800/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-15T17:39:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/898160800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Pushed bf65ab9088df6f7e49030f3539b51d75023a6572 -> d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637\r\n- Addressed https://github.com/bitcoin/bitcoin/pull/25215#discussion_r898282266 (Thanks Cory!)",
      "created_at" : "2022-06-15T21:31:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1156965873",
      "id" : 1156965873,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25215",
      "node_id" : "IC_kwDOABII585E9eXx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156965873/reactions"
      },
      "updated_at" : "2022-06-15T21:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156965873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK d273e53b6e2cabd91a83f0ff0f9b6cfe1815b637",
      "created_at" : "2022-06-16T17:43:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25215#issuecomment-1157958948",
      "id" : 1157958948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25215",
      "node_id" : "IC_kwDOABII585FBQ0k",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1157958948/reactions"
      },
      "updated_at" : "2022-06-16T17:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1157958948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
