[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17487](https://github.com/bitcoin/bitcoin/pull/17487) (coins: allow write to disk without cache drop by jamesob)\n* [#9384](https://github.com/bitcoin/bitcoin/pull/9384) (CCoinsViewCache code cleanup & deduplication by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-06-04T00:44:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25274#issuecomment-1146480714",
      "id" : 1146480714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25274",
      "node_id" : "IC_kwDOABII585EVehK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1146480714/reactions"
      },
      "updated_at" : "2022-06-04T00:44:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1146480714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure if that approach will be a net benefit. One of the main advantages of the allocator in #22702 is that not every node has to be malloced', saving the considerable memory overhead. I think the only way to get rid of the many `std::unordered_map` allocations is to use a custom allocator.\r\n\r\nAnother approach to hold on to the memory that should in theory do all what's done in #22702 is to just use `std::pmr::unsynchronized_pool_resource`: That memory resource has a pool which holds on to its memory until it is destroyed, exactly like my node_allocator. I don't know though how its implemented or what memory overhead individual allocations have. https://en.cppreference.com/w/cpp/memory/unsynchronized_pool_resource\r\n\r\nUsage would be relatively simple, like so:\r\n\r\n```cpp\r\nusing CCoinsMap = std::pmr::unordered_map<COutPoint, CCoinsCacheEntry, SaltedOutpointHasher>;\r\n\r\nauto options = std::pmr::pool_options();\r\noptions.largest_required_pool_block = 128; // TODO no idea what good values are\r\noptions.max_blocks_per_chunk = 262144 / options.largest_required_pool_block;  // TODO no idea what good values are\r\n\r\nauto mr = std::pmr::unsynchronized_pool_resource();\r\nauto map = CCoinsMap{0, SaltedOutpointHasher{}, std::equal_to<COutPoint>{}, &mr};\r\n```\r\n\r\nI did some rudimentary benchmarking with this, but this seemed to be even slower than a plain `std::unordered_map` so I didn't follow this more closely.",
      "created_at" : "2022-06-04T06:03:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25274#issuecomment-1146545443",
      "id" : 1146545443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25274",
      "node_id" : "IC_kwDOABII585EVuUj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1146545443/reactions"
      },
      "updated_at" : "2022-06-04T06:03:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1146545443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   }
]
