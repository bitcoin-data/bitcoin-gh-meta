[
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK bd7f27d16dacf6f7de3b4f6bd052def41d9601be",
      "created_at" : "2021-05-10T10:48:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21900#issuecomment-836543619",
      "id" : 836543619,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21900",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzNjU0MzYxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-10T10:48:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/836543619",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21900#discussion_r629524841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21900"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/629524841"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would be nice to not set this. Maybe someone can teach the miniwallet how to create pay-to-raw-pubkey or so?",
      "commit_id" : "bd7f27d16dacf6f7de3b4f6bd052def41d9601be",
      "created_at" : "2021-05-10T17:01:32Z",
      "diff_hunk" : "@@ -83,80 +83,73 @@ def relative_locktime(sdf, srhb, stf, srlb):\n def all_rlt_txs(txs):\n     return [tx['tx'] for tx in txs]\n \n-def sign_transaction(node, unsignedtx):\n-    rawtx = ToHex(unsignedtx)\n-    signresult = node.signrawtransactionwithwallet(rawtx)\n-    tx = CTransaction()\n-    f = BytesIO(hex_str_to_bytes(signresult['hex']))\n-    tx.deserialize(f)\n-    return tx\n-\n-def create_bip112special(node, input, txversion, address):\n-    tx = create_transaction(node, input, address, amount=Decimal(\"49.98\"))\n-    tx.nVersion = txversion\n-    signtx = sign_transaction(node, tx)\n-    signtx.vin[0].scriptSig = CScript([-1, OP_CHECKSEQUENCEVERIFY, OP_DROP] + list(CScript(signtx.vin[0].scriptSig)))\n-    return signtx\n-\n-def create_bip112emptystack(node, input, txversion, address):\n-    tx = create_transaction(node, input, address, amount=Decimal(\"49.98\"))\n-    tx.nVersion = txversion\n-    signtx = sign_transaction(node, tx)\n-    signtx.vin[0].scriptSig = CScript([OP_CHECKSEQUENCEVERIFY] + list(CScript(signtx.vin[0].scriptSig)))\n-    return signtx\n-\n-def send_generic_input_tx(node, coinbases, address):\n-    return node.sendrawtransaction(ToHex(sign_transaction(node, create_transaction(node, node.getblock(coinbases.pop())['tx'][0], address, amount=Decimal(\"49.99\")))))\n-\n-def create_bip68txs(node, bip68inputs, txversion, address, locktime_delta=0):\n-    \"\"\"Returns a list of bip68 transactions with different bits set.\"\"\"\n-    txs = []\n-    assert len(bip68inputs) >= 16\n-    for i, (sdf, srhb, stf, srlb) in enumerate(product(*[[True, False]] * 4)):\n-        locktime = relative_locktime(sdf, srhb, stf, srlb)\n-        tx = create_transaction(node, bip68inputs[i], address, amount=Decimal(\"49.98\"))\n-        tx.nVersion = txversion\n-        tx.vin[0].nSequence = locktime + locktime_delta\n-        tx = sign_transaction(node, tx)\n-        tx.rehash()\n-        txs.append({'tx': tx, 'sdf': sdf, 'stf': stf})\n-\n-    return txs\n-\n-def create_bip112txs(node, bip112inputs, varyOP_CSV, txversion, address, locktime_delta=0):\n-    \"\"\"Returns a list of bip68 transactions with different bits set.\"\"\"\n-    txs = []\n-    assert len(bip112inputs) >= 16\n-    for i, (sdf, srhb, stf, srlb) in enumerate(product(*[[True, False]] * 4)):\n-        locktime = relative_locktime(sdf, srhb, stf, srlb)\n-        tx = create_transaction(node, bip112inputs[i], address, amount=Decimal(\"49.98\"))\n-        if (varyOP_CSV):  # if varying OP_CSV, nSequence is fixed\n-            tx.vin[0].nSequence = BASE_RELATIVE_LOCKTIME + locktime_delta\n-        else:  # vary nSequence instead, OP_CSV is fixed\n-            tx.vin[0].nSequence = locktime + locktime_delta\n-        tx.nVersion = txversion\n-        signtx = sign_transaction(node, tx)\n-        if (varyOP_CSV):\n-            signtx.vin[0].scriptSig = CScript([locktime, OP_CHECKSEQUENCEVERIFY, OP_DROP] + list(CScript(signtx.vin[0].scriptSig)))\n-        else:\n-            signtx.vin[0].scriptSig = CScript([BASE_RELATIVE_LOCKTIME, OP_CHECKSEQUENCEVERIFY, OP_DROP] + list(CScript(signtx.vin[0].scriptSig)))\n-        tx.rehash()\n-        txs.append({'tx': signtx, 'sdf': sdf, 'stf': stf})\n-    return txs\n \n class BIP68_112_113Test(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n         self.extra_args = [[\n             '-whitelist=noban@127.0.0.1',\n-            '-addresstype=legacy',\n+            '-acceptnonstdtxn=1',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21900#discussion_r629524841",
      "id" : 629524841,
      "line" : 93,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyOTUyNDg0MQ==",
      "original_commit_id" : "bd7f27d16dacf6f7de3b4f6bd052def41d9601be",
      "original_line" : 93,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "test/functional/feature_csv_activation.py",
      "position" : 101,
      "pull_request_review_id" : 655870030,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21900",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-10T17:01:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/629524841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
