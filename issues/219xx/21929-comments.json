[
   {
      "author_association" : "MEMBER",
      "body" : "@elichai on *32-bit* you can reproduce this yourself in a few seconds:\r\n\r\n```\r\n$ FUZZ=integer ./src/test/fuzz/fuzz  \r\nINFO: Seed: 2184836021\r\nINFO: Loaded 1 modules   (187658 inline 8-bit counters): 187658 [0x584f7ee8, 0x58525bf2), \r\nINFO: Loaded 1 PC tables (187658 PCs): 187658 [0x58525bf4,0x58694444), \r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: A corpus is not provided, starting from an empty corpus\r\n#2\tINITED cov: 15 ft: 16 corp: 1/1b exec/s: 0 rss: 40Mb\r\n\tNEW_FUNC[1/1665]: 0x57239350 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (/bitcoin/src/test/fuzz/fuzz+0xc69350)\r\n\tNEW_FUNC[2/1665]: 0x572393e0 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) (/bitcoin/src/test/fuzz/fuzz+0xc693e0)\r\n#4965\tNEW    cov: 2428 ft: 2432 corp: 2/54b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 3 CopyPart-InsertByte-CrossOver-\r\n#4971\tNEW    cov: 2431 ft: 2443 corp: 3/107b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 1 CrossOver-\r\n#4974\tNEW    cov: 2434 ft: 2446 corp: 4/160b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 3 CMP-CrossOver-ChangeBit- DE: \"\\x01\\x00\\x00\\x03\"-\r\n#4985\tNEW    cov: 2435 ft: 2449 corp: 5/213b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 1 CrossOver-\r\n#4995\tNEW    cov: 2435 ft: 2450 corp: 6/265b lim: 53 exec/s: 0 rss: 43Mb L: 52/53 MS: 5 CMP-EraseBytes-ShuffleBytes-PersAutoDict-InsertRepeatedBytes- DE: \"\\xff?\"-\"\\x01\\x00\\x00\\x03\"-\r\n#5000\tREDUCE cov: 2435 ft: 2450 corp: 6/264b lim: 53 exec/s: 0 rss: 43Mb L: 52/53 MS: 5 PersAutoDict-ShuffleBytes-ShuffleBytes-CrossOver-EraseBytes- DE: \"\\x01\\x00\\x00\\x03\"-\r\n#5002\tNEW    cov: 2435 ft: 2451 corp: 7/317b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 2 CopyPart-CrossOver-\r\n#5012\tREDUCE cov: 2435 ft: 2452 corp: 8/370b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 5 ChangeBinInt-InsertByte-CopyPart-ChangeBinInt-CopyPart-\r\n#5015\tNEW    cov: 2436 ft: 2453 corp: 9/423b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 3 ChangeBinInt-ChangeByte-ChangeBinInt-\r\n\tNEW_FUNC[1/5]: 0x57264d80 in bool __gnu_debug::__foreign_iterator_aux4<__gnu_cxx::__normal_iterator<unsigned char const*, std::__cxx1998::vector<unsigned char, zero_after_free_allocator<unsigned char> > >, std::__debug::vector<unsigned char, zero_after_free_allocator<unsigned char> >, std::random_access_iterator_tag>(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<unsigned char const*, std::__cxx1998::vector<unsigned char, zero_after_free_allocator<unsigned char> > >, std::__debug::vector<unsigned char, zero_after_free_allocator<unsigned char> >, std::random_access_iterator_tag> const&, ...) (/bitcoin/src/test/fuzz/fuzz+0xc94d80)\r\n\tNEW_FUNC[2/5]: 0x57265c60 in decltype(_S_construct(fp, fp0, std::forward<unsigned char>(fp1))) std::allocator_traits<zero_after_free_allocator<unsigned char> >::construct<unsigned char, unsigned char>(zero_after_free_allocator<unsigned char>&, unsigned char*, unsigned char&&) (/bitcoin/src/test/fuzz/fuzz+0xc95c60)\r\n#5018\tNEW    cov: 2447 ft: 2491 corp: 10/476b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 3 ShuffleBytes-ShuffleBytes-CopyPart-\r\n#5031\tNEW    cov: 2447 ft: 2492 corp: 11/529b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 3 CrossOver-PersAutoDict-CopyPart- DE: \"\\x01\\x00\\x00\\x03\"-\r\n#5067\tNEW    cov: 2447 ft: 2493 corp: 12/582b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 1 ChangeByte-\r\n#5077\tNEW    cov: 2447 ft: 2494 corp: 13/635b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 5 EraseBytes-ChangeBinInt-ChangeByte-CMP-CopyPart- DE: \"\\xff\\xff\\xff\\xff\\xff\\xff\\xffL\"-\r\n#5082\tNEW    cov: 2447 ft: 2495 corp: 14/688b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 5 ShuffleBytes-ChangeByte-ChangeBinInt-ChangeBinInt-CrossOver-\r\n#5153\tNEW    cov: 2447 ft: 2496 corp: 15/741b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 1 ChangeByte-\r\n#5243\tNEW    cov: 2450 ft: 2502 corp: 16/794b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 5 CrossOver-ChangeByte-InsertByte-CopyPart-InsertRepeatedBytes-\r\n#5277\tNEW    cov: 2452 ft: 2508 corp: 17/847b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 4 EraseBytes-EraseBytes-InsertRepeatedBytes-PersAutoDict- DE: \"\\xff?\"-\r\n#5289\tNEW    cov: 2452 ft: 2509 corp: 18/900b lim: 53 exec/s: 0 rss: 43Mb L: 53/53 MS: 2 ShuffleBytes-CrossOver-\r\n#5304\tNEW    cov: 2452 ft: 2513 corp: 19/952b lim: 53 exec/s: 0 rss: 43Mb L: 52/53 MS: 5 ChangeByte-CrossOver-ChangeByte-InsertRepeatedBytes-InsertRepeatedBytes-\r\n#5326\tNEW    cov: 2452 ft: 2515 corp: 20/1004b lim: 53 exec/s: 5326 rss: 43Mb L: 52/53 MS: 2 ChangeBit-ChangeBinInt-\r\n#5348\tNEW    cov: 2452 ft: 2516 corp: 21/1057b lim: 53 exec/s: 5348 rss: 43Mb L: 53/53 MS: 2 ChangeBinInt-ChangeBit-\r\n#5384\tNEW    cov: 2453 ft: 2517 corp: 22/1110b lim: 53 exec/s: 5384 rss: 43Mb L: 53/53 MS: 1 InsertByte-\r\n#5415\tNEW    cov: 2453 ft: 2518 corp: 23/1163b lim: 53 exec/s: 5415 rss: 43Mb L: 53/53 MS: 1 InsertByte-\r\n#5416\tNEW    cov: 2453 ft: 2519 corp: 24/1216b lim: 53 exec/s: 5416 rss: 43Mb L: 53/53 MS: 1 ChangeByte-\r\n\tNEW_FUNC[1/3]: 0x57244080 in std::error_code::error_code<std::io_errc, void>(std::io_errc) (/bitcoin/src/test/fuzz/fuzz+0xc74080)\r\n\tNEW_FUNC[2/3]: 0x572442d0 in std::make_error_code(std::io_errc) (/bitcoin/src/test/fuzz/fuzz+0xc742d0)\r\n#5929\tNEW    cov: 2463 ft: 2538 corp: 25/1273b lim: 58 exec/s: 5929 rss: 43Mb L: 57/57 MS: 3 ChangeBinInt-ShuffleBytes-InsertRepeatedBytes-\r\n\tNEW_FUNC[1/2]: 0x572e6fd0 in std::atomic<bool>::operator bool() const (/bitcoin/src/test/fuzz/fuzz+0xd16fd0)\r\n\tNEW_FUNC[2/2]: 0x572e7110 in std::operator&(std::memory_order, std::__memory_order_modifier) (/bitcoin/src/test/fuzz/fuzz+0xd17110)\r\n#5931\tNEW    cov: 2468 ft: 2545 corp: 26/1327b lim: 58 exec/s: 5931 rss: 43Mb L: 54/57 MS: 2 CopyPart-InsertByte-\r\n#5943\tNEW    cov: 2471 ft: 2552 corp: 27/1384b lim: 58 exec/s: 5943 rss: 43Mb L: 57/57 MS: 2 InsertByte-InsertRepeatedBytes-\r\n#5945\tNEW    cov: 2471 ft: 2553 corp: 28/1439b lim: 58 exec/s: 5945 rss: 43Mb L: 55/57 MS: 2 ChangeByte-CMP- DE: \"\\x96\\x00\"-\r\n#6036\tNEW    cov: 2471 ft: 2555 corp: 29/1496b lim: 58 exec/s: 6036 rss: 43Mb L: 57/57 MS: 1 CopyPart-\r\n#6075\tNEW    cov: 2471 ft: 2556 corp: 30/1554b lim: 58 exec/s: 3037 rss: 43Mb L: 58/58 MS: 4 PersAutoDict-CopyPart-ShuffleBytes-ChangeASCIIInt- DE: \"\\x96\\x00\"-\r\n#6126\tNEW    cov: 2471 ft: 2557 corp: 31/1608b lim: 58 exec/s: 3063 rss: 43Mb L: 54/58 MS: 1 InsertByte-\r\n#6131\tNEW    cov: 2471 ft: 2559 corp: 32/1665b lim: 58 exec/s: 3065 rss: 43Mb L: 57/58 MS: 5 ChangeBit-ShuffleBytes-CrossOver-EraseBytes-InsertRepeatedBytes-\r\n#6289\tNEW    cov: 2471 ft: 2560 corp: 33/1719b lim: 58 exec/s: 3144 rss: 43Mb L: 54/58 MS: 3 InsertByte-ShuffleBytes-ShuffleBytes-\r\n#6394\tREDUCE cov: 2471 ft: 2560 corp: 33/1714b lim: 58 exec/s: 3197 rss: 43Mb L: 53/57 MS: 5 ChangeBit-CopyPart-EraseBytes-ChangeBinInt-InsertRepeatedBytes-\r\n#6442\tNEW    cov: 2471 ft: 2562 corp: 34/1772b lim: 58 exec/s: 3221 rss: 43Mb L: 58/58 MS: 3 ChangeBit-InsertByte-CrossOver-\r\n#6698\tREDUCE cov: 2471 ft: 2562 corp: 34/1771b lim: 58 exec/s: 3349 rss: 43Mb L: 52/58 MS: 1 EraseBytes-\r\n#6759\tREDUCE cov: 2471 ft: 2562 corp: 34/1770b lim: 58 exec/s: 2253 rss: 43Mb L: 57/57 MS: 1 EraseBytes-\r\n#7007\tNEW    cov: 2472 ft: 2567 corp: 35/1824b lim: 58 exec/s: 2335 rss: 43Mb L: 54/57 MS: 3 EraseBytes-CrossOver-InsertRepeatedBytes-\r\n#7514\tNEW    cov: 2475 ft: 2579 corp: 36/1887b lim: 63 exec/s: 1878 rss: 43Mb L: 63/63 MS: 2 ChangeByte-CrossOver-\r\n#7517\tREDUCE cov: 2475 ft: 2581 corp: 37/1950b lim: 63 exec/s: 1879 rss: 43Mb L: 63/63 MS: 3 PersAutoDict-ChangeASCIIInt-CrossOver- DE: \"\\x01\\x00\\x00\\x03\"-\r\n#7518\tNEW    cov: 2476 ft: 2585 corp: 38/2011b lim: 63 exec/s: 1879 rss: 43Mb L: 61/63 MS: 1 CopyPart-\r\n#7530\tNEW    cov: 2476 ft: 2587 corp: 39/2073b lim: 63 exec/s: 1882 rss: 43Mb L: 62/63 MS: 2 ChangeBit-EraseBytes-\r\n#7636\tNEW    cov: 2478 ft: 2589 corp: 40/2127b lim: 63 exec/s: 1909 rss: 43Mb L: 54/63 MS: 1 CopyPart-\r\n#7672\tREDUCE cov: 2478 ft: 2589 corp: 40/2118b lim: 63 exec/s: 1918 rss: 43Mb L: 54/63 MS: 1 EraseBytes-\r\n\tNEW_FUNC[1/2]: 0x57796160 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int) (/bitcoin/src/test/fuzz/fuzz+0x11c6160)\r\n\tNEW_FUNC[2/2]: 0x57a9c9a0 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int) (/bitcoin/src/test/fuzz/fuzz+0x14cc9a0)\r\n#7745\tREDUCE cov: 2488 ft: 2604 corp: 41/2181b lim: 63 exec/s: 1936 rss: 43Mb L: 63/63 MS: 3 ChangeASCIIInt-ChangeASCIIInt-CrossOver-\r\n#8192\tpulse  cov: 2488 ft: 2604 corp: 41/2181b lim: 63 exec/s: 1638 rss: 43Mb\r\n#8261\tNEW    cov: 2488 ft: 2605 corp: 42/2246b lim: 68 exec/s: 1652 rss: 43Mb L: 65/65 MS: 1 PersAutoDict- DE: \"\\x96\\x00\"-\r\n#8264\tNEW    cov: 2489 ft: 2608 corp: 43/2314b lim: 68 exec/s: 1652 rss: 43Mb L: 68/68 MS: 3 PersAutoDict-EraseBytes-CrossOver- DE: \"\\xff?\"-\r\n#8323\tNEW    cov: 2489 ft: 2614 corp: 44/2377b lim: 68 exec/s: 1664 rss: 43Mb L: 63/68 MS: 4 ShuffleBytes-PersAutoDict-PersAutoDict-CopyPart- DE: \"\\xff\\xff\\xff\\xff\\xff\\xff\\xffL\"-\"\\x96\\x00\"-\r\n#8332\tNEW    cov: 2489 ft: 2615 corp: 45/2444b lim: 68 exec/s: 1666 rss: 43Mb L: 67/68 MS: 4 CMP-InsertRepeatedBytes-PersAutoDict-CopyPart- DE: \"\\x01\\x00\\x00\\x95\"-\"\\x01\\x00\\x00\\x03\"-\r\n\tNEW_FUNC[1/9]: 0x57258ad0 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::begin() (/bitcoin/src/test/fuzz/fuzz+0xc88ad0)\r\n\tNEW_FUNC[2/9]: 0x57258b50 in __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__normal_iterator<char*>(__gnu_cxx::__normal_iterator<char*, __gnu_cxx::__enable_if<std::__are_same<char*, char*>::__value, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::__type> const&) (/bitcoin/src/test/fuzz/fuzz+0xc88b50)\r\n#8352\tNEW    cov: 2521 ft: 2686 corp: 46/2512b lim: 68 exec/s: 1670 rss: 43Mb L: 68/68 MS: 5 EraseBytes-CrossOver-ChangeBit-ChangeBit-CrossOver-\r\n\tNEW_FUNC[1/1]: 0x5738a9a0 in GetVirtualTransactionSize(long long, long long) (/bitcoin/src/test/fuzz/fuzz+0xdba9a0)\r\n#8493\tNEW    cov: 2524 ft: 2695 corp: 47/2580b lim: 68 exec/s: 1698 rss: 43Mb L: 68/68 MS: 1 CopyPart-\r\n#8663\tREDUCE cov: 2524 ft: 2695 corp: 47/2579b lim: 68 exec/s: 1732 rss: 43Mb L: 64/68 MS: 5 ChangeBit-EraseBytes-ShuffleBytes-CopyPart-PersAutoDict- DE: \"\\x01\\x00\\x00\\x03\"-\r\n#8828\tNEW    cov: 2524 ft: 2697 corp: 48/2647b lim: 68 exec/s: 1471 rss: 43Mb L: 68/68 MS: 5 CopyPart-ChangeBinInt-InsertByte-InsertByte-CrossOver-\r\n#9265\tREDUCE cov: 2524 ft: 2697 corp: 48/2645b lim: 68 exec/s: 1544 rss: 43Mb L: 52/68 MS: 2 ChangeBinInt-EraseBytes-\r\n\tNEW_FUNC[1/1]: 0x57adbc30 in atoi64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (/bitcoin/src/test/fuzz/fuzz+0x150bc30)\r\n#9584\tNEW    cov: 2528 ft: 2704 corp: 49/2713b lim: 68 exec/s: 1369 rss: 43Mb L: 68/68 MS: 4 EraseBytes-PersAutoDict-CrossOver-ChangeBit- DE: \"\\xff?\"-\r\n#10193\tNEW    cov: 2529 ft: 2706 corp: 50/2784b lim: 74 exec/s: 1274 rss: 43Mb L: 71/71 MS: 4 CMP-ChangeBit-CopyPart-InsertRepeatedBytes- DE: \"\\xf7\\x00\\x00\\xf5\\x00\\xff\\xff\\x7f\"-\r\n#10195\tNEW    cov: 2531 ft: 2710 corp: 51/2858b lim: 74 exec/s: 1274 rss: 43Mb L: 74/74 MS: 2 ChangeBit-CrossOver-\r\n\tNEW_FUNC[1/1]: 0x57dbfb20 in base_uint<256u>::operator<<=(unsigned int) (/bitcoin/src/test/fuzz/fuzz+0x17efb20)\r\n#10208\tREDUCE cov: 2542 ft: 2723 corp: 52/2932b lim: 74 exec/s: 1276 rss: 43Mb L: 74/74 MS: 3 ChangeBinInt-ChangeBinInt-CrossOver-\r\n#10212\tNEW    cov: 2542 ft: 2725 corp: 53/3001b lim: 74 exec/s: 1276 rss: 43Mb L: 69/74 MS: 4 ChangeBinInt-ChangeBinInt-ShuffleBytes-InsertByte-\r\n#10231\tNEW    cov: 2542 ft: 2728 corp: 54/3074b lim: 74 exec/s: 1278 rss: 43Mb L: 73/74 MS: 4 ShuffleBytes-CopyPart-ChangeBit-InsertRepeatedBytes-\r\n#10233\tREDUCE cov: 2542 ft: 2730 corp: 55/3145b lim: 74 exec/s: 1279 rss: 43Mb L: 71/74 MS: 2 CopyPart-InsertRepeatedBytes-\r\n\tNEW_FUNC[1/2]: 0x5750a9b0 in operator>(base_uint<256u> const&, base_uint<256u> const&) (/bitcoin/src/test/fuzz/fuzz+0xf3a9b0)\r\n\tNEW_FUNC[2/2]: 0x57dc04f0 in base_uint<256u>::CompareTo(base_uint<256u> const&) const (/bitcoin/src/test/fuzz/fuzz+0x17f04f0)\r\n#10237\tNEW    cov: 2555 ft: 2752 corp: 56/3218b lim: 74 exec/s: 1279 rss: 43Mb L: 73/74 MS: 4 InsertRepeatedBytes-InsertRepeatedBytes-ChangeASCIIInt-CopyPart-\r\n#10267\tNEW    cov: 2555 ft: 2754 corp: 57/3288b lim: 74 exec/s: 1283 rss: 43Mb L: 70/74 MS: 5 EraseBytes-CopyPart-ChangeByte-InsertRepeatedBytes-InsertRepeatedBytes-\r\n#10438\tNEW    cov: 2558 ft: 2757 corp: 58/3362b lim: 74 exec/s: 1304 rss: 43Mb L: 74/74 MS: 1 CrossOver-\r\n#10475\tREDUCE cov: 2558 ft: 2757 corp: 58/3360b lim: 74 exec/s: 1309 rss: 43Mb L: 52/74 MS: 2 InsertByte-EraseBytes-\r\n#10489\tREDUCE cov: 2558 ft: 2759 corp: 59/3434b lim: 74 exec/s: 1311 rss: 43Mb L: 74/74 MS: 4 CopyPart-CrossOver-CrossOver-ChangeBinInt-\r\nfuzz: test/fuzz/integer.cpp:128: void integer_fuzz_target(FuzzBufferType): Assertion `ser_float_to_uint32(f) == u32' failed.\r\n==59359== ERROR: libFuzzer: deadly signal\r\n    #0 0x5723786b in __sanitizer_print_stack_trace (/bitcoin/src/test/fuzz/fuzz+0xc6786b)\r\n    #1 0x571decf6 in fuzzer::PrintStackTrace() (/bitcoin/src/test/fuzz/fuzz+0xc0ecf6)\r\n    #2 0x571c920e in fuzzer::Fuzzer::CrashCallback() (/bitcoin/src/test/fuzz/fuzz+0xbf920e)\r\n    #3 0x571c91ae in fuzzer::Fuzzer::StaticCrashSignalCallback() (/bitcoin/src/test/fuzz/fuzz+0xbf91ae)\r\n    #4 0x571df255 in fuzzer::CrashHandler(int, siginfo_t*, void*) (/bitcoin/src/test/fuzz/fuzz+0xc0f255)\r\nLLVMSymbolizer: error reading file: No such file or directory\r\n    #5 0xf7faa57f  (linux-gate.so.1+0x57f)\r\n    #6 0xf7faa558  (linux-gate.so.1+0x558)\r\n    #7 0xf7aa9335 in raise (/lib32/libc.so.6+0x35335)\r\n    #8 0xf7a913f6 in abort (/lib32/libc.so.6+0x1d3f6)\r\n    #9 0xf7a912ba  (/lib32/libc.so.6+0x1d2ba)\r\n    #10 0xf7aa0ece in __assert_fail (/lib32/libc.so.6+0x2cece)\r\n    #11 0x5738a20b in integer_fuzz_target(Span<unsigned char const>) (/bitcoin/src/test/fuzz/fuzz+0xdba20b)\r\n    #12 0x5723a630 in std::_Function_handler<void (Span<unsigned char const>), void (*)(Span<unsigned char const>)>::_M_invoke(std::_Any_data const&, Span<unsigned char const>&&) (/bitcoin/src/test/fuzz/fuzz+0xc6a630)\r\n    #13 0x57db5762 in std::function<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>) const (/bitcoin/src/test/fuzz/fuzz+0x17e5762)\r\n    #14 0x57db55c9 in LLVMFuzzerTestOneInput (/bitcoin/src/test/fuzz/fuzz+0x17e55c9)\r\n    #15 0x571ca57b in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) (/bitcoin/src/test/fuzz/fuzz+0xbfa57b)\r\n    #16 0x571c9ee0 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned int, bool, fuzzer::InputInfo*, bool*) (/bitcoin/src/test/fuzz/fuzz+0xbf9ee0)\r\n    #17 0x571cb488 in fuzzer::Fuzzer::MutateAndTestOne() (/bitcoin/src/test/fuzz/fuzz+0xbfb488)\r\n    #18 0x571cbde4 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/bitcoin/src/test/fuzz/fuzz+0xbfbde4)\r\n    #19 0x571bd408 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) (/bitcoin/src/test/fuzz/fuzz+0xbed408)\r\n    #20 0x571df487 in main (/bitcoin/src/test/fuzz/fuzz+0xc0f487)\r\n    #21 0xf7a92ee4 in __libc_start_main (/lib32/libc.so.6+0x1eee4)\r\n    #22 0x57196094 in _start (/bitcoin/src/test/fuzz/fuzz+0xbc6094)\r\n\r\nNOTE: libFuzzer has rudimentary signal handlers.\r\n      Combine libFuzzer with AddressSanitizer or similar for better crash reports.\r\nSUMMARY: libFuzzer: deadly signal\r\nMS: 1 InsertRepeatedBytes-; base unit: dbb4fcdda5e893b1e393c937cb45e0d31191df56\r\n0xa,0x1,0x0,0x0,0x3,0xff,0xa,0x1,0x0,0x0,0x3,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xa,0x1,0xf5,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xff,0x9b,0xff,0xff,0x0,0x0,0x7e,0x0,0x0,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,\r\n\\x0a\\x01\\x00\\x00\\x03\\xff\\x0a\\x01\\x00\\x00\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0a\\x01\\xf5\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\x9b\\xff\\xff\\x00\\x00~\\x00\\x00\\xff\\xff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\r\nartifact_prefix='./'; Test unit written to ./crash-09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a\r\nBase64: CgEAAAP/CgEAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoB9QAAAAAAAAAAAAAAAP+b//8AAH4AAP//AAAAAAAAAAA=\r\n",
      "created_at" : "2021-05-12T15:18:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-839858828",
      "id" : 839858828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzOTg1ODgyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-12T15:18:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/839858828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Hopefully fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34118\r\n\r\nThat URL is not publicly accessible. I think you forgot to make it public :)",
      "created_at" : "2021-05-12T21:07:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-840097634",
      "id" : 840097634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDA5NzYzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-12T21:07:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840097634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't plan to make them public, but instead try to include all relevant information in the pull request itself. A bot will make them public the day after they are fixed.",
      "created_at" : "2021-05-13T07:26:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-840375745",
      "id" : 840375745,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDM3NTc0NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-13T07:26:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840375745",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "What is the reason that the input file `crash-09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a` triggers the assertion failure under 32-bit only? IIRC the `integer` harness reads fixed width integer types only.\r\n\r\nFWIW:\r\n\r\n```\r\n$ uname -o -i\r\nx86_64 GNU/Linux\r\n$ echo -n 'CgEAAAP/CgEAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoB9QAAAAAAAAAAAAAAAP+b//8AAH4AAP//AAAAAAAAAAA=' | base64 -d > crash-09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a\r\n$ shasum crash-09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a\r\n09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a  crash-09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a\r\n$ FUZZ=integer src/test/fuzz/fuzz crash-09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 3741142330\r\nINFO: Loaded 1 modules   (373000 inline 8-bit counters): 373000 [0x5574a26b89a8, 0x5574a2713ab0),\r\nINFO: Loaded 1 PC tables (373000 PCs): 373000 [0x5574a2713ab0,0x5574a2cc4b30),\r\nsrc/test/fuzz/fuzz: Running 1 inputs 1 time(s) each.\r\nRunning: crash-09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a\r\nExecuted crash-09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a in 1 ms\r\n***\r\n*** NOTE: fuzzing was not performed, you have only\r\n***       executed the target code on a fixed set of inputs.\r\n***\r\n\r\n$ echo $?\r\n0\r\n```\r\n\r\n> > That URL is not publicly accessible. I think you forgot to make it public :)\r\n> \r\n> I don't plan to make them public, but instead try to include all relevant information in the pull request itself. A bot will make them public the day after they are fixed.\r\n\r\nOK, then it works as intended :)",
      "created_at" : "2021-05-14T08:37:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841102383",
      "id" : 841102383,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTEwMjM4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T08:37:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841102383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What is the reason that the input file crash-09ffc420318e63eb4fbb19dffcb8cf4e499f7e5a triggers the assertion failure under 32-bit only?\r\n\r\nI have no idea, while it might be interesting to know, this isn't relevant to this pull.\r\n\r\n* The code paths test code that isn't used in production\r\n* The code paths test the *wrong* round-trip way\r\n* There is no reason to believe that *any* bit array of 32-bits/64-bits is a valid and unique representation of a float/double\r\n* Whereas the converse is true: Any float/double serialized to 32-bits/64-bits can always be represented in an unsigned integer of the same size\r\n\r\nAny of the reasons above is enough to remove the test here. Feel free to pick just the ones you like.",
      "created_at" : "2021-05-14T09:06:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841117670",
      "id" : 841117670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTExNzY3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T09:06:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841117670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For example `4288413440` and `4292607744` both represent a float of `-nan`. I have no idea if any or none representations are invalid.",
      "created_at" : "2021-05-14T09:13:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841121170",
      "id" : 841121170,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTEyMTE3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T09:39:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841121170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Though it is somehow surprising to see here (this does nothing with the value, just memcpying), FPU operations are not guaranteed to keep the bit pattern the same. Even if that is just loading a value and storing it again.\r\n\r\nTo be honest I wish we could get rid of floating point in the serialization code completely.\r\n\r\nAnyhow, ACK fae814c9a6c8ce4822f1fc6b88cfbbde7cc2d49c",
      "created_at" : "2021-05-14T10:12:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841151075",
      "id" : 841151075,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTE1MTA3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T10:12:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841151075",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Post-merge ACK fae814c9a6c8ce4822f1fc6b88cfbbde7cc2d49c\r\n\r\nI'd love to understand exactly why the assertion failure is 32-bit only but so far I've been unsuccessful at recreating this issue locally which rules out any in-depth practical investigation.",
      "created_at" : "2021-05-16T18:48:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841859860",
      "id" : 841859860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTg1OTg2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-16T18:48:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841859860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is trivial to reproduce locally:\r\n\r\n\r\n```\r\n$ cat 1.cpp\r\n\r\n#include <cstring>\r\n#include <iostream>\r\n\r\nint main() {\r\n  uint32_t a{4288413440};\r\n  float b;\r\n  std::memcpy(&b, &a, sizeof(a));\r\n  float c = b;\r\n  uint32_t d;\r\n  std::memcpy(&d, &c, sizeof(c));\r\n  std::cout << b << std::endl;\r\n  std::cout << a << std::endl;\r\n  std::cout << d << std::endl;\r\n}\r\n\r\n\r\n\r\n$ g++ -m32  1.cpp -o exe && ./exe \r\n-nan\r\n4288413440\r\n4292607744\r\n\r\n\r\n\r\n$ g++ -m64  1.cpp -o exe && ./exe \r\n-nan\r\n4288413440\r\n4288413440\r\n\r\n",
      "created_at" : "2021-05-16T19:10:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841862942",
      "id" : 841862942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTg2Mjk0Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-16T19:10:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841862942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is it just NaNs that get changed? Because that's not unexpected. For non-NaN it would surprise me ",
      "created_at" : "2021-05-16T19:13:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841863248",
      "id" : 841863248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTg2MzI0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-16T19:13:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841863248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I should have printed in order. It is \r\n\r\n* `4288413440` -> `-nan` -> `4292607744` (32-bit)\r\n* `4288413440` -> `-nan` -> `4288413440` (64-bit)",
      "created_at" : "2021-05-16T19:16:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841863720",
      "id" : 841863720,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTg2MzcyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-16T19:16:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841863720",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke This may be a result of 32-bit code using 387 instructions, and 64-bit code using SSE instructions for floating point. They may not behave identically.\n\nIf you're really curious, you could try compiling with -mfpmath=387 in 64-bit mode, or with -mfpath=sse -msse ib 32-bit mode.",
      "created_at" : "2021-05-16T19:20:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841864360",
      "id" : 841864360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTg2NDM2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-16T19:21:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841864360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @MarcoFalke. I didn't catch that the assertion failure was `g++ -O0` only (in addition to `-m32`).\r\n\r\nFWIW:\r\n\r\n```\r\n$ for C in g++ clang++; do\r\n    for M in 32 64; do\r\n      for O in 0 1 2 3; do\r\n        echo \"$C -m${M} -O${O}: \"\r\n        $C -m${M} -O${O} 1.cpp -o exe\r\n        ./exe\r\n        echo\r\n      done\r\n    done\r\n  done\r\ng++ -m32 -O0:\r\n-nan\r\n4288413440\r\n4292607744\r\n\r\ng++ -m32 -O1:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\ng++ -m32 -O2:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\ng++ -m32 -O3:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\ng++ -m64 -O0:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\ng++ -m64 -O1:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\ng++ -m64 -O2:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\ng++ -m64 -O3:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\nclang++ -m32 -O0:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\nclang++ -m32 -O1:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\nclang++ -m32 -O2:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\nclang++ -m32 -O3:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\nclang++ -m64 -O0:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\nclang++ -m64 -O1:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\nclang++ -m64 -O2:\r\n-nan\r\n4288413440\r\n4288413440\r\n\r\nclang++ -m64 -O3:\r\n-nan\r\n4288413440\r\n4288413440\r\n```",
      "created_at" : "2021-05-16T19:29:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841865452",
      "id" : 841865452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTg2NTQ1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-16T19:29:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841865452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\n$ g++ -m64 -mfpmath=387  1.cpp -o exe && ./exe \r\n-nan\r\n4288413440\r\n4292607744\r\n\r\n\r\n$ g++ -m32 -mfpmath=sse   1.cpp -o exe && ./exe \r\ncc1plus: warning: SSE instruction set disabled, using 387 arithmetics\r\n-nan\r\n4288413440\r\n4292607744\r\n\r\n\r\n$ clang++ -m32 -mfpmath=sse   1.cpp -o exe && ./exe \r\n-nan\r\n4288413440\r\n4288413440\r\n\r\n",
      "created_at" : "2021-05-16T19:30:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841865586",
      "id" : 841865586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTg2NTU4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-16T19:30:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841865586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Assertion failures:\r\n\r\n```\r\ng++ -m32 -O0 -mfpmath=387: Assertion `ser_float_to_uint32(ser_uint32_to_float(u32)) == u32' failed.\r\ng++ -m32 -O0 -mfpmath=sse: Assertion `ser_float_to_uint32(ser_uint32_to_float(u32)) == u32' failed.\r\ng++ -m64 -O0 -mfpmath=387: Assertion `ser_float_to_uint32(ser_uint32_to_float(u32)) == u32' failed.\r\nclang++ -m32 -O0 -mfpmath=387 -mno-sse: Assertion `ser_float_to_uint32(ser_uint32_to_float(u32)) == u32' failed.\r\nclang++ -m32 -O0 -mfpmath=sse: Assertion `ser_float_to_uint32(ser_uint32_to_float(u32)) == u32' failed.\r\nclang++ -m32 -O1 -mfpmath=387 -mno-sse: Assertion `ser_float_to_uint32(ser_uint32_to_float(u32)) == u32' failed.\r\nclang++ -m32 -O1 -mfpmath=sse: Assertion `ser_float_to_uint32(ser_uint32_to_float(u32)) == u32' failed.\r\n```\r\n\r\nOther combinations of `{g,clang}++ -m{32,64} -O{0,1,2,3,s,fast} -mfpmath={387,sse}` seem to non-fail :)\r\n\r\n```\r\n$ g++ --version\r\ng++ 7.5.0\r\n$ clang++ --version\r\nclang version 12.0.0\r\n```",
      "created_at" : "2021-05-16T20:09:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21929#issuecomment-841870670",
      "id" : 841870670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21929",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTg3MDY3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-16T20:15:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841870670",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
