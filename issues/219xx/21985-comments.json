[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21985#discussion_r633641594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21985"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633641594"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, can drop this line as we are no longer concerned about collisions with locally reserved zone ids",
      "commit_id" : "90972a8962cfd9bf63f3b982f5a85fcdc41f253d",
      "created_at" : "2021-05-17T15:36:47Z",
      "diff_hunk" : "@@ -301,12 +301,18 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     // IPv6, scoped/link-local. See https://tools.ietf.org/html/rfc4007\n     // We support non-negative decimal integers (uint32_t) as zone id indices.\n     // Test with a fairly-high value, e.g. 32, to avoid locally reserved ids.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#discussion_r633641594",
      "id" : 633641594,
      "line" : 303,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzY0MTU5NA==",
      "original_commit_id" : "90972a8962cfd9bf63f3b982f5a85fcdc41f253d",
      "original_line" : 303,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : 3,
      "pull_request_review_id" : 661118486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21985",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T15:55:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633641594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21985#discussion_r633672014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21985"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633672014"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wasn't sure whether this was a problem for parsing or for formatting, that's why I kept it. But makes sense, will remove it.",
      "commit_id" : "c7d461b014422f1aaa13ae978d730864616ab7bb",
      "created_at" : "2021-05-17T16:15:28Z",
      "diff_hunk" : "@@ -301,12 +301,18 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     // IPv6, scoped/link-local. See https://tools.ietf.org/html/rfc4007\n     // We support non-negative decimal integers (uint32_t) as zone id indices.\n     // Test with a fairly-high value, e.g. 32, to avoid locally reserved ids.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#discussion_r633672014",
      "id" : 633672014,
      "in_reply_to_id" : 633641594,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzY3MjAxNA==",
      "original_commit_id" : "90972a8962cfd9bf63f3b982f5a85fcdc41f253d",
      "original_line" : 303,
      "original_position" : 3,
      "original_start_line" : null,
      "path" : "src/test/net_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 661159429,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21985",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-17T16:15:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633672014",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK c7d461b014422f1aaa13ae978d730864616ab7bb",
      "created_at" : "2021-05-17T18:06:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#issuecomment-842525984",
      "id" : 842525984,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21985",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MjUyNTk4NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-17T18:06:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842525984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code looks correct, so code review ACK c7d461b014422f1aaa13ae978d730864616ab7bb\r\n\r\nAs stated in https://github.com/bitcoin/bitcoin/issues/21682#issuecomment-819897122 I have a slightly preference towards not including scope id in `CNetAddr::ToStringIP()` out. That is how Rust's `std::net::Ipv6Addr` work. That said: if others feels strongly about including scope id then I'm fine with that too. The important thing for me is that IPv6 addresses are printed identically across platforms and that goal has been achieved :)\r\n\r\nAlso it is probably worth noting that the requirements for _parsing_ and _printing_ IPv6 addresses are not the same.",
      "created_at" : "2021-05-17T18:59:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#issuecomment-842557098",
      "id" : 842557098,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21985",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MjU1NzA5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-17T18:59:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842557098",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift Thank you for the review! I do not entirely understand your insistence on making our IPv6 formatting function the same as that of rust's IPv6 address type which is a different animal. It doesn't include a scope id, so cannot include it for formatting. In rust, the `scope_id` is part of [SocketAddrV6](https://doc.rust-lang.org/std/net/struct.SocketAddrV6.html). When formatted as string it uses the % syntax, just like us here:\r\n\r\n```rust\r\nuse std::net::{Ipv6Addr, SocketAddrV6};\r\n\r\nfn main() {\r\n    let socket = SocketAddrV6::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 1), 8080, 0, 32);\r\n    assert_eq!(\"[2001:db8::1%32]:8080\".parse(), Ok(socket));\r\n}\r\n```\r\n\r\n> Also it is probably worth noting that the requirements for parsing and printing IPv6 addresses are not the same.\r\n\r\nIn any case I like to have the roundtrip here. The scope_id is part of the type so it makes some sense to be part of the string representation. This is clearly also useful for testing. Without the test, the scope id might as well be ignored by the parser :slightly_smiling_face: ",
      "created_at" : "2021-05-17T19:46:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#issuecomment-842584857",
      "id" : 842584857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21985",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MjU4NDg1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-17T19:46:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842584857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@laanwj \r\n\r\nThanks for providing the Rust `SocketAddrV6` string representation example. I see your point regarding it being different animals, and I guess this entire discussion boils down to if the expectation is that `CNetAddr::ToStringIP()` should print the IPv6 _address_ or the IPv6 _socket address_:\r\n* IPv6 address ([std::net::Ipv6Addr](https://doc.rust-lang.org/std/net/struct.Ipv6Addr.html)): _\"IPv6 addresses are defined as 128-bit integers in IETF RFC 4291. They are usually represented as eight 16-bit segments.\"_\r\n* IPv6 socket address ([std::net::SocketAddrV6](https://doc.rust-lang.org/std/net/struct.SocketAddrV6.html)): _\"IPv6 socket addresses consist of an IPv6 address, a 16-bit port number, as well as fields containing the traffic class, the flow label, and a scope identifier (see IETF RFC 2553, Section 3.3 for more details).\"_\r\n\r\nIs that a fair summary? :)",
      "created_at" : "2021-05-17T21:01:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#issuecomment-842636198",
      "id" : 842636198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21985",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MjYzNjE5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-17T21:01:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842636198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For better or worse our data representation has an intermediate nesting level that doesn't neatly fit into that division.\r\n`CService` is the full \"socket address\" [addres + scope_id] + port, `CNetAddr` is address **+ scope_id**.\r\n\r\nAs this is our data representation I think the string representation should reflect this.",
      "created_at" : "2021-05-18T06:13:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#issuecomment-842876501",
      "id" : 842876501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21985",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0Mjg3NjUwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-18T06:18:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842876501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21985#discussion_r634348183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21985"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634348183"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`BOOST_CHECK_EQUAL()` would print both values in case of failure. The extra variable `addr_str` looks like just clutter to me.\r\n\r\n```suggestion\r\n    BOOST_CHECK_EQUAL(addr.ToString(), scoped_addr);\r\n```",
      "commit_id" : "c7d461b014422f1aaa13ae978d730864616ab7bb",
      "created_at" : "2021-05-18T12:53:54Z",
      "diff_hunk" : "@@ -300,13 +300,18 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n \n     // IPv6, scoped/link-local. See https://tools.ietf.org/html/rfc4007\n     // We support non-negative decimal integers (uint32_t) as zone id indices.\n-    // Test with a fairly-high value, e.g. 32, to avoid locally reserved ids.\n+    // Normal link-local scoped address functionality is to append \"%\" plus the\n+    // zone id, for example, given a link-local address of \"fe80::1\" and a zone\n+    // id of \"32\", return the address as \"fe80::1%32\".\n     const std::string link_local{\"fe80::1\"};\n     const std::string scoped_addr{link_local + \"%32\"};\n     BOOST_REQUIRE(LookupHost(scoped_addr, addr, false));\n     BOOST_REQUIRE(addr.IsValid());\n     BOOST_REQUIRE(addr.IsIPv6());\n     BOOST_CHECK(!addr.IsBindAny());\n+    const std::string addr_str{addr.ToString()};\n+    BOOST_CHECK(addr_str == scoped_addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#discussion_r634348183",
      "id" : 634348183,
      "line" : 313,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDM0ODE4Mw==",
      "original_commit_id" : "c7d461b014422f1aaa13ae978d730864616ab7bb",
      "original_line" : 313,
      "original_position" : 15,
      "original_start_line" : 312,
      "path" : "src/test/net_tests.cpp",
      "position" : 15,
      "pull_request_review_id" : 662038836,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21985",
      "side" : "RIGHT",
      "start_line" : 312,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-18T12:57:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634348183",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21985#discussion_r634516056"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21985"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634516056"
         }
      },
      "author_association" : "MEMBER",
      "body" : "FWIW, I've simply restored this code from git history. But sure I'm fine with updating it.",
      "commit_id" : "c7d461b014422f1aaa13ae978d730864616ab7bb",
      "created_at" : "2021-05-18T15:50:04Z",
      "diff_hunk" : "@@ -300,13 +300,18 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n \n     // IPv6, scoped/link-local. See https://tools.ietf.org/html/rfc4007\n     // We support non-negative decimal integers (uint32_t) as zone id indices.\n-    // Test with a fairly-high value, e.g. 32, to avoid locally reserved ids.\n+    // Normal link-local scoped address functionality is to append \"%\" plus the\n+    // zone id, for example, given a link-local address of \"fe80::1\" and a zone\n+    // id of \"32\", return the address as \"fe80::1%32\".\n     const std::string link_local{\"fe80::1\"};\n     const std::string scoped_addr{link_local + \"%32\"};\n     BOOST_REQUIRE(LookupHost(scoped_addr, addr, false));\n     BOOST_REQUIRE(addr.IsValid());\n     BOOST_REQUIRE(addr.IsIPv6());\n     BOOST_CHECK(!addr.IsBindAny());\n+    const std::string addr_str{addr.ToString()};\n+    BOOST_CHECK(addr_str == scoped_addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#discussion_r634516056",
      "id" : 634516056,
      "in_reply_to_id" : 634348183,
      "line" : 313,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNDUxNjA1Ng==",
      "original_commit_id" : "c7d461b014422f1aaa13ae978d730864616ab7bb",
      "original_line" : 313,
      "original_position" : 15,
      "original_start_line" : 312,
      "path" : "src/test/net_tests.cpp",
      "position" : 15,
      "pull_request_review_id" : 662266486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21985",
      "side" : "RIGHT",
      "start_line" : 312,
      "start_side" : "RIGHT",
      "updated_at" : "2021-05-18T15:50:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/634516056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated the test for @vasild's comment.\r\n[c7d461b014422f1aaa13ae978d730864616ab7bb..6c280adcd865ae3da4df53d630c9bf737283a56f](https://github.com/bitcoin/bitcoin/compare/c7d461b014422f1aaa13ae978d730864616ab7bb..6c280adcd865ae3da4df53d630c9bf737283a56f)\r\n",
      "created_at" : "2021-05-18T19:08:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#issuecomment-843459637",
      "id" : 843459637,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21985",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MzQ1OTYzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-18T19:11:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/843459637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "cr ACK 6c280adcd865ae3da4df53d630c9bf737283a56f\r\n\r\n@laanwj \r\n\r\n> > [â¦] I guess this entire discussion boils down to if the expectation is that `CNetAddr::ToStringIP()` should print the IPv6 _address_ or the IPv6 _socket address_:\r\n> > * IPv6 address (std::net::Ipv6Addr): \"IPv6 addresses are defined as 128-bit integers in IETF RFC 4291. They are usually represented as eight 16-bit segments.\"\r\n> > * IPv6 socket address (std::net::SocketAddrV6): \"IPv6 socket addresses consist of an IPv6 address, a 16-bit port number, as well as fields containing the traffic class, the flow label, and a scope identifier (see IETF RFC 2553, Section 3.3 for more details).\"\r\n>\r\n> For better or worse our data representation has an intermediate nesting level that doesn't neatly fit into that division.\r\nCService is the full \"socket address\" [addres + scope_id] + port, CNetAddr is address **+ scope_id**.\r\n> \r\n> As this is our data representation I think the string representation should reflect this.\r\n\r\nOK, I can see that point and I'm fine with that :)",
      "created_at" : "2021-05-18T21:23:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#issuecomment-843573376",
      "id" : 843573376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21985",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MzU3MzM3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-18T21:24:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/843573376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Post-merge ACK 6c280adcd865ae3da4df53d630c9bf737283a56f\r\n\r\n`addr.ToString()` was previously memoized because it was used twice, once for checking the behavior on most platforms and a second time for the different behavior exhibited by macOS. We now only need it once, so good idea to simplify it. \r\n\r\ngit diff c7d461b 6c280ad \r\n```diff\r\ndiff --git a/src/test/net_tests.cpp b/src/test/net_tests.cpp\r\nindex c0d3c3196e..7a122bd8b0 100644\r\n--- a/src/test/net_tests.cpp\r\n+++ b/src/test/net_tests.cpp\r\n@@ -309,8 +309,7 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\r\n     BOOST_REQUIRE(addr.IsValid());\r\n     BOOST_REQUIRE(addr.IsIPv6());\r\n     BOOST_CHECK(!addr.IsBindAny());\r\n-    const std::string addr_str{addr.ToString()};\r\n-    BOOST_CHECK(addr_str == scoped_addr);\r\n+    BOOST_CHECK_EQUAL(addr.ToString(), scoped_addr);\r\n```\r\n",
      "created_at" : "2021-05-19T07:35:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21985#issuecomment-843831665",
      "id" : 843831665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21985",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MzgzMTY2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-19T07:35:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/843831665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
