[
   {
      "author_association" : "MEMBER",
      "body" : "> I can't see the error \r\n\r\nIt should be possible to reproduce with the reproducer input in the OP",
      "created_at" : "2021-05-17T09:54:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21970#issuecomment-842189067",
      "id" : 842189067,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MjE4OTA2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-17T09:54:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842189067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested fae4ee5.\r\n\r\n<details>\r\n  <summary>Was able to reproduce with master (c85714863)</summary>\r\n  \r\n```\r\npython infra/helper.py reproduce bitcoin-core coins_view clusterfuzz-testcase-minimized-coins_view-6109460079706112\r\nRunning: docker run --rm --privileged -i -v /home/jonas/oss-fuzz/build/out/bitcoin-core:/out -v /home/jonas/clusterfuzz-testcase-minimized-coins_view-6109460079706112:/testcase -t gcr.io/oss-fuzz-base/bas\r\ne-runner reproduce coins_view -runs=100\r\n+ FUZZER=coins_view\r\n+ shift\r\n+ '[' '!' -v TESTCASE ']'\r\n+ TESTCASE=/testcase\r\n+ '[' '!' -f /testcase ']'\r\n+ export RUN_FUZZER_MODE=interactive\r\n+ RUN_FUZZER_MODE=interactive\r\n+ export FUZZING_ENGINE=libfuzzer\r\n+ FUZZING_ENGINE=libfuzzer\r\n+ export SKIP_SEED_CORPUS=1\r\n+ SKIP_SEED_CORPUS=1\r\n+ run_fuzzer coins_view -runs=100 /testcase\r\n/out/coins_view -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase < /dev/null\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 310929130\r\nINFO: Loaded 1 modules   (177026 inline 8-bit counters): 177026 [0x55862ca7d158, 0x55862caa84da),\r\nINFO: Loaded 1 PC tables (177026 PCs): 177026 [0x55862caa84e0,0x55862cd5bd00),\r\n/out/coins_view: Running 1 inputs 100 time(s) each.\r\nRunning: /testcase\r\nlibc++abi: terminating with uncaught exception of type std::runtime_error: GetValueOut: value out of range\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n=================================================================\r\n==13==ERROR: AddressSanitizer: ABRT on unknown address 0x00000000000d (pc 0x7f321e8e7438 bp 0x7ffc67fe9cf0 sp 0x7ffc67fe9588 T0)\r\nSCARINESS: 10 (signal)\r\n    #0 0x7f321e8e7438 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x35438)\r\n    #1 0x7f321e8e9039 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x37039)\r\n    #2 0x55862bf98fb5 in abort_message (/out/coins_view+0x1ad0fb5)\r\n    #3 0x55862bfa4e9e in demangling_terminate_handler() (/out/coins_view+0x1adce9e)\r\n    #4 0x55862bf98a22 in std::__terminate(void (*)()) (/out/coins_view+0x1ad0a22)\r\n    #5 0x55862bf9a775 in __cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*) (/out/coins_view+0x1ad2775)\r\n    #6 0x55862bf9a70f in __cxa_throw (/out/coins_view+0x1ad270f)\r\n    #7 0x55862bd7d512 in CTransaction::GetValueOut() const /src/bitcoin-core/src/primitives/transaction.cpp:88:13\r\n    #8 0x55862b0f30ab in Consensus::CheckTxInputs(CTransaction const&, TxValidationState&, CCoinsViewCache const&, int, long&) /src/bitcoin-core/src/consensus/tx_verify.cpp:186:34\r\n    #9 0x55862adfaf4c in coins_view_fuzz_target(Span<unsigned char const>)::$_12::operator()() const /src/bitcoin-core/src/test/fuzz/coins_view.cpp:233:23\r\n    #10 0x55862ade8b6f in void CallOneOf<coins_view_fuzz_target(Span<unsigned char const>)::$_10, coins_view_fuzz_target(Span<unsigned char const>)::$_11, coins_view_fuzz_target(Span<unsigned char const>)::$_12, coins_view_fuzz_target(Span<unsigned char const>)::$_13, coins_view_fuzz_target(Span<unsigned char const>)::$_14, coins_view_fuzz_target(Span<unsigned char const>)::$_15, coins_view_fuzz_target(Span<unsigned char const>)::$_16>(FuzzedDataProvider&, coins_view_fuzz_target(Span<unsigned char const>)::$_10, coins_view_fuzz_target(Span<unsigned char const>)::$_11, coins_view_fuzz_target(Span<unsigned char const>)::$_12, coins_view_fuzz_target(Span<unsigned char const>)::$_13, coins_view_fuzz_target(Span<unsigned char const>)::$_14, coins_view_fuzz_target(Span<unsigned char const>)::$_15, coins_view_fuzz_target(Span<unsigned char const>)::$_16) /src/bitcoin-core/src/./test/fuzz/util.h:47:34\r\n    #11 0x55862ade791a in coins_view_fuzz_target(Span<unsigned char const>) /src/bitcoin-core/src/test/fuzz/coins_view.cpp:191:9\r\n    #12 0x55862ad0a8d6 in decltype(std::__1::forward<void (*&)(Span<unsigned char const>)>(fp)(std::__1::forward<Span<unsigned char const> >(fp0))) std::__1::__invoke<void (*&)(Span<unsigned char const>), Span<unsigned char const> >(void (*&)(Span<unsigned char const>), Span<unsigned char const>&&) /usr/local/bin/../include/c++/v1/type_traits:3679:1\r\n    #13 0x55862ad0a7d1 in void std::__1::__invoke_void_return_wrapper<void>::__call<void (*&)(Span<unsigned char const>), Span<unsigned char const> >(void (*&)(Span<unsigned char const>), Span<unsigned char const>&&) /usr/local/bin/../include/c++/v1/__functional_base:348:9\r\n    #14 0x55862ad0a721 in std::__1::__function::__alloc_func<void (*)(Span<unsigned char const>), std::__1::allocator<void (*)(Span<unsigned char const>)>, void (Span<unsigned char const>)>::operator()(Span<unsigned char const>&&) /usr/local/bin/../include/c++/v1/functional:1558:16\r\n    #15 0x55862ad07a0b in std::__1::__function::__func<void (*)(Span<unsigned char const>), std::__1::allocator<void (*)(Span<unsigned char const>)>, void (Span<unsigned char const>)>::operator()(Span<unsigned char const>&&) /usr/local/bin/../include/c++/v1/functional:1732:12\r\n    #16 0x55862bd6ec95 in std::__1::__function::__value_func<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>&&) const /usr/local/bin/../include/c++/v1/functional:1885:16\r\n    #17 0x55862bd69b35 in std::__1::function<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>) const /usr/local/bin/../include/c++/v1/functional:2560:12\r\n    #18 0x55862bd698a1 in LLVMFuzzerTestOneInput /src/bitcoin-core/src/test/fuzz/fuzz.cpp:74:5\r\n    #19 0x55862ac07d53 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15\r\n    #20 0x55862abf1b62 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6\r\n    #21 0x55862abf79aa in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9\r\n    #22 0x55862ac23692 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\r\n    #23 0x7f321e8d283f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)\r\n    #24 0x55862abcc818 in _start (/out/coins_view+0x704818)\r\n\r\nDEDUP_TOKEN: raise--abort--abort_message\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: ABRT (/lib/x86_64-linux-gnu/libc.so.6+0x35438) in raise\r\n==13==ABORTING\r\n```\r\n</details>\r\n\r\n\r\n<details>\r\n  <summary>Verified there is no crash with fae4ee5</summary>\r\n  \r\n```\r\npython infra/helper.py reproduce bitcoin-core coins_view clusterfuzz-testcase-minimized-coins_view-6109460079706112\r\nRunning: docker run --rm --privileged -i -v /home/jonas/oss-fuzz/build/out/bitcoin-core:/out -v /home/jonas/clusterfuzz-testcase-minimized-coins_view-6109460079706112:/testcase -t gcr.io/oss-fuzz-base/base-runner reproduce coins_view -runs=100\r\n+ FUZZER=coins_view\r\n+ shift\r\n+ '[' '!' -v TESTCASE ']'\r\n+ TESTCASE=/testcase\r\n+ '[' '!' -f /testcase ']'\r\n+ export RUN_FUZZER_MODE=interactive\r\n+ RUN_FUZZER_MODE=interactive\r\n+ export FUZZING_ENGINE=libfuzzer\r\n+ FUZZING_ENGINE=libfuzzer\r\n+ export SKIP_SEED_CORPUS=1\r\n+ SKIP_SEED_CORPUS=1\r\n+ run_fuzzer coins_view -runs=100 /testcase\r\n/out/coins_view -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase < /dev/null\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 2597972927\r\nINFO: Loaded 1 modules   (177031 inline 8-bit counters): 177031 [0x5619464791d8, 0x5619464a455f),\r\nINFO: Loaded 1 PC tables (177031 PCs): 177031 [0x5619464a4560,0x561946757dd0),\r\n/out/coins_view: Running 1 inputs 100 time(s) each.\r\nRunning: /testcase\r\nExecuted /testcase in 60 ms\r\n***\r\n*** NOTE: fuzzing was not performed, you have only\r\n***       executed the target code on a fixed set of inputs.\r\n```\r\n</details>",
      "created_at" : "2021-05-17T16:32:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21970#issuecomment-842466041",
      "id" : 842466041,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MjQ2NjA0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-17T16:32:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842466041",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Of course you can reproduce this inside Docker, if you want, but the recommended way to reproduce is to use \"your build and test system\" (https://google.github.io/oss-fuzz/advanced-topics/reproducing/#fuzz-target-bugs). This would be https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md .\r\n\r\nDocker can always be used as a backup in case it it not trivial to build with the sanitizers for the given architecture. ",
      "created_at" : "2021-05-17T16:39:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21970#issuecomment-842470896",
      "id" : 842470896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MjQ3MDg5Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-17T16:39:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842470896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "cr ACK fae4ee545a652cc2934773b0e1fdb9004b0c5ba6: patch looks correct :)",
      "created_at" : "2021-05-18T21:53:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21970#issuecomment-843591273",
      "id" : 843591273,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MzU5MTI3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-18T21:53:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/843591273",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
