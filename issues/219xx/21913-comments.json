[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I wasn't aware of these (new?) RPCHelpMan methods.",
      "created_at" : "2021-05-11T11:19:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21913#issuecomment-838297089",
      "id" : 838297089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21913",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgzODI5NzA4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-11T11:19:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/838297089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21913#discussion_r630077171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21913"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630077171"
         }
      },
      "author_association" : "MEMBER",
      "body" : "top level arguments are always Null if omitted. What makes this one special?",
      "commit_id" : "4983f4cba44c4ffaa4972fdede7cf6fcf8caec00",
      "created_at" : "2021-05-11T11:21:54Z",
      "diff_hunk" : "@@ -2696,7 +2696,7 @@ static RPCHelpMan createwallet()\n             {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the new wallet. If this is a path, the wallet will be created at the path location.\"},\n             {\"disable_private_keys\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Disable the possibility of private keys (only watchonlys are possible in this mode).\"},\n             {\"blank\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\"},\n-            {\"passphrase\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Encrypt the wallet with this passphrase.\"},\n+            {\"passphrase\", RPCArg::Type::STR, RPCArg::Default{UniValue::VNULL}, \"Encrypt the wallet with this passphrase.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21913#discussion_r630077171",
      "id" : 630077171,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMDA3NzE3MQ==",
      "original_commit_id" : "92709d0516f87a21f7cc4551ff3e55c7f43dd8b2",
      "original_line" : 2699,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 656585171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21913",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-11T12:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630077171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21913#discussion_r630096996"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21913"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630096996"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke This is the only one without the \"optional\" keyword in the help:\r\n```\r\nArguments:\r\n1. wallet_name             (string, required) The name for the new wallet. If this is a path, the wallet will be created at the path location.\r\n2. disable_private_keys    (boolean, optional, default=false) Disable the possibility of private keys (only watchonlys are possible in this mode).\r\n3. blank                   (boolean, optional, default=false) Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\r\n4. passphrase              (string) Encrypt the wallet with this passphrase.\r\n5. avoid_reuse             (boolean, optional, default=false) Keep track of coin reuse, and treat dirty and clean coins differently with privacy considerations in mind.\r\n6. descriptors             (boolean, optional, default=false) Create a native descriptor wallet. The wallet will use descriptors internally to handle address creation\r\n7. load_on_startup         (boolean, optional, default=null) Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\r\n```",
      "commit_id" : "4983f4cba44c4ffaa4972fdede7cf6fcf8caec00",
      "created_at" : "2021-05-11T11:53:55Z",
      "diff_hunk" : "@@ -2696,7 +2696,7 @@ static RPCHelpMan createwallet()\n             {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the new wallet. If this is a path, the wallet will be created at the path location.\"},\n             {\"disable_private_keys\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Disable the possibility of private keys (only watchonlys are possible in this mode).\"},\n             {\"blank\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\"},\n-            {\"passphrase\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Encrypt the wallet with this passphrase.\"},\n+            {\"passphrase\", RPCArg::Type::STR, RPCArg::Default{UniValue::VNULL}, \"Encrypt the wallet with this passphrase.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21913#discussion_r630096996",
      "id" : 630096996,
      "in_reply_to_id" : 630077171,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMDA5Njk5Ng==",
      "original_commit_id" : "92709d0516f87a21f7cc4551ff3e55c7f43dd8b2",
      "original_line" : 2699,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 656611313,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21913",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-11T12:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630096996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21913#discussion_r630099490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21913"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630099490"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Either way, this one is not OMITTED which is described as\r\n```\r\n        /**\r\n         * Optional argument with default value omitted because they are\r\n         * implicitly clear. That is, elements in an array or object may not\r\n         * exist by default.\r\n         * When possible, the default value should be specified.\r\n         */\r\n        OMITTED,\r\n```\r\nInstead, alternatively, it is `OMITTED_NAMED_ARG` (its name is \"passphrase\") or as above, given a null default:\r\n```\r\n        /**\r\n         * Optional arg that is a named argument and has a default value of\r\n         * `null`. When possible, the default value should be specified.\r\n         */\r\n        OMITTED_NAMED_ARG,\r\n```",
      "commit_id" : "4983f4cba44c4ffaa4972fdede7cf6fcf8caec00",
      "created_at" : "2021-05-11T11:57:41Z",
      "diff_hunk" : "@@ -2696,7 +2696,7 @@ static RPCHelpMan createwallet()\n             {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the new wallet. If this is a path, the wallet will be created at the path location.\"},\n             {\"disable_private_keys\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Disable the possibility of private keys (only watchonlys are possible in this mode).\"},\n             {\"blank\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\"},\n-            {\"passphrase\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Encrypt the wallet with this passphrase.\"},\n+            {\"passphrase\", RPCArg::Type::STR, RPCArg::Default{UniValue::VNULL}, \"Encrypt the wallet with this passphrase.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21913#discussion_r630099490",
      "id" : 630099490,
      "in_reply_to_id" : 630077171,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMDA5OTQ5MA==",
      "original_commit_id" : "92709d0516f87a21f7cc4551ff3e55c7f43dd8b2",
      "original_line" : 2699,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 656614583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21913",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-11T12:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630099490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21913#discussion_r630104041"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21913"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630104041"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually I painted myself into the opinion that this actually is OMITTED_NAMED_ARG so I've pushed that change. Sorry for the spam.",
      "commit_id" : "4983f4cba44c4ffaa4972fdede7cf6fcf8caec00",
      "created_at" : "2021-05-11T12:04:58Z",
      "diff_hunk" : "@@ -2696,7 +2696,7 @@ static RPCHelpMan createwallet()\n             {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the new wallet. If this is a path, the wallet will be created at the path location.\"},\n             {\"disable_private_keys\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Disable the possibility of private keys (only watchonlys are possible in this mode).\"},\n             {\"blank\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\"},\n-            {\"passphrase\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Encrypt the wallet with this passphrase.\"},\n+            {\"passphrase\", RPCArg::Type::STR, RPCArg::Default{UniValue::VNULL}, \"Encrypt the wallet with this passphrase.\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21913#discussion_r630104041",
      "id" : 630104041,
      "in_reply_to_id" : 630077171,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMDEwNDA0MQ==",
      "original_commit_id" : "92709d0516f87a21f7cc4551ff3e55c7f43dd8b2",
      "original_line" : 2699,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 656621140,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21913",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-11T12:04:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630104041",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rendered diff:\r\n```diff\r\ndiff --git a/help-output-master.txt b/help-output-21913.txt\r\nindex ee49aa730..455e8d455 100644\r\n--- a/help-output-master.txt\r\n+++ b/help-output-21913.txt\r\n@@ -6,7 +6,7 @@ Note this call may take some time if you are not using coinstatsindex.\r\n \r\n Arguments:\r\n 1. hash_type         (string, optional, default=\"hash_serialized_2\") Which UTXO set hash should be calculated. Options: 'hash_serialized_2' (the legacy algorithm), 'muhash', 'none'.\r\n-2. hash_or_height    (string or numeric) The block hash or height of the target height (only available with coinstatsindex).\r\n+2. hash_or_height    (string or numeric, optional) The block hash or height of the target height (only available with coinstatsindex).\r\n 3. use_index         (boolean, optional, default=true) Use coinstatsindex, if available.\r\n \r\n Result:\r\n@@ -108,10 +108,11 @@ Result:\r\n       ...\r\n     },\r\n     \"bytesrecv_per_msg\" : {           (json object)\r\n-      \"msg\" : n                       (numeric) The total bytes received aggregated by message type\r\n+      \"msg\" : n,                      (numeric) The total bytes received aggregated by message type\r\n                                       When a message type is not listed in this json object, the bytes received are 0.\r\n                                       Only known message types can appear as keys in the object and all bytes received\r\n                                       of unknown message types are listed under '*other*'.\r\n+      ...\r\n     },\r\n     \"connection_type\" : \"str\"         (string) Type of connection: \r\n                                       outbound-full-relay (default automatic connections),\r\n@@ -131,7 +132,7 @@ Examples:\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getpeerinfo\", \"params\": []}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n \r\n === createpsbt ===\r\n-createpsbt [{\"txid\":\"hex\",\"vout\":n,\"sequence\":n},...] [{\"address\":amount},{\"data\":\"hex\"},...] ( locktime replaceable )\r\n+createpsbt [{\"txid\":\"hex\",\"vout\":n,\"sequence\":n},...] [{\"address\":amount,...},{\"data\":\"hex\"},...] ( locktime replaceable )\r\n \r\n Creates a transaction in the Partially Signed Transaction format.\r\n Implements the Creator role.\r\n@@ -153,6 +154,7 @@ Arguments:\r\n      [\r\n        {                       (json object)\r\n          \"address\": amount,    (numeric or string, required) A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in BTC\r\n+         ...\r\n        },\r\n        {                       (json object)\r\n          \"data\": \"hex\",        (string, required) A key-value pair. The key must be \"data\", the value is hex-encoded data\r\n@@ -170,7 +172,7 @@ Examples:\r\n > bitcoin-cli createpsbt \"[{\\\"txid\\\":\\\"myid\\\",\\\"vout\\\":0}]\" \"[{\\\"data\\\":\\\"00010203\\\"}]\"\r\n \r\n === sendmany ===\r\n-sendmany \"\" {\"address\":amount} ( minconf \"comment\" [\"address\",...] replaceable conf_target \"estimate_mode\" fee_rate verbose )\r\n+sendmany \"\" {\"address\":amount,...} ( minconf \"comment\" [\"address\",...] replaceable conf_target \"estimate_mode\" fee_rate verbose )\r\n \r\n Send multiple times. Amounts are double-precision floating point numbers.\r\n Requires wallet passphrase to be set with walletpassphrase call if wallet is encrypted.\r\n@@ -180,6 +182,7 @@ Arguments:\r\n 2. amounts                   (json object, required) The addresses and amounts\r\n      {\r\n        \"address\": amount,    (numeric or string, required) The bitcoin address is the key, the numeric amount (can be string) in BTC is the value\r\n+       ...\r\n      }\r\n 3. minconf                   (numeric, optional) Ignored dummy value\r\n 4. comment                   (string, optional) A comment\r\n@@ -234,7 +237,7 @@ applied to the new wallet (eg -rescan, etc).\r\n \r\n Arguments:\r\n 1. filename           (string, required) The wallet directory or .dat file.\r\n-2. load_on_startup    (boolean, optional, default=null) Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\r\n+2. load_on_startup    (boolean, optional) Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\r\n \r\n Result:\r\n {                       (json object)\r\n@@ -255,10 +258,10 @@ Arguments:\r\n 1. wallet_name             (string, required) The name for the new wallet. If this is a path, the wallet will be created at the path location.\r\n 2. disable_private_keys    (boolean, optional, default=false) Disable the possibility of private keys (only watchonlys are possible in this mode).\r\n 3. blank                   (boolean, optional, default=false) Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\r\n-4. passphrase              (string) Encrypt the wallet with this passphrase.\r\n+4. passphrase              (string, optional) Encrypt the wallet with this passphrase.\r\n 5. avoid_reuse             (boolean, optional, default=false) Keep track of coin reuse, and treat dirty and clean coins differently with privacy considerations in mind.\r\n 6. descriptors             (boolean, optional, default=false) Create a native descriptor wallet. The wallet will use descriptors internally to handle address creation\r\n-7. load_on_startup         (boolean, optional, default=null) Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\r\n+7. load_on_startup         (boolean, optional) Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\r\n 8. external_signer         (boolean, optional, default=false) Use an external signer such as a hardware wallet. Requires -signer to be configured. Wallet creation will fail if keys cannot be fetched. Requires disable_private_keys and descriptors set to true.\r\n \r\n Result:\r\n@@ -279,7 +282,7 @@ Unloads the wallet referenced by the request endpoint otherwise unloads the wall\r\n Specifying the wallet name on a wallet endpoint is invalid.\r\n Arguments:\r\n 1. wallet_name        (string, optional, default=the wallet name from the RPC endpoint) The name of the wallet to unload. If provided both here and in the RPC endpoint, the two must be identical.\r\n-2. load_on_startup    (boolean, optional, default=null) Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\r\n+2. load_on_startup    (boolean, optional) Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\r\n \r\n Result:\r\n {                       (json object)\r\n@@ -291,7 +294,7 @@ Examples:\r\n > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"unloadwallet\", \"params\": [wallet_name]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\r\n \r\n === send ===\r\n-send [{\"address\":amount},{\"data\":\"hex\"},...] ( conf_target \"estimate_mode\" fee_rate options )\r\n+send [{\"address\":amount,...},{\"data\":\"hex\"},...] ( conf_target \"estimate_mode\" fee_rate options )\r\n \r\n EXPERIMENTAL warning: this call may be changed in future releases.\r\n \r\n@@ -304,6 +307,7 @@ Arguments:\r\n      [\r\n        {                                 (json object)\r\n          \"address\": amount,              (numeric or string, required) A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in BTC\r\n+         ...\r\n        },\r\n        {                                 (json object)\r\n          \"data\": \"hex\",                  (string, required) A key-value pair. The key must be \"data\", the value is hex-encoded data\r\n@@ -378,7 +382,7 @@ Create a transaction that should confirm the next block, with a specific input,\r\n > bitcoin-cli send '{\"bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl\": 0.1}' 1 economical '{\"add_to_wallet\": false, \"inputs\": [{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\", \"vout\":1}]}'\r\n \r\n === walletcreatefundedpsbt ===\r\n-walletcreatefundedpsbt ( [{\"txid\":\"hex\",\"vout\":n,\"sequence\":n},...] ) [{\"address\":amount},{\"data\":\"hex\"},...] ( locktime options bip32derivs )\r\n+walletcreatefundedpsbt ( [{\"txid\":\"hex\",\"vout\":n,\"sequence\":n},...] ) [{\"address\":amount,...},{\"data\":\"hex\"},...] ( locktime options bip32derivs )\r\n \r\n Creates and funds a transaction in the Partially Signed Transaction format.\r\n Implements the Creator and Updater roles.\r\n@@ -400,6 +404,7 @@ Arguments:\r\n      [\r\n        {                              (json object)\r\n          \"address\": amount,           (numeric or string, required) A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in BTC\r\n+         ...\r\n        },\r\n        {                              (json object)\r\n          \"data\": \"hex\",               (string, required) A key-value pair. The key must be \"data\", the value is hex-encoded data\r\n```",
      "created_at" : "2021-05-13T05:29:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21913#issuecomment-840312115",
      "id" : 840312115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21913",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDMxMjExNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-13T05:29:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840312115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Documentation diff ACK 6e2eb0d63b42288c11a65d585d487108643888d0",
      "created_at" : "2021-05-19T12:25:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21913#issuecomment-844054309",
      "id" : 844054309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21913",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NDA1NDMwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-19T12:25:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844054309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke can you have a look here?",
      "created_at" : "2021-05-19T23:44:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21913#issuecomment-844571128",
      "id" : 844571128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21913",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NDU3MTEyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-19T23:44:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/844571128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
