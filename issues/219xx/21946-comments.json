[
   {
      "author_association" : "MEMBER",
      "body" : "Also, I had a look on the rest of RBF functional test coverage (i.e feature_rbf.py, mempool_accept.py, p2p_invalid_tx.py). AFAICT, the latest check on incremental relay fee increase doesn't seem to have coverage ?",
      "created_at" : "2021-05-13T18:18:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-840741662",
      "id" : 840741662,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDc0MTY2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-13T18:18:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840741662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fb2047b",
      "created_at" : "2021-05-13T18:20:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-840742529",
      "id" : 840742529,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDc0MjUyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-13T18:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840742529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632012684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632012684"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a good place to refer to the CVE so it's clear the behaviour here is _not_ following BIP125.",
      "commit_id" : "fb2047b24183deb7f0cfca0c0249ad8f6ea52753",
      "created_at" : "2021-05-13T18:23:43Z",
      "diff_hunk" : "@@ -563,5 +566,68 @@ def test_rpc(self):\n         assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n         assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967294)\n \n+    def test_no_inherited_signaling(self):\n+        # Send tx from which to conflict outputs later\n+        base_txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[0].generate(1)\n+        self.sync_blocks()\n+\n+        # Create a explicitly opting parent transaction\n+        optin_parent_tx = self.nodes[0].createrawtransaction([{\n+            'txid': base_txid,\n+            'vout': 0,\n+            \"sequence\": 0xfffffffd,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.99998\")})\n+\n+        optin_parent_tx = self.nodes[0].signrawtransactionwithwallet(optin_parent_tx)\n+\n+        # Broadcast parent tx\n+        optin_parent_txid = self.nodes[0].sendrawtransaction(hexstring=optin_parent_tx[\"hex\"], maxfeerate=0)\n+        assert optin_parent_txid in self.nodes[0].getrawmempool()\n+\n+        replacement_parent_tx = self.nodes[0].createrawtransaction([{\n+            'txid': base_txid,\n+            'vout': 0,\n+            \"sequence\": 0xfffffffd,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.90000\")})\n+\n+        replacement_parent_tx = self.nodes[0].signrawtransactionwithwallet(replacement_parent_tx)\n+\n+        # Test if parent tx can be replaced.\n+        res = self.nodes[0].testmempoolaccept(rawtxs=[replacement_parent_tx['hex']], maxfeerate=0)[0]\n+\n+        # Parent can be replaced.\n+        assert_equal(res['allowed'], True)\n+\n+        # Create a optout child tx spending opting parent\n+        optout_child_tx = self.nodes[0].createrawtransaction([{\n+            'txid': optin_parent_txid,\n+            'vout': 0,\n+            \"sequence\": 0xffffffff,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.99990\")})\n+\n+        optout_child_tx = self.nodes[0].signrawtransactionwithwallet(optout_child_tx)\n+\n+        # Broadcast child tx\n+        optout_child_txid = self.nodes[0].sendrawtransaction(hexstring=optout_child_tx[\"hex\"], maxfeerate=0)\n+        assert optout_child_txid in self.nodes[0].getrawmempool()\n+\n+        replacement_child_tx = self.nodes[0].createrawtransaction([{\n+            'txid': optin_parent_txid,\n+            'vout': 0,\n+            \"sequence\": 0xffffffff,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.00000\")})\n+\n+        replacement_child_tx = self.nodes[0].signrawtransactionwithwallet(replacement_child_tx)\n+\n+        # Broadcast replacement child tx\n+        # BIP 125 :\n+        # 1. The original transactions signal replaceability explicitly or through inheritance as described in the above\n+        # Summary section.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632012684",
      "id" : 632012684,
      "line" : 626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjAxMjY4NA==",
      "original_commit_id" : "fb2047b24183deb7f0cfca0c0249ad8f6ea52753",
      "original_line" : 626,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/feature_rbf.py",
      "position" : 71,
      "pull_request_review_id" : 659178602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-13T18:23:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632012684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632084985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632084985"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes already add a ref in new document, added another here if you think so.",
      "commit_id" : "3d57b5eb053c7a34c3621875fa60401782a280b4",
      "created_at" : "2021-05-13T20:30:05Z",
      "diff_hunk" : "@@ -563,5 +566,68 @@ def test_rpc(self):\n         assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n         assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967294)\n \n+    def test_no_inherited_signaling(self):\n+        # Send tx from which to conflict outputs later\n+        base_txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[0].generate(1)\n+        self.sync_blocks()\n+\n+        # Create a explicitly opting parent transaction\n+        optin_parent_tx = self.nodes[0].createrawtransaction([{\n+            'txid': base_txid,\n+            'vout': 0,\n+            \"sequence\": 0xfffffffd,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.99998\")})\n+\n+        optin_parent_tx = self.nodes[0].signrawtransactionwithwallet(optin_parent_tx)\n+\n+        # Broadcast parent tx\n+        optin_parent_txid = self.nodes[0].sendrawtransaction(hexstring=optin_parent_tx[\"hex\"], maxfeerate=0)\n+        assert optin_parent_txid in self.nodes[0].getrawmempool()\n+\n+        replacement_parent_tx = self.nodes[0].createrawtransaction([{\n+            'txid': base_txid,\n+            'vout': 0,\n+            \"sequence\": 0xfffffffd,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.90000\")})\n+\n+        replacement_parent_tx = self.nodes[0].signrawtransactionwithwallet(replacement_parent_tx)\n+\n+        # Test if parent tx can be replaced.\n+        res = self.nodes[0].testmempoolaccept(rawtxs=[replacement_parent_tx['hex']], maxfeerate=0)[0]\n+\n+        # Parent can be replaced.\n+        assert_equal(res['allowed'], True)\n+\n+        # Create a optout child tx spending opting parent\n+        optout_child_tx = self.nodes[0].createrawtransaction([{\n+            'txid': optin_parent_txid,\n+            'vout': 0,\n+            \"sequence\": 0xffffffff,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.99990\")})\n+\n+        optout_child_tx = self.nodes[0].signrawtransactionwithwallet(optout_child_tx)\n+\n+        # Broadcast child tx\n+        optout_child_txid = self.nodes[0].sendrawtransaction(hexstring=optout_child_tx[\"hex\"], maxfeerate=0)\n+        assert optout_child_txid in self.nodes[0].getrawmempool()\n+\n+        replacement_child_tx = self.nodes[0].createrawtransaction([{\n+            'txid': optin_parent_txid,\n+            'vout': 0,\n+            \"sequence\": 0xffffffff,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.00000\")})\n+\n+        replacement_child_tx = self.nodes[0].signrawtransactionwithwallet(replacement_child_tx)\n+\n+        # Broadcast replacement child tx\n+        # BIP 125 :\n+        # 1. The original transactions signal replaceability explicitly or through inheritance as described in the above\n+        # Summary section.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632084985",
      "id" : 632084985,
      "in_reply_to_id" : 632012684,
      "line" : 626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjA4NDk4NQ==",
      "original_commit_id" : "fb2047b24183deb7f0cfca0c0249ad8f6ea52753",
      "original_line" : 626,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/feature_rbf.py",
      "position" : 71,
      "pull_request_review_id" : 659276628,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-13T20:30:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632084985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nMaybe we can mention this in [doc/bips.md](https://github.com/bitcoin/bitcoin/blob/master/doc/bips.md) as well\r\n\r\n",
      "created_at" : "2021-05-14T01:07:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-840928362",
      "id" : 840928362,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MDkyODM2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T01:07:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840928362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632401181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632401181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Probably a good idea; few people will read `validation.cpp` along side this test.",
      "commit_id" : "3d57b5eb053c7a34c3621875fa60401782a280b4",
      "created_at" : "2021-05-14T09:22:49Z",
      "diff_hunk" : "@@ -563,5 +566,68 @@ def test_rpc(self):\n         assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n         assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967294)\n \n+    def test_no_inherited_signaling(self):\n+        # Send tx from which to conflict outputs later\n+        base_txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[0].generate(1)\n+        self.sync_blocks()\n+\n+        # Create a explicitly opting parent transaction\n+        optin_parent_tx = self.nodes[0].createrawtransaction([{\n+            'txid': base_txid,\n+            'vout': 0,\n+            \"sequence\": 0xfffffffd,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.99998\")})\n+\n+        optin_parent_tx = self.nodes[0].signrawtransactionwithwallet(optin_parent_tx)\n+\n+        # Broadcast parent tx\n+        optin_parent_txid = self.nodes[0].sendrawtransaction(hexstring=optin_parent_tx[\"hex\"], maxfeerate=0)\n+        assert optin_parent_txid in self.nodes[0].getrawmempool()\n+\n+        replacement_parent_tx = self.nodes[0].createrawtransaction([{\n+            'txid': base_txid,\n+            'vout': 0,\n+            \"sequence\": 0xfffffffd,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.90000\")})\n+\n+        replacement_parent_tx = self.nodes[0].signrawtransactionwithwallet(replacement_parent_tx)\n+\n+        # Test if parent tx can be replaced.\n+        res = self.nodes[0].testmempoolaccept(rawtxs=[replacement_parent_tx['hex']], maxfeerate=0)[0]\n+\n+        # Parent can be replaced.\n+        assert_equal(res['allowed'], True)\n+\n+        # Create a optout child tx spending opting parent\n+        optout_child_tx = self.nodes[0].createrawtransaction([{\n+            'txid': optin_parent_txid,\n+            'vout': 0,\n+            \"sequence\": 0xffffffff,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.99990\")})\n+\n+        optout_child_tx = self.nodes[0].signrawtransactionwithwallet(optout_child_tx)\n+\n+        # Broadcast child tx\n+        optout_child_txid = self.nodes[0].sendrawtransaction(hexstring=optout_child_tx[\"hex\"], maxfeerate=0)\n+        assert optout_child_txid in self.nodes[0].getrawmempool()\n+\n+        replacement_child_tx = self.nodes[0].createrawtransaction([{\n+            'txid': optin_parent_txid,\n+            'vout': 0,\n+            \"sequence\": 0xffffffff,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.00000\")})\n+\n+        replacement_child_tx = self.nodes[0].signrawtransactionwithwallet(replacement_child_tx)\n+\n+        # Broadcast replacement child tx\n+        # BIP 125 :\n+        # 1. The original transactions signal replaceability explicitly or through inheritance as described in the above\n+        # Summary section.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632401181",
      "id" : 632401181,
      "in_reply_to_id" : 632012684,
      "line" : 626,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjQwMTE4MQ==",
      "original_commit_id" : "fb2047b24183deb7f0cfca0c0249ad8f6ea52753",
      "original_line" : 626,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "test/functional/feature_rbf.py",
      "position" : 71,
      "pull_request_review_id" : 659670883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-14T09:22:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632401181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632420199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632420199"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggestions, most important one being s/policy/logic|code/, the others are grammar\r\n```diff\r\n                 // Transactions that don't explicitly signal replaceability are\r\n-                // *not* replaceable under this policy, even if one of their\r\n-                // unconfirmed ancestors signals replaceability. This is diverging\r\n+                // *not* replaceable with the current logic, even if one of their\r\n+                // unconfirmed ancestors signals replaceability. This diverges\r\n                 // from BIP125's inherited signaling description (see CVE-2021-31876).\r\n-                // Applications relying on first-seen mempool behavior should be\r\n-                // checking all unconfirmed ancestors; doing otherwise an opt-in ancestor\r\n+                // Applications relying on first-seen mempool behavior should\r\n+                // check all unconfirmed ancestors, otherwise an opt-in ancestor\r\n                 // might be replaced, causing removal of this descendant.\r\n```\r\n",
      "commit_id" : "3d57b5eb053c7a34c3621875fa60401782a280b4",
      "created_at" : "2021-05-14T09:56:32Z",
      "diff_hunk" : "@@ -625,10 +625,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n                 // is for the sake of multi-party protocols, where we don't\n                 // want a single party to be able to disable replacement.\n                 //\n-                // The opt-out ignores descendants as anyone relying on\n-                // first-seen mempool behavior should be checking all\n-                // unconfirmed ancestors anyway; doing otherwise is hopelessly\n-                // insecure.\n+                // Transactions that don't explicitly signal replaceability are\n+                // *not* replaceable under this policy, even if one of their\n+                // unconfirmed ancestors signals replaceability. This is diverging\n+                // from BIP125's inherited signaling description (see CVE-2021-31876).\n+                // Applications relying on first-seen mempool behavior should be\n+                // checking all unconfirmed ancestors; doing otherwise an opt-in ancestor\n+                // might be replaced, causing removal of this descendant.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632420199",
      "id" : 632420199,
      "line" : 634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjQyMDE5OQ==",
      "original_commit_id" : "3d57b5eb053c7a34c3621875fa60401782a280b4",
      "original_line" : 634,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 14,
      "pull_request_review_id" : 659695251,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-14T10:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632420199",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632426875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632426875"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        # Create an explicitly opt-in parent transaction\r\n```",
      "commit_id" : "3d57b5eb053c7a34c3621875fa60401782a280b4",
      "created_at" : "2021-05-14T10:09:17Z",
      "diff_hunk" : "@@ -563,5 +566,69 @@ def test_rpc(self):\n         assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n         assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967294)\n \n+    def test_no_inherited_signaling(self):\n+        # Send tx from which to conflict outputs later\n+        base_txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[0].generate(1)\n+        self.sync_blocks()\n+\n+        # Create a explicitly opting parent transaction",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632426875",
      "id" : 632426875,
      "line" : 575,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjQyNjg3NQ==",
      "original_commit_id" : "3d57b5eb053c7a34c3621875fa60401782a280b4",
      "original_line" : 575,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/feature_rbf.py",
      "position" : 20,
      "pull_request_review_id" : 659704294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-14T10:11:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632426875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632427127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632427127"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        # Create an opt-out child tx spending the opt-in parent\r\n```",
      "commit_id" : "3d57b5eb053c7a34c3621875fa60401782a280b4",
      "created_at" : "2021-05-14T10:09:45Z",
      "diff_hunk" : "@@ -563,5 +566,69 @@ def test_rpc(self):\n         assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n         assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967294)\n \n+    def test_no_inherited_signaling(self):\n+        # Send tx from which to conflict outputs later\n+        base_txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n+        self.nodes[0].generate(1)\n+        self.sync_blocks()\n+\n+        # Create a explicitly opting parent transaction\n+        optin_parent_tx = self.nodes[0].createrawtransaction([{\n+            'txid': base_txid,\n+            'vout': 0,\n+            \"sequence\": 0xfffffffd,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.99998\")})\n+\n+        optin_parent_tx = self.nodes[0].signrawtransactionwithwallet(optin_parent_tx)\n+\n+        # Broadcast parent tx\n+        optin_parent_txid = self.nodes[0].sendrawtransaction(hexstring=optin_parent_tx[\"hex\"], maxfeerate=0)\n+        assert optin_parent_txid in self.nodes[0].getrawmempool()\n+\n+        replacement_parent_tx = self.nodes[0].createrawtransaction([{\n+            'txid': base_txid,\n+            'vout': 0,\n+            \"sequence\": 0xfffffffd,\n+        }], {self.nodes[0].getnewaddress(): Decimal(\"9.90000\")})\n+\n+        replacement_parent_tx = self.nodes[0].signrawtransactionwithwallet(replacement_parent_tx)\n+\n+        # Test if parent tx can be replaced.\n+        res = self.nodes[0].testmempoolaccept(rawtxs=[replacement_parent_tx['hex']], maxfeerate=0)[0]\n+\n+        # Parent can be replaced.\n+        assert_equal(res['allowed'], True)\n+\n+        # Create a optout child tx spending opting parent",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#discussion_r632427127",
      "id" : 632427127,
      "line" : 602,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjQyNzEyNw==",
      "original_commit_id" : "3d57b5eb053c7a34c3621875fa60401782a280b4",
      "original_line" : 602,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "test/functional/feature_rbf.py",
      "position" : 47,
      "pull_request_review_id" : 659704294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21946",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-05-14T10:10:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632427127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @jonatack and @Sjors, I think I've addressed all your comments at 2eb0eed, but lmk if you've more I'll address them quickly.\r\n\r\n@prayank23 \r\n\r\nWell in fact there is another well-known supplemental check implemented by our logic not mentioned in the BIP, which is the feerate comparison here : https://github.com/bitcoin/bitcoin/blob/ecf5f2c1a06edd8372402872525f8de1d4277453/src/validation.cpp#L848 and absolute fee checks is done on original transactions *and* their descendants, should we document all of them ?",
      "created_at" : "2021-05-14T18:36:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-841428321",
      "id" : 841428321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTQyODMyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T18:37:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841428321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke I believe you're aware of few mempool-related RPCs which should be updated in consequence as follow-up of this PR?",
      "created_at" : "2021-05-14T18:38:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-841429538",
      "id" : 841429538,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTQyOTUzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T18:38:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841429538",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 2eb0eeda39cab997f9a5f817f7c12e7fffeaf35a",
      "created_at" : "2021-05-14T20:05:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-841473749",
      "id" : 841473749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MTQ3Mzc0OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-14T20:05:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841473749",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Well in fact there is another well-known supplemental check implemented by our logic not mentioned in the BIP, which is the feerate comparison here :\r\n> \r\n> https://github.com/bitcoin/bitcoin/blob/ecf5f2c1a06edd8372402872525f8de1d4277453/src/validation.cpp#L848\r\n> \r\n> and absolute fee checks is done on original transactions _and_ their descendants, should we document all of them ?\r\n\r\nNot sure about this. According to my understanding fee rate and fees both should be higher in replacement transaction.\r\n\r\nExample:\r\nTx1 has only 1 input and two outputs (RBF enabled)\r\nTx2 is replacement transaction for Tx1 which has 5 inputs and 2 outputs.\r\n\r\nIt is possible that Tx2 uses a lower fee rate compared to Tx1 but more fees. Miners normally prioritize based on fee rate so a higher fee rate would be better.\r\n\r\nHowever, if there is a difference in BIP and the implementation it should be mentioned in [doc/bip.md](https://github.com/bitcoin/bitcoin/blob/master/doc/bips.md) IMO\r\n\r\n",
      "created_at" : "2021-05-17T11:10:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-842236566",
      "id" : 842236566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MjIzNjU2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-17T11:11:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842236566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/13405205?v=4",
         "events_url" : "https://api.github.com/users/prayank23/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prayank23/followers",
         "following_url" : "https://api.github.com/users/prayank23/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prayank23/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prayank23",
         "id" : 13405205,
         "login" : "prayank23",
         "node_id" : "MDQ6VXNlcjEzNDA1MjA1",
         "organizations_url" : "https://api.github.com/users/prayank23/orgs",
         "received_events_url" : "https://api.github.com/users/prayank23/received_events",
         "repos_url" : "https://api.github.com/users/prayank23/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prayank23/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prayank23"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 2eb0eeda39cab997f9a5f817f7c12e7fffeaf35a\r\n\r\nIs a fix for the actual CVE being worked on as well?",
      "created_at" : "2021-05-19T03:44:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-843723178",
      "id" : 843723178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0MzcyMzE3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-19T03:44:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/843723178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15256660?v=4",
         "events_url" : "https://api.github.com/users/benthecarman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/benthecarman/followers",
         "following_url" : "https://api.github.com/users/benthecarman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/benthecarman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/benthecarman",
         "id" : 15256660,
         "login" : "benthecarman",
         "node_id" : "MDQ6VXNlcjE1MjU2NjYw",
         "organizations_url" : "https://api.github.com/users/benthecarman/orgs",
         "received_events_url" : "https://api.github.com/users/benthecarman/received_events",
         "repos_url" : "https://api.github.com/users/benthecarman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/benthecarman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/benthecarman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/benthecarman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@prayank23 \r\n\r\nYes, unless you have a strong opinion here, I prefer differences between BIPs and the implementation in another PR, like one adding test coverage for incremental relay fee.\r\n\r\n@benthecarman \r\n\r\nNot really, as a fix, I'm currently studying moving towards full-rbf. If we do so, there wouldn't be any kind of signaling to proceed at all.\r\n\r\nIMO, main motivation to not fix it is avoiding increasing the DoS surface of the mempool, where at replacement transaction submission you might have to traverse N * `package_ancestor_limits`. With N your number of allowed inputs for a `MAX_STANDARD_TX_WEIGHT`-sized transaction.",
      "created_at" : "2021-05-21T03:09:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-845619564",
      "id" : 845619564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg0NTYxOTU2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-05-21T03:09:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/845619564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This has ACKs by @Sjors, @benthecarman and myself, if anyone would like to have a look.",
      "created_at" : "2021-06-08T13:01:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-856746238",
      "id" : 856746238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1Njc0NjIzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-08T13:01:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/856746238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> IMO, main motivation to not fix it is avoiding increasing the DoS surface of the mempool, where at replacement transaction submission you might have to traverse N * `package_ancestor_limits`. With N your number of allowed inputs for a `MAX_STANDARD_TX_WEIGHT`-sized transaction.\r\n\r\nAdding a `bool rbf_enabled` to `CTxMemPoolEntry` that's true if the tx signals for rbf or any of its inputs have `rbf_enabled == true` would remove that problem fairly easily, as far as I can see.",
      "created_at" : "2021-06-09T03:52:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-857350921",
      "id" : 857350921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1NzM1MDkyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-09T03:52:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/857350921",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @MarcoFalke I believe you're aware of few mempool-related RPCs which should be updated in consequence as follow-up of this PR?\r\n\r\nSure, filed as #22209",
      "created_at" : "2021-06-10T11:03:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-858526828",
      "id" : 858526828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1ODUyNjgyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-10T11:03:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/858526828",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns\r\n\r\nIIUC we would have to re-order RBF opt-in checks after fetching parents coins from the cache in `PreChecks`, but I don't believe such re-order would change anything in DoS prevention strategy around mempool acceptance. Any `CTxMemPoolEntry` would inherit `rbf_enable == true` if one of its parent entries have the flag sets so, that way you only check first-depth of ancestors of the replaced transactions.\r\n\r\nAt first sight, I don't see any blocker for this approach, though I was planning to propose soon moving towards full-rbf. Beyond simplifying a bit `PreChecks` code sanity, opt-in RBF raises issues for multi-party funded transactions. If full-rbf turns as a flames war like last time, we can consider again this approach to fix the discrepancy between the spec and our code.",
      "created_at" : "2021-06-13T16:14:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21946#issuecomment-860235726",
      "id" : 860235726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21946",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MDIzNTcyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-13T16:14:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860235726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
