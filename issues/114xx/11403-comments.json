[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r140993847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140993847"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit *Expose method to find key for a single-key destination*:\r\n\r\nUse `boost::apply_visitor` instead?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T08:52:45Z",
      "diff_hunk" : "@@ -4051,3 +4051,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r140993847",
      "id" : 140993847,
      "original_commit_id" : "1ae94623eceb96728b6a791732776d01a455f83f",
      "original_position" : 8,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140993847",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r140994498"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140994498"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit *Expose method to find key for a single-key destination*:\r\n\r\nRecursive call?\r\n```cpp\r\n            return GetKeyForDestination(inner_dest);\r\n```",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T08:55:24Z",
      "diff_hunk" : "@@ -4051,3 +4051,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r140994498",
      "id" : 140994498,
      "original_commit_id" : "1ae94623eceb96728b6a791732776d01a455f83f",
      "original_position" : 18,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140994498",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r140995719"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140995719"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit *SegWit wallet support*:\r\n\r\nRemove?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T09:00:02Z",
      "diff_hunk" : "@@ -4072,3 +4074,82 @@ CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n     }\n     return CKeyID();\n }\n+\n+static const std::string STYLE_STRING_NONE = \"\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r140995719",
      "id" : 140995719,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 41,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140995719",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141033697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141033697"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Add init tests (follow up maybe)?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T11:58:03Z",
      "diff_hunk" : "@@ -168,6 +170,22 @@ bool WalletParameterInteraction()\n     bSpendZeroConfChange = gArgs.GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n     fWalletRbf = gArgs.GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n+    std::string style = gArgs.GetArg(\"-addressstyle\", \"default\");\n+    OutputStyle parsed_style = ParseStyle(style);\n+    if (parsed_style == STYLE_NONE) {\n+        return InitError(strprintf(_(\"Unknown address style '%s'\"), style));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141033697",
      "id" : 141033697,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 16,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141033697",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034121"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Missing default value?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T12:00:16Z",
      "diff_hunk" : "@@ -225,11 +234,13 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 0)\n+    if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n-            \"getrawchangeaddress\\n\"\n+            \"getrawchangeaddress ( \\\"style\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address, for receiving change.\\n\"\n             \"This is for use with raw transactions, NOT normal use.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"style\\\"          (string, optional) The address style to use. Valid options are 'p2pkh', 'p2sh_p2wpkh', and 'p2wpkh'\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034121",
      "id" : 141034121,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 69,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034121",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034255"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fix index `[0]`.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T12:01:02Z",
      "diff_hunk" : "@@ -243,16 +254,24 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         pwallet->TopUpKeyPool();\n     }\n \n+    OutputStyle style = change_style;\n+    if (!request.params[0].isNull()) {\n+        style = ParseStyle(request.params[1].get_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034255",
      "id" : 141034255,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 79,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034255",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034483"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Missing test for this error.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T12:02:11Z",
      "diff_hunk" : "@@ -157,6 +158,14 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n     if (!request.params[0].isNull())\n         strAccount = AccountFromValue(request.params[0]);\n \n+    OutputStyle style = address_style;\n+    if (!request.params[1].isNull()) {\n+        style = ParseStyle(request.params[1].get_str());\n+        if (style == STYLE_NONE) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Unknown address style '%s'\", request.params[1].get_str()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034483",
      "id" : 141034483,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 26,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034483",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034548"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Default value?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T12:02:28Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"style\\\"          (string, optional) The address style to use. Valid options are 'p2pkh', 'p2sh_p2wpkh', and 'p2wpkh'\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034548",
      "id" : 141034548,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034548",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034833"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Add init tests (follow up maybe)?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T12:03:46Z",
      "diff_hunk" : "@@ -168,6 +170,22 @@ bool WalletParameterInteraction()\n     bSpendZeroConfChange = gArgs.GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n     fWalletRbf = gArgs.GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n+    std::string style = gArgs.GetArg(\"-addressstyle\", \"default\");\n+    OutputStyle parsed_style = ParseStyle(style);\n+    if (parsed_style == STYLE_NONE) {\n+        return InitError(strprintf(_(\"Unknown address style '%s'\"), style));\n+    } else {\n+        address_style = parsed_style;\n+    }\n+\n+    style = gArgs.GetArg(\"-changestyle\", style);\n+    parsed_style = ParseStyle(style);\n+    if (parsed_style == STYLE_NONE) {\n+        return InitError(strprintf(_(\"Unknown change style '%s'\"), style));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034833",
      "id" : 141034833,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 24,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034833",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034981"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Missing test.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T12:04:26Z",
      "diff_hunk" : "@@ -243,16 +254,24 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         pwallet->TopUpKeyPool();\n     }\n \n+    OutputStyle style = change_style;\n+    if (!request.params[0].isNull()) {\n+        style = ParseStyle(request.params[1].get_str());\n+        if (style == STYLE_NONE) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Unknown address style '%s'\", request.params[0].get_str()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141034981",
      "id" : 141034981,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 81,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141034981",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141035708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141035708"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove `, True` so that default value is tested.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T12:07:53Z",
      "diff_hunk" : "@@ -133,8 +133,15 @@ def run_test(self):\n             newaddress = self.nodes[i].getnewaddress()\n             self.pubkey.append(self.nodes[i].validateaddress(newaddress)[\"pubkey\"])\n             multiaddress = self.nodes[i].addmultisigaddress(1, [self.pubkey[-1]])\n-            self.nodes[i].addwitnessaddress(newaddress)\n-            self.nodes[i].addwitnessaddress(multiaddress)\n+            multiscript = CScript([OP_1, hex_str_to_bytes(self.pubkey[-1]), OP_1, OP_CHECKMULTISIG])\n+            p2sh_addr = self.nodes[i].addwitnessaddress(newaddress, True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141035708",
      "id" : 141035708,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 63,
      "path" : "test/functional/segwit.py",
      "position" : null,
      "pull_request_review_id" : 65141769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141035708",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141137104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141137104"
         }
      },
      "author_association" : "OWNER",
      "body" : "I tried that, but the result is much longer and harder to get right (see below). It's also the wrong approach I think. A visitor is used when you want to handle all possible types - here we specifically only want to support a specific subset of cases (P2PKH, P2WPKH, P2SH-P2WPKH).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T18:06:20Z",
      "diff_hunk" : "@@ -4051,3 +4051,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141137104",
      "id" : 141137104,
      "in_reply_to_id" : 140993847,
      "original_commit_id" : "1ae94623eceb96728b6a791732776d01a455f83f",
      "original_position" : 8,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65308272,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141137104",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141137409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141137409"
         }
      },
      "author_association" : "OWNER",
      "body" : "It's not that easy, as it could match a superset (for example P2SH-P2PKH), or even invalid things (P2SH-P2SH-P2WPKH?).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T18:07:28Z",
      "diff_hunk" : "@@ -4051,3 +4051,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141137409",
      "id" : 141137409,
      "in_reply_to_id" : 140994498,
      "original_commit_id" : "1ae94623eceb96728b6a791732776d01a455f83f",
      "original_position" : 18,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65308623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141137409",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141172352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141172352"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These should mention the defaults, which likely means refactoring how the \"default\" string is handled.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T20:21:36Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addressstyle\", _(\"What style addresses to use (\\\"p2pkh\\\", \\\"p2sh_p2wpkh\\\", \\\"p2wpkh\\\")\"));\n+    strUsage += HelpMessageOpt(\"-changestyle\", _(\"What style change to use (\\\"p2pkh\\\", \\\"p2sh_p2wpkh\\\", \\\"p2wpkh\\\")\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141172352",
      "id" : 141172352,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 65348501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141172352",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141172562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141172562"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Default should probably remain legacy until support for newer styles is complete (eg, `import*` RPC)?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T20:22:30Z",
      "diff_hunk" : "@@ -4021,3 +4042,114 @@ bool CMerkleTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n {\n     return ::AcceptToMemoryPool(mempool, state, tx, true, nullptr, nullptr, false, nAbsurdFee);\n }\n+\n+bool CWallet::IsSolvable(const CScript& script) const\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(this);\n+    SignatureData sigs;\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n+}\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {\n+                return CKeyID(boost::get<WitnessV0KeyHash>(inner_dest));\n+            }\n+        }\n+    }\n+    return CKeyID();\n+}\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";\n+\n+OutputStyle ParseStyle(const std::string& style)\n+{\n+    if (style == STYLE_STRING_LEGACY) {\n+        return STYLE_LEGACY;\n+    } else if (style == STYLE_STRING_P2SH || style == \"default\") {\n+        return STYLE_P2SH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141172562",
      "id" : 141172562,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 111,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65348501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141172562",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141173466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141173466"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems like it would be better to change the deprecated `\"account\"` into a JSON Object `options`.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-26T20:25:56Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"style\\\"          (string, optional) The address style to use. Valid options are 'p2pkh', 'p2sh_p2wpkh', and 'p2wpkh'\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141173466",
      "id" : 141173466,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65348501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141173466",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141575484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141575484"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right.\r\n\r\nIsn't boost::get kind of expensive? Avoid 2nd call?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-28T09:56:46Z",
      "diff_hunk" : "@@ -4051,3 +4051,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141575484",
      "id" : 141575484,
      "in_reply_to_id" : 140994498,
      "original_commit_id" : "1ae94623eceb96728b6a791732776d01a455f83f",
      "original_position" : 18,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65808218,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141575484",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141580941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141580941"
         }
      },
      "author_association" : "OWNER",
      "body" : "I'd rather not. This makes the existing tests far more powerful.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-28T10:23:28Z",
      "diff_hunk" : "@@ -4021,3 +4042,114 @@ bool CMerkleTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n {\n     return ::AcceptToMemoryPool(mempool, state, tx, true, nullptr, nullptr, false, nAbsurdFee);\n }\n+\n+bool CWallet::IsSolvable(const CScript& script) const\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(this);\n+    SignatureData sigs;\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n+}\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {\n+                return CKeyID(boost::get<WitnessV0KeyHash>(inner_dest));\n+            }\n+        }\n+    }\n+    return CKeyID();\n+}\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";\n+\n+OutputStyle ParseStyle(const std::string& style)\n+{\n+    if (style == STYLE_STRING_LEGACY) {\n+        return STYLE_LEGACY;\n+    } else if (style == STYLE_STRING_P2SH || style == \"default\") {\n+        return STYLE_P2SH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141580941",
      "id" : 141580941,
      "in_reply_to_id" : 141172562,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 111,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65814667,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141580941",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A potential problem with supporting `-addressstyle=segwit` w/ Bech32 on day zero is it may confuse people into thinking segwit *needs* the new address format. OTOH, if we don't, it probably makes the P2SH adoption hell more likely.",
      "created_at" : "2017-09-28T19:12:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-332935671",
      "id" : 332935671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-09-28T19:12:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332935671",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141715642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141715642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tests don't need to (and probably shouldn't) rely on defaults...",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-28T19:36:44Z",
      "diff_hunk" : "@@ -4021,3 +4042,114 @@ bool CMerkleTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n {\n     return ::AcceptToMemoryPool(mempool, state, tx, true, nullptr, nullptr, false, nAbsurdFee);\n }\n+\n+bool CWallet::IsSolvable(const CScript& script) const\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(this);\n+    SignatureData sigs;\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n+}\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {\n+                return CKeyID(boost::get<WitnessV0KeyHash>(inner_dest));\n+            }\n+        }\n+    }\n+    return CKeyID();\n+}\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";\n+\n+OutputStyle ParseStyle(const std::string& style)\n+{\n+    if (style == STYLE_STRING_LEGACY) {\n+        return STYLE_LEGACY;\n+    } else if (style == STYLE_STRING_P2SH || style == \"default\") {\n+        return STYLE_P2SH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141715642",
      "id" : 141715642,
      "in_reply_to_id" : 141172562,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 111,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 65975207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141715642",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "maybe it should be renamed to `-addressstyle=bech32`? ",
      "created_at" : "2017-09-28T21:08:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-332964633",
      "id" : 332964633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-09-28T21:08:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332964633",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/425166?v=4",
         "events_url" : "https://api.github.com/users/flack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/flack/followers",
         "following_url" : "https://api.github.com/users/flack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/flack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/flack",
         "id" : 425166,
         "login" : "flack",
         "organizations_url" : "https://api.github.com/users/flack/orgs",
         "received_events_url" : "https://api.github.com/users/flack/received_events",
         "repos_url" : "https://api.github.com/users/flack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/flack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/flack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/flack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase after #11167 merge but that'll make it clearer what's new here to review :+1:",
      "created_at" : "2017-09-29T11:57:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-333107294",
      "id" : 333107294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-09-29T11:57:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333107294",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141910029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141910029"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This field needs to be added anywhere it's used in help text for RPC calls. ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T16:23:36Z",
      "diff_hunk" : "@@ -64,6 +67,13 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n             obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n             obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n             UniValue a(UniValue::VARR);\n+            if (whichType == TX_WITNESS_V0_KEYHASH || whichType == TX_WITNESS_V0_SCRIPTHASH) {\n+                UniValue subobj = boost::apply_visitor(*this, addresses[0]);\n+                obj.push_back(Pair(\"embedded\", std::move(subobj)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141910029",
      "id" : 141910029,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 30,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 66202799,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141910029",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141910356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141910356"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Remove plurals from description.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T16:25:13Z",
      "diff_hunk" : "@@ -1111,6 +1111,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      * have all private keys. This is unrelated to whether we consider this\n      * output to be ours. */\n     bool IsSolvable(const CScript& script) const;\n+\n+    /** Return the hashes of the keys involved in a script. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141910356",
      "id" : 141910356,
      "original_commit_id" : "1ae94623eceb96728b6a791732776d01a455f83f",
      "original_position" : 5,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 66203188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141910356",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Rebased after #11167 merge.",
      "created_at" : "2017-09-29T18:36:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-333205001",
      "id" : 333205001,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-09-29T18:36:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333205001",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141940333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141940333"
         }
      },
      "author_association" : "OWNER",
      "body" : "Yes and no.\r\n\r\nI think that many tests, which are primarily testing things unrelated to addresses, should use the default address type. They don't strictly rely on them, but it's better if they work with either type, and it's certainly easier to not need to change all of them.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T18:47:45Z",
      "diff_hunk" : "@@ -4021,3 +4042,114 @@ bool CMerkleTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n {\n     return ::AcceptToMemoryPool(mempool, state, tx, true, nullptr, nullptr, false, nAbsurdFee);\n }\n+\n+bool CWallet::IsSolvable(const CScript& script) const\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(this);\n+    SignatureData sigs;\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n+}\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {\n+                return CKeyID(boost::get<WitnessV0KeyHash>(inner_dest));\n+            }\n+        }\n+    }\n+    return CKeyID();\n+}\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";\n+\n+OutputStyle ParseStyle(const std::string& style)\n+{\n+    if (style == STYLE_STRING_LEGACY) {\n+        return STYLE_LEGACY;\n+    } else if (style == STYLE_STRING_P2SH || style == \"default\") {\n+        return STYLE_P2SH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141940333",
      "id" : 141940333,
      "in_reply_to_id" : 141172562,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 111,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66238860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141940333",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141960988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141960988"
         }
      },
      "author_association" : "MEMBER",
      "body" : "pedantic nit, but this only supports v0 of each witness version",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T20:28:13Z",
      "diff_hunk" : "@@ -4061,3 +4061,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141960988",
      "id" : 141960988,
      "original_commit_id" : "7f88d8ad7796c0f6d1e80d11943c19f0af2cda62",
      "original_position" : 7,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66263128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141960988",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141964928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141964928"
         }
      },
      "author_association" : "MEMBER",
      "body" : "startup options strings being different than getnewaddress options is a bit odd to me?\r\n\r\n'p2sh_p2wpkh' vs `p2sh` etc",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T20:49:11Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"style\\\"          (string, optional) The address style to use. Valid options are 'p2pkh', 'p2sh_p2wpkh', and 'p2wpkh'\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141964928",
      "id" : 141964928,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66263128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141964928",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141965443"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141965443"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No solution off the top of my head, but it makes sense that this would be set per-wallet. If not, could we name it `g_address_style`?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T20:51:49Z",
      "diff_hunk" : "@@ -43,6 +43,8 @@ CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = DEFAULT_TX_CONFIRM_TARGET;\n bool bSpendZeroConfChange = DEFAULT_SPEND_ZEROCONF_CHANGE;\n bool fWalletRbf = DEFAULT_WALLET_RBF;\n+OutputStyle address_style = STYLE_P2SH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141965443",
      "id" : 141965443,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66263128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141965443",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141966093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141966093"
         }
      },
      "author_association" : "MEMBER",
      "body" : "changestyle needs a test",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T20:55:21Z",
      "diff_hunk" : "@@ -168,6 +170,22 @@ bool WalletParameterInteraction()\n     bSpendZeroConfChange = gArgs.GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n     fWalletRbf = gArgs.GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n+    std::string style = gArgs.GetArg(\"-addressstyle\", \"default\");\n+    OutputStyle parsed_style = ParseStyle(style);\n+    if (parsed_style == STYLE_NONE) {\n+        return InitError(strprintf(_(\"Unknown address style '%s'\"), style));\n+    } else {\n+        address_style = parsed_style;\n+    }\n+\n+    style = gArgs.GetArg(\"-changestyle\", style);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141966093",
      "id" : 141966093,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 21,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 66263128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141966093",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141966363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141966363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "argument needs a test",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T20:56:35Z",
      "diff_hunk" : "@@ -225,11 +234,13 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 0)\n+    if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n-            \"getrawchangeaddress\\n\"\n+            \"getrawchangeaddress ( \\\"style\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address, for receiving change.\\n\"\n             \"This is for use with raw transactions, NOT normal use.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"style\\\"          (string, optional) The address style to use. Valid options are 'p2pkh', 'p2sh_p2wpkh', and 'p2wpkh'\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141966363",
      "id" : 141966363,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 69,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66263128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141966363",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141967056"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141967056"
         }
      },
      "author_association" : "MEMBER",
      "body" : "change seems way out of place here",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T20:59:35Z",
      "diff_hunk" : "@@ -1234,7 +1254,7 @@ UniValue addwitnessaddress(const JSONRPCRequest& request)\n \n     {\n         LOCK(cs_main);\n-        if (!IsWitnessEnabled(chainActive.Tip(), Params().GetConsensus()) && !gArgs.GetBoolArg(\"-walletprematurewitness\", false)) {\n+        if (!IsWitnessEnabled(pindexBestHeader, Params().GetConsensus()) && !gArgs.GetBoolArg(\"-walletprematurewitness\", false)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141967056",
      "id" : 141967056,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 121,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66263128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141967056",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141967691"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141967691"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same suggestion as address_style",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-09-29T21:02:18Z",
      "diff_hunk" : "@@ -43,6 +43,8 @@ CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = DEFAULT_TX_CONFIRM_TARGET;\n bool bSpendZeroConfChange = DEFAULT_SPEND_ZEROCONF_CHANGE;\n bool fWalletRbf = DEFAULT_WALLET_RBF;\n+OutputStyle address_style = STYLE_P2SH;\n+OutputStyle change_style = STYLE_P2SH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r141967691",
      "id" : 141967691,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 66263128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141967691",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Regarding petertodd's concern, I think something like flack's suggestion would address it.",
      "created_at" : "2017-10-11T20:02:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-335931037",
      "id" : 335931037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-10-11T20:02:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335931037",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r144192744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144192744"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The help for e.g. `getnewaddress` says `\"p2wpkh\"` etc. One or the other needs to be changed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-12T04:38:39Z",
      "diff_hunk" : "@@ -4050,3 +4052,114 @@ bool CMerkleTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     return ::AcceptToMemoryPool(mempool, state, tx, nullptr /* pfMissingInputs */,\n                                 nullptr /* plTxnReplaced */, false /* bypass_limits */, nAbsurdFee);\n }\n+\n+bool CWallet::IsSolvable(const CScript& script) const\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(this);\n+    SignatureData sigs;\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n+}\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {\n+                return CKeyID(boost::get<WitnessV0KeyHash>(inner_dest));\n+            }\n+        }\n+    }\n+    return CKeyID();\n+}\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r144192744",
      "id" : 144192744,
      "original_commit_id" : "5632374f2f71bca384ceed07ca6842fd87102346",
      "original_position" : 76,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 68814644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144192744",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r144193626"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144193626"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you want `\"getnewaddress ( \\\"account\\\" \\\"style\\\" )\\n\"`",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-12T04:49:26Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r144193626",
      "id" : 144193626,
      "original_commit_id" : "5632374f2f71bca384ceed07ca6842fd87102346",
      "original_position" : 8,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 68814644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144193626",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r144199735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144199735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This shouldn't just be tacked on the end. Accounts are deprecated. Just replace \"account\" with an options Object.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-12T05:56:19Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r144199735",
      "id" : 144199735,
      "original_commit_id" : "5632374f2f71bca384ceed07ca6842fd87102346",
      "original_position" : 8,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 68822415,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144199735",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r144636061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144636061"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That would be API breaking for a lot of parties which is at odds with rapid deployment.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-13T19:13:16Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r144636061",
      "id" : 144636061,
      "in_reply_to_id" : 144199735,
      "original_commit_id" : "5632374f2f71bca384ceed07ca6842fd87102346",
      "original_position" : 8,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 69324709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144636061",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145239469"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145239469"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You could instead inherit the ctors from uint160/uint256 to shortcut the construction from ```WitnessV0KeyHash(uint160(foo)``` to ```WitnessV0KeyHash(foo)```:\r\n```c++\r\nusing uint160::uint160;\r\n```",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-17T20:02:36Z",
      "diff_hunk" : "@@ -73,8 +73,19 @@ class CNoDestination {\n     friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n };\n \n-struct WitnessV0ScriptHash : public uint256 {};\n-struct WitnessV0KeyHash : public uint160 {};\n+struct WitnessV0ScriptHash : public uint256\n+{\n+public:\n+    WitnessV0ScriptHash() : uint256() {}\n+    WitnessV0ScriptHash(const uint256& in) : uint256(in) {}\n+};\n+\n+struct WitnessV0KeyHash : public uint160\n+{\n+public:\n+    WitnessV0KeyHash() : uint160() {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145239469",
      "id" : 145239469,
      "original_commit_id" : "fb0361d74a578c626b8876e71ad35775d718aed9",
      "original_position" : 16,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 70011130,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145239469",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145240904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145240904"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You might want to _copy_ the field to the help text rather than _move_ it, though :p\r\n\r\n(Use after move here)",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-17T20:08:07Z",
      "diff_hunk" : "@@ -64,6 +67,13 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n             obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n             obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n             UniValue a(UniValue::VARR);\n+            if (whichType == TX_WITNESS_V0_KEYHASH || whichType == TX_WITNESS_V0_SCRIPTHASH) {\n+                UniValue subobj = boost::apply_visitor(*this, addresses[0]);\n+                obj.push_back(Pair(\"embedded\", std::move(subobj)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145240904",
      "id" : 145240904,
      "in_reply_to_id" : 141910029,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 30,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 70012766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145240904",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145245638"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145245638"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why dupe this? Helps with existing tooling?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-17T20:26:40Z",
      "diff_hunk" : "@@ -67,6 +67,13 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n             obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n             obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n             UniValue a(UniValue::VARR);\n+            if (whichType == TX_WITNESS_V0_KEYHASH || whichType == TX_WITNESS_V0_SCRIPTHASH) {\n+                UniValue subobj = boost::apply_visitor(*this, addresses[0]);\n+                obj.push_back(Pair(\"embedded\", std::move(subobj)));\n+                if (subobj.exists(\"pubkey\")) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145245638",
      "id" : 145245638,
      "original_commit_id" : "97f4fc173dda51f21cc092b9b29a9ea4b208f8e2",
      "original_position" : 7,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 70018324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145245638",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145255319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145255319"
         }
      },
      "author_association" : "MEMBER",
      "body" : "imo, it's clearer (and less redundant) to test the result of the assignment:\r\n```c++\r\n    if (const CKeyID* ret = boost::get<CKeyID>(&dest)) {\r\n        return *ret;\r\n    }\r\n```\r\nEdit: That's also the common paradigm for using [std::weak_ptr::lock()](http://en.cppreference.com/w/cpp/memory/weak_ptr/lock)",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-17T21:02:22Z",
      "diff_hunk" : "@@ -4072,3 +4072,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145255319",
      "id" : 145255319,
      "original_commit_id" : "8c55a70cebeb4e18c686c93d96dde95deed6dc0e",
      "original_position" : 8,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 70018324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145255319",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145261446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145261446"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure about the sequencing rules here. I'd feel safer with a temporary CScriptID.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-17T21:28:51Z",
      "diff_hunk" : "@@ -13,6 +13,18 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::AddRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH\n+    // outputs.\n+    if (pubkey.IsCompressed()) {\n+        CScript script = CScript() << OP_0 << ToByteVector(pubkey.GetID());\n+        // This does not use AddCScript, as it may be overridden.\n+        mapScripts[CScriptID(script)] = std::move(script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145261446",
      "id" : 145261446,
      "original_commit_id" : "b7209bdc9007b0f6c22403ab042dd474eb8ef2c5",
      "original_position" : 12,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 70018324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145261446",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145270452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145270452"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can't this pass in nullptr and move out of CWallet? Unless I'm missing something, it's not actually related.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-17T22:09:59Z",
      "diff_hunk" : "@@ -4061,3 +4061,14 @@ bool CMerkleTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     return ::AcceptToMemoryPool(mempool, state, tx, nullptr /* pfMissingInputs */,\n                                 nullptr /* plTxnReplaced */, false /* bypass_limits */, nAbsurdFee);\n }\n+\n+bool CWallet::IsSolvable(const CScript& script) const\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145270452",
      "id" : 145270452,
      "original_commit_id" : "4bc304c9fa8657bc5a025fecfa7fa40e30ea7a20",
      "original_position" : 11,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 70018324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145270452",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145271944"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145271944"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If IsSolvable moves out of CWallet, I believe these can too.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-17T22:18:10Z",
      "diff_hunk" : "@@ -4093,3 +4095,82 @@ CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n     }\n     return CKeyID();\n }\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";\n+\n+OutputStyle ParseStyle(const std::string& style)\n+{\n+    if (style == STYLE_STRING_LEGACY) {\n+        return STYLE_LEGACY;\n+    } else if (style == STYLE_STRING_P2SH || style == \"default\") {\n+        return STYLE_P2SH;\n+    } else if (style == STYLE_STRING_SEGWIT) {\n+        return STYLE_SEGWIT;\n+    } else {\n+        return STYLE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatStyle(OutputStyle style)\n+{\n+    switch (style) {\n+    case STYLE_LEGACY: return STYLE_STRING_LEGACY;\n+    case STYLE_P2SH: return STYLE_STRING_P2SH;\n+    case STYLE_SEGWIT: return STYLE_STRING_SEGWIT;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputStyle style)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145271944",
      "id" : 145271944,
      "original_commit_id" : "f542daeb6986b0cc3ea796f177f20739706eddf2",
      "original_position" : 82,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 70018324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145271944",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145274394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145274394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems the caller should be responsible for adding this if it's a WitnessV0ScriptHash? Like the others, this doesn't seem like wallet functionality to me.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-10-17T22:30:54Z",
      "diff_hunk" : "@@ -4093,3 +4095,82 @@ CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n     }\n     return CKeyID();\n }\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";\n+\n+OutputStyle ParseStyle(const std::string& style)\n+{\n+    if (style == STYLE_STRING_LEGACY) {\n+        return STYLE_LEGACY;\n+    } else if (style == STYLE_STRING_P2SH || style == \"default\") {\n+        return STYLE_P2SH;\n+    } else if (style == STYLE_STRING_SEGWIT) {\n+        return STYLE_SEGWIT;\n+    } else {\n+        return STYLE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatStyle(OutputStyle style)\n+{\n+    switch (style) {\n+    case STYLE_LEGACY: return STYLE_STRING_LEGACY;\n+    case STYLE_P2SH: return STYLE_STRING_P2SH;\n+    case STYLE_SEGWIT: return STYLE_STRING_SEGWIT;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputStyle style)\n+{\n+    switch (style) {\n+    case STYLE_LEGACY: return key.GetID();\n+    case STYLE_P2SH:\n+    case STYLE_SEGWIT: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(witprog)) return key.GetID();\n+        if (style == STYLE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForScript(const CScript& script, OutputStyle style)\n+{\n+    switch (style) {\n+    case STYLE_LEGACY:\n+    case STYLE_P2SH:\n+        return CScriptID(script);\n+    case STYLE_SEGWIT: {\n+        CTxDestination witdest = WitnessV0ScriptHash(Hash(script.begin(), script.end()));\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(witprog)) return CScriptID(script);\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145274394",
      "id" : 145274394,
      "original_commit_id" : "f542daeb6986b0cc3ea796f177f20739706eddf2",
      "original_position" : 113,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 70018324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145274394",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The wallet probably needs to be able to generate both `p2sh` and `bech32` addresses, depending on who the user needs to communicate the address to. In fact, the UI might need to display both at the same time. \r\n\r\nFor example, I might send an email requesting payment to a `bech32` address, and telling the recipient to use the `p2sh` address only if their wallet doesn't support the new format. A backwards compatible QR code could contain (admittedly ad hoc): `bitcoin:3ba1...?amount=0.01&bech32=bc1qw5...`.\r\n\r\nSo rather than `-addressstyle`, isn't it better to make address style an argument for calls to `getnewaddress` and `createmultisigaddress`?\r\n\r\nI think this was brought up elsewhere, but If `bech32` is the default, wouldn't that confuse RPC consumers, especially if they do any input validation? `p2sh` seems like a safer default.\r\nAlternatively, perhaps the default can be `bech32`, but with ~a `configure` flag~ _command line option_ to use a different default (and a warning in the release notes). It would be nice if RPC calls were versioned.",
      "created_at" : "2017-10-20T12:28:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-338192534",
      "id" : 338192534,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-10-20T12:41:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338192534",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@Sjors There is an RPC argument added to address-creating RPCs to override the default.",
      "created_at" : "2017-10-20T12:30:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-338193000",
      "id" : 338193000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-10-20T12:30:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338193000",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa I see, perhaps `-addressstyle` should be `-addressstyledefault` instead to make that more clear?",
      "created_at" : "2017-10-20T12:40:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-338195284",
      "id" : 338195284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-10-20T12:40:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338195284",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebase_me_pls",
      "created_at" : "2017-11-07T22:18:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-342642285",
      "id" : 342642285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-07T22:18:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342642285",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "rebased_it",
      "created_at" : "2017-11-08T00:19:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-342668198",
      "id" : 342668198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-08T00:19:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342668198",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r150243374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150243374"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not  native speaker, but \"What style change to use\" seems like broken English to me. Shouldn't it be something like \"Which style of change addresses to use\"?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-10T14:09:25Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addressstyle\", _(\"What style addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"p2sh\\\")\"));\n+    strUsage += HelpMessageOpt(\"-changestyle\", _(\"What style change to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\"), default: same as -addressstyle\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r150243374",
      "id" : 150243374,
      "original_commit_id" : "2cd3e3259c5813b4d1a295549e02a2e08ec459d9",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 75766547,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150243374",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/425166?v=4",
         "events_url" : "https://api.github.com/users/flack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/flack/followers",
         "following_url" : "https://api.github.com/users/flack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/flack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/flack",
         "id" : 425166,
         "login" : "flack",
         "organizations_url" : "https://api.github.com/users/flack/orgs",
         "received_events_url" : "https://api.github.com/users/flack/received_events",
         "repos_url" : "https://api.github.com/users/flack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/flack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/flack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/flack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r150337564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150337564"
         }
      },
      "author_association" : "NONE",
      "body" : "Native English speaker here.  Here's how I'd write these two:\r\n\r\n\"Receiving address type (...)\"\r\n\"Change address type (...)\"\r\n\r\nLegacy/p2sh/bech32 feel like types to me, not styles.  Though at that point you'd have to change the command line parameters as well.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-10T21:05:37Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addressstyle\", _(\"What style addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"p2sh\\\")\"));\n+    strUsage += HelpMessageOpt(\"-changestyle\", _(\"What style change to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\"), default: same as -addressstyle\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r150337564",
      "id" : 150337564,
      "in_reply_to_id" : 150243374,
      "original_commit_id" : "2cd3e3259c5813b4d1a295549e02a2e08ec459d9",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 75880846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150337564",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1290510?v=4",
         "events_url" : "https://api.github.com/users/CydeWeys/events{/privacy}",
         "followers_url" : "https://api.github.com/users/CydeWeys/followers",
         "following_url" : "https://api.github.com/users/CydeWeys/following{/other_user}",
         "gists_url" : "https://api.github.com/users/CydeWeys/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/CydeWeys",
         "id" : 1290510,
         "login" : "CydeWeys",
         "organizations_url" : "https://api.github.com/users/CydeWeys/orgs",
         "received_events_url" : "https://api.github.com/users/CydeWeys/received_events",
         "repos_url" : "https://api.github.com/users/CydeWeys/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/CydeWeys/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/CydeWeys/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/CydeWeys"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "What is the reasoning for having `addressstyle` and `changestyle` as separate options; that is, what is the envisaged use case for setting these defaults to different things?",
      "created_at" : "2017-11-11T16:19:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-343675953",
      "id" : 343675953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-11T16:19:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343675953",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/17520?v=4",
         "events_url" : "https://api.github.com/users/invariant/events{/privacy}",
         "followers_url" : "https://api.github.com/users/invariant/followers",
         "following_url" : "https://api.github.com/users/invariant/following{/other_user}",
         "gists_url" : "https://api.github.com/users/invariant/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/invariant",
         "id" : 17520,
         "login" : "invariant",
         "organizations_url" : "https://api.github.com/users/invariant/orgs",
         "received_events_url" : "https://api.github.com/users/invariant/received_events",
         "repos_url" : "https://api.github.com/users/invariant/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/invariant/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/invariant/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/invariant"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Milestone 0.15.2 was removed, does it mean it goes straight to 0.16 only? Thanks.",
      "created_at" : "2017-11-12T15:55:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-343746694",
      "id" : 343746694,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-12T15:55:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343746694",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11314444?v=4",
         "events_url" : "https://api.github.com/users/martin-lizner/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martin-lizner/followers",
         "following_url" : "https://api.github.com/users/martin-lizner/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martin-lizner/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martin-lizner",
         "id" : 11314444,
         "login" : "martin-lizner",
         "organizations_url" : "https://api.github.com/users/martin-lizner/orgs",
         "received_events_url" : "https://api.github.com/users/martin-lizner/received_events",
         "repos_url" : "https://api.github.com/users/martin-lizner/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martin-lizner/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martin-lizner/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martin-lizner"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes\n\nOn Nov 12, 2017 10:55, \"Martin LÃÂ­zner\" <notifications@github.com> wrote:\n\n> Milestone 0.15.2 was removed, does it mean it goes straight to 0.16 only?\n> Thanks.\n>\n> Ã¢ÂÂ\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-343746694>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AGGmv7mc0a0e0Y92zjU3aPymx17snBlFks5s1xUIgaJpZM4PjkGp>\n> .\n>\n",
      "created_at" : "2017-11-12T16:42:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-343749957",
      "id" : 343749957,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-12T16:42:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343749957",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Does this mean we will have segwit in GUI and bech32 in around May? If that so, would you pls comment on why 0.15.2 milestone was dropped?",
      "created_at" : "2017-11-12T18:45:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-343757936",
      "id" : 343757936,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-12T18:45:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343757936",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11314444?v=4",
         "events_url" : "https://api.github.com/users/martin-lizner/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martin-lizner/followers",
         "following_url" : "https://api.github.com/users/martin-lizner/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martin-lizner/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martin-lizner",
         "id" : 11314444,
         "login" : "martin-lizner",
         "organizations_url" : "https://api.github.com/users/martin-lizner/orgs",
         "received_events_url" : "https://api.github.com/users/martin-lizner/received_events",
         "repos_url" : "https://api.github.com/users/martin-lizner/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martin-lizner/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martin-lizner/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martin-lizner"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The 0.15.2 milestone would only delay segwit wallet. The current plan is to\nget the segwit wallet out as soon as it is ready with the next major\nrelease.\n\nOn Sun, Nov 12, 2017 at 6:45 PM, Martin LÃÂ­zner <notifications@github.com>\nwrote:\n\n> Does this mean we will have segwit in GUI and bech32 in around May? If\n> that so, would you pls comment on why 0.15.2 milestone was dropped?\n>\n> Ã¢ÂÂ\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-343757936>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AGGmv9SEn6dU3nzJU7gZVx9z2cf7jbCTks5s1zzYgaJpZM4PjkGp>\n> .\n>\n",
      "created_at" : "2017-11-13T01:27:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-343786495",
      "id" : 343786495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-13T01:27:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343786495",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "I've made a writeup about wallet design in the future, and how SegWit support now interacts with it: https://gist.github.com/sipa/125cfa1615946d0c3f3eec2ad7f250a2\r\n\r\nThe PR currently only implements solution (I.1) from the document, but I'm happy to reconsider.",
      "created_at" : "2017-11-16T19:41:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-345039809",
      "id" : 345039809,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-16T19:41:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345039809",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820106"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820106"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will add those later.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:41:15Z",
      "diff_hunk" : "@@ -168,6 +170,22 @@ bool WalletParameterInteraction()\n     bSpendZeroConfChange = gArgs.GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n     fWalletRbf = gArgs.GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n+    std::string style = gArgs.GetArg(\"-addressstyle\", \"default\");\n+    OutputStyle parsed_style = ParseStyle(style);\n+    if (parsed_style == STYLE_NONE) {\n+        return InitError(strprintf(_(\"Unknown address style '%s'\"), style));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820106",
      "id" : 151820106,
      "in_reply_to_id" : 141033697,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 16,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 77597987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820106",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820127"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will add those later.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:41:25Z",
      "diff_hunk" : "@@ -168,6 +170,22 @@ bool WalletParameterInteraction()\n     bSpendZeroConfChange = gArgs.GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n     fWalletRbf = gArgs.GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n+    std::string style = gArgs.GetArg(\"-addressstyle\", \"default\");\n+    OutputStyle parsed_style = ParseStyle(style);\n+    if (parsed_style == STYLE_NONE) {\n+        return InitError(strprintf(_(\"Unknown address style '%s'\"), style));\n+    } else {\n+        address_style = parsed_style;\n+    }\n+\n+    style = gArgs.GetArg(\"-changestyle\", style);\n+    parsed_style = ParseStyle(style);\n+    if (parsed_style == STYLE_NONE) {\n+        return InitError(strprintf(_(\"Unknown change style '%s'\"), style));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820127",
      "id" : 151820127,
      "in_reply_to_id" : 141034833,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 24,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 77598012,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820127",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820167"
         }
      },
      "author_association" : "OWNER",
      "body" : "Added.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:41:53Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"style\\\"          (string, optional) The address style to use. Valid options are 'p2pkh', 'p2sh_p2wpkh', and 'p2wpkh'\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820167",
      "id" : 151820167,
      "in_reply_to_id" : 141034548,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77598056,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820167",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820189"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will add later.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:42:09Z",
      "diff_hunk" : "@@ -157,6 +158,14 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n     if (!request.params[0].isNull())\n         strAccount = AccountFromValue(request.params[0]);\n \n+    OutputStyle style = address_style;\n+    if (!request.params[1].isNull()) {\n+        style = ParseStyle(request.params[1].get_str());\n+        if (style == STYLE_NONE) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Unknown address style '%s'\", request.params[1].get_str()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820189",
      "id" : 151820189,
      "in_reply_to_id" : 141034483,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 26,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77598087,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820189",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820217"
         }
      },
      "author_association" : "OWNER",
      "body" : "Added.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:42:34Z",
      "diff_hunk" : "@@ -225,11 +234,13 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 0)\n+    if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n-            \"getrawchangeaddress\\n\"\n+            \"getrawchangeaddress ( \\\"style\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address, for receiving change.\\n\"\n             \"This is for use with raw transactions, NOT normal use.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"style\\\"          (string, optional) The address style to use. Valid options are 'p2pkh', 'p2sh_p2wpkh', and 'p2wpkh'\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820217",
      "id" : 151820217,
      "in_reply_to_id" : 141034121,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 69,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77598122,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820217",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820849"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixing.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:50:07Z",
      "diff_hunk" : "@@ -243,16 +254,24 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         pwallet->TopUpKeyPool();\n     }\n \n+    OutputStyle style = change_style;\n+    if (!request.params[0].isNull()) {\n+        style = ParseStyle(request.params[1].get_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820849",
      "id" : 151820849,
      "in_reply_to_id" : 141034255,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 79,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77598834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820849",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820865"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820865"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will add.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:50:19Z",
      "diff_hunk" : "@@ -243,16 +254,24 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         pwallet->TopUpKeyPool();\n     }\n \n+    OutputStyle style = change_style;\n+    if (!request.params[0].isNull()) {\n+        style = ParseStyle(request.params[1].get_str());\n+        if (style == STYLE_NONE) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Unknown address style '%s'\", request.params[0].get_str()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820865",
      "id" : 151820865,
      "in_reply_to_id" : 141034981,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 81,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77598854,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820865",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820901"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820901"
         }
      },
      "author_association" : "OWNER",
      "body" : "I think it's very cheap - look at the tag, and return the argument with a cast.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:50:53Z",
      "diff_hunk" : "@@ -4051,3 +4051,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820901",
      "id" : 151820901,
      "in_reply_to_id" : 140994498,
      "original_commit_id" : "1ae94623eceb96728b6a791732776d01a455f83f",
      "original_position" : 18,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77598898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820901",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820911"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820911"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:51:04Z",
      "diff_hunk" : "@@ -4072,3 +4074,82 @@ CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n     }\n     return CKeyID();\n }\n+\n+static const std::string STYLE_STRING_NONE = \"\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820911",
      "id" : 151820911,
      "in_reply_to_id" : 140995719,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 41,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77598908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820911",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820922"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:51:11Z",
      "diff_hunk" : "@@ -133,8 +133,15 @@ def run_test(self):\n             newaddress = self.nodes[i].getnewaddress()\n             self.pubkey.append(self.nodes[i].validateaddress(newaddress)[\"pubkey\"])\n             multiaddress = self.nodes[i].addmultisigaddress(1, [self.pubkey[-1]])\n-            self.nodes[i].addwitnessaddress(newaddress)\n-            self.nodes[i].addwitnessaddress(multiaddress)\n+            multiscript = CScript([OP_1, hex_str_to_bytes(self.pubkey[-1]), OP_1, OP_CHECKMULTISIG])\n+            p2sh_addr = self.nodes[i].addwitnessaddress(newaddress, True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820922",
      "id" : 151820922,
      "in_reply_to_id" : 141035708,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 63,
      "path" : "test/functional/segwit.py",
      "position" : null,
      "pull_request_review_id" : 77598915,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820922",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820936"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820936"
         }
      },
      "author_association" : "OWNER",
      "body" : "Added explanation of defaults.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:51:24Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addressstyle\", _(\"What style addresses to use (\\\"p2pkh\\\", \\\"p2sh_p2wpkh\\\", \\\"p2wpkh\\\")\"));\n+    strUsage += HelpMessageOpt(\"-changestyle\", _(\"What style change to use (\\\"p2pkh\\\", \\\"p2sh_p2wpkh\\\", \\\"p2wpkh\\\")\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820936",
      "id" : 151820936,
      "in_reply_to_id" : 141172352,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 77598935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820936",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820954"
         }
      },
      "author_association" : "OWNER",
      "body" : "I think that should be done separately.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T00:51:35Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"style\\\"          (string, optional) The address style to use. Valid options are 'p2pkh', 'p2sh_p2wpkh', and 'p2wpkh'\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151820954",
      "id" : 151820954,
      "in_reply_to_id" : 141173466,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77598954,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151820954",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824376"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824376"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T01:51:05Z",
      "diff_hunk" : "@@ -64,6 +67,13 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n             obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n             obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n             UniValue a(UniValue::VARR);\n+            if (whichType == TX_WITNESS_V0_KEYHASH || whichType == TX_WITNESS_V0_SCRIPTHASH) {\n+                UniValue subobj = boost::apply_visitor(*this, addresses[0]);\n+                obj.push_back(Pair(\"embedded\", std::move(subobj)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824376",
      "id" : 151824376,
      "in_reply_to_id" : 141910029,
      "original_commit_id" : "a3a79cdb2193facac697857a472fe90c235f7c82",
      "original_position" : 30,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 77602754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824376",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824518"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed. Standardized on 'legacy', 'p2sh', and 'bech32'. It's not entirely accurate, as P2SH is a scriptPubKey type and not its address encoding, but meh - they're probably the most recognizable names.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T01:54:36Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"style\\\"          (string, optional) The address style to use. Valid options are 'p2pkh', 'p2sh_p2wpkh', and 'p2wpkh'\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824518",
      "id" : 151824518,
      "in_reply_to_id" : 141964928,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77602879,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824518",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824578"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T01:56:28Z",
      "diff_hunk" : "@@ -1234,7 +1254,7 @@ UniValue addwitnessaddress(const JSONRPCRequest& request)\n \n     {\n         LOCK(cs_main);\n-        if (!IsWitnessEnabled(chainActive.Tip(), Params().GetConsensus()) && !gArgs.GetBoolArg(\"-walletprematurewitness\", false)) {\n+        if (!IsWitnessEnabled(pindexBestHeader, Params().GetConsensus()) && !gArgs.GetBoolArg(\"-walletprematurewitness\", false)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824578",
      "id" : 151824578,
      "in_reply_to_id" : 141967056,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 121,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77602941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824578",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824607"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed as a global now, as we don't really have a way to configure it per wallet. Can be revised if there ever is.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T01:57:05Z",
      "diff_hunk" : "@@ -43,6 +43,8 @@ CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = DEFAULT_TX_CONFIRM_TARGET;\n bool bSpendZeroConfChange = DEFAULT_SPEND_ZEROCONF_CHANGE;\n bool fWalletRbf = DEFAULT_WALLET_RBF;\n+OutputStyle address_style = STYLE_P2SH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824607",
      "id" : 151824607,
      "in_reply_to_id" : 141965443,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77602967,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824607",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824611"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T01:57:17Z",
      "diff_hunk" : "@@ -43,6 +43,8 @@ CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n unsigned int nTxConfirmTarget = DEFAULT_TX_CONFIRM_TARGET;\n bool bSpendZeroConfChange = DEFAULT_SPEND_ZEROCONF_CHANGE;\n bool fWalletRbf = DEFAULT_WALLET_RBF;\n+OutputStyle address_style = STYLE_P2SH;\n+OutputStyle change_style = STYLE_P2SH;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824611",
      "id" : 151824611,
      "in_reply_to_id" : 141967691,
      "original_commit_id" : "20da3447269696a3505b061852771d0bb11d6779",
      "original_position" : 5,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77602972,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824611",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824643"
         }
      },
      "author_association" : "OWNER",
      "body" : "I've always considered P2WPKH as specifically referring to v0 20-byte witness programs, and P2WSH as v0 32-byte ones. We'll need to come up with even clumsier names later ;)",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T01:58:07Z",
      "diff_hunk" : "@@ -4061,3 +4061,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824643",
      "id" : 151824643,
      "in_reply_to_id" : 141960988,
      "original_commit_id" : "7f88d8ad7796c0f6d1e80d11943c19f0af2cda62",
      "original_position" : 7,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77603011,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824643",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824692"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T01:59:08Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824692",
      "id" : 151824692,
      "in_reply_to_id" : 144193626,
      "original_commit_id" : "5632374f2f71bca384ceed07ca6842fd87102346",
      "original_position" : 8,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77603066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824692",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824702"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed, I think it's consistent now.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T01:59:25Z",
      "diff_hunk" : "@@ -4050,3 +4052,114 @@ bool CMerkleTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     return ::AcceptToMemoryPool(mempool, state, tx, nullptr /* pfMissingInputs */,\n                                 nullptr /* plTxnReplaced */, false /* bypass_limits */, nAbsurdFee);\n }\n+\n+bool CWallet::IsSolvable(const CScript& script) const\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(this);\n+    SignatureData sigs;\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n+}\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {\n+        return boost::get<CKeyID>(dest);\n+    }\n+    if (boost::get<WitnessV0KeyHash>(&dest)) {\n+        return CKeyID(boost::get<WitnessV0KeyHash>(dest));\n+    }\n+    if (boost::get<CScriptID>(&dest)) {\n+        CScript script;\n+        CTxDestination inner_dest;\n+        if (GetCScript(boost::get<CScriptID>(dest), script) && ExtractDestination(script, inner_dest)) {\n+            if (boost::get<WitnessV0KeyHash>(&inner_dest)) {\n+                return CKeyID(boost::get<WitnessV0KeyHash>(inner_dest));\n+            }\n+        }\n+    }\n+    return CKeyID();\n+}\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151824702",
      "id" : 151824702,
      "in_reply_to_id" : 144192744,
      "original_commit_id" : "5632374f2f71bca384ceed07ca6842fd87102346",
      "original_position" : 76,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77603079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151824702",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151825021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151825021"
         }
      },
      "author_association" : "OWNER",
      "body" : "Cool, done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T02:08:17Z",
      "diff_hunk" : "@@ -73,8 +73,19 @@ class CNoDestination {\n     friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n };\n \n-struct WitnessV0ScriptHash : public uint256 {};\n-struct WitnessV0KeyHash : public uint160 {};\n+struct WitnessV0ScriptHash : public uint256\n+{\n+public:\n+    WitnessV0ScriptHash() : uint256() {}\n+    WitnessV0ScriptHash(const uint256& in) : uint256(in) {}\n+};\n+\n+struct WitnessV0KeyHash : public uint160\n+{\n+public:\n+    WitnessV0KeyHash() : uint160() {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151825021",
      "id" : 151825021,
      "in_reply_to_id" : 145239469,
      "original_commit_id" : "fb0361d74a578c626b8876e71ad35775d718aed9",
      "original_position" : 16,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 77603455,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151825021",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151825641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151825641"
         }
      },
      "author_association" : "OWNER",
      "body" : "Ugh, thanks for pointing that out.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T02:27:28Z",
      "diff_hunk" : "@@ -13,6 +13,18 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::AddRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH\n+    // outputs.\n+    if (pubkey.IsCompressed()) {\n+        CScript script = CScript() << OP_0 << ToByteVector(pubkey.GetID());\n+        // This does not use AddCScript, as it may be overridden.\n+        mapScripts[CScriptID(script)] = std::move(script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151825641",
      "id" : 151825641,
      "in_reply_to_id" : 145261446,
      "original_commit_id" : "b7209bdc9007b0f6c22403ab042dd474eb8ef2c5",
      "original_position" : 12,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 77604118,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151825641",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151825660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151825660"
         }
      },
      "author_association" : "OWNER",
      "body" : "Yes, tests that expect to see a `pubkey` field when calling `validateaddress` on the output of `getnewaddress`.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T02:28:10Z",
      "diff_hunk" : "@@ -67,6 +67,13 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n             obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n             obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n             UniValue a(UniValue::VARR);\n+            if (whichType == TX_WITNESS_V0_KEYHASH || whichType == TX_WITNESS_V0_SCRIPTHASH) {\n+                UniValue subobj = boost::apply_visitor(*this, addresses[0]);\n+                obj.push_back(Pair(\"embedded\", std::move(subobj)));\n+                if (subobj.exists(\"pubkey\")) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151825660",
      "id" : 151825660,
      "in_reply_to_id" : 145245638,
      "original_commit_id" : "97f4fc173dda51f21cc092b9b29a9ea4b208f8e2",
      "original_position" : 7,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 77604147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151825660",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151827221"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151827221"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T03:31:55Z",
      "diff_hunk" : "@@ -4072,3 +4072,24 @@ bool CWallet::IsSolvable(const CScript& script) const\n     SignatureData sigs;\n     return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));\n }\n+\n+CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.\n+    if (boost::get<CKeyID>(&dest)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151827221",
      "id" : 151827221,
      "in_reply_to_id" : 145255319,
      "original_commit_id" : "8c55a70cebeb4e18c686c93d96dde95deed6dc0e",
      "original_position" : 8,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77605761,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151827221",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151827229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151827229"
         }
      },
      "author_association" : "OWNER",
      "body" : "Moved to script/signer.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T03:32:16Z",
      "diff_hunk" : "@@ -4061,3 +4061,14 @@ bool CMerkleTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     return ::AcceptToMemoryPool(mempool, state, tx, nullptr /* pfMissingInputs */,\n                                 nullptr /* plTxnReplaced */, false /* bypass_limits */, nAbsurdFee);\n }\n+\n+bool CWallet::IsSolvable(const CScript& script) const\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(this);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151827229",
      "id" : 151827229,
      "in_reply_to_id" : 145270452,
      "original_commit_id" : "4bc304c9fa8657bc5a025fecfa7fa40e30ea7a20",
      "original_position" : 11,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77605771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151827229",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151827247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151827247"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done. IsSolvable is moved to script/sign, GetDestinationForKey is moved to keystore.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T03:33:07Z",
      "diff_hunk" : "@@ -4093,3 +4095,82 @@ CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n     }\n     return CKeyID();\n }\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";\n+\n+OutputStyle ParseStyle(const std::string& style)\n+{\n+    if (style == STYLE_STRING_LEGACY) {\n+        return STYLE_LEGACY;\n+    } else if (style == STYLE_STRING_P2SH || style == \"default\") {\n+        return STYLE_P2SH;\n+    } else if (style == STYLE_STRING_SEGWIT) {\n+        return STYLE_SEGWIT;\n+    } else {\n+        return STYLE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatStyle(OutputStyle style)\n+{\n+    switch (style) {\n+    case STYLE_LEGACY: return STYLE_STRING_LEGACY;\n+    case STYLE_P2SH: return STYLE_STRING_P2SH;\n+    case STYLE_SEGWIT: return STYLE_STRING_SEGWIT;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputStyle style)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151827247",
      "id" : 151827247,
      "in_reply_to_id" : 145271944,
      "original_commit_id" : "f542daeb6986b0cc3ea796f177f20739706eddf2",
      "original_position" : 82,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77605798,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151827247",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151827322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151827322"
         }
      },
      "author_association" : "OWNER",
      "body" : "Yes, it's ugly. I don't immediately see a nicer solution though, except for a callback to pass in, or duplicating part of this function just to find the correct program.\r\n\r\nNote that if it weren't for the implicitly-know-about-witness-versions-of-keys logic, an equivalent line would be needed in GetDestinationForKey or its callers.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T03:37:07Z",
      "diff_hunk" : "@@ -4093,3 +4095,82 @@ CKeyID CWallet::GetKeyForDestination(const CTxDestination& dest) const\n     }\n     return CKeyID();\n }\n+\n+static const std::string STYLE_STRING_NONE = \"\";\n+static const std::string STYLE_STRING_LEGACY = \"legacy\";\n+static const std::string STYLE_STRING_P2SH = \"p2sh\";\n+static const std::string STYLE_STRING_SEGWIT = \"segwit\";\n+\n+OutputStyle ParseStyle(const std::string& style)\n+{\n+    if (style == STYLE_STRING_LEGACY) {\n+        return STYLE_LEGACY;\n+    } else if (style == STYLE_STRING_P2SH || style == \"default\") {\n+        return STYLE_P2SH;\n+    } else if (style == STYLE_STRING_SEGWIT) {\n+        return STYLE_SEGWIT;\n+    } else {\n+        return STYLE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatStyle(OutputStyle style)\n+{\n+    switch (style) {\n+    case STYLE_LEGACY: return STYLE_STRING_LEGACY;\n+    case STYLE_P2SH: return STYLE_STRING_P2SH;\n+    case STYLE_SEGWIT: return STYLE_STRING_SEGWIT;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputStyle style)\n+{\n+    switch (style) {\n+    case STYLE_LEGACY: return key.GetID();\n+    case STYLE_P2SH:\n+    case STYLE_SEGWIT: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(witprog)) return key.GetID();\n+        if (style == STYLE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForScript(const CScript& script, OutputStyle style)\n+{\n+    switch (style) {\n+    case STYLE_LEGACY:\n+    case STYLE_P2SH:\n+        return CScriptID(script);\n+    case STYLE_SEGWIT: {\n+        CTxDestination witdest = WitnessV0ScriptHash(Hash(script.begin(), script.end()));\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(witprog)) return CScriptID(script);\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151827322",
      "id" : 151827322,
      "in_reply_to_id" : 145274394,
      "original_commit_id" : "f542daeb6986b0cc3ea796f177f20739706eddf2",
      "original_position" : 113,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 77605881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151827322",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@invariant You may wish to use bech32 as change style as soon as possible (for cost) or once it's used sufficiently on the network (for privacy), even if your recipients don't support bech32 yet.",
      "created_at" : "2017-11-18T03:38:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-345415518",
      "id" : 345415518,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-18T03:38:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345415518",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Rebased and addressed my review comments.",
      "created_at" : "2017-11-18T03:59:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-345416387",
      "id" : 345416387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-18T03:59:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345416387",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151830086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151830086"
         }
      },
      "author_association" : "OWNER",
      "body" : "Changed to address_type and change_type, and edited the comment language.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T06:09:18Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addressstyle\", _(\"What style addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"p2sh\\\")\"));\n+    strUsage += HelpMessageOpt(\"-changestyle\", _(\"What style change to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\"), default: same as -addressstyle\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151830086",
      "id" : 151830086,
      "in_reply_to_id" : 150243374,
      "original_commit_id" : "2cd3e3259c5813b4d1a295549e02a2e08ec459d9",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 77608524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151830086",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151837409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151837409"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can you add: \"P2WPKH and P2SH-P2WPKH have the same redeem script.\"?\r\n\r\nIt took me a while to realize that.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T13:10:47Z",
      "diff_hunk" : "@@ -13,6 +13,19 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::AddRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151837409",
      "id" : 151837409,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 7,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 77615804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151837409",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151838154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151838154"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe add for redundancy: \"Does not support P2SH and, because multi-sig could result in multiple CKeyID's.\"",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T13:40:27Z",
      "diff_hunk" : "@@ -138,3 +154,24 @@ bool CBasicKeyStore::HaveWatchOnly() const\n     LOCK(cs_KeyStore);\n     return (!setWatchOnly.empty());\n }\n+\n+CKeyID GetKeyForDestination(const CKeyStore& store, const CTxDestination& dest)\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151838154",
      "id" : 151838154,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 47,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 77615804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151838154",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151838468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151838468"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would it make sense to default `-changetype` to `bech32` if `-addresstype` is not specified? Or should we leave that for QT (since anyone using the RPC probably knows what they're doing)?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T14:03:54Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", _(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"p2sh\\\")\"));\n+    strUsage += HelpMessageOpt(\"-changetype\", _(\"What type of change outputs to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\"), default: same as -addresstype\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151838468",
      "id" : 151838468,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 77615804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151838468",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151845994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151845994"
         }
      },
      "author_association" : "OWNER",
      "body" : "That's not technically correct. P2WPKH doesn't have a redeemscript at all. However, our current IsMine logic requires the corresponding P2SH-P2WPKH redeemscript to be present in the wallet in order to accept payment even to P2WPKH outputs.\r\n\r\nFeel free to suggest better language here.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T20:13:01Z",
      "diff_hunk" : "@@ -13,6 +13,19 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::AddRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151845994",
      "id" : 151845994,
      "in_reply_to_id" : 151837409,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 7,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 77624503,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151845994",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151846058"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151846058"
         }
      },
      "author_association" : "OWNER",
      "body" : "I think that's not acceptable for privacy reasons until bech32 is common on the network.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T20:13:40Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", _(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"p2sh\\\")\"));\n+    strUsage += HelpMessageOpt(\"-changetype\", _(\"What type of change outputs to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\"), default: same as -addresstype\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151846058",
      "id" : 151846058,
      "in_reply_to_id" : 151838468,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 77624568,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151846058",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> I assume the goal of this PR isn't to change the GUI, but merely to make sure the QT doesn't break?\r\n\r\nExactly. In particular, we'll want bech32 error detection at some point when entering such addresses, but that's not a priority now.",
      "created_at" : "2017-11-18T20:15:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-345468205",
      "id" : 345468205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-18T20:15:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345468205",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151846476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151846476"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Apologies if this is slightly off-topic, but I can sort of see this comment ending up in an angry reddit post / powerpoint ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T20:30:49Z",
      "diff_hunk" : "@@ -356,8 +356,10 @@ def run_test(self):\n                 [p2wpkh, p2sh_p2wpkh, p2pk, p2pkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh] = self.p2pkh_address_to_script(v)\n                 # normal P2PKH and P2PK with compressed keys should always be spendable\n                 spendable_anytime.extend([p2pkh, p2pk])\n-                # P2SH_P2PK, P2SH_P2PKH, and witness with compressed keys are spendable after direct importaddress\n-                spendable_after_importaddress.extend([p2wpkh, p2sh_p2wpkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh])\n+                # P2SH_P2PK, P2SH_P2PKH with compressed keys are spendable after direct importaddress\n+                spendable_after_importaddress.extend([p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh])\n+                # P2WPKH and P2SH_P2WPKH are always spendable",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151846476",
      "id" : 151846476,
      "original_commit_id" : "2eda8768388bb32d70fa004b9c307814614c900f",
      "original_position" : 8,
      "path" : "test/functional/segwit.py",
      "position" : null,
      "pull_request_review_id" : 77624980,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151846476",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/425166?v=4",
         "events_url" : "https://api.github.com/users/flack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/flack/followers",
         "following_url" : "https://api.github.com/users/flack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/flack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/flack",
         "id" : 425166,
         "login" : "flack",
         "organizations_url" : "https://api.github.com/users/flack/orgs",
         "received_events_url" : "https://api.github.com/users/flack/received_events",
         "repos_url" : "https://api.github.com/users/flack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/flack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/flack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/flack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151847884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151847884"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Privacy is a good point. In that case, wouldn't it be better to use whichever address format is used for the recipient (unless the parameter is set)?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T21:13:57Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", _(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"p2sh\\\")\"));\n+    strUsage += HelpMessageOpt(\"-changetype\", _(\"What type of change outputs to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\"), default: same as -addresstype\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151847884",
      "id" : 151847884,
      "in_reply_to_id" : 151838468,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 77626353,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151847884",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151848021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151848021"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Your comment is probably a good start.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-18T21:14:51Z",
      "diff_hunk" : "@@ -13,6 +13,19 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::AddRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151848021",
      "id" : 151848021,
      "in_reply_to_id" : 151837409,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 7,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 77626493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151848021",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151852032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151852032"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not related to the change in this PR, but the `\"pubkey\"` should be optional as well because it isn't returned for `Witness*`",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T01:21:04Z",
      "diff_hunk" : "@@ -145,6 +152,7 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"    ]\\n\"\n             \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n             \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151852032",
      "id" : 151852032,
      "original_commit_id" : "dd94446cff5bea5ae14e86ff8b9e1e375c2424b5",
      "original_position" : 17,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 77630558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151852032",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151852127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151852127"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Or \"Only supports destinations which map to single public keys, i.e. P2PKH, P2WPKH, P2SH-P2WPKH.\" for more generality",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T01:29:06Z",
      "diff_hunk" : "@@ -138,3 +154,24 @@ bool CBasicKeyStore::HaveWatchOnly() const\n     LOCK(cs_KeyStore);\n     return (!setWatchOnly.empty());\n }\n+\n+CKeyID GetKeyForDestination(const CKeyStore& store, const CTxDestination& dest)\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151852127",
      "id" : 151852127,
      "in_reply_to_id" : 151838154,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 47,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 77630558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151852127",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151852351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151852351"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note compressed keys explicitly because all other comments do? Otherwise it could sound like it includes uncompressed keys. Or merge with the p2pkh and p2pk line above in the same way you did below?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T01:47:34Z",
      "diff_hunk" : "@@ -356,8 +356,10 @@ def run_test(self):\n                 [p2wpkh, p2sh_p2wpkh, p2pk, p2pkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh] = self.p2pkh_address_to_script(v)\n                 # normal P2PKH and P2PK with compressed keys should always be spendable\n                 spendable_anytime.extend([p2pkh, p2pk])\n-                # P2SH_P2PK, P2SH_P2PKH, and witness with compressed keys are spendable after direct importaddress\n-                spendable_after_importaddress.extend([p2wpkh, p2sh_p2wpkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh])\n+                # P2SH_P2PK, P2SH_P2PKH with compressed keys are spendable after direct importaddress\n+                spendable_after_importaddress.extend([p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh])\n+                # P2WPKH and P2SH_P2WPKH are always spendable",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151852351",
      "id" : 151852351,
      "original_commit_id" : "2eda8768388bb32d70fa004b9c307814614c900f",
      "original_position" : 8,
      "path" : "test/functional/segwit.py",
      "position" : null,
      "pull_request_review_id" : 77630558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151852351",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151852442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151852442"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This part of the test doesn't use `spendable_anytime`, only `spendable_after_addwitnessaddress`, so this change (and one below) could just be deleted completely I believe (unless there is a benefit for readability)",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T01:55:25Z",
      "diff_hunk" : "@@ -514,9 +516,8 @@ def run_test(self):\n                 premature_witaddress.append(script_to_p2sh(p2wsh))\n             else:\n                 [p2wpkh, p2sh_p2wpkh, p2pk, p2pkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh] = self.p2pkh_address_to_script(v)\n-                # P2WPKH, P2SH_P2WPKH are spendable after addwitnessaddress\n-                spendable_after_addwitnessaddress.extend([p2wpkh, p2sh_p2wpkh])\n-                premature_witaddress.append(script_to_p2sh(p2wpkh))\n+                # P2WPKH, P2SH_P2WPKH are always spendable\n+                spendable_anytime.extend([p2wpkh, p2sh_p2wpkh])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151852442",
      "id" : 151852442,
      "original_commit_id" : "2eda8768388bb32d70fa004b9c307814614c900f",
      "original_position" : 36,
      "path" : "test/functional/segwit.py",
      "position" : 88,
      "pull_request_review_id" : 77630558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151852442",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151876395"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151876395"
         }
      },
      "author_association" : "OWNER",
      "body" : "It is returned for P2WPKH and P2SH-P2WPKH, but not for anything that doesn't have a unique pubkey.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T20:18:06Z",
      "diff_hunk" : "@@ -145,6 +152,7 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"    ]\\n\"\n             \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n             \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151876395",
      "id" : 151876395,
      "in_reply_to_id" : 151852032,
      "original_commit_id" : "dd94446cff5bea5ae14e86ff8b9e1e375c2424b5",
      "original_position" : 17,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 77653775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151876395",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151877915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151877915"
         }
      },
      "author_association" : "OWNER",
      "body" : "Then quote the code around it, which uses the language w.r.t. P2PKH and others. It's obviously about outputs we have the private keys for.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T21:02:07Z",
      "diff_hunk" : "@@ -356,8 +356,10 @@ def run_test(self):\n                 [p2wpkh, p2sh_p2wpkh, p2pk, p2pkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh] = self.p2pkh_address_to_script(v)\n                 # normal P2PKH and P2PK with compressed keys should always be spendable\n                 spendable_anytime.extend([p2pkh, p2pk])\n-                # P2SH_P2PK, P2SH_P2PKH, and witness with compressed keys are spendable after direct importaddress\n-                spendable_after_importaddress.extend([p2wpkh, p2sh_p2wpkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh])\n+                # P2SH_P2PK, P2SH_P2PKH with compressed keys are spendable after direct importaddress\n+                spendable_after_importaddress.extend([p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh])\n+                # P2WPKH and P2SH_P2WPKH are always spendable",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151877915",
      "id" : 151877915,
      "in_reply_to_id" : 151846476,
      "original_commit_id" : "2eda8768388bb32d70fa004b9c307814614c900f",
      "original_position" : 8,
      "path" : "test/functional/segwit.py",
      "position" : null,
      "pull_request_review_id" : 77655139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151877915",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151878171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151878171"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T21:08:44Z",
      "diff_hunk" : "@@ -138,3 +154,24 @@ bool CBasicKeyStore::HaveWatchOnly() const\n     LOCK(cs_KeyStore);\n     return (!setWatchOnly.empty());\n }\n+\n+CKeyID GetKeyForDestination(const CKeyStore& store, const CTxDestination& dest)\n+{\n+    // Only supports P2PKH, P2WPKH, P2SH-P2WPKH.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151878171",
      "id" : 151878171,
      "in_reply_to_id" : 151838154,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 47,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 77655367,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151878171",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151878173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151878173"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T21:08:48Z",
      "diff_hunk" : "@@ -13,6 +13,19 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::AddRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151878173",
      "id" : 151878173,
      "in_reply_to_id" : 151837409,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 7,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 77655369,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151878173",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151878183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151878183"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T21:09:05Z",
      "diff_hunk" : "@@ -356,8 +356,10 @@ def run_test(self):\n                 [p2wpkh, p2sh_p2wpkh, p2pk, p2pkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh] = self.p2pkh_address_to_script(v)\n                 # normal P2PKH and P2PK with compressed keys should always be spendable\n                 spendable_anytime.extend([p2pkh, p2pk])\n-                # P2SH_P2PK, P2SH_P2PKH, and witness with compressed keys are spendable after direct importaddress\n-                spendable_after_importaddress.extend([p2wpkh, p2sh_p2wpkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh])\n+                # P2SH_P2PK, P2SH_P2PKH with compressed keys are spendable after direct importaddress\n+                spendable_after_importaddress.extend([p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh])\n+                # P2WPKH and P2SH_P2WPKH are always spendable",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151878183",
      "id" : 151878183,
      "in_reply_to_id" : 151852351,
      "original_commit_id" : "2eda8768388bb32d70fa004b9c307814614c900f",
      "original_position" : 8,
      "path" : "test/functional/segwit.py",
      "position" : null,
      "pull_request_review_id" : 77655378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151878183",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151878233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151878233"
         }
      },
      "author_association" : "OWNER",
      "body" : "Better: I've added code for testing spendable_anytime and solvable_anytime in these cases.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-19T21:10:33Z",
      "diff_hunk" : "@@ -514,9 +516,8 @@ def run_test(self):\n                 premature_witaddress.append(script_to_p2sh(p2wsh))\n             else:\n                 [p2wpkh, p2sh_p2wpkh, p2pk, p2pkh, p2sh_p2pk, p2sh_p2pkh, p2wsh_p2pk, p2wsh_p2pkh, p2sh_p2wsh_p2pk, p2sh_p2wsh_p2pkh] = self.p2pkh_address_to_script(v)\n-                # P2WPKH, P2SH_P2WPKH are spendable after addwitnessaddress\n-                spendable_after_addwitnessaddress.extend([p2wpkh, p2sh_p2wpkh])\n-                premature_witaddress.append(script_to_p2sh(p2wpkh))\n+                # P2WPKH, P2SH_P2WPKH are always spendable\n+                spendable_anytime.extend([p2wpkh, p2sh_p2wpkh])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r151878233",
      "id" : 151878233,
      "in_reply_to_id" : 151852442,
      "original_commit_id" : "2eda8768388bb32d70fa004b9c307814614c900f",
      "original_position" : 36,
      "path" : "test/functional/segwit.py",
      "position" : 88,
      "pull_request_review_id" : 77655424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151878233",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Addressed some comments, and added solution 3a from my writeup.",
      "created_at" : "2017-11-19T21:16:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-345550244",
      "id" : 345550244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-19T21:16:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345550244",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@MeshCollider The commits are in the right order, it's just GitHub that shows them by author date rather than dependency ordering.",
      "created_at" : "2017-11-19T21:17:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-345550330",
      "id" : 345550330,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-19T21:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345550330",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152033827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152033827"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove `.get_str()`?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-20T16:05:12Z",
      "diff_hunk" : "@@ -67,6 +67,13 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n             obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n             obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n             UniValue a(UniValue::VARR);\n+            if (whichType == TX_WITNESS_V0_KEYHASH || whichType == TX_WITNESS_V0_SCRIPTHASH) {\n+                UniValue subobj = boost::apply_visitor(*this, addresses[0]);\n+                if (subobj.exists(\"pubkey\")) {\n+                    obj.push_back(Pair(\"pubkey\", subobj[\"pubkey\"].get_str()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152033827",
      "id" : 152033827,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 7,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 77833289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152033827",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152033877"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152033877"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Missing test.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-20T16:05:22Z",
      "diff_hunk" : "@@ -67,6 +67,13 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n             obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n             obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n             UniValue a(UniValue::VARR);\n+            if (whichType == TX_WITNESS_V0_KEYHASH || whichType == TX_WITNESS_V0_SCRIPTHASH) {\n+                UniValue subobj = boost::apply_visitor(*this, addresses[0]);\n+                if (subobj.exists(\"pubkey\")) {\n+                    obj.push_back(Pair(\"pubkey\", subobj[\"pubkey\"].get_str()));\n+                }\n+                obj.push_back(Pair(\"embedded\", std::move(subobj)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152033877",
      "id" : 152033877,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 9,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 77833289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152033877",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152034843"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152034843"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Below you use `auto key = ...`. Keep it consistent?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-20T16:08:34Z",
      "diff_hunk" : "@@ -188,8 +196,11 @@ UniValue validateaddress(const JSONRPCRequest& request)\n         }\n         if (pwallet) {\n             const auto& meta = pwallet->mapKeyMetadata;\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            auto it = keyID ? meta.find(*keyID) : meta.end();\n+            CKeyID key = GetKeyForDestination(*pwallet, dest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152034843",
      "id" : 152034843,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 28,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 77833289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152034843",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152035884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152035884"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove else?\r\n```cpp\r\n\r\ng_address_type = ParseOutputType(gArgs.GetArg(\"-addresstype\", \"default\"));\r\nif (g_address_type == OUTPUT_TYPE_NONE) {\r\n    return InitError(strprintf(_(\"Unknown address type '%s'\"), gArgs.GetArg(\"-addresstype\")));\r\n}\r\n```",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-20T16:11:43Z",
      "diff_hunk" : "@@ -173,6 +175,22 @@ bool WalletParameterInteraction()\n     bSpendZeroConfChange = gArgs.GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n     fWalletRbf = gArgs.GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n+    std::string output_type = gArgs.GetArg(\"-addresstype\", \"default\");\n+    OutputType parsed_output_type = ParseOutputType(output_type);\n+    if (parsed_output_type == OUTPUT_TYPE_NONE) {\n+        return InitError(strprintf(_(\"Unknown address type '%s'\"), output_type));\n+    } else {\n+        g_address_type = parsed_output_type;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152035884",
      "id" : 152035884,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 18,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 77833289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152035884",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152036236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152036236"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same as above.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-20T16:12:52Z",
      "diff_hunk" : "@@ -173,6 +175,22 @@ bool WalletParameterInteraction()\n     bSpendZeroConfChange = gArgs.GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n     fWalletRbf = gArgs.GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n+    std::string output_type = gArgs.GetArg(\"-addresstype\", \"default\");\n+    OutputType parsed_output_type = ParseOutputType(output_type);\n+    if (parsed_output_type == OUTPUT_TYPE_NONE) {\n+        return InitError(strprintf(_(\"Unknown address type '%s'\"), output_type));\n+    } else {\n+        g_address_type = parsed_output_type;\n+    }\n+\n+    output_type = gArgs.GetArg(\"-changetype\", output_type);\n+    parsed_output_type = ParseOutputType(output_type);\n+    if (parsed_output_type == OUTPUT_TYPE_NONE) {\n+        return InitError(strprintf(_(\"Unknown change type '%s'\"), output_type));\n+    } else {\n+        g_change_type = parsed_output_type;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152036236",
      "id" : 152036236,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 26,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 77833289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152036236",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152036916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152036916"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Mirror argument name:\r\n```cpp\r\nOutputType address_type = g_address_type;\r\n```",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-20T16:15:02Z",
      "diff_hunk" : "@@ -157,6 +158,14 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n     if (!request.params[0].isNull())\n         strAccount = AccountFromValue(request.params[0]);\n \n+    OutputType output_type = g_address_type;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152036916",
      "id" : 152036916,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 22,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 22,
      "pull_request_review_id" : 77833289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152036916",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152037615"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152037615"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Mirror argument name:\r\n```cpp\r\nOutputType address_type = g_change_type;\r\n```",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-20T16:17:07Z",
      "diff_hunk" : "@@ -243,16 +254,24 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         pwallet->TopUpKeyPool();\n     }\n \n+    OutputType output_type = g_change_type;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152037615",
      "id" : 152037615,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 77,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 93,
      "pull_request_review_id" : 77833289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152037615",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152328510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152328510"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`default: ` should be inside `()`.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-21T16:27:16Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", _(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"p2sh\\\")\"));\n+    strUsage += HelpMessageOpt(\"-changetype\", _(\"What type of change outputs to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\"), default: same as -addresstype\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r152328510",
      "id" : 152328510,
      "in_reply_to_id" : 151838468,
      "original_commit_id" : "3c44c27398c8c5e80790f95c747d654cbe716b0c",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 78173753,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152328510",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested ACK d0c76c3.",
      "created_at" : "2017-11-23T15:30:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-346646997",
      "id" : 346646997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-23T15:30:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346646997",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r153278680"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153278680"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe this allows the user to put in \"default\", which then resolves to \"P2SH\" no matter what the actual default g_change_type is set to .",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-27T18:14:58Z",
      "diff_hunk" : "@@ -243,16 +254,24 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         pwallet->TopUpKeyPool();\n     }\n \n+    OutputType output_type = g_change_type;\n+    if (!request.params[0].isNull()) {\n+        output_type = ParseOutputType(request.params[0].get_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r153278680",
      "id" : 153278680,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 79,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 79261530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153278680",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r153278747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153278747"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe this allows the user to put in \"default\", which then resolves to \"P2SH\" no matter what the actual default `g_address_type` is set to .",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-27T18:15:11Z",
      "diff_hunk" : "@@ -157,6 +158,14 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n     if (!request.params[0].isNull())\n         strAccount = AccountFromValue(request.params[0]);\n \n+    OutputType output_type = g_address_type;\n+    if (!request.params[1].isNull()) {\n+        output_type = ParseOutputType(request.params[1].get_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r153278747",
      "id" : 153278747,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 24,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 79261530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153278747",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r153376955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153376955"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There's no indication as to what \"-addresstype\" currently is. How about something like:\r\n```c++\r\n\"... Default (*g_address_type string*) is set by -addresstype.\\n\"\r\n```",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-11-28T01:59:11Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" \\\"address_type\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"address_type\\\"   (string, optional) The address type to use. Options are \\\"legacy\\\", \\\"p2sh\\\", and \\\"bech32\\\". Default is set by -addresstype.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r153376955",
      "id" : 153376955,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 79372207,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153376955",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK after the current comments are addressed. Nice work :)",
      "created_at" : "2017-11-28T02:35:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-347394871",
      "id" : 347394871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-11-28T02:35:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347394871",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Addressed comments, and made some significant changes to the command line argument handling.\r\n\r\nI also added a commit that explicitly adds the P2SH-P2WPKH script for keypool keys that are seen used on the network. This means that downgrading after restoring a backup that needed recovery is supported.\r\n\r\nI would very much like to hear opinions about testing this. It's nontrivial as the complicated scenarios always involve downgrading/upgrading between versions - something our testing framework can't really deal with.",
      "created_at" : "2017-12-01T00:41:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-348367131",
      "id" : 348367131,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-01T00:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348367131",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r154244232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154244232"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-01T00:53:14Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" \\\"address_type\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"address_type\\\"   (string, optional) The address type to use. Options are \\\"legacy\\\", \\\"p2sh\\\", and \\\"bech32\\\". Default is set by -addresstype.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r154244232",
      "id" : 154244232,
      "in_reply_to_id" : 153376955,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 80379249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154244232",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r154244448"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154244448"
         }
      },
      "author_association" : "OWNER",
      "body" : "Choosing to use `auto` is a balance between clarity (by being explicit) and brevity/flexibility. I don't think using it here would be an improvement, but I added it on the line below (the iterator type was pretty long...).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-01T00:54:43Z",
      "diff_hunk" : "@@ -188,8 +196,11 @@ UniValue validateaddress(const JSONRPCRequest& request)\n         }\n         if (pwallet) {\n             const auto& meta = pwallet->mapKeyMetadata;\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            auto it = keyID ? meta.find(*keyID) : meta.end();\n+            CKeyID key = GetKeyForDestination(*pwallet, dest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r154244448",
      "id" : 154244448,
      "in_reply_to_id" : 152034843,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 28,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 80379490,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154244448",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r154244562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154244562"
         }
      },
      "author_association" : "OWNER",
      "body" : "I'm using 'output type' as the internal name, 'address type' is just used for the global/cmdline.\r\n\r\nPart of the reason for that is that I feel using the term 'address' for change is wrong. Addresses are things intended to be the destination of payments. Change outputs are only created and used internally.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-01T00:55:42Z",
      "diff_hunk" : "@@ -243,16 +254,24 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         pwallet->TopUpKeyPool();\n     }\n \n+    OutputType output_type = g_change_type;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r154244562",
      "id" : 154244562,
      "in_reply_to_id" : 152037615,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 77,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 93,
      "pull_request_review_id" : 80379615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154244562",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r154329194"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154329194"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`-addresstype`, not `-addressstyle`",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-01T11:54:43Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", strprintf(_(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));\n+    strUsage += HelpMessageOpt(\"-changetype\", strprintf(_(\"What type of change to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default is same as -addressstyle: \\\"%s\\\")\"), FormatOutputType(g_address_type)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r154329194",
      "id" : 154329194,
      "original_commit_id" : "b088ab65407346408ed45fdad637e54c591eb348",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 80476697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154329194",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I suggest updating the description of this pull request with a list of all known scenario's that need to be tested. Under each item, note if there any automated tests that cover it.\r\n\r\nIs it a safe assumption that testing on testnet is sufficient? Can anyone think of mainnet specific potential bug related to a change like this?\r\n\r\nCan we also assume no support for pre-release wallets after v0.15.1?\r\n\r\nTo save some permutations, are we worried `changetype` set to something to other than `addresstype`?\r\n\r\nHere's a start.\r\n\r\n## QT\r\nFull UI support is for another PR. Scope is to ensure nothing breaks.\r\n\r\n### New wallet, default settings\r\n\r\n* create payment request, address should start with 2 ([UI test](master/src/qt/test/wallettests.cpp#L207) only checks that button works, not the address type - but see RPC)\r\n* fund from external source\r\n  * tx should appear under Recent transactions\r\n  * popup notification should appear\r\n* send to self\r\n  * pending balance should be 0 (with or without RBF)\r\n  * total balance should be reduced only by the fee of this transaction\r\n* send to external P2SH address\r\n* send to external bech32 address\r\n\r\n### New wallet `-addresstype=bech32`\r\n(there's no bech32 compatible faucet, so just copy-paste a bech32 receive address and relaunch with the normal address type to fund it)\r\n* ...\r\n\r\n### Existing HD wallet\r\n* ...\r\n\r\n### Existing non-HD wallet\r\n* ...\r\n\r\n### Existing wallet that used `getwitnessaddress`\r\n\r\n## RPC\r\n### New wallet, default settings\r\n* create new address, should start with 2 ([link to RPC test])\r\n\r\n### New wallet `-addresstype=bech32`\r\n* ...\r\n\r\n### Existing HD wallet\r\n* ...\r\n\r\n### Existing non-HD wallet\r\n* ...\r\n\r\n## Issues I'm seeing:\r\n\r\n- [x] (Pending) balance is zero (seems fixed with #11839)\r\n<img width=\"1020\" alt=\"testnet 0 balance\" src=\"https://user-images.githubusercontent.com/10217/33481408-a01d546c-d694-11e7-97e6-cdc28757ca9a.png\">\r\nNot sure if this is intended / existing behavior. I received coins on a P2SH address, then spent some of it to another P2SH address in the wallet. That transaction is not confirmed yet. I would expect this balance to be pending. (will retest after #11839)\r\n\r\nI then sent more funds from an external source:\r\n<img width=\"1006\" alt=\"testnet balance\" src=\"https://user-images.githubusercontent.com/10217/33482147-f4321760-d697-11e7-9967-1090e6009e9e.png\">\r\nThe new funds show up under pending. Suddenly the total balance is correct again.\r\n\r\nWith bech32 I'm seeing something slightly different:\r\n<img width=\"506\" alt=\"bech32\" src=\"https://user-images.githubusercontent.com/10217/33487995-7e4c193e-d6af-11e7-8900-6009c1124819.png\">\r\n- [x] This time the total balance is correct, but the pending balance should be 0.1 BTC, since that transaction to myself is still unconfirmed (I didn't use RBF).  (seems fixed with #11839)\r\n\r\n- [x] ~\"unknown new rules activated (version bit 1)\"~ (happens on master as well, so unrelated)\r\n\r\n- [x] ~I didn't see a popup when transaction arrived (~maybe I missed it~ I can reproduce this)~ (not related, see #11840)",
      "created_at" : "2017-12-01T12:27:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-348482391",
      "id" : 348482391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-11T11:29:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348482391",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@Sjors Thanks for the UI testing! I can't really explain what you're seeing, but note that sends-to-self always behave somewhat as an edge-case (as they're both from-self and to-self). Have a look at the `address_type.py` test I added, which acts entirely as expected, with 16 combinations of sends/receives between address/change types.",
      "created_at" : "2017-12-06T06:04:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-349544345",
      "id" : 349544345,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-06T06:04:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349544345",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155266683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155266683"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Doesn't the test framework already give you plenty of mature coins out of the box? cc @jnewbery ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-06T15:22:17Z",
      "diff_hunk" : "@@ -0,0 +1,41 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=bech32\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(120)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155266683",
      "id" : 155266683,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 16,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 81556928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155266683",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155269450"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155269450"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should `getunconfirmedbalance` be the same as what QT displays as balance under \"Pending\"? If so, what could explain that the UI shows different numbers despite these tests passing? ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-06T15:31:14Z",
      "diff_hunk" : "@@ -0,0 +1,41 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=bech32\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(120)\n+        self.sync_all()\n+\n+        for c in range(4):\n+            for n in range(4):\n+                old_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                to_send = (old_balances[n] / 11).quantize(Decimal(\"0.00000001\"))\n+                sends = {}\n+                for k in range(4):\n+                    address = self.nodes[(n + k) % 4].getnewaddress()\n+                    # In each iteration, one node sends 1/11th of its balance to itself, 2/11ths to the next peer,\n+                    # 3/11ths to the one after that, and 4/11ths to the remaining one.\n+                    sends[address] = to_send * (1 + k)\n+                self.nodes[n].sendmany(\"\", sends)\n+                self.sync_all()\n+                unconf_balances = [self.nodes[i].getunconfirmedbalance() for i in range(4)]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155269450",
      "id" : 155269450,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 31,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 81560255,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155269450",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors \"That transaction is not confirmed yet. I would expect this balance to be pending.\"\r\n\r\nSelf-sent coins(including change) are considered `IsTrusted`, which will account for these as \"Available\" and immediately spendable.\r\n\r\nNot sure why it wasn't showing as Available however. Testing here shows it there.\r\n\r\nWhat type of p2sh address was it? nested-p2wpkh?",
      "created_at" : "2017-12-06T15:45:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-349679353",
      "id" : 349679353,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-06T15:45:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349679353",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm getting non-determinstic balance behavior. I have done a couple self-sends of the largest coin, seemed fine.\r\n\r\nIf I stop and restart, sometimes it shows in confirmed balance(-cli) or \"Available\"(qt), sometimes it doesn't. Repeating this process results in it either existing or not.\r\n\r\nI checked my debug.log, the transactions in the mempool are being accepted in either case.\r\n\r\nGenerating a block results in it being permanently accounted for. I'll dig in some more.",
      "created_at" : "2017-12-06T15:53:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-349681967",
      "id" : 349681967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-06T15:53:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349681967",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@instagibbs the p2sh generated if you launch without any arguments, so P2SH-P2WPKH. Where are `IsTrusted` and \"Available\" determined? At the wallet level, or is QT doing (some of) that?",
      "created_at" : "2017-12-06T15:54:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-349682089",
      "id" : 349682089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-06T15:54:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349682089",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "looks like we were chasing our tails, unrelated to this PR https://github.com/bitcoin/bitcoin/pull/11839",
      "created_at" : "2017-12-06T17:06:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-349707242",
      "id" : 349707242,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-06T17:06:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349707242",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155327731"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155327731"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r144199735\r\n\r\n> This shouldn't just be tacked on the end. Accounts are deprecated. Just replace \"account\" with an options Object.\r\n\r\nIn this particular context, account will just be renamed to label, rather than removed entirely. (At least this is what #11536 does.)",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-06T18:55:33Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" ) ( \\\"style\\\" )\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155327731",
      "id" : 155327731,
      "in_reply_to_id" : 144199735,
      "original_commit_id" : "5632374f2f71bca384ceed07ca6842fd87102346",
      "original_position" : 8,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 81629569,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155327731",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155335251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155335251"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm not sure about the sequencing rules here. I'd feel safer with a temporary CScriptID.\r\n\r\nFor the record, there should be no issue here. std::move just does an rvalue reference cast to influence template deduction and function overloading. It doesn't actually actually move anything or do anything else at runtime.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-06T19:23:24Z",
      "diff_hunk" : "@@ -13,6 +13,18 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::AddRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH\n+    // outputs.\n+    if (pubkey.IsCompressed()) {\n+        CScript script = CScript() << OP_0 << ToByteVector(pubkey.GetID());\n+        // This does not use AddCScript, as it may be overridden.\n+        mapScripts[CScriptID(script)] = std::move(script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155335251",
      "id" : 155335251,
      "in_reply_to_id" : 145261446,
      "original_commit_id" : "b7209bdc9007b0f6c22403ab042dd474eb8ef2c5",
      "original_position" : 12,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 81638284,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155335251",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155341414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155341414"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@Sjors setup_clean_chain was set to True in this test https://github.com/bitcoin/bitcoin/pull/11403/files/e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b#diff-e3da38b280555e81d6b794e1117ed0a8R12",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-06T19:47:04Z",
      "diff_hunk" : "@@ -0,0 +1,41 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=bech32\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(120)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155341414",
      "id" : 155341414,
      "in_reply_to_id" : 155266683,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 16,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 81645651,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155341414",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5617245?v=4",
         "events_url" : "https://api.github.com/users/afk11/events{/privacy}",
         "followers_url" : "https://api.github.com/users/afk11/followers",
         "following_url" : "https://api.github.com/users/afk11/following{/other_user}",
         "gists_url" : "https://api.github.com/users/afk11/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/afk11",
         "id" : 5617245,
         "login" : "afk11",
         "organizations_url" : "https://api.github.com/users/afk11/orgs",
         "received_events_url" : "https://api.github.com/users/afk11/received_events",
         "repos_url" : "https://api.github.com/users/afk11/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/afk11/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/afk11/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/afk11"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155358997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155358997"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see. But why? Doesn't that slow down the tests?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-06T20:58:41Z",
      "diff_hunk" : "@@ -0,0 +1,41 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=bech32\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(120)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155358997",
      "id" : 155358997,
      "in_reply_to_id" : 155266683,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 16,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 81665662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155358997",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155546121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155546121"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: mention something about what store is actually used for (redeemScript and pubkeyHash->pubkey lookup), as its otherwise confusing why it exists.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T15:04:41Z",
      "diff_hunk" : "@@ -81,4 +81,9 @@ SignatureData CombineSignatures(const CScript& scriptPubKey, const BaseSignature\n SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn);\n void UpdateTransaction(CMutableTransaction& tx, unsigned int nIn, const SignatureData& data);\n \n+/* Check whether we know how to sign for an output like this, assuming we\n+ * have all private keys. This is unrelated to whether we consider this\n+ * output to be ours. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155546121",
      "id" : 155546121,
      "original_commit_id" : "3e2d5aa9a4694586a561f0e1b2ec3cc32981ba24",
      "original_position" : 6,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155546121",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155558132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155558132"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems like we're gonna forget to update these flags in the future. Any reason to not switch to STANDARD_SCRIPT_VERIFY_FLAGS?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T15:45:37Z",
      "diff_hunk" : "@@ -422,3 +422,14 @@ bool DummySignatureCreator::CreateSig(std::vector<unsigned char>& vchSig, const\n     vchSig[6 + 33 + 32] = SIGHASH_ALL;\n     return true;\n }\n+\n+bool IsSolvable(const CKeyStore& store, const CScript& script)\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(&store);\n+    SignatureData sigs;\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155558132",
      "id" : 155558132,
      "original_commit_id" : "3e2d5aa9a4694586a561f0e1b2ec3cc32981ba24",
      "original_position" : 13,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155558132",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155599383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155599383"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It kinda really sucks that we use mapKeyMetadata for metadata for both P2SH scripts and pubkeyhash scripts, with a key of CTxDestination which could contain a WitnessV0ScriptHash or WitnessV0KeyHash. It'd be kinda nice to split it and have a mapWatchScriptsMetadata which uses a CScriptID and a mapKeyMetadata which uses a CKeyID, then we'd get nice type-safety to ensure no one breaks this in the future and its pretty easy to just split them at disk-read/write time so it shouldn't change the on-disk format.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T18:16:30Z",
      "diff_hunk" : "@@ -188,8 +196,11 @@ UniValue validateaddress(const JSONRPCRequest& request)\n         }\n         if (pwallet) {\n             const auto& meta = pwallet->mapKeyMetadata;\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            auto it = keyID ? meta.find(*keyID) : meta.end();\n+            CKeyID key = GetKeyForDestination(*pwallet, dest);\n+            auto it = meta.end();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155599383",
      "id" : 155599383,
      "original_commit_id" : "90046fe3b9ec63783eab205302d0feac6ee00254",
      "original_position" : 29,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155599383",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155599720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155599720"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is wrong - it doesn't contain the full validateaddress output, only a subset thereof. eg ismine, iswatchonly, account, hdkeypath, hdmasterkeyid, etc are all always missing. Of course many of those could optionally be missing anyway, which should be added to existing docs, but this just seems highly misleading.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T18:17:57Z",
      "diff_hunk" : "@@ -145,6 +152,7 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"    ]\\n\"\n             \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n             \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"embedded\\\" : {...},           (object, optional) validateaddress output for the address embedded in P2SH, if any\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155599720",
      "id" : 155599720,
      "original_commit_id" : "90046fe3b9ec63783eab205302d0feac6ee00254",
      "original_position" : 18,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155599720",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155607178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155607178"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, also, this needs a test.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T18:47:50Z",
      "diff_hunk" : "@@ -145,6 +152,7 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"    ]\\n\"\n             \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n             \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"embedded\\\" : {...},           (object, optional) validateaddress output for the address embedded in P2SH, if any\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155607178",
      "id" : 155607178,
      "in_reply_to_id" : 155599720,
      "original_commit_id" : "90046fe3b9ec63783eab205302d0feac6ee00254",
      "original_position" : 18,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155607178",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155607235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155607235"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This should get a test (and should be easy to do).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T18:48:03Z",
      "diff_hunk" : "@@ -246,12 +246,12 @@ CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& pa\n         // Case 1: Bitcoin address and we have full public key:\n         CTxDestination dest = DecodeDestination(ks);\n         if (pwallet && IsValidDestination(dest)) {\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            if (!keyID) {\n+            auto key = GetKeyForDestination(*pwallet, dest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155607235",
      "id" : 155607235,
      "original_commit_id" : "5a36cba99a4738063d486caac620d0dab6648ef9",
      "original_position" : 6,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155607235",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155607557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155607557"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Errr, dont you need to *do* something with with_witness?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T18:49:14Z",
      "diff_hunk" : "@@ -35,7 +35,7 @@ def initialize(self, base_block):\n         self.vtx = copy.deepcopy(base_block.vtx)\n         self.hashMerkleRoot = self.calc_merkle_root()\n \n-    def serialize(self):\n+    def serialize(self, with_witness=True):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155607557",
      "id" : 155607557,
      "original_commit_id" : "53fdb41a0b19523ea8e32633e8a76a3b96919229",
      "original_position" : 5,
      "path" : "test/functional/p2p-fullblocktest.py",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155607557",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155608817"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155608817"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems weird to keep CBlock default as non-witness when changing transaction default? Maybe @MarcoFalke or @jnewbery have an opinion?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T18:54:00Z",
      "diff_hunk" : "@@ -583,7 +583,7 @@ def serialize(self, with_witness=False):\n         if with_witness:\n             r += ser_vector(self.vtx, \"serialize_with_witness\")\n         else:\n-            r += ser_vector(self.vtx)\n+            r += ser_vector(self.vtx, \"serialize_without_witness\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155608817",
      "id" : 155608817,
      "original_commit_id" : "53fdb41a0b19523ea8e32633e8a76a3b96919229",
      "original_position" : 28,
      "path" : "test/functional/test_framework/messages.py",
      "position" : 28,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155608817",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155628707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155628707"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Improve witness destination types and use them more\"\r\n\r\nCould drop `public:` since this is a struct, or `s/struct/class/` since parent is a class (also for `WitnessV0KeyHash`).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T20:14:49Z",
      "diff_hunk" : "@@ -73,8 +73,21 @@ class CNoDestination {\n     friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n };\n \n-struct WitnessV0ScriptHash : public uint256 {};\n-struct WitnessV0KeyHash : public uint160 {};\n+struct WitnessV0ScriptHash : public uint256\n+{\n+public:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155628707",
      "id" : 155628707,
      "original_commit_id" : "7cf2eea1ebd76fbbe25b7a4bbabf9cc1df7b72eb",
      "original_position" : 8,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 81980100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155628707",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155663435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155663435"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The defaults here are a mess - g_address_type is initialized to a constant (OUTPUT_TYPE_P2SH) and not OUTPUT_TYPE_DEFAULT, which would make sense since we want them tied together by default. I think you should default them both to OUTPUT_TYPE_NONE, cause it'd be an error for WalletParameterInteraction to not get run, and then refer to OUTPUT_TYPE_DEFAULT everywhere as the default value, then not have a default argument in ParseOutputType if its gonna return _NONE on error anyway and just default the argument to FormatOutputType(OUTPUT_TYPE_DEFAULT).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T22:47:45Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", strprintf(_(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));\n+    strUsage += HelpMessageOpt(\"-changetype\", strprintf(_(\"What type of change to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default is same as -addressstyle: \\\"%s\\\")\"), FormatOutputType(g_address_type)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155663435",
      "id" : 155663435,
      "in_reply_to_id" : 154329194,
      "original_commit_id" : "b088ab65407346408ed45fdad637e54c591eb348",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155663435",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155663886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155663886"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Shouldnt this really be g_change_type since its not a script that is expected to be expressed anywhere in address form?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T22:50:18Z",
      "diff_hunk" : "@@ -645,10 +645,10 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, const SendCoinsRecipient& r\n     else {\n         CPubKey newKey;\n         if (wallet->GetKeyFromPool(newKey)) {\n-            CKeyID keyID = newKey.GetID();\n-            wallet->SetAddressBook(keyID, strAccount, \"refund\");\n+            CTxDestination dest = wallet->GetDestinationForKey(newKey, g_address_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155663886",
      "id" : 155663886,
      "original_commit_id" : "210e90fcbfda39eee5e3119a7a0637813dccb83e",
      "original_position" : 6,
      "path" : "src/qt/paymentserver.cpp",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155663886",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155665399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155665399"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, can we avoid making this a db write if we already have the script in the wallet explicitly somehow?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T22:58:36Z",
      "diff_hunk" : "@@ -4124,3 +4127,97 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155665399",
      "id" : 155665399,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155665399",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155665858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155665858"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This enforces redeemScript being no larger than 520 bytes, which is somewhat strange. I *think* its fine cause its all checked for at higher (read: RPC) layers, but its something to note that we dont (yet) support larger P2WSH redeemScripts. To do so we probably need to bump wallet minversion to avoid confusing old versions why we have scripts larger than 520 bytes in the wallet.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T23:01:06Z",
      "diff_hunk" : "@@ -4124,3 +4127,97 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForScript(const CScript& script, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0ScriptHash(Hash(script.begin(), script.end()));\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);\n+        // Add the redeemscript, so that P2WSH and P2SH-P2WSH outputs are recognized as ours.\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155665858",
      "id" : 155665858,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 127,
      "path" : "src/wallet/wallet.cpp",
      "position" : 162,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155665858",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155667603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155667603"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why not check if it was actually affected in segwit form before doing this? We only otherwise AddCScript if we are getting the segwit version of an address.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-07T23:11:05Z",
      "diff_hunk" : "@@ -1048,6 +1050,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                     std::map<CKeyID, int64_t>::const_iterator mi = m_pool_key_to_index.find(keyid);\n                     if (mi != m_pool_key_to_index.end()) {\n                         LogPrintf(\"%s: Detected a used keypool key, mark all keypool key up to this key as used\\n\", __func__);\n+                        AddRelatedScripts(mi->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155667603",
      "id" : 155667603,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 81882149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155667603",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, obviously needs some docs that describe how to find lost funds if you downgrade and then upgrade again (rescan from segwit activation height). Though do we want some explicit RPC for this or so that rescans from max(oldest key time, segwit activation height)?",
      "created_at" : "2017-12-07T23:14:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-350123945",
      "id" : 350123945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-07T23:14:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350123945",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155821355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155821355"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Improve witness destination types and use them more\"\r\n\r\nShould this inherit from CKeyID instead of uint160?\r\n\r\nAlso, would it make sense as a followup to replace `CKeyID` and `CScriptID` in the destination variant with `NonWitnessKeyHash` and `NonWitnessScriptHash` types for better type checking and more consistency between old and new destinations?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-08T16:44:36Z",
      "diff_hunk" : "@@ -73,8 +73,21 @@ class CNoDestination {\n     friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n };\n \n-struct WitnessV0ScriptHash : public uint256 {};\n-struct WitnessV0KeyHash : public uint160 {};\n+struct WitnessV0ScriptHash : public uint256\n+{\n+public:\n+    WitnessV0ScriptHash() : uint256() {}\n+    WitnessV0ScriptHash(const uint256& hash) : uint256(hash) {}\n+    using uint256::uint256;\n+};\n+\n+struct WitnessV0KeyHash : public uint160",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155821355",
      "id" : 155821355,
      "original_commit_id" : "7cf2eea1ebd76fbbe25b7a4bbabf9cc1df7b72eb",
      "original_position" : 14,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 81980100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155821355",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155825668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155825668"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Improve witness destination types and use them more\":\r\n\r\nShould probably declare this `explicit` for better type checking (also for `WitnessV0KeyHash`).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-08T17:04:25Z",
      "diff_hunk" : "@@ -73,8 +73,21 @@ class CNoDestination {\n     friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n };\n \n-struct WitnessV0ScriptHash : public uint256 {};\n-struct WitnessV0KeyHash : public uint160 {};\n+struct WitnessV0ScriptHash : public uint256\n+{\n+public:\n+    WitnessV0ScriptHash() : uint256() {}\n+    WitnessV0ScriptHash(const uint256& hash) : uint256(hash) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155825668",
      "id" : 155825668,
      "original_commit_id" : "7cf2eea1ebd76fbbe25b7a4bbabf9cc1df7b72eb",
      "original_position" : 10,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 81980100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155825668",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155852506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155852506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403/files#r155599383\r\n\r\n> It kinda really sucks that we use mapKeyMetadata for metadata for both P2SH scripts and pubkeyhash scripts\r\n\r\nI addressed this in #11854. It does conflict with this PR but the changes are easy to reconcile, so there's not much dependency, and no need to change anything here I think.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-08T19:12:11Z",
      "diff_hunk" : "@@ -188,8 +196,11 @@ UniValue validateaddress(const JSONRPCRequest& request)\n         }\n         if (pwallet) {\n             const auto& meta = pwallet->mapKeyMetadata;\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            auto it = keyID ? meta.find(*keyID) : meta.end();\n+            CKeyID key = GetKeyForDestination(*pwallet, dest);\n+            auto it = meta.end();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155852506",
      "id" : 155852506,
      "in_reply_to_id" : 155599383,
      "original_commit_id" : "90046fe3b9ec63783eab205302d0feac6ee00254",
      "original_position" : 29,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 81980100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155852506",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155863094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155863094"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Implicitly know about P2WPKH redeemscripts\"\r\n\r\nSeems like you could use GetScriptForDestination here like you do in CWallet::AddRelatedScripts? Or is there a reason why it is better there but not here?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-08T20:01:10Z",
      "diff_hunk" : "@@ -13,6 +13,22 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::AddRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH\n+    // outputs. Technically P2WPKH outputs don't have a redeemscript to be\n+    // spent. However, our current IsMine logic requires the corresponding\n+    // P2SH-P2WPKH redeemscript to be present in the wallet in order to accept\n+    // payment even to P2WPKH outputs.\n+    if (pubkey.IsCompressed()) {\n+        CScript script = CScript() << OP_0 << ToByteVector(pubkey.GetID());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155863094",
      "id" : 155863094,
      "original_commit_id" : "da32d5097b306364dc89ae54cd54b6be82353a48",
      "original_position" : 13,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 81980100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155863094",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155868135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155868135"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Support downgrading after recovered keypool witness keys\"\r\n\r\nSince we know the CPubKey (and are already looking it up in the next line), could this just call the CKeyStore::AddRelatedKeyScripts() method instead of requiring a new CWallet::AddRelatedScripts() method? It would be helpful to have an explanatory comment here whatever the answer is. And maybe the names of the methods could be made more distinct.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-08T20:25:19Z",
      "diff_hunk" : "@@ -1050,6 +1050,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                     std::map<CKeyID, int64_t>::const_iterator mi = m_pool_key_to_index.find(keyid);\n                     if (mi != m_pool_key_to_index.end()) {\n                         LogPrintf(\"%s: Detected a used keypool key, mark all keypool key up to this key as used\\n\", __func__);\n+                        AddRelatedScripts(mi->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155868135",
      "id" : 155868135,
      "original_commit_id" : "cb6cd672f412a92aabfcaa4c46b5fd00b1e644a2",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 81980100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155868135",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155869762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155869762"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"SegWit wallet support\"\r\n\r\nSeems like this could be a standalone method rather than a wallet or keystore method. Should probably at least make it static, if not moved out of the wallet entirely.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-08T20:33:47Z",
      "diff_hunk" : "@@ -4124,3 +4126,88 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155869762",
      "id" : 155869762,
      "original_commit_id" : "210e90fcbfda39eee5e3119a7a0637813dccb83e",
      "original_position" : 71,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 81980100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155869762",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155870014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155870014"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"SegWit wallet support\"\r\n\r\nCould the comment be expanded to say what else this is checking for besides the uncompressed key? The key is available so obviously that could be checked directly. And the code above in GetAllDestinationsForKey is actually just calling IsCompressed(), so it'd be good to say why doing that isn't sufficient here.\r\n\r\n",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-08T20:35:04Z",
      "diff_hunk" : "@@ -4124,3 +4126,88 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155870014",
      "id" : 155870014,
      "original_commit_id" : "210e90fcbfda39eee5e3119a7a0637813dccb83e",
      "original_position" : 91,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 81980100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155870014",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155889073"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155889073"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"SegWit wallet support\"\r\n\r\nAs brought up previously https://github.com/bitcoin/bitcoin/pull/11403#discussion_r145274394, this seems really ugly. Having GetDestinationForKey/GetDestinationForScript methods write to the wallet database when all you would expect them to do is get the address of a key or script doesn't seem safe or untuitive.\r\n\r\nIt seems like it would be better if the callers were responsible for adding CScripts. Since most callers are just calling GetDestinationForKey after reserving keys, I think if you added the CScripts in CWallet::ReserveKeyFromKeyPool it would take care of most of them.\r\n\r\nIf that isn't sufficien,t maybe there is some way to rename or wrap these methods so it is clear the calls are intended to actually update the database, rather than just compute addresses.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-08T22:19:45Z",
      "diff_hunk" : "@@ -4124,3 +4126,88 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155889073",
      "id" : 155889073,
      "original_commit_id" : "210e90fcbfda39eee5e3119a7a0637813dccb83e",
      "original_position" : 96,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 81980100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155889073",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995479"
         }
      },
      "author_association" : "OWNER",
      "body" : "Good point. Fixed, and added a comment.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:07:13Z",
      "diff_hunk" : "@@ -645,10 +645,10 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, const SendCoinsRecipient& r\n     else {\n         CPubKey newKey;\n         if (wallet->GetKeyFromPool(newKey)) {\n-            CKeyID keyID = newKey.GetID();\n-            wallet->SetAddressBook(keyID, strAccount, \"refund\");\n+            CTxDestination dest = wallet->GetDestinationForKey(newKey, g_address_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995479",
      "id" : 155995479,
      "in_reply_to_id" : 155663886,
      "original_commit_id" : "210e90fcbfda39eee5e3119a7a0637813dccb83e",
      "original_position" : 6,
      "path" : "src/qt/paymentserver.cpp",
      "position" : null,
      "pull_request_review_id" : 82401291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995479",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995543"
         }
      },
      "author_association" : "OWNER",
      "body" : "This is now tested in `address_types.py`.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:07:35Z",
      "diff_hunk" : "@@ -246,12 +246,12 @@ CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& pa\n         // Case 1: Bitcoin address and we have full public key:\n         CTxDestination dest = DecodeDestination(ks);\n         if (pwallet && IsValidDestination(dest)) {\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            if (!keyID) {\n+            auto key = GetKeyForDestination(*pwallet, dest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995543",
      "id" : 155995543,
      "in_reply_to_id" : 155607235,
      "original_commit_id" : "5a36cba99a4738063d486caac620d0dab6648ef9",
      "original_position" : 6,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 82401355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995543",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995687"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed. I've also expanded the `validateaddress` output for P2WSH, simplified the implementation, and added comments.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:08:47Z",
      "diff_hunk" : "@@ -145,6 +152,7 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"    ]\\n\"\n             \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n             \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"embedded\\\" : {...},           (object, optional) validateaddress output for the address embedded in P2SH, if any\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995687",
      "id" : 155995687,
      "in_reply_to_id" : 155599720,
      "original_commit_id" : "90046fe3b9ec63783eab205302d0feac6ee00254",
      "original_position" : 18,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 82401493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995687",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995721"
         }
      },
      "author_association" : "OWNER",
      "body" : "Let's improve that outside of this PR.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:09:08Z",
      "diff_hunk" : "@@ -188,8 +196,11 @@ UniValue validateaddress(const JSONRPCRequest& request)\n         }\n         if (pwallet) {\n             const auto& meta = pwallet->mapKeyMetadata;\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            auto it = keyID ? meta.find(*keyID) : meta.end();\n+            CKeyID key = GetKeyForDestination(*pwallet, dest);\n+            auto it = meta.end();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995721",
      "id" : 155995721,
      "in_reply_to_id" : 155599383,
      "original_commit_id" : "90046fe3b9ec63783eab205302d0feac6ee00254",
      "original_position" : 29,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 82401539,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995721",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995748"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed, and added a static_assert.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:09:25Z",
      "diff_hunk" : "@@ -422,3 +422,14 @@ bool DummySignatureCreator::CreateSig(std::vector<unsigned char>& vchSig, const\n     vchSig[6 + 33 + 32] = SIGHASH_ALL;\n     return true;\n }\n+\n+bool IsSolvable(const CKeyStore& store, const CScript& script)\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(&store);\n+    SignatureData sigs;\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, MANDATORY_SCRIPT_VERIFY_FLAGS | SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, creator.Checker()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995748",
      "id" : 155995748,
      "in_reply_to_id" : 155558132,
      "original_commit_id" : "3e2d5aa9a4694586a561f0e1b2ec3cc32981ba24",
      "original_position" : 13,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 82401560,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995748",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995760"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:09:32Z",
      "diff_hunk" : "@@ -81,4 +81,9 @@ SignatureData CombineSignatures(const CScript& scriptPubKey, const BaseSignature\n SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn);\n void UpdateTransaction(CMutableTransaction& tx, unsigned int nIn, const SignatureData& data);\n \n+/* Check whether we know how to sign for an output like this, assuming we\n+ * have all private keys. This is unrelated to whether we consider this\n+ * output to be ours. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995760",
      "id" : 155995760,
      "in_reply_to_id" : 155546121,
      "original_commit_id" : "3e2d5aa9a4694586a561f0e1b2ec3cc32981ba24",
      "original_position" : 6,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 82401573,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995760",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995794"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:09:51Z",
      "diff_hunk" : "@@ -1048,6 +1050,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                     std::map<CKeyID, int64_t>::const_iterator mi = m_pool_key_to_index.find(keyid);\n                     if (mi != m_pool_key_to_index.end()) {\n                         LogPrintf(\"%s: Detected a used keypool key, mark all keypool key up to this key as used\\n\", __func__);\n+                        AddRelatedScripts(mi->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995794",
      "id" : 155995794,
      "in_reply_to_id" : 155667603,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82401601,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995794",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995875"
         }
      },
      "author_association" : "OWNER",
      "body" : "That seems hard, as we don't distinguish scripts that were added explicitly and implicitly.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:10:29Z",
      "diff_hunk" : "@@ -4124,3 +4127,97 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995875",
      "id" : 155995875,
      "in_reply_to_id" : 155665399,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82401684,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995875",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995887"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995887"
         }
      },
      "author_association" : "OWNER",
      "body" : "Added a comment.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:10:39Z",
      "diff_hunk" : "@@ -4124,3 +4127,97 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForScript(const CScript& script, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0ScriptHash(Hash(script.begin(), script.end()));\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);\n+        // Add the redeemscript, so that P2WSH and P2SH-P2WSH outputs are recognized as ours.\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995887",
      "id" : 155995887,
      "in_reply_to_id" : 155665858,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 127,
      "path" : "src/wallet/wallet.cpp",
      "position" : 162,
      "pull_request_review_id" : 82401702,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995887",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995906"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995906"
         }
      },
      "author_association" : "OWNER",
      "body" : "Good point, fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:10:48Z",
      "diff_hunk" : "@@ -35,7 +35,7 @@ def initialize(self, base_block):\n         self.vtx = copy.deepcopy(base_block.vtx)\n         self.hashMerkleRoot = self.calc_merkle_root()\n \n-    def serialize(self):\n+    def serialize(self, with_witness=True):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995906",
      "id" : 155995906,
      "in_reply_to_id" : 155607557,
      "original_commit_id" : "53fdb41a0b19523ea8e32633e8a76a3b96919229",
      "original_position" : 5,
      "path" : "test/functional/p2p-fullblocktest.py",
      "position" : null,
      "pull_request_review_id" : 82401727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995906",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995997"
         }
      },
      "author_association" : "OWNER",
      "body" : "I have no strong opinions, but it was a bit of a pain to make this work. So feel free to suggest a more consistent approach if you find one that works, but I'd rather not try to do this again.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:11:34Z",
      "diff_hunk" : "@@ -583,7 +583,7 @@ def serialize(self, with_witness=False):\n         if with_witness:\n             r += ser_vector(self.vtx, \"serialize_with_witness\")\n         else:\n-            r += ser_vector(self.vtx)\n+            r += ser_vector(self.vtx, \"serialize_without_witness\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155995997",
      "id" : 155995997,
      "in_reply_to_id" : 155608817,
      "original_commit_id" : "53fdb41a0b19523ea8e32633e8a76a3b96919229",
      "original_position" : 28,
      "path" : "test/functional/test_framework/messages.py",
      "position" : 28,
      "pull_request_review_id" : 82401829,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155995997",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996023"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:11:48Z",
      "diff_hunk" : "@@ -13,6 +13,22 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::AddRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH\n+    // outputs. Technically P2WPKH outputs don't have a redeemscript to be\n+    // spent. However, our current IsMine logic requires the corresponding\n+    // P2SH-P2WPKH redeemscript to be present in the wallet in order to accept\n+    // payment even to P2WPKH outputs.\n+    if (pubkey.IsCompressed()) {\n+        CScript script = CScript() << OP_0 << ToByteVector(pubkey.GetID());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996023",
      "id" : 155996023,
      "in_reply_to_id" : 155863094,
      "original_commit_id" : "da32d5097b306364dc89ae54cd54b6be82353a48",
      "original_position" : 13,
      "path" : "src/keystore.cpp",
      "position" : null,
      "pull_request_review_id" : 82401851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996023",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996051"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:12:03Z",
      "diff_hunk" : "@@ -73,8 +73,21 @@ class CNoDestination {\n     friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n };\n \n-struct WitnessV0ScriptHash : public uint256 {};\n-struct WitnessV0KeyHash : public uint160 {};\n+struct WitnessV0ScriptHash : public uint256\n+{\n+public:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996051",
      "id" : 155996051,
      "in_reply_to_id" : 155628707,
      "original_commit_id" : "7cf2eea1ebd76fbbe25b7a4bbabf9cc1df7b72eb",
      "original_position" : 8,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 82401878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996051",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996067"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:12:10Z",
      "diff_hunk" : "@@ -73,8 +73,21 @@ class CNoDestination {\n     friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n };\n \n-struct WitnessV0ScriptHash : public uint256 {};\n-struct WitnessV0KeyHash : public uint160 {};\n+struct WitnessV0ScriptHash : public uint256\n+{\n+public:\n+    WitnessV0ScriptHash() : uint256() {}\n+    WitnessV0ScriptHash(const uint256& hash) : uint256(hash) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996067",
      "id" : 155996067,
      "in_reply_to_id" : 155825668,
      "original_commit_id" : "7cf2eea1ebd76fbbe25b7a4bbabf9cc1df7b72eb",
      "original_position" : 10,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 82401894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996067",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996285"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996285"
         }
      },
      "author_association" : "OWNER",
      "body" : "I tried making it inherit from CKeyID, but it's not trivial at least, so I'd rather do it separately.\r\n\r\nAgreed with replacing CKeyID and CScriptID in the variant. Though perhaps for performance reasons we may want a specialized variant implementation for this (boost::variant needs dynamic allocations) anyway. Let's consider that for later.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:14:10Z",
      "diff_hunk" : "@@ -73,8 +73,21 @@ class CNoDestination {\n     friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n };\n \n-struct WitnessV0ScriptHash : public uint256 {};\n-struct WitnessV0KeyHash : public uint160 {};\n+struct WitnessV0ScriptHash : public uint256\n+{\n+public:\n+    WitnessV0ScriptHash() : uint256() {}\n+    WitnessV0ScriptHash(const uint256& hash) : uint256(hash) {}\n+    using uint256::uint256;\n+};\n+\n+struct WitnessV0KeyHash : public uint160",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996285",
      "id" : 155996285,
      "in_reply_to_id" : 155821355,
      "original_commit_id" : "7cf2eea1ebd76fbbe25b7a4bbabf9cc1df7b72eb",
      "original_position" : 14,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 82402139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996285",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996437"
         }
      },
      "author_association" : "OWNER",
      "body" : "I've renamed the CKeyStore::AddRelatedKeyScripts functions to CKeyStore::ImplicitlyLearnRelatedKeyScripts. It's not usable because that function only adds the script in memory. The point of AddRelatedScript is to make them explicit (in wallet.dat), and it will only be called on keys whose related scripts are already implicitly in the keystore.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:15:31Z",
      "diff_hunk" : "@@ -1050,6 +1050,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                     std::map<CKeyID, int64_t>::const_iterator mi = m_pool_key_to_index.find(keyid);\n                     if (mi != m_pool_key_to_index.end()) {\n                         LogPrintf(\"%s: Detected a used keypool key, mark all keypool key up to this key as used\\n\", __func__);\n+                        AddRelatedScripts(mi->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996437",
      "id" : 155996437,
      "in_reply_to_id" : 155868135,
      "original_commit_id" : "cb6cd672f412a92aabfcaa4c46b5fd00b1e644a2",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82402305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996437",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996505"
         }
      },
      "author_association" : "OWNER",
      "body" : "Made it a standalone wallet function. I'm leaving it as part of the wallet, as the choice about what types of addresses to support is largely a wallet one.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:16:07Z",
      "diff_hunk" : "@@ -4124,3 +4126,88 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996505",
      "id" : 155996505,
      "in_reply_to_id" : 155869762,
      "original_commit_id" : "210e90fcbfda39eee5e3119a7a0637813dccb83e",
      "original_position" : 71,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82402378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996505",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996619"
         }
      },
      "author_association" : "OWNER",
      "body" : "Checking for an uncompressed key is all it does. It's just a very succint way of doing so, which also happens to be very foolproof for future similar changes.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:17:02Z",
      "diff_hunk" : "@@ -4124,3 +4126,88 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155996619",
      "id" : 155996619,
      "in_reply_to_id" : 155870014,
      "original_commit_id" : "210e90fcbfda39eee5e3119a7a0637813dccb83e",
      "original_position" : 91,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82402510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155996619",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155997108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155997108"
         }
      },
      "author_association" : "OWNER",
      "body" : "I agree it's ugly, though I think it is temporary (it's not needing in my future design (see writeup), and it's also unnecessary once we drop support for downgrading to pre-implicit-SegWit wallet software - but that needs some thinking about versioning).\r\n\r\nSplitting the choice for what to add and what destination to use up seems very inconvenient, though. The necessity of adding depends on the type of address.\r\n\r\nI've renamed the functions to `Add...` rather than `Get...`, to reflect that they may change wallet state.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T07:20:38Z",
      "diff_hunk" : "@@ -4124,3 +4126,88 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155997108",
      "id" : 155997108,
      "in_reply_to_id" : 155889073,
      "original_commit_id" : "210e90fcbfda39eee5e3119a7a0637813dccb83e",
      "original_position" : 96,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82402999,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155997108",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Pushed a change addressing:\r\n* Several of @TheBlueMatt and @ryanofsky's comments.\r\n* Rewrote the `validateaddress` changes; behaviour of P2SH and P2WSH is now much more consistent and documented (both will return `embedded` if possible). Also added a `pubkeys` field (as a replacement for the confusing `addresses` field for multisig, which remains supported for P2SH).\r\n* Renamed several functions (ImplicitlyLearnRelatedScripts, AddDestinationForKey, AddDestinationForScript).\r\n* Expanded `address_types.py` to include `validateaddress` and `addmultisigaddress` coverage.\r\n\r\nNo rebase, but the fixes are all squashed (e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b -> 5b669dd51ae871d55312d2e83ca6c28b2e1e60fb).",
      "created_at" : "2017-12-11T07:26:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-350642408",
      "id" : 350642408,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-11T07:31:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350642408",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The balance issues I found disappear when I cherry-pick #11839.",
      "created_at" : "2017-12-11T11:31:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-350698571",
      "id" : 350698571,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-11T11:31:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350698571",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156052687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156052687"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe replace the comment with, if I understand correctly: \"We'll use the change type here. In the BIP-70 payment protocol the destination for refunds is communicated as an output script, not an address. Therefore we don't need to care about whether the other side understands a particular address type.\"",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T11:53:44Z",
      "diff_hunk" : "@@ -645,10 +645,12 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, const SendCoinsRecipient& r\n     else {\n         CPubKey newKey;\n         if (wallet->GetKeyFromPool(newKey)) {\n-            CKeyID keyID = newKey.GetID();\n-            wallet->SetAddressBook(keyID, strAccount, \"refund\");\n+            // As we don't care about whether the other side understands a particular address type\n+            // encoding, use the change type here.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156052687",
      "id" : 156052687,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 7,
      "path" : "src/qt/paymentserver.cpp",
      "position" : null,
      "pull_request_review_id" : 82465620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156052687",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156053242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156053242"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do we really want to use the change type? I think refund addresses should be treated the same as any receive address, including what type you use for those,and the level of trust placed on unconfirmed funds on those addresses. The latter is probably not an issue here.\r\n\r\nIn a BIP44 address hierarchy I would probably use the receive chain for refunds (not applicable here, but to illustrate my point).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T11:56:28Z",
      "diff_hunk" : "@@ -645,10 +645,12 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, const SendCoinsRecipient& r\n     else {\n         CPubKey newKey;\n         if (wallet->GetKeyFromPool(newKey)) {\n-            CKeyID keyID = newKey.GetID();\n-            wallet->SetAddressBook(keyID, strAccount, \"refund\");\n+            // As we don't care about whether the other side understands a particular address type\n+            // encoding, use the change type here.\n+            CTxDestination dest = wallet->AddDestinationForKey(newKey, g_change_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156053242",
      "id" : 156053242,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 8,
      "path" : "src/qt/paymentserver.cpp",
      "position" : null,
      "pull_request_review_id" : 82465620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156053242",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156056229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156056229"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`-addressstyle` should be `-addresstype` (I can't see my previous comment about this anymore, so repeating just in case)",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T12:12:03Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", strprintf(_(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));\n+    strUsage += HelpMessageOpt(\"-changetype\", strprintf(_(\"What type of change to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default is same as -addressstyle: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156056229",
      "id" : 156056229,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 82465620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156056229",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156057894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156057894"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"i.e.\" -> \"e.g.\" seems more future-proof.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T12:19:45Z",
      "diff_hunk" : "@@ -4124,3 +4127,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156057894",
      "id" : 156057894,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 127,
      "path" : "src/wallet/wallet.cpp",
      "position" : 159,
      "pull_request_review_id" : 82465620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156057894",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156058923"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156058923"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Don't forget to remove this, or use `self.log.debug(...)`.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T12:25:24Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"], [\"-addresstype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+\n+        for c in range(4):\n+            multisig = c >= 2\n+            for n in range(4):\n+                old_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                to_send = (old_balances[n] / 101).quantize(Decimal(\"0.00000001\")) * 10\n+                sends = {}\n+                for k in range(4):\n+                    i = (n + k) % 4\n+                    if not multisig:\n+                        address = self.nodes[i].getnewaddress()\n+                    else:\n+                        addr1 = self.nodes[i].getnewaddress()\n+                        addr2 = self.nodes[i].getnewaddress()\n+                        address = self.nodes[i].addmultisigaddress(2, [addr1, addr2])\n+                    # Do some sanity checking on the created address\n+                    info = self.nodes[i].validateaddress(address)\n+                    print(\"%i: %r\" % (i, info))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156058923",
      "id" : 156058923,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 34,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 82465620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156058923",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156062380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156062380"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "On my local machine, this line fails with `AssertionError: not(1745.04950480 == 1695.04950480)` (with and without the #11839 patch). Not sure what could explain an off by 50 BTC error.\r\n\r\nIt fails when I run the test individually through `test/functional/address_types.py`. It passes when I run it as part of the full test suite `test/functional/test_runner.py `, but that in turn causes the (unmodified) `wallet-hd.py` to fail at line 102 with:\r\n\r\n```\r\nAssertionError: Block sync to height 402 timed out:\r\n  {'hash': '62ef92e893723b28577eb0420871b941c8ac6a42c0afc5bf59eb096c8fe72256', 'height': 402}\r\n  {'hash': '5b9db3fd6a97e193ff780c162941ae6a348a3f29afab04f97620548b68b0ed60', 'height': 393}\r\n```\r\n\r\nWhen I run this individual test file again after running the full suite, it does pass. Ã°ÂÂÂ  ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T12:43:38Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"], [\"-addresstype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+\n+        for c in range(4):\n+            multisig = c >= 2\n+            for n in range(4):\n+                old_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                to_send = (old_balances[n] / 101).quantize(Decimal(\"0.00000001\")) * 10\n+                sends = {}\n+                for k in range(4):\n+                    i = (n + k) % 4\n+                    if not multisig:\n+                        address = self.nodes[i].getnewaddress()\n+                    else:\n+                        addr1 = self.nodes[i].getnewaddress()\n+                        addr2 = self.nodes[i].getnewaddress()\n+                        address = self.nodes[i].addmultisigaddress(2, [addr1, addr2])\n+                    # Do some sanity checking on the created address\n+                    info = self.nodes[i].validateaddress(address)\n+                    print(\"%i: %r\" % (i, info))\n+                    assert(info['isvalid'])\n+                    assert(info['ismine'])\n+                    assert_equal(info['isscript'], multisig or i == 1 or i == 2)\n+                    assert_equal(info['iswitness'], i == 3)\n+                    if (info['isscript']):\n+                        assert_equal(info['script'], 'multisig' if multisig else 'witness_v0_keyhash')\n+                    else:\n+                        assert('script' not in info)\n+                    if (not multisig and (i == 1 or i == 2)):\n+                        assert('embedded' in info)\n+                        assert(not info['embedded']['isscript'])\n+                        assert(info['embedded']['iswitness'])\n+                        assert_equal(info['pubkey'], info['embedded']['pubkey'])\n+                    else:\n+                        assert('embedded' not in info)\n+                    # In each iteration, one node sends 10/101th of its balance to itself, 20/1011ths to the next peer,\n+                    # 30/101ths to the one after that, and 40/101ths to the remaining one.\n+                    sends[address] = to_send * (1 + k)\n+                self.nodes[n].sendmany(\"\", sends)\n+                sync_mempools(self.nodes)\n+                unconf_balances = [self.nodes[i].getunconfirmedbalance() for i in range(4)]\n+                self.nodes[0].generate(1)\n+                sync_blocks(self.nodes)\n+                new_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                for k in range(3):\n+                    i = (n + k + 1) % 4\n+                    assert_equal(unconf_balances[i], to_send * (2 + k))\n+                    assert_equal(new_balances[i], old_balances[i] + to_send * (2 + k) + (50 if i == 0 else 0))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156062380",
      "id" : 156062380,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 62,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 82465620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156062380",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156071685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156071685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Off topic: why is this needed?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T13:27:37Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"], [\"-addresstype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156071685",
      "id" : 156071685,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 15,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 82465620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156071685",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156237039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156237039"
         }
      },
      "author_association" : "OWNER",
      "body" : "I've reformulated it.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T23:57:19Z",
      "diff_hunk" : "@@ -645,10 +645,12 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, const SendCoinsRecipient& r\n     else {\n         CPubKey newKey;\n         if (wallet->GetKeyFromPool(newKey)) {\n-            CKeyID keyID = newKey.GetID();\n-            wallet->SetAddressBook(keyID, strAccount, \"refund\");\n+            // As we don't care about whether the other side understands a particular address type\n+            // encoding, use the change type here.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156237039",
      "id" : 156237039,
      "in_reply_to_id" : 156052687,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 7,
      "path" : "src/qt/paymentserver.cpp",
      "position" : null,
      "pull_request_review_id" : 82681567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156237039",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156237160"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156237160"
         }
      },
      "author_association" : "OWNER",
      "body" : "I have elaborated on why.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-11T23:58:12Z",
      "diff_hunk" : "@@ -645,10 +645,12 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, const SendCoinsRecipient& r\n     else {\n         CPubKey newKey;\n         if (wallet->GetKeyFromPool(newKey)) {\n-            CKeyID keyID = newKey.GetID();\n-            wallet->SetAddressBook(keyID, strAccount, \"refund\");\n+            // As we don't care about whether the other side understands a particular address type\n+            // encoding, use the change type here.\n+            CTxDestination dest = wallet->AddDestinationForKey(newKey, g_change_type);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156237160",
      "id" : 156237160,
      "in_reply_to_id" : 156053242,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 8,
      "path" : "src/qt/paymentserver.cpp",
      "position" : null,
      "pull_request_review_id" : 82681740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156237160",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156237694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156237694"
         }
      },
      "author_association" : "OWNER",
      "body" : "That's not what I mean. It's not just an example - it's a clarification about why that check is needed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T00:01:25Z",
      "diff_hunk" : "@@ -4124,3 +4127,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156237694",
      "id" : 156237694,
      "in_reply_to_id" : 156057894,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 127,
      "path" : "src/wallet/wallet.cpp",
      "position" : 159,
      "pull_request_review_id" : 82682367,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156237694",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156237760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156237760"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T00:01:57Z",
      "diff_hunk" : "@@ -15,6 +15,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", strprintf(_(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));\n+    strUsage += HelpMessageOpt(\"-changetype\", strprintf(_(\"What type of change to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default is same as -addressstyle: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156237760",
      "id" : 156237760,
      "in_reply_to_id" : 156056229,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 82682451,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156237760",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156241848"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156241848"
         }
      },
      "author_association" : "OWNER",
      "body" : "Otherwise the nodes will think they're in IBD and not sync transactions.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T00:30:23Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"], [\"-addresstype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156241848",
      "id" : 156241848,
      "in_reply_to_id" : 156071685,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 15,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 82687144,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156241848",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156241862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156241862"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T00:30:31Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"], [\"-addresstype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+\n+        for c in range(4):\n+            multisig = c >= 2\n+            for n in range(4):\n+                old_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                to_send = (old_balances[n] / 101).quantize(Decimal(\"0.00000001\")) * 10\n+                sends = {}\n+                for k in range(4):\n+                    i = (n + k) % 4\n+                    if not multisig:\n+                        address = self.nodes[i].getnewaddress()\n+                    else:\n+                        addr1 = self.nodes[i].getnewaddress()\n+                        addr2 = self.nodes[i].getnewaddress()\n+                        address = self.nodes[i].addmultisigaddress(2, [addr1, addr2])\n+                    # Do some sanity checking on the created address\n+                    info = self.nodes[i].validateaddress(address)\n+                    print(\"%i: %r\" % (i, info))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156241862",
      "id" : 156241862,
      "in_reply_to_id" : 156058923,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 34,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 82687162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156241862",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156242225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156242225"
         }
      },
      "author_association" : "OWNER",
      "body" : "I can't reproduce your problem. Are you sure you're not running against an older `bitcoind`?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T00:32:54Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"], [\"-addresstype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+\n+        for c in range(4):\n+            multisig = c >= 2\n+            for n in range(4):\n+                old_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                to_send = (old_balances[n] / 101).quantize(Decimal(\"0.00000001\")) * 10\n+                sends = {}\n+                for k in range(4):\n+                    i = (n + k) % 4\n+                    if not multisig:\n+                        address = self.nodes[i].getnewaddress()\n+                    else:\n+                        addr1 = self.nodes[i].getnewaddress()\n+                        addr2 = self.nodes[i].getnewaddress()\n+                        address = self.nodes[i].addmultisigaddress(2, [addr1, addr2])\n+                    # Do some sanity checking on the created address\n+                    info = self.nodes[i].validateaddress(address)\n+                    print(\"%i: %r\" % (i, info))\n+                    assert(info['isvalid'])\n+                    assert(info['ismine'])\n+                    assert_equal(info['isscript'], multisig or i == 1 or i == 2)\n+                    assert_equal(info['iswitness'], i == 3)\n+                    if (info['isscript']):\n+                        assert_equal(info['script'], 'multisig' if multisig else 'witness_v0_keyhash')\n+                    else:\n+                        assert('script' not in info)\n+                    if (not multisig and (i == 1 or i == 2)):\n+                        assert('embedded' in info)\n+                        assert(not info['embedded']['isscript'])\n+                        assert(info['embedded']['iswitness'])\n+                        assert_equal(info['pubkey'], info['embedded']['pubkey'])\n+                    else:\n+                        assert('embedded' not in info)\n+                    # In each iteration, one node sends 10/101th of its balance to itself, 20/1011ths to the next peer,\n+                    # 30/101ths to the one after that, and 40/101ths to the remaining one.\n+                    sends[address] = to_send * (1 + k)\n+                self.nodes[n].sendmany(\"\", sends)\n+                sync_mempools(self.nodes)\n+                unconf_balances = [self.nodes[i].getunconfirmedbalance() for i in range(4)]\n+                self.nodes[0].generate(1)\n+                sync_blocks(self.nodes)\n+                new_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                for k in range(3):\n+                    i = (n + k + 1) % 4\n+                    assert_equal(unconf_balances[i], to_send * (2 + k))\n+                    assert_equal(new_balances[i], old_balances[i] + to_send * (2 + k) + (50 if i == 0 else 0))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156242225",
      "id" : 156242225,
      "in_reply_to_id" : 156062380,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 62,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 82687564,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156242225",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156291031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156291031"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I still got the errors after a `make clean` and `make`. Not sure if there's anything else I can run to make sure tests run from a blank slate. I did notice earlier that if you run two tests in parallel in separate tabs, things get really weird.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T07:54:06Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"], [\"-addresstype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+\n+        for c in range(4):\n+            multisig = c >= 2\n+            for n in range(4):\n+                old_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                to_send = (old_balances[n] / 101).quantize(Decimal(\"0.00000001\")) * 10\n+                sends = {}\n+                for k in range(4):\n+                    i = (n + k) % 4\n+                    if not multisig:\n+                        address = self.nodes[i].getnewaddress()\n+                    else:\n+                        addr1 = self.nodes[i].getnewaddress()\n+                        addr2 = self.nodes[i].getnewaddress()\n+                        address = self.nodes[i].addmultisigaddress(2, [addr1, addr2])\n+                    # Do some sanity checking on the created address\n+                    info = self.nodes[i].validateaddress(address)\n+                    print(\"%i: %r\" % (i, info))\n+                    assert(info['isvalid'])\n+                    assert(info['ismine'])\n+                    assert_equal(info['isscript'], multisig or i == 1 or i == 2)\n+                    assert_equal(info['iswitness'], i == 3)\n+                    if (info['isscript']):\n+                        assert_equal(info['script'], 'multisig' if multisig else 'witness_v0_keyhash')\n+                    else:\n+                        assert('script' not in info)\n+                    if (not multisig and (i == 1 or i == 2)):\n+                        assert('embedded' in info)\n+                        assert(not info['embedded']['isscript'])\n+                        assert(info['embedded']['iswitness'])\n+                        assert_equal(info['pubkey'], info['embedded']['pubkey'])\n+                    else:\n+                        assert('embedded' not in info)\n+                    # In each iteration, one node sends 10/101th of its balance to itself, 20/1011ths to the next peer,\n+                    # 30/101ths to the one after that, and 40/101ths to the remaining one.\n+                    sends[address] = to_send * (1 + k)\n+                self.nodes[n].sendmany(\"\", sends)\n+                sync_mempools(self.nodes)\n+                unconf_balances = [self.nodes[i].getunconfirmedbalance() for i in range(4)]\n+                self.nodes[0].generate(1)\n+                sync_blocks(self.nodes)\n+                new_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                for k in range(3):\n+                    i = (n + k + 1) % 4\n+                    assert_equal(unconf_balances[i], to_send * (2 + k))\n+                    assert_equal(new_balances[i], old_balances[i] + to_send * (2 + k) + (50 if i == 0 else 0))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156291031",
      "id" : 156291031,
      "in_reply_to_id" : 156062380,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 62,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 82742578,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156291031",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156292268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156292268"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "TIL `make clean` doesn't erase `test/cache`. That was probably it. I'll let you know if I still get this error.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T08:01:42Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"], [\"-addresstype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+\n+        for c in range(4):\n+            multisig = c >= 2\n+            for n in range(4):\n+                old_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                to_send = (old_balances[n] / 101).quantize(Decimal(\"0.00000001\")) * 10\n+                sends = {}\n+                for k in range(4):\n+                    i = (n + k) % 4\n+                    if not multisig:\n+                        address = self.nodes[i].getnewaddress()\n+                    else:\n+                        addr1 = self.nodes[i].getnewaddress()\n+                        addr2 = self.nodes[i].getnewaddress()\n+                        address = self.nodes[i].addmultisigaddress(2, [addr1, addr2])\n+                    # Do some sanity checking on the created address\n+                    info = self.nodes[i].validateaddress(address)\n+                    print(\"%i: %r\" % (i, info))\n+                    assert(info['isvalid'])\n+                    assert(info['ismine'])\n+                    assert_equal(info['isscript'], multisig or i == 1 or i == 2)\n+                    assert_equal(info['iswitness'], i == 3)\n+                    if (info['isscript']):\n+                        assert_equal(info['script'], 'multisig' if multisig else 'witness_v0_keyhash')\n+                    else:\n+                        assert('script' not in info)\n+                    if (not multisig and (i == 1 or i == 2)):\n+                        assert('embedded' in info)\n+                        assert(not info['embedded']['isscript'])\n+                        assert(info['embedded']['iswitness'])\n+                        assert_equal(info['pubkey'], info['embedded']['pubkey'])\n+                    else:\n+                        assert('embedded' not in info)\n+                    # In each iteration, one node sends 10/101th of its balance to itself, 20/1011ths to the next peer,\n+                    # 30/101ths to the one after that, and 40/101ths to the remaining one.\n+                    sends[address] = to_send * (1 + k)\n+                self.nodes[n].sendmany(\"\", sends)\n+                sync_mempools(self.nodes)\n+                unconf_balances = [self.nodes[i].getunconfirmedbalance() for i in range(4)]\n+                self.nodes[0].generate(1)\n+                sync_blocks(self.nodes)\n+                new_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                for k in range(3):\n+                    i = (n + k + 1) % 4\n+                    assert_equal(unconf_balances[i], to_send * (2 + k))\n+                    assert_equal(new_balances[i], old_balances[i] + to_send * (2 + k) + (50 if i == 0 else 0))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156292268",
      "id" : 156292268,
      "in_reply_to_id" : 156062380,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 62,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 82743952,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156292268",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156292781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156292781"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "So \"i.e.\" refers to the reason you need to call `IsSolvable`, not to what `IsSolvable` does? Maybe change the comment to \"Check if the resulting program doesn't use an uncompressed key\"?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T08:04:56Z",
      "diff_hunk" : "@@ -4124,3 +4127,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156292781",
      "id" : 156292781,
      "in_reply_to_id" : 156057894,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 127,
      "path" : "src/wallet/wallet.cpp",
      "position" : 159,
      "pull_request_review_id" : 82744558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156292781",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156363525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156363525"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That wasn't it. It was #11876 (unrelated to this PR, again...).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T13:23:39Z",
      "diff_hunk" : "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that the wallet can send and receive using all combinations of address types.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class AddressTypeTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=p2sh\"], [\"-addresstype=p2sh\", \"-changetype=bech32\"], [\"-addresstype=bech32\"]]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+\n+        for c in range(4):\n+            multisig = c >= 2\n+            for n in range(4):\n+                old_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                to_send = (old_balances[n] / 101).quantize(Decimal(\"0.00000001\")) * 10\n+                sends = {}\n+                for k in range(4):\n+                    i = (n + k) % 4\n+                    if not multisig:\n+                        address = self.nodes[i].getnewaddress()\n+                    else:\n+                        addr1 = self.nodes[i].getnewaddress()\n+                        addr2 = self.nodes[i].getnewaddress()\n+                        address = self.nodes[i].addmultisigaddress(2, [addr1, addr2])\n+                    # Do some sanity checking on the created address\n+                    info = self.nodes[i].validateaddress(address)\n+                    print(\"%i: %r\" % (i, info))\n+                    assert(info['isvalid'])\n+                    assert(info['ismine'])\n+                    assert_equal(info['isscript'], multisig or i == 1 or i == 2)\n+                    assert_equal(info['iswitness'], i == 3)\n+                    if (info['isscript']):\n+                        assert_equal(info['script'], 'multisig' if multisig else 'witness_v0_keyhash')\n+                    else:\n+                        assert('script' not in info)\n+                    if (not multisig and (i == 1 or i == 2)):\n+                        assert('embedded' in info)\n+                        assert(not info['embedded']['isscript'])\n+                        assert(info['embedded']['iswitness'])\n+                        assert_equal(info['pubkey'], info['embedded']['pubkey'])\n+                    else:\n+                        assert('embedded' not in info)\n+                    # In each iteration, one node sends 10/101th of its balance to itself, 20/1011ths to the next peer,\n+                    # 30/101ths to the one after that, and 40/101ths to the remaining one.\n+                    sends[address] = to_send * (1 + k)\n+                self.nodes[n].sendmany(\"\", sends)\n+                sync_mempools(self.nodes)\n+                unconf_balances = [self.nodes[i].getunconfirmedbalance() for i in range(4)]\n+                self.nodes[0].generate(1)\n+                sync_blocks(self.nodes)\n+                new_balances = [self.nodes[i].getbalance() for i in range(4)]\n+                for k in range(3):\n+                    i = (n + k + 1) % 4\n+                    assert_equal(unconf_balances[i], to_send * (2 + k))\n+                    assert_equal(new_balances[i], old_balances[i] + to_send * (2 + k) + (50 if i == 0 else 0))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156363525",
      "id" : 156363525,
      "in_reply_to_id" : 156062380,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 62,
      "path" : "test/functional/address_types.py",
      "position" : null,
      "pull_request_review_id" : 82827088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156363525",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~~not a request for feature/change, just a note: `addmultisigaddress` creates a legacy p2sh no matter what argument is set. This means `addwitnessaddress` is still required for now at least in the case of witness multisig.~~\r\n\r\nNot sure how I got this wrong, it does do `addresstype` default.",
      "created_at" : "2017-12-12T16:33:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-351107035",
      "id" : 351107035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-12T17:47:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351107035",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">addmultisigaddress 1 '[\"bcrt1qk92l37qy9fvz7pmv88w4m0xz4cqlrag4d5fjxrz79av93mwjh7ssgtkemm\"]'\r\n>bcrt1qk92l37qy9fvz7pmv88w4m0xz4cqlrag4d5fjxrz79av93mwjh7ssgtkemm does not refer to a key (code -1)\r\n\r\n~~While I understand the reasoning behind not allowing it(moving towards always providing a pubkey), the error is pretty vague and confusing if the internals are not understood.~~ I was attempting to use a p2wsh inadvertently.",
      "created_at" : "2017-12-12T16:54:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-351113548",
      "id" : 351113548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-12T17:48:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351113548",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "light tACK 0934bf61fbaeb1ea2bf4bd4a99c687a60c9fbf04",
      "created_at" : "2017-12-12T17:00:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-351115650",
      "id" : 351115650,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-12T17:00:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351115650",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156448698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156448698"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Abstract out IsSolvable from Witnessifier\"\r\n\r\ns/does need keys/does not need private keys/?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T18:06:53Z",
      "diff_hunk" : "@@ -81,4 +81,10 @@ SignatureData CombineSignatures(const CScript& scriptPubKey, const BaseSignature\n SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn);\n void UpdateTransaction(CMutableTransaction& tx, unsigned int nIn, const SignatureData& data);\n \n+/* Check whether we know how to sign for an output like this, assuming we\n+ * have all private keys. While this function does need keys, the passed",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156448698",
      "id" : 156448698,
      "original_commit_id" : "4dbd4bb8ba6edd83fc8069fc7673f12e6ea5c7e8",
      "original_position" : 5,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 82927083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156448698",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156459433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156459433"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Extend validateaddress information for P2SH-embedded witness\"\r\n\r\nThis seems like it is duplicating code in ExtractDestinations. Is there a reason that can't be reused here?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T18:46:59Z",
      "diff_hunk" : "@@ -40,6 +40,45 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(which_type)));\n+        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.push_back(Pair(\"address\", EncodeDestination(embedded)));\n+            if (subobj.exists(\"pubkey\")) {\n+                obj.push_back(Pair(\"pubkey\", subobj[\"pubkey\"]));\n+            }\n+            obj.push_back(Pair(\"embedded\", std::move(subobj)));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            obj.push_back(Pair(\"sigsrequired\", solutions_data[0][0]));\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156459433",
      "id" : 156459433,
      "original_commit_id" : "05af17c5aad38e2ce85d2d75823e484055ec1143",
      "original_position" : 30,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 82927083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156459433",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156460591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156460591"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Extend validateaddress information for P2SH-embedded witness\"\r\n\r\nList of included fields is confusing. Could comment characterize which type of fields are included and which fields aren't?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T18:51:22Z",
      "diff_hunk" : "@@ -131,23 +158,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Only if \\\"isscript\\\" is true. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash, witness_unknown\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the P2SH or P2WSH address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\" and \\\"iswitness\\\" is false)\\n\"\n             \"    [\\n\"\n             \"      \\\"address\\\"\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"pubkeys\\\"                     (string, optional) Array of pubkeys associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n+            \"    [\\n\"\n+            \"      \\\"pubkey\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string, optional) The hex value of the raw public key\\n\"\n+            \"  \\\"embedded\\\" : {...},           (object, optional) validateaddress output for the address embedded in P2SH or P2WSH, if any and known. Includes fields: address, pubkey, isscript, script, hex, sigsrequired, pubkeys, addresses, iswitness, witness_version, witness_program\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156460591",
      "id" : 156460591,
      "original_commit_id" : "05af17c5aad38e2ce85d2d75823e484055ec1143",
      "original_position" : 107,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 82927083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156460591",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Rebased after merge of #11854.",
      "created_at" : "2017-12-12T19:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-351161505",
      "id" : 351161505,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-12T19:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351161505",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156470429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156470429"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Implicitly know about P2WPKH redeemscripts\"\r\n\r\nCould you add `assert(mapKeys.count(pubkey.GetID()) || mapWatchKeys.count(pubkey.GetID())`?\r\n\r\nThe need to add implicit scripts is confusing enough that I think it would help to document assumptions and potentially catch bugs in the implementation adding them.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T19:26:52Z",
      "diff_hunk" : "@@ -11,6 +11,22 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::ImplicitlyLearnRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156470429",
      "id" : 156470429,
      "original_commit_id" : "8e42f9c1c9b60867cc737f994371efeb2b7b4689",
      "original_position" : 6,
      "path" : "src/keystore.cpp",
      "position" : 6,
      "pull_request_review_id" : 82927083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156470429",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156471223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156471223"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Implicitly know about P2WPKH redeemscripts\"\r\n\r\nMaybe add a sentence like:\r\n\r\n> \"Implicitly\" refers to fact that scripts are derived automatically from existing keys, and are only stored in memory, not written to disk.\r\n\r\nIt might also be worth saying why they aren't written to disk. It's not clear if that would be completely useless in any downgrade scenario or if it just doesn't help with one of the downgrade scenarios we care about.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T19:29:47Z",
      "diff_hunk" : "@@ -11,6 +11,22 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::ImplicitlyLearnRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH\n+    // outputs. Technically P2WPKH outputs don't have a redeemscript to be\n+    // spent. However, our current IsMine logic requires the corresponding\n+    // P2SH-P2WPKH redeemscript to be present in the wallet in order to accept\n+    // payment even to P2WPKH outputs.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156471223",
      "id" : 156471223,
      "original_commit_id" : "8e42f9c1c9b60867cc737f994371efeb2b7b4689",
      "original_position" : 11,
      "path" : "src/keystore.cpp",
      "position" : 14,
      "pull_request_review_id" : 82927083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156471223",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156478849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156478849"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Support downgrading after recovered keypool witness keys\"\r\n\r\nVariable duplicates `segwit` above.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T19:57:53Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == GetScriptForDestination(segwit) || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        CTxDestination witdest = WitnessV0KeyHash(keyid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156478849",
      "id" : 156478849,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 20,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82962510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156478849",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156479008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156479008"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Support downgrading after recovered keypool witness keys\"\r\n\r\nThis is also computed in the if statement. Maybe declare this earlier and reuse it there.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T19:58:29Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == GetScriptForDestination(segwit) || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        CTxDestination witdest = WitnessV0KeyHash(keyid);\n+        CScript witprog = GetScriptForDestination(witdest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156479008",
      "id" : 156479008,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 21,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82962510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156479008",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156479293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156479293"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Support downgrading after recovered keypool witness keys\"\r\n\r\nCould you add a comment saying what it means if IsSolvable is false? It seems like that should be an error or maybe never happen.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T19:59:29Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == GetScriptForDestination(segwit) || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        CTxDestination witdest = WitnessV0KeyHash(keyid);\n+        CScript witprog = GetScriptForDestination(witdest);\n+        if (IsSolvable(*this, witprog)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156479293",
      "id" : 156479293,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 22,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82962510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156479293",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156482622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156482622"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Support downgrading after recovered keypool witness keys\"\r\n\r\nCan this `assert(mapKeys.count(keyid))`?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T20:12:04Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156482622",
      "id" : 156482622,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 13,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82962510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156482622",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156486302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156486302"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> That seems hard, as we don't distinguish scripts that were added explicitly and implicitly.\r\n\r\nIs there a reason not to distinguish scripts that were added explicitly and implicitly? It seems like it would just require storing `{ CScript script; bool ephemeral; }` in mapScripts. Probably better not to do in this PR, but could this be a good idea for a followup?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T20:28:23Z",
      "diff_hunk" : "@@ -4124,3 +4127,97 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156486302",
      "id" : 156486302,
      "in_reply_to_id" : 155665399,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82962510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156486302",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156505175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156505175"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Support downgrading after recovered keypool witness keys\"\r\n\r\nCan this `assert(mapKeys.count(keyid))`?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T21:47:58Z",
      "diff_hunk" : "@@ -4135,3 +4138,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);\n+        AddCScript(witprog);\n+        // Add the redeemscript, so that P2WSH and P2SH-P2WSH outputs are recognized as ours.\n+        return witdest;\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156505175",
      "id" : 156505175,
      "original_commit_id" : "a7661006b82484969506da49ffc695d2a5bea3d2",
      "original_position" : 137,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82962510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156505175",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156505981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156505981"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Support downgrading after recovered keypool witness keys\"\r\n\r\nNo test seems to fail if this is commented out. Since this is only needed for downgrades it'd be good to have some kind of check to know if it stops working.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T21:50:40Z",
      "diff_hunk" : "@@ -4135,3 +4138,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);\n+        AddCScript(witprog);\n+        // Add the redeemscript, so that P2WSH and P2SH-P2WSH outputs are recognized as ours.\n+        return witdest;\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == GetScriptForDestination(segwit) || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        CTxDestination witdest = WitnessV0KeyHash(keyid);\n+        CScript witprog = GetScriptForDestination(witdest);\n+        if (IsSolvable(*this, witprog)) {\n+            AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156505981",
      "id" : 156505981,
      "original_commit_id" : "a7661006b82484969506da49ffc695d2a5bea3d2",
      "original_position" : 147,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82962510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156505981",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156506863"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156506863"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"SegWit wallet support\"\r\n\r\nNo test seems to fail if this is unset. It'd be good to have a check to know if this stops working.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T21:54:19Z",
      "diff_hunk" : "@@ -4135,3 +4138,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156506863",
      "id" : 156506863,
      "original_commit_id" : "a7661006b82484969506da49ffc695d2a5bea3d2",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82962510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156506863",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156508186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156508186"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156057894\r\n\r\n> So \"i.e.\" refers to the reason you need to call IsSolvable, not to what IsSolvable does? Maybe change the comment to \"Check if the resulting program doesn't use an uncompressed key\"?\r\n\r\nFunny, even though I originally mistook \"i.e.\" for \"e.g.\" when reading the same comment in AddDestinationForKey above (https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155870014), I think sipa's current comment is clearer than your suggestion, because your suggestion doesn't directly mention the solvable call.\r\n\r\nAlso, strictly speaking, unlike in `AddDestinationForKey` above, `IsSolveable` here is not only checking for uncompressed keys but also verifying that `script` was previously added to the wallet.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T21:59:48Z",
      "diff_hunk" : "@@ -4124,3 +4127,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156508186",
      "id" : 156508186,
      "in_reply_to_id" : 156057894,
      "original_commit_id" : "04e82bca42409007fe42da534e2bedea1e929f00",
      "original_position" : 127,
      "path" : "src/wallet/wallet.cpp",
      "position" : 159,
      "pull_request_review_id" : 82997805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156508186",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156509855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156509855"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think its worth trying to figure something out. As it is stuff like listaddressesbyaccount (or, in the future, by labels) will suffer a significant performance regression trying to create DB batches per address, add something thats already there, and then close the batch.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T22:07:07Z",
      "diff_hunk" : "@@ -4124,3 +4127,97 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> CWallet::GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::GetDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156509855",
      "id" : 156509855,
      "in_reply_to_id" : 155665399,
      "original_commit_id" : "e2e9ead25fe0ddb364e35f8eabb5a7f937d3973b",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82999775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156509855",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156524523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156524523"
         }
      },
      "author_association" : "OWNER",
      "body" : "I don't think those asserts are correct for encrypted wallets.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-12T23:18:14Z",
      "diff_hunk" : "@@ -11,6 +11,22 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::ImplicitlyLearnRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156524523",
      "id" : 156524523,
      "in_reply_to_id" : 156470429,
      "original_commit_id" : "8e42f9c1c9b60867cc737f994371efeb2b7b4689",
      "original_position" : 6,
      "path" : "src/keystore.cpp",
      "position" : 6,
      "pull_request_review_id" : 83016659,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156524523",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156532471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156532471"
         }
      },
      "author_association" : "OWNER",
      "body" : "Yes.\r\n\r\nThe short term answer is that ExtractDestinations doesn't actually report destination(s) of a script, but reports either (a) the destination a script corresponds to or (b) the destinations corresponding to the P2PKH versions of the public keys involved in a multisig transactions. In this branch, we don't want public-keys-encoded-as-destinations but the actual public keys.\r\n\r\nThe longer term answer is that ExtractDestinations is nonsensical and we should get rid of it. A script doesn't contain multiple destinations. It either corresponds to a single destination (anything we can treat as an address), or not (which is the case for multisig scripts). Historically, we didn't distinguish between destinations and keys (and P2PKH addresses were just the way to identify a key). I'll add a TODO that ExtractDestinations should be phased out and replaced.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T00:07:30Z",
      "diff_hunk" : "@@ -40,6 +40,45 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(which_type)));\n+        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.push_back(Pair(\"address\", EncodeDestination(embedded)));\n+            if (subobj.exists(\"pubkey\")) {\n+                obj.push_back(Pair(\"pubkey\", subobj[\"pubkey\"]));\n+            }\n+            obj.push_back(Pair(\"embedded\", std::move(subobj)));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            obj.push_back(Pair(\"sigsrequired\", solutions_data[0][0]));\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156532471",
      "id" : 156532471,
      "in_reply_to_id" : 156459433,
      "original_commit_id" : "05af17c5aad38e2ce85d2d75823e484055ec1143",
      "original_position" : 30,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 83025697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156532471",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156537997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156537997"
         }
      },
      "author_association" : "OWNER",
      "body" : "No, that wouldn't work for encrypted wallets.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T00:46:33Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156537997",
      "id" : 156537997,
      "in_reply_to_id" : 156482622,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 13,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83031948,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156537997",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545566"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545566"
         }
      },
      "author_association" : "OWNER",
      "body" : "Adding with a slight modification.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T01:43:58Z",
      "diff_hunk" : "@@ -11,6 +11,22 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::ImplicitlyLearnRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);\n+    // This adds the redeemscripts necessary to detect P2WPKH and P2SH-P2WPKH\n+    // outputs. Technically P2WPKH outputs don't have a redeemscript to be\n+    // spent. However, our current IsMine logic requires the corresponding\n+    // P2SH-P2WPKH redeemscript to be present in the wallet in order to accept\n+    // payment even to P2WPKH outputs.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545566",
      "id" : 156545566,
      "in_reply_to_id" : 156471223,
      "original_commit_id" : "8e42f9c1c9b60867cc737f994371efeb2b7b4689",
      "original_position" : 11,
      "path" : "src/keystore.cpp",
      "position" : 14,
      "pull_request_review_id" : 83040507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545566",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545614"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T01:44:17Z",
      "diff_hunk" : "@@ -131,23 +158,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Only if \\\"isscript\\\" is true. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash, witness_unknown\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the P2SH or P2WSH address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\" and \\\"iswitness\\\" is false)\\n\"\n             \"    [\\n\"\n             \"      \\\"address\\\"\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"pubkeys\\\"                     (string, optional) Array of pubkeys associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n+            \"    [\\n\"\n+            \"      \\\"pubkey\\\"\\n\"\n+            \"      ,...\\n\"\n+            \"    ]\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string, optional) The hex value of the raw public key\\n\"\n+            \"  \\\"embedded\\\" : {...},           (object, optional) validateaddress output for the address embedded in P2SH or P2WSH, if any and known. Includes fields: address, pubkey, isscript, script, hex, sigsrequired, pubkeys, addresses, iswitness, witness_version, witness_program\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545614",
      "id" : 156545614,
      "in_reply_to_id" : 156460591,
      "original_commit_id" : "05af17c5aad38e2ce85d2d75823e484055ec1143",
      "original_position" : 107,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 83040567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545614",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545627"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545627"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T01:44:24Z",
      "diff_hunk" : "@@ -81,4 +81,10 @@ SignatureData CombineSignatures(const CScript& scriptPubKey, const BaseSignature\n SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn);\n void UpdateTransaction(CMutableTransaction& tx, unsigned int nIn, const SignatureData& data);\n \n+/* Check whether we know how to sign for an output like this, assuming we\n+ * have all private keys. While this function does need keys, the passed",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545627",
      "id" : 156545627,
      "in_reply_to_id" : 156448698,
      "original_commit_id" : "4dbd4bb8ba6edd83fc8069fc7673f12e6ea5c7e8",
      "original_position" : 5,
      "path" : "src/script/sign.h",
      "position" : null,
      "pull_request_review_id" : 83040581,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545627",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545646"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T01:44:34Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == GetScriptForDestination(segwit) || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        CTxDestination witdest = WitnessV0KeyHash(keyid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545646",
      "id" : 156545646,
      "in_reply_to_id" : 156478849,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 20,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83040609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545646",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545661"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T01:44:40Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == GetScriptForDestination(segwit) || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        CTxDestination witdest = WitnessV0KeyHash(keyid);\n+        CScript witprog = GetScriptForDestination(witdest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545661",
      "id" : 156545661,
      "in_reply_to_id" : 156479008,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 21,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83040631,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545661",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545692"
         }
      },
      "author_association" : "OWNER",
      "body" : "I removed the check, and added a comment why it's not needed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T01:44:54Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == GetScriptForDestination(segwit) || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        CTxDestination witdest = WitnessV0KeyHash(keyid);\n+        CScript witprog = GetScriptForDestination(witdest);\n+        if (IsSolvable(*this, witprog)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545692",
      "id" : 156545692,
      "in_reply_to_id" : 156479293,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 22,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83040666,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545692",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545989"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545989"
         }
      },
      "author_association" : "OWNER",
      "body" : "Yes, that's inevitable.\r\n\r\nWe have two conditions under which we add the script explicitly (when generating a new address, and when noticing an IsMine keypool address on the network). Both of these always already have the script added implicitly, so there is no change in behaviour from the explicit add. It's just there for compatibility with downgrading to earlier software, which we can't test for in the current test framework AFAIK.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T01:47:08Z",
      "diff_hunk" : "@@ -4135,3 +4138,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156545989",
      "id" : 156545989,
      "in_reply_to_id" : 156506863,
      "original_commit_id" : "a7661006b82484969506da49ffc695d2a5bea3d2",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83040994,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156545989",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156546074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156546074"
         }
      },
      "author_association" : "OWNER",
      "body" : "No, that wouldn't work for encrypted wallets (which use mapCryptedKeys).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T01:47:58Z",
      "diff_hunk" : "@@ -4135,3 +4138,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);\n+        AddCScript(witprog);\n+        // Add the redeemscript, so that P2WSH and P2SH-P2WSH outputs are recognized as ours.\n+        return witdest;\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156546074",
      "id" : 156546074,
      "in_reply_to_id" : 156505175,
      "original_commit_id" : "a7661006b82484969506da49ffc695d2a5bea3d2",
      "original_position" : 137,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83041086,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156546074",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156546118"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156546118"
         }
      },
      "author_association" : "OWNER",
      "body" : "Likewise, this is untestable because it only affects downgrading.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T01:48:15Z",
      "diff_hunk" : "@@ -4135,3 +4138,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+    case OUTPUT_TYPE_P2SH:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);\n+        AddCScript(witprog);\n+        // Add the redeemscript, so that P2WSH and P2SH-P2WSH outputs are recognized as ours.\n+        return witdest;\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == GetScriptForDestination(segwit) || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        CTxDestination witdest = WitnessV0KeyHash(keyid);\n+        CScript witprog = GetScriptForDestination(witdest);\n+        if (IsSolvable(*this, witprog)) {\n+            AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156546118",
      "id" : 156546118,
      "in_reply_to_id" : 156505981,
      "original_commit_id" : "a7661006b82484969506da49ffc695d2a5bea3d2",
      "original_position" : 147,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83041132,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156546118",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Updated to address some of @ryanofsky's comments: a7661006b82484969506da49ffc695d2a5bea3d2 -> 50038c2cc7d6456a6725e120b0a11537585e2415.\r\n",
      "created_at" : "2017-12-13T01:55:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-351256637",
      "id" : 351256637,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-13T01:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351256637",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156778208"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156778208"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Abstract out IsSolvable from Witnessifier\"\r\n\r\nWhen would ProduceSignature be expected to succeed but VerifyScript be expected to fail? Asking because I don't know the answer, but also because I think it would be helpful to have a comment here that says whether VerifyScript here changes the logic or is just defensive.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T20:48:26Z",
      "diff_hunk" : "@@ -422,3 +422,17 @@ bool DummySignatureCreator::CreateSig(std::vector<unsigned char>& vchSig, const\n     vchSig[6 + 33 + 32] = SIGHASH_ALL;\n     return true;\n }\n+\n+bool IsSolvable(const CKeyStore& store, const CScript& script)\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(&store);\n+    SignatureData sigs;\n+    // Make sure that STANDARD_SCRIPT_VERIFY_FLAGS includes SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, the most\n+    // important property this function is designed to test for.\n+    static_assert(STANDARD_SCRIPT_VERIFY_FLAGS & SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, \"IsSolvable requires standard script flags to include WITNESS_PUBKEYTYPE\");\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156778208",
      "id" : 156778208,
      "original_commit_id" : "b2c21fce66a2ce62cba832b87d086b5ea587691a",
      "original_position" : 16,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 82997805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156778208",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156778880"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156778880"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156459433\r\n\r\nThanks, really appreciate the clarification (and TODOs).\r\n\r\nBy the same logic, would you also want to deprecate the \"addresses\" field since it is also using addresses to refer to keys that are not destinations?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T20:51:15Z",
      "diff_hunk" : "@@ -40,6 +40,45 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(which_type)));\n+        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.push_back(Pair(\"address\", EncodeDestination(embedded)));\n+            if (subobj.exists(\"pubkey\")) {\n+                obj.push_back(Pair(\"pubkey\", subobj[\"pubkey\"]));\n+            }\n+            obj.push_back(Pair(\"embedded\", std::move(subobj)));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            obj.push_back(Pair(\"sigsrequired\", solutions_data[0][0]));\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156778880",
      "id" : 156778880,
      "in_reply_to_id" : 156459433,
      "original_commit_id" : "05af17c5aad38e2ce85d2d75823e484055ec1143",
      "original_position" : 30,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 82997805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156778880",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156779570"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156779570"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Extend validateaddress information for P2SH-embedded witness\"\r\n\r\nJust FYI, but could pushKV() instead of push_back(Pair()) throughout this function.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T20:54:07Z",
      "diff_hunk" : "@@ -40,6 +40,47 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(which_type)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156779570",
      "id" : 156779570,
      "original_commit_id" : "f20398b80520d9e1f572893a8b2cc9f0e79413bc",
      "original_position" : 10,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 82997805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156779570",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156790854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156790854"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Extend validateaddress information for P2SH-embedded witness\"\r\n\r\nWhy mirror this one field from the embedded object into the parent object and not others? E.g. would it make sense to mirror the \"pubkeys\" field as well, since it seems to be the equivalent of \"pubkey\" for multisig scripts?\r\n\r\nAlso is it worth noting in validateaddress documentation that this will contain pubkey from either a top level or an embedded script?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T21:30:28Z",
      "diff_hunk" : "@@ -40,6 +40,47 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(which_type)));\n+        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.push_back(Pair(\"address\", EncodeDestination(embedded)));\n+            subobj.push_back(Pair(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end())));\n+            if (subobj.exists(\"pubkey\")) {\n+                obj.push_back(Pair(\"pubkey\", subobj[\"pubkey\"]));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156790854",
      "id" : 156790854,
      "original_commit_id" : "f20398b80520d9e1f572893a8b2cc9f0e79413bc",
      "original_position" : 21,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 82997805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156790854",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156805781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156805781"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156470429\r\n\r\n> I don't think those asserts are correct for encrypted wallets.\r\n\r\nFollowing seems to work (if you also move the two `ImplicitlyLearnRelatedKeyScripts()` calls one line down in `CBasicKeyStore::AddKeyPubKey` and `CCryptoKeyStore::AddCryptedKey`):\r\n```c++\r\nassert(HaveKey(pubkey.GetID()) || mapWatchKeys.count(pubkey.GetID()));\r\n```",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T22:33:48Z",
      "diff_hunk" : "@@ -11,6 +11,22 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::ImplicitlyLearnRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156805781",
      "id" : 156805781,
      "in_reply_to_id" : 156470429,
      "original_commit_id" : "8e42f9c1c9b60867cc737f994371efeb2b7b4689",
      "original_position" : 6,
      "path" : "src/keystore.cpp",
      "position" : 6,
      "pull_request_review_id" : 82997805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156805781",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156809759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156809759"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156506863\r\n\r\n>  It's just there for compatibility with downgrading to earlier software, which we can't test for in the current test framework AFAIK.\r\n\r\nI see the difficulty, and maybe this should be saved for a followup, but I could imagine testing this by subclassing `CWallet` in a unit test, overriding `AddCScript`, and ensuring the correct calls are made. Another option could be to trigger this code from python, then shut down the node and do the equivalent of `popen(\"db_dump wallet.dat\")` and make sure the expected cscript entries are present.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T22:53:37Z",
      "diff_hunk" : "@@ -4135,3 +4138,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156809759",
      "id" : 156809759,
      "in_reply_to_id" : 156506863,
      "original_commit_id" : "a7661006b82484969506da49ffc695d2a5bea3d2",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82997805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156809759",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156811636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811636"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156505175\r\n\r\n> No, that wouldn't work for encrypted wallets.\r\n\r\nI think `assert(HaveKey(keyid))` should work.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-13T23:02:44Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156811636",
      "id" : 156811636,
      "in_reply_to_id" : 156482622,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 13,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82997805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811636",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832524"
         }
      },
      "author_association" : "OWNER",
      "body" : "Added.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-14T01:24:37Z",
      "diff_hunk" : "@@ -11,6 +11,22 @@ bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n }\n \n+void CBasicKeyStore::ImplicitlyLearnRelatedKeyScripts(const CPubKey& pubkey)\n+{\n+    AssertLockHeld(cs_KeyStore);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832524",
      "id" : 156832524,
      "in_reply_to_id" : 156470429,
      "original_commit_id" : "8e42f9c1c9b60867cc737f994371efeb2b7b4689",
      "original_position" : 6,
      "path" : "src/keystore.cpp",
      "position" : 6,
      "pull_request_review_id" : 83374317,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832524",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832545"
         }
      },
      "author_association" : "OWNER",
      "body" : "Added a comment about that too.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-14T01:24:50Z",
      "diff_hunk" : "@@ -40,6 +40,45 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(which_type)));\n+        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.push_back(Pair(\"address\", EncodeDestination(embedded)));\n+            if (subobj.exists(\"pubkey\")) {\n+                obj.push_back(Pair(\"pubkey\", subobj[\"pubkey\"]));\n+            }\n+            obj.push_back(Pair(\"embedded\", std::move(subobj)));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            obj.push_back(Pair(\"sigsrequired\", solutions_data[0][0]));\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832545",
      "id" : 156832545,
      "in_reply_to_id" : 156459433,
      "original_commit_id" : "05af17c5aad38e2ce85d2d75823e484055ec1143",
      "original_position" : 30,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 83374340,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832545",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832572"
         }
      },
      "author_association" : "OWNER",
      "body" : "Added. ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-14T01:25:07Z",
      "diff_hunk" : "@@ -4225,3 +4226,18 @@ CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputTyp\n     default: assert(false);\n     }\n }\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832572",
      "id" : 156832572,
      "in_reply_to_id" : 156482622,
      "original_commit_id" : "212d794ea5b2ade021657625a31527d85570781e",
      "original_position" : 13,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83374371,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832572",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832642"
         }
      },
      "author_association" : "OWNER",
      "body" : "Yes, right - you can do a unit test for this; it's only end-to-end testing that's hard.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-14T01:25:42Z",
      "diff_hunk" : "@@ -4135,3 +4138,106 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832642",
      "id" : 156832642,
      "in_reply_to_id" : 156506863,
      "original_commit_id" : "a7661006b82484969506da49ffc695d2a5bea3d2",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83374449,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832642",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832679"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-14T01:26:00Z",
      "diff_hunk" : "@@ -40,6 +40,47 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(which_type)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832679",
      "id" : 156832679,
      "in_reply_to_id" : 156779570,
      "original_commit_id" : "f20398b80520d9e1f572893a8b2cc9f0e79413bc",
      "original_position" : 10,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 83374493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832679",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832977"
         }
      },
      "author_association" : "OWNER",
      "body" : "Added a comment, and in the RPC documentation.\r\n\r\nThe reason is simply to not silently break backward compatibility with the expected ability to call `validateaddress(getnewaddress())['pubkey']`. That concern doesn't exist for 'pubkeys'.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-14T01:28:15Z",
      "diff_hunk" : "@@ -40,6 +40,47 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(which_type)));\n+        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.push_back(Pair(\"address\", EncodeDestination(embedded)));\n+            subobj.push_back(Pair(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end())));\n+            if (subobj.exists(\"pubkey\")) {\n+                obj.push_back(Pair(\"pubkey\", subobj[\"pubkey\"]));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832977",
      "id" : 156832977,
      "in_reply_to_id" : 156790854,
      "original_commit_id" : "f20398b80520d9e1f572893a8b2cc9f0e79413bc",
      "original_position" : 21,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 83374810,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156832977",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156833634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156833634"
         }
      },
      "author_association" : "OWNER",
      "body" : "It's just defense now, as `ProduceSignature` already calls `VerifyScript` with the exact same arguments. I guess we could get rid of it, but it feels much safer this way.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-14T01:33:38Z",
      "diff_hunk" : "@@ -422,3 +422,17 @@ bool DummySignatureCreator::CreateSig(std::vector<unsigned char>& vchSig, const\n     vchSig[6 + 33 + 32] = SIGHASH_ALL;\n     return true;\n }\n+\n+bool IsSolvable(const CKeyStore& store, const CScript& script)\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(&store);\n+    SignatureData sigs;\n+    // Make sure that STANDARD_SCRIPT_VERIFY_FLAGS includes SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, the most\n+    // important property this function is designed to test for.\n+    static_assert(STANDARD_SCRIPT_VERIFY_FLAGS & SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, \"IsSolvable requires standard script flags to include WITNESS_PUBKEYTYPE\");\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156833634",
      "id" : 156833634,
      "in_reply_to_id" : 156778208,
      "original_commit_id" : "b2c21fce66a2ce62cba832b87d086b5ea587691a",
      "original_position" : 16,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 83375530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156833634",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Added in more comments in response to @ryanofsky's review. 50038c2cc7d6456a6725e120b0a11537585e2415 -> 23bbb033f6551b826ab63cdb57980e483ccecf92.",
      "created_at" : "2017-12-14T01:50:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-351583330",
      "id" : 351583330,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-14T01:50:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351583330",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156994464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156994464"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156832545\r\n\r\nMaybe add a sentence like \"The addresses field is problematic because it confuses keys and destination addresses, using addresses to refer to multisig keys that should not be treated like destinations.\"",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-14T16:32:41Z",
      "diff_hunk" : "@@ -40,6 +40,51 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n+                CPubKey key(solutions_data[i].begin(), solutions_data[i].end());\n+                a.push_back(EncodeDestination(key.GetID()));\n+                pubkeys.push_back(HexStr(key.begin(), key.end()));\n+            }\n+            obj.pushKV(\"pubkeys\", std::move(pubkeys));\n+        }\n+\n+        // Only add the 'addresses' field when needed for backward compatibility. New applications can use",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156994464",
      "id" : 156994464,
      "original_commit_id" : "23bbb033f6551b826ab63cdb57980e483ccecf92",
      "original_position" : 41,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 83563917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156994464",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157001582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157001582"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r156778208\r\n\r\n> It's just defense now\r\n\r\nCould you add a comment like \"VerifyScript check is just defensive, and should never fail.\" I was pretty confused by this code and thought I might be missing something about the way ProduceSignature worked.\r\n",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-14T16:56:59Z",
      "diff_hunk" : "@@ -422,3 +422,17 @@ bool DummySignatureCreator::CreateSig(std::vector<unsigned char>& vchSig, const\n     vchSig[6 + 33 + 32] = SIGHASH_ALL;\n     return true;\n }\n+\n+bool IsSolvable(const CKeyStore& store, const CScript& script)\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(&store);\n+    SignatureData sigs;\n+    // Make sure that STANDARD_SCRIPT_VERIFY_FLAGS includes SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, the most\n+    // important property this function is designed to test for.\n+    static_assert(STANDARD_SCRIPT_VERIFY_FLAGS & SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, \"IsSolvable requires standard script flags to include WITNESS_PUBKEYTYPE\");\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157001582",
      "id" : 157001582,
      "in_reply_to_id" : 156778208,
      "original_commit_id" : "b2c21fce66a2ce62cba832b87d086b5ea587691a",
      "original_position" : 16,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 83563917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157001582",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt asked me to review the integration tests part of this. I got as far as the new address_types test, but I found it really difficult to read because of the nested for loops with unobvious index names. I ended up rewriting it completely here: https://github.com/jnewbery/bitcoin/tree/pr11403.1\r\n\r\n@sipa - can you take a look. Feel free to take the commit entirely or pick out bits that you like. I made a few other changes while I was there:\r\n- moved block generation to a 5th node, so accounting in the test didn't need to worry about coinbases maturing out of nowhere.\r\n- overrode the `setup_network()` method so all nodes are connected in a mesh. Default topology in the test framework is a chain, and I noticed tx propogation was really slow. changing to a full mesh network cuts test time in half.\r\n- added commenting and logging.\r\n- added checking for the sending node's {unconfirmed,} balance after each iteration.\r\n\r\nYour original test iterated over each node 4 times (twice for single key addresses and twice for multisig addresses). I don't know if that's strictly necessary, but I've retained it in my version of the test.",
      "created_at" : "2017-12-14T22:29:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-351855906",
      "id" : 351855906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-14T22:29:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351855906",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157284429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157284429"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-15T19:43:18Z",
      "diff_hunk" : "@@ -40,6 +40,51 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n+                CPubKey key(solutions_data[i].begin(), solutions_data[i].end());\n+                a.push_back(EncodeDestination(key.GetID()));\n+                pubkeys.push_back(HexStr(key.begin(), key.end()));\n+            }\n+            obj.pushKV(\"pubkeys\", std::move(pubkeys));\n+        }\n+\n+        // Only add the 'addresses' field when needed for backward compatibility. New applications can use",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157284429",
      "id" : 157284429,
      "in_reply_to_id" : 156994464,
      "original_commit_id" : "23bbb033f6551b826ab63cdb57980e483ccecf92",
      "original_position" : 41,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 83907344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157284429",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@ryanofsky Thanks a lot for your extensive review and agree with most things on the TODO list, though I prefer not expanding the scope in this PR right now.\r\n\r\n@jnewbery Thanks, that looks easier to read indeed. I've squashed it into my commit, and made some more changes.\r\n\r\nAll: I noticed that when selecting `-addresstype=p2sh`, `addmultisigaddress` would produce P2SH-multisig addresses rather than P2SH-P2WSH-multisig (which isn't really consistent with `getnewaddress` which would produce P2SH-P2WPKH in that case). I've rectified this, and adapted the tests.",
      "created_at" : "2017-12-15T19:45:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352095070",
      "id" : 352095070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-15T19:45:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352095070",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Fails the windows tests currently on travis:\r\n```\r\nRunning A272 test cases...\r\n\r\nssertion failed!\r\n\r\nProgram: Z:\\home\\travis\\build\\bitcoin\\bitcoin\\build\\bitcoin-x86_64-w64-mingw32\\src\\test\\test_bitcoin.exe\r\nFile: wallet/wallet.cpp, Line 4202\r\n\r\nExpression: false\r\n```\r\n",
      "created_at" : "2017-12-16T08:37:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352169821",
      "id" : 352169821,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-16T08:37:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352169821",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the rationale for not using `bech32` by default for `-changetype`? They are never user-facing so (short term) compatibility isn't an issue and the sender will enjoy full segwit savings for successive spending operations.",
      "created_at" : "2017-12-17T15:58:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352265566",
      "id" : 352265566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T16:02:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352265566",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/551068?v=4",
         "events_url" : "https://api.github.com/users/FelixWeis/events{/privacy}",
         "followers_url" : "https://api.github.com/users/FelixWeis/followers",
         "following_url" : "https://api.github.com/users/FelixWeis/following{/other_user}",
         "gists_url" : "https://api.github.com/users/FelixWeis/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/FelixWeis",
         "id" : 551068,
         "login" : "FelixWeis",
         "organizations_url" : "https://api.github.com/users/FelixWeis/orgs",
         "received_events_url" : "https://api.github.com/users/FelixWeis/received_events",
         "repos_url" : "https://api.github.com/users/FelixWeis/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/FelixWeis/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/FelixWeis/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/FelixWeis"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I've never used GIT for specific patches, and pretty new to GIT overall.  How do I get a merge patchball from GIT to apply this change to test it?  I just did \"git pull origin master\", built, and started \"bitcoin-qt -addresstype bech32\", and Console's \"getnewaddress\" gave me \"16ESqniuMJ3eXViX7MiHWSBb2iGN4PcScS\", which is clearly not a Bech32 address.\r\n\r\nI did \"make check\" and everything passed.",
      "created_at" : "2017-12-17T17:50:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352272903",
      "id" : 352272903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T23:46:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352272903",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/224672?v=4",
         "events_url" : "https://api.github.com/users/Ulmo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ulmo/followers",
         "following_url" : "https://api.github.com/users/Ulmo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ulmo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ulmo",
         "id" : 224672,
         "login" : "Ulmo",
         "organizations_url" : "https://api.github.com/users/Ulmo/orgs",
         "received_events_url" : "https://api.github.com/users/Ulmo/received_events",
         "repos_url" : "https://api.github.com/users/Ulmo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ulmo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ulmo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ulmo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Ulmo try https://gist.github.com/piscisaureus/3342247 (or Stackoverflow if it doesn't work)",
      "created_at" : "2017-12-17T18:06:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352274028",
      "id" : 352274028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T18:06:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352274028",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/425166?v=4",
         "events_url" : "https://api.github.com/users/flack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/flack/followers",
         "following_url" : "https://api.github.com/users/flack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/flack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/flack",
         "id" : 425166,
         "login" : "flack",
         "organizations_url" : "https://api.github.com/users/flack/orgs",
         "received_events_url" : "https://api.github.com/users/flack/received_events",
         "repos_url" : "https://api.github.com/users/flack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/flack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/flack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/flack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Ulmo manually doing\r\n```\r\ngit remote add sipa https://github.com/sipa/bitcoin\r\ngit fetch sipa 201709_segwitwallet2\r\ngit checkout sipa/201709_segwitwallet2 \r\n```\r\n\r\nShould work too.",
      "created_at" : "2017-12-17T19:00:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352277235",
      "id" : 352277235,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T19:00:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352277235",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3824379?v=4",
         "events_url" : "https://api.github.com/users/hsjoberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hsjoberg/followers",
         "following_url" : "https://api.github.com/users/hsjoberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hsjoberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hsjoberg",
         "id" : 3824379,
         "login" : "hsjoberg",
         "organizations_url" : "https://api.github.com/users/hsjoberg/orgs",
         "received_events_url" : "https://api.github.com/users/hsjoberg/received_events",
         "repos_url" : "https://api.github.com/users/hsjoberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hsjoberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hsjoberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hsjoberg"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Tested ACK e721efb\r\n\r\n> Should work too.\r\n\r\nAlternatively (assuming remote `origin` is pointed to `bitcoin/bitcoin`):\r\n```\r\ngit fetch origin pull/11403/head\r\ngit checkout FETCH_HEAD\r\n```",
      "created_at" : "2017-12-17T19:05:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352277484",
      "id" : 352277484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T19:06:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352277484",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK e721efb2bd3687176c0e93e1c5a9e9e31f76b083\r\n* Compiled and run on different environments\r\n* Extensively tested on OSX\r\n\r\nGitian build:\r\nhttps://bitcoin.jonasschnelli.ch/build/422 (failed linux build is unrelated)\r\n",
      "created_at" : "2017-12-17T19:24:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352278840",
      "id" : 352278840,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T19:24:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352278840",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested ACK e721efb.\r\n\r\nCompiles and runs fine on Linux x86_64 Debian (Mint).\r\nAre there any outstanding issues that need help/testing?",
      "created_at" : "2017-12-17T19:46:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352280329",
      "id" : 352280329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T19:53:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352280329",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3824379?v=4",
         "events_url" : "https://api.github.com/users/hsjoberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hsjoberg/followers",
         "following_url" : "https://api.github.com/users/hsjoberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hsjoberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hsjoberg",
         "id" : 3824379,
         "login" : "hsjoberg",
         "organizations_url" : "https://api.github.com/users/hsjoberg/orgs",
         "received_events_url" : "https://api.github.com/users/hsjoberg/received_events",
         "repos_url" : "https://api.github.com/users/hsjoberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hsjoberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hsjoberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hsjoberg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "bip68-sequence.py is broken on this branch (+ the travis assert failures)",
      "created_at" : "2017-12-17T20:35:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352283400",
      "id" : 352283400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T20:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352283400",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157379341"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157379341"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: the indentation here is wrong, should get an additional two spaces.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T20:45:58Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157379341",
      "id" : 157379341,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 89,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157379341",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157379791"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157379791"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "technically optional for WitnessUnknown-type addresses.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T21:02:56Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157379791",
      "id" : 157379791,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 97,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157379791",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157379827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157379827"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/only if \\\"isscript\\\" is true/only if \\\"isscript\\\" is true and the wallet knows what the redeemScript/. There's a few more of these, I dunno if you want to bother specifying everything that specifically or just focus on #10583.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T21:04:30Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Only if \\\"isscript\\\" is true. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash, witness_unknown\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157379827",
      "id" : 157379827,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 99,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157379827",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@FelixWeis if it's default I'm not sure every service can receive from bech32, looking at coinbase. I'd prefer it, but it I'm wondering how many other services are as broken as coinbase. https://twitter.com/karel_3d/status/939974972163940353\r\n\r\nI guess it's on them to fix it and conform to standard behavior anyway. There is also privacy related issues with that.",
      "created_at" : "2017-12-17T21:04:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352285423",
      "id" : 352285423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T21:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352285423",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/446261?v=4",
         "events_url" : "https://api.github.com/users/juscamarena/events{/privacy}",
         "followers_url" : "https://api.github.com/users/juscamarena/followers",
         "following_url" : "https://api.github.com/users/juscamarena/following{/other_user}",
         "gists_url" : "https://api.github.com/users/juscamarena/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/juscamarena",
         "id" : 446261,
         "login" : "juscamarena",
         "organizations_url" : "https://api.github.com/users/juscamarena/orgs",
         "received_events_url" : "https://api.github.com/users/juscamarena/received_events",
         "repos_url" : "https://api.github.com/users/juscamarena/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/juscamarena/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/juscamarena/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/juscamarena"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@FelixWeis the rationale is to not reveal which output of yours is change by default as it would massively harm privacy by default.\r\n\r\n@juscamarena it shouldnt matter for change, for default address types, indeed, it would be premature to use bech32 by default, but for change we can do whatever we want.",
      "created_at" : "2017-12-17T21:06:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352285560",
      "id" : 352285560,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T21:07:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352285560",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@juscamarena Old nodes wouldn't be able to trust non-standard transactions, and so they won't show up before they get confirmed. That's why the payment processor part of Coinbase and BitPay had problems.\r\n\r\nI think this applies to P2WPKH in P2SH too, but perhaps someone else can confirm that.",
      "created_at" : "2017-12-17T21:08:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352285670",
      "id" : 352285670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T21:08:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352285670",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3824379?v=4",
         "events_url" : "https://api.github.com/users/hsjoberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hsjoberg/followers",
         "following_url" : "https://api.github.com/users/hsjoberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hsjoberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hsjoberg",
         "id" : 3824379,
         "login" : "hsjoberg",
         "organizations_url" : "https://api.github.com/users/hsjoberg/orgs",
         "received_events_url" : "https://api.github.com/users/hsjoberg/received_events",
         "repos_url" : "https://api.github.com/users/hsjoberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hsjoberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hsjoberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hsjoberg"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Testing this now.\r\n\r\nMy address generation script, which already converts to P2SH-P2WPKH and P2WPKH (bech32) as alternatives to users, was confused by the new default behaviour.  The P2SH address can't be converted to bech32 using addwitnessaddress.  Not a bug, but new behaviour which may come as a surprise to some.\r\n\r\nThe embedded address in P2SH, as reported by validateaddress P2SH-address, does not inherit the label (account) of the P2SH address.  IMO it should when it was generated with the account as parameter to getnewaddress, but I can work around it by using setaccount separately on the embedded bech32 address.",
      "created_at" : "2017-12-17T21:39:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352287609",
      "id" : 352287609,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T21:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352287609",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/15728135?v=4",
         "events_url" : "https://api.github.com/users/sturles/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sturles/followers",
         "following_url" : "https://api.github.com/users/sturles/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sturles/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sturles",
         "id" : 15728135,
         "login" : "sturles",
         "organizations_url" : "https://api.github.com/users/sturles/orgs",
         "received_events_url" : "https://api.github.com/users/sturles/received_events",
         "repos_url" : "https://api.github.com/users/sturles/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sturles/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sturles/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sturles"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@sturles You can also generate a bech32 address directly by passing the  `addresstype` parameter to `getnewaddress`. Long term, I don't think we'll be maintaining the possibility of coverting one address type to another.",
      "created_at" : "2017-12-17T21:49:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352288367",
      "id" : 352288367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T21:49:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352288367",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157381826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157381826"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "(not a regression, but might as well fix): Missing witness_version, witness_program.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T22:19:05Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157381826",
      "id" : 157381826,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 98,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157381826",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157381833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157381833"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Will conflict with #11545. Seems strange to blindly cast here either way, even though we always did this in ExtractDestinations.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T22:19:25Z",
      "diff_hunk" : "@@ -40,6 +40,53 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157381833",
      "id" : 157381833,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 31,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157381833",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Pull request to fix the bip68-sequence.py test open for @sipa's branch.\r\n(I'm not sure if this the correct routine for adding commits to another persons pull request.)\r\n\r\nAlso, this PR let's the user set the address type through the configuration file -- it would be nice if this could be exposed from the Qt GUI as well.\r\nIf there's any interest, I have code ready for that which could be looked into once this PR is merged.",
      "created_at" : "2017-12-17T22:21:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352290607",
      "id" : 352290607,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T22:21:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352290607",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3824379?v=4",
         "events_url" : "https://api.github.com/users/hsjoberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hsjoberg/followers",
         "following_url" : "https://api.github.com/users/hsjoberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hsjoberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hsjoberg",
         "id" : 3824379,
         "login" : "hsjoberg",
         "organizations_url" : "https://api.github.com/users/hsjoberg/orgs",
         "received_events_url" : "https://api.github.com/users/hsjoberg/received_events",
         "repos_url" : "https://api.github.com/users/hsjoberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hsjoberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hsjoberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hsjoberg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157382183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157382183"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I would not put this so strongly. The only thing really wrong with referring to public keys by their base58 address is that we want to split wallet out from other subsystems, ie #10583 implies this is the right direction.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T22:30:28Z",
      "diff_hunk" : "@@ -40,6 +40,53 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n+                CPubKey key(solutions_data[i].begin(), solutions_data[i].end());\n+                a.push_back(EncodeDestination(key.GetID()));\n+                pubkeys.push_back(HexStr(key.begin(), key.end()));\n+            }\n+            obj.pushKV(\"pubkeys\", std::move(pubkeys));\n+        }\n+\n+        // The \"addresses\" field is problematic because it confuses keys and destination addresses, using",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157382183",
      "id" : 157382183,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 41,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157382183",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157382293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157382293"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No? This is included if script is anything standard with a key and iswitness is false, not just multisig.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T22:34:08Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Only if \\\"isscript\\\" is true. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash, witness_unknown\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the P2SH or P2WSH address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\" and \\\"iswitness\\\" is false)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157382293",
      "id" : 157382293,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 101,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157382293",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157382629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157382629"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Need some kind of corresponding erase in RemoveWatchOnly otherwise removal doesn't work properly. Not clear how to fix this but I think blind removal is probably better than not removing at all. Given the issue still pending at https://github.com/bitcoin/bitcoin/pull/11403#discussion_r155665399, I think we're gonna have to have some kind of marker for \"was implicitly added\".",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T22:44:50Z",
      "diff_hunk" : "@@ -110,8 +133,10 @@ bool CBasicKeyStore::AddWatchOnly(const CScript &dest)\n     LOCK(cs_KeyStore);\n     setWatchOnly.insert(dest);\n     CPubKey pubKey;\n-    if (ExtractPubKey(dest, pubKey))\n+    if (ExtractPubKey(dest, pubKey)) {\n         mapWatchKeys[pubKey.GetID()] = pubKey;\n+        ImplicitlyLearnRelatedKeyScripts(pubKey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157382629",
      "id" : 157382629,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 44,
      "path" : "src/keystore.cpp",
      "position" : 47,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157382629",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157383354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157383354"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ugh, this sucks. We return a pubkey, so could end up adding for g_address_type and then getting used as g_change_type. Given this function is *only* used by GetAccountAddress in rpcwallet (which turns it into an address anyway), can you refactor a bit to make this return an account *address* instead?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T23:10:33Z",
      "diff_hunk" : "@@ -850,7 +852,7 @@ bool CWallet::GetAccountPubkey(CPubKey &pubKey, std::string strAccount, bool bFo\n         if (!GetKeyFromPool(account.vchPubKey, false))\n             return false;\n \n-        SetAddressBook(account.vchPubKey.GetID(), strAccount, \"receive\");\n+        SetAddressBook(AddDestinationForKey(account.vchPubKey, g_address_type), strAccount, \"receive\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157383354",
      "id" : 157383354,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 23,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157383354",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157383584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157383584"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is ever so slightly confusing, maybe skip the FormatOutputType part and just say \"default is whatever is set for -addresstype\".",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T23:19:17Z",
      "diff_hunk" : "@@ -16,6 +16,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", strprintf(_(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));\n+    strUsage += HelpMessageOpt(\"-changetype\", strprintf(_(\"What type of change to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default is same as -addresstype: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157383584",
      "id" : 157383584,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157383584",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157383933"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157383933"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems much too agressive - I dont think we should be using assert(false) for cases of \"well, the UI is gonna be very confused cause the enum -> string conversion failed\".",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T23:29:55Z",
      "diff_hunk" : "@@ -4135,3 +4138,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157383933",
      "id" : 157383933,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 75,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157383933",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157384030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157384030"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe this wholly prevents you from getting a segwit address for addmultisigaddress if no all the keys are (at least watch only) in your wallet? Needs a test for this issue, probably.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T23:33:38Z",
      "diff_hunk" : "@@ -4135,3 +4138,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157384030",
      "id" : 157384030,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 128,
      "path" : "src/wallet/wallet.cpp",
      "position" : 160,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157384030",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157384169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157384169"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If I'm reading this correctly, if you import with importpubkey you can downgrade and you'll still get the segwit watchonly, but not if you do an importprivkey? This seems strange, but either way the behavior should be documented in the help text of both importprivkey and importpubkey at least until 0.17 (or in release notes).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T23:39:38Z",
      "diff_hunk" : "@@ -131,7 +131,11 @@ UniValue importprivkey(const JSONRPCRequest& request)\n     CKeyID vchAddress = pubkey.GetID();\n     {\n         pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+\n+        // We don't know which corresponding address will be used; label them all\n+        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157384169",
      "id" : 157384169,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 7,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 7,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157384169",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for the git help.  Using sipa/201709_segwitwallet2, I get the following startup error (latest macOS):\r\n\r\n$ bitcoin-qt -addresstype bech32\r\nPaymentServer::ipcSendCommandLine: Payment request file does not exist:  \"bech32\"\r\n\r\nAnd I get the following response inside the console:\r\n\r\n15:39:47   getnewaddress\r\n15:39:58  16ESqniuMJ3eXViX7MiHWSBb2iGN4PcScS\r\n\r\nI'll poke around and see what's up for a few minutes.",
      "created_at" : "2017-12-17T23:45:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352295812",
      "id" : 352295812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T23:45:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352295812",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/224672?v=4",
         "events_url" : "https://api.github.com/users/Ulmo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ulmo/followers",
         "following_url" : "https://api.github.com/users/Ulmo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ulmo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ulmo",
         "id" : 224672,
         "login" : "Ulmo",
         "organizations_url" : "https://api.github.com/users/Ulmo/orgs",
         "received_events_url" : "https://api.github.com/users/Ulmo/received_events",
         "repos_url" : "https://api.github.com/users/Ulmo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ulmo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ulmo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ulmo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157384375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157384375"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is not sufficient? What if you have two keys in your pool, in order, A and B, then B gets used as a segwit address on the chain first, and then A...you'd only add B to your watch scripts?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T23:47:33Z",
      "diff_hunk" : "@@ -1054,6 +1056,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                     std::map<CKeyID, int64_t>::const_iterator mi = m_pool_key_to_index.find(keyid);\n                     if (mi != m_pool_key_to_index.end()) {\n                         LogPrintf(\"%s: Detected a used keypool key, mark all keypool key up to this key as used\\n\", __func__);\n+                        AddRelatedScripts(txout.scriptPubKey, mi->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157384375",
      "id" : 157384375,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157384375",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157384452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157384452"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, if I'm reading this correctly we technically could get here with an uncompressed keyid. Obviously this isn't the right place to check for that, but we should probably do *something* to handle it better (some big logprints, etc). Also need a test for this case, I'd think (make sure we dont consider it as valid balance, etc).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-17T23:50:42Z",
      "diff_hunk" : "@@ -4135,3 +4138,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);\n+        // Add the redeemscript, so that P2WSH and P2SH-P2WSH outputs are recognized as ours.\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_BECH32) {\n+            return witdest;\n+        } else {\n+            return CScriptID(witprog);\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CScript witprog = GetScriptForDestination(segwit);\n+    CTxDestination p2sh = CScriptID(witprog);\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == witprog || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        assert(HaveKey(keyid));\n+        // No need for a IsSolvable check here, as this function is only called for outputs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157384452",
      "id" : 157384452,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 150,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 84010629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157384452",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@Ulmo You need `-addresstype=bech32` (note the equals sign).",
      "created_at" : "2017-12-17T23:51:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352296174",
      "id" : 352296174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-17T23:51:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352296174",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Sipa, thanks.  That worked, of course.  This time I used pull/11403/head, and started bitcoin-qt as `bitcoin-qt -addresstype=bech32`, and everything related to bech32 \"seems to work\".  Detail:\r\n```\r\ngetnewaddress:  bc1qt0qk2gpdgsh0zyefmy52pwvnd2tk7aafgju6xg\r\n```\r\nTrezor beta, Ledger, & Gemini still don't seem to support bech32, giving address errors.\r\nElectrum 3.0.1 supports it ... let's try that.  First, I had to load a balance from a site that had some Bitcoin; I chose one that required a Segwit or legacy address:\r\n```\r\ngetnewaddress \"\" \"p2sh\": 34hhWKuKYz6dYBateQ366r6s8r53tXmFHa\r\n```\r\nGemini sent it, and I received it in the Core wallet in following transaction:\r\nhttps://blockchain.info/tx/da8e2a268f0f0d6ca5123760288c6b03314c4b6fc01156f8a56bdfa650dcc975\r\ndebug.log:\r\n```\r\n2017-12-18 00:22:39 UpdateTip: new best=0000000000000000001994c6c3317b315df6d4465d45a689e8e588ae64429f07 height=499870 version=0x202_work=87.678617 tx=283326467 date='2017-12-18 00:20:32' progress=0.999999 cache=21.7MiB(164816txo)\r\n2017-12-18 00:23:02 AddToWallet da8e2a268f0f0d6ca5123760288c6b03314c4b6fc01156f8a56bdfa650dcc975  new\r\n```\r\nBalance in core GUI showed 0.00000000 BTC, but this showed up in GUI's \"recent transactions\".  Very odd.\r\nThen, I sent it to Electrum bech32 address:\r\n```\r\n2017-12-18 00:27:06 keypool added 1 keys (0 internal), size=1000 (0 internal)\r\n2017-12-18 00:27:06 keypool reserve 32\r\n2017-12-18 00:27:11 keypool return 32\r\n2017-12-18 00:27:21 keypool reserve 32\r\n2017-12-18 00:27:21 Fee Calculation: Fee:62217 Bytes:164 Needed:62217 Tgt:2 (requested 2) Reason:\"Half Target 60% Threshold\" Decay\r\nstimation: (366358 - 384675) 65.49% 6939.6/(9527.9 0 mem 1068.7 out) Fail: (348912 - 366358) 50.94% 1305.9/(2313.3 0 mem 250.4 out)\r\n2017-12-18 00:27:34 CommitTransaction:\r\nCTransaction(hash=cbeaee011a, ver=2, vin.size=1, vout.size=2, nLockTime=499775)\r\n    CTxIn(COutPoint(da8e2a268f, 0), scriptSig=1600143cd673142bb7c0cb81, nSequence=4294967294)\r\n    CScriptWitness(3045022100d927130cf21989bb0e77363b475ce305d4bf9a1203bff955d849e2696ad3de6a0220508d3c53a5766daf470019fb3a97bb9650\r\nb0ffd3a6b0d573e8263901, 0225bb23f899b89d812ff2054fbc5a5d791d72684ab617d06131e5d70ca8d32bcb)\r\n    CTxOut(nValue=0.00137783, scriptPubKey=0014cd8b05910abb26f75448307421)\r\n    CTxOut(nValue=0.00148291, scriptPubKey=0014fe65e91b7d65e4a5df502b23a2)\r\n2017-12-18 00:27:34 keypool keep 32\r\n2017-12-18 00:27:34 AddToWallet cbeaee011a40ca0e8f08730e2f97acd08b8e7a1638152bf2e7d475e0ebe88738  new\r\n2017-12-18 00:27:34 Relaying wtx cbeaee011a40ca0e8f08730e2f97acd08b8e7a1638152bf2e7d475e0ebe88738\r\n```\r\nAfter sending this, the \"available balance\" in the core GUI suddenly magically went UP to .00148291.  Then:\r\n```\r\n2017-12-18 00:29:25 UpdateTip: new best=000000000000000000ad844c4dad30de48af6867567eafc56beba86a867672cb height=499871 version=0x20\r\n2_work=87.678657 tx=283328294 date='2017-12-18 00:27:56' progress=0.999999 cache=28.9MiB(210940txo)\r\n2017-12-18 00:29:26 AddToWallet cbeaee011a40ca0e8f08730e2f97acd08b8e7a1638152bf2e7d475e0ebe88738  \r\n```\r\nhttps://blockchain.info/tx/cbeaee011a40ca0e8f08730e2f97acd08b8e7a1638152bf2e7d475e0ebe88738 says \"Unable to decode output address\" <<< wtf?\r\nElectrum 3.0.1:  balance now shows Unconfirmed +0.00137783.  Looks right.  Now, to send it back to my other core wallet address bc1qt0qk2gpdgsh0zyefmy52pwvnd2tk7aafgju6xg:\r\nI got \"payment sent\" from Electrum for tx 92cf6424a9648ce30b3cba8edb0a122cc2210168547eb06915d7aa8961cb0440:\r\nhttps://blockchain.info/tx/92cf6424a9648ce30b3cba8edb0a122cc2210168547eb06915d7aa8961cb0440 now says \"unable to decode address\" to \"unable to decode address\".  Looking good, assuming Blockchain.info is unable to decode bech32 addresses.  (Why?)\r\nI find it odd mempool doesn't show in Core any more, or at least not as fast.  What's going on?  Are we being spammed, or DDOS?  It seems the best way to see an incoming tx is for it to be in an actual block these days.  Waiting on core wallet to see the tx ...\r\nFinally, mempool got it:\r\n```\r\n2017-12-18 00:41:54 AddToWallet 92cf6424a9648ce30b3cba8edb0a122cc2210168547eb06915d7aa8961cb0440  new\r\n```\r\nAnd, it confirmed:\r\n```\r\n2017-12-18 00:44:04 UpdateTip: new best=0000000000000000000e2532c7d8886363f61ccd43f074aed593763ccc65af01 height=499875 version=0x20\r\n2_work=87.678816 tx=283332610 date='2017-12-18 00:41:53' progress=0.999999 cache=44.3MiB(337087txo)\r\n2017-12-18 00:44:27 AddToWallet 92cf6424a9648ce30b3cba8edb0a122cc2210168547eb06915d7aa8961cb0440  update\r\n```\r\nBalance in my stupid core GUI wallet still shows 0.00148291, not showing the +.001 that came in.\r\nNow, will a hardware wallet think that if I send it out to them from this transaction chain, that it is a legitimate chain of transactions?  Especially since it doesn't support bech32?  To my Trezor:\r\nHere, in the core GUI, sending a transaction the \"Use available balance\" DOES pick up the whole balance, and off it goes, core GUI balance now at 0:\r\n```\r\n2017-12-18 00:49:13 keypool added 1 keys (0 internal), size=1000 (0 internal)\r\n2017-12-18 00:49:13 keypool reserve 33\r\n2017-12-18 00:49:13 keypool return 33\r\n2017-12-18 00:49:13 Fee Calculation: Fee:58027 Bytes:179 Needed:58027 Tgt:4 (requested 4) Reason:\"Conservative Double Target longer horizon\" Decay 0.99520: Estimation: (316473 - 332297) 95.16% 6064.9/(6373.7 0 mem 0.0 out) Fail: (301403 - 316473) 94.89% 4055.3/(4273.6 0 mem 0.0 out)\r\n2017-12-18 00:49:31 keypool reserve 33\r\n2017-12-18 00:49:31 keypool return 33\r\n2017-12-18 00:49:31 Fee Calculation: Fee:29286 Bytes:179 Needed:29286 Tgt:12 (requested 12) Reason:\"Target 85% Threshold\" Decay 0.96200: Estimation: (159841 - 167833) 91.17% 362.9/(392.5 0 mem 5.6 out) Fail: (152229 - 159841) 70.49% 217.2/(287.9 0 mem 20.2 out)\r\n2017-12-18 00:49:38 CommitTransaction:\r\nCTransaction(hash=e8e978558a, ver=2, vin.size=2, vout.size=1, nLockTime=499875)\r\n    CTxIn(COutPoint(cbeaee011a, 1), scriptSig=, nSequence=4294967294)\r\n    CTxIn(COutPoint(92cf6424a9, 0), scriptSig=, nSequence=4294967294)\r\n    CScriptWitness(30450221009e60a6639ce74817fb47fa871ea97d59d1c2113b1efd3ad79023d4b795c430280220515c8ee031724211a460418839a3603530ba2301e4cf8bd2586e10c25fc0e43c01, 02421c139e26cb8678c8132b6e6d8eb7640d52630bf8c74914d249408cba5debbb)\r\n    CScriptWitness(304402204eb7e6b53ae136dfae26c0819695c8033c3a6fdf5a3e40f1b0bce119a20e6d87022072ec3cb64dcc45611bd585ddc8b5afe640dd7a224061a40a6e8e7f3444a1a67d01, 023ef1f057355c650821a263dcb78296c61929f98eb03a72b623835f94100305fd)\r\n    CTxOut(nValue=0.00219005, scriptPubKey=a914405420cce346a85a8481790fd7)\r\n2017-12-18 00:49:38 AddToWallet e8e978558a41b1a883dac0736e5e6fd3c9cbba435cc25a9a6baeb4f0a00a57a1  new\r\n2017-12-18 00:49:38 Relaying wtx e8e978558a41b1a883dac0736e5e6fd3c9cbba435cc25a9a6baeb4f0a00a57a1\r\n```\r\nThat transaction shows up in my Trezor wallet as unconfirmed +0.00219005.\r\n\r\nWell, so far so good.\r\n\r\nLet's see Lightning Network reduce those fees, though.  Also, time for Gemini, Kraken, Coinbase, Trezor and Ledger to get in shape, too.  Thanks to Electrum for being a good way to test this.",
      "created_at" : "2017-12-18T00:52:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352300583",
      "id" : 352300583,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-18T01:05:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352300583",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/224672?v=4",
         "events_url" : "https://api.github.com/users/Ulmo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Ulmo/followers",
         "following_url" : "https://api.github.com/users/Ulmo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Ulmo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Ulmo",
         "id" : 224672,
         "login" : "Ulmo",
         "organizations_url" : "https://api.github.com/users/Ulmo/orgs",
         "received_events_url" : "https://api.github.com/users/Ulmo/received_events",
         "repos_url" : "https://api.github.com/users/Ulmo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Ulmo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Ulmo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Ulmo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157397750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157397750"
         }
      },
      "author_association" : "OWNER",
      "body" : "In what scenario does a stale CScript result in incorrect watch-only behaviour?\r\n\r\nWatch-only is supposed to be distinct from the normal ismine/solvability logic.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:00:31Z",
      "diff_hunk" : "@@ -110,8 +133,10 @@ bool CBasicKeyStore::AddWatchOnly(const CScript &dest)\n     LOCK(cs_KeyStore);\n     setWatchOnly.insert(dest);\n     CPubKey pubKey;\n-    if (ExtractPubKey(dest, pubKey))\n+    if (ExtractPubKey(dest, pubKey)) {\n         mapWatchKeys[pubKey.GetID()] = pubKey;\n+        ImplicitlyLearnRelatedKeyScripts(pubKey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157397750",
      "id" : 157397750,
      "in_reply_to_id" : 157382629,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 44,
      "path" : "src/keystore.cpp",
      "position" : 47,
      "pull_request_review_id" : 84031301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157397750",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157397808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157397808"
         }
      },
      "author_association" : "OWNER",
      "body" : "No problem addressing this if #11545 is merged first.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:01:20Z",
      "diff_hunk" : "@@ -40,6 +40,53 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157397808",
      "id" : 157397808,
      "in_reply_to_id" : 157381833,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 31,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84031354,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157397808",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157397910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157397910"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will reformulate.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:03:11Z",
      "diff_hunk" : "@@ -40,6 +40,53 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n+                CPubKey key(solutions_data[i].begin(), solutions_data[i].end());\n+                a.push_back(EncodeDestination(key.GetID()));\n+                pubkeys.push_back(HexStr(key.begin(), key.end()));\n+            }\n+            obj.pushKV(\"pubkeys\", std::move(pubkeys));\n+        }\n+\n+        // The \"addresses\" field is problematic because it confuses keys and destination addresses, using",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157397910",
      "id" : 157397910,
      "in_reply_to_id" : 157382183,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 41,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84031485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157397910",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157397935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157397935"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will fix.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:03:39Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157397935",
      "id" : 157397935,
      "in_reply_to_id" : 157379341,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 89,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84031505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157397935",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157398022"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157398022"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will fix.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:04:47Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157398022",
      "id" : 157398022,
      "in_reply_to_id" : 157379791,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 97,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84031579,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157398022",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157398308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157398308"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will fix. ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:09:32Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157398308",
      "id" : 157398308,
      "in_reply_to_id" : 157381826,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 98,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84031933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157398308",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157398462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157398462"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will fix.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:12:03Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Only if \\\"isscript\\\" is true. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash, witness_unknown\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157398462",
      "id" : 157398462,
      "in_reply_to_id" : 157379827,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 99,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84032090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157398462",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157398480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157398480"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will fix.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:12:15Z",
      "diff_hunk" : "@@ -131,23 +166,30 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",      (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean) If the address is P2SH or P2WSH\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Only if \\\"isscript\\\" is true. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash, witness_unknown\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the P2SH or P2WSH address\\n\"\n+            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\" and \\\"iswitness\\\" is false)\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157398480",
      "id" : 157398480,
      "in_reply_to_id" : 157382293,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 101,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 84032109,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157398480",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157399192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157399192"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will fix.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:24:57Z",
      "diff_hunk" : "@@ -16,6 +16,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", strprintf(_(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));\n+    strUsage += HelpMessageOpt(\"-changetype\", strprintf(_(\"What type of change to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default is same as -addresstype: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157399192",
      "id" : 157399192,
      "in_reply_to_id" : 157383584,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 84032958,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157399192",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157399366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157399366"
         }
      },
      "author_association" : "OWNER",
      "body" : "I don't understand.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:27:47Z",
      "diff_hunk" : "@@ -131,7 +131,11 @@ UniValue importprivkey(const JSONRPCRequest& request)\n     CKeyID vchAddress = pubkey.GetID();\n     {\n         pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+\n+        // We don't know which corresponding address will be used; label them all\n+        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157399366",
      "id" : 157399366,
      "in_reply_to_id" : 157384169,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 7,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 7,
      "pull_request_review_id" : 84033133,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157399366",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157400324"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157400324"
         }
      },
      "author_association" : "OWNER",
      "body" : "Will do.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:42:55Z",
      "diff_hunk" : "@@ -850,7 +852,7 @@ bool CWallet::GetAccountPubkey(CPubKey &pubKey, std::string strAccount, bool bFo\n         if (!GetKeyFromPool(account.vchPubKey, false))\n             return false;\n \n-        SetAddressBook(account.vchPubKey.GetID(), strAccount, \"receive\");\n+        SetAddressBook(AddDestinationForKey(account.vchPubKey, g_address_type), strAccount, \"receive\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157400324",
      "id" : 157400324,
      "in_reply_to_id" : 157383354,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 23,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 84034260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157400324",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157400897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157400897"
         }
      },
      "author_association" : "OWNER",
      "body" : "The keystore implicitly knows about all keys' corresponding redeemscripts. This function call is not needed except for downgrading to old software after recovery.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:51:38Z",
      "diff_hunk" : "@@ -1054,6 +1056,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                     std::map<CKeyID, int64_t>::const_iterator mi = m_pool_key_to_index.find(keyid);\n                     if (mi != m_pool_key_to_index.end()) {\n                         LogPrintf(\"%s: Detected a used keypool key, mark all keypool key up to this key as used\\n\", __func__);\n+                        AddRelatedScripts(txout.scriptPubKey, mi->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157400897",
      "id" : 157400897,
      "in_reply_to_id" : 157384375,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 84034934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157400897",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157401001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157401001"
         }
      },
      "author_association" : "OWNER",
      "body" : "Well it should be impossible that `g_address_type` or `g_change_type` are unset, so if this assert triggers, there is a serious bug.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:52:59Z",
      "diff_hunk" : "@@ -4135,3 +4138,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157401001",
      "id" : 157401001,
      "in_reply_to_id" : 157383933,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 75,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 84035050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157401001",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157401041"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157401041"
         }
      },
      "author_association" : "OWNER",
      "body" : "You just need to know the script.\r\n\r\nAgree on adding a test.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T04:53:28Z",
      "diff_hunk" : "@@ -4135,3 +4138,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157401041",
      "id" : 157401041,
      "in_reply_to_id" : 157384030,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 128,
      "path" : "src/wallet/wallet.cpp",
      "position" : 160,
      "pull_request_review_id" : 84035098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157401041",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@FelixWeis @hsjoberg I added a todo to my ever growing list to add a check box in the UI where the user can specifically ask for a  native SegWit `bech32` address. It would be a separate PR. Happy to review if someone else is already doing this.\r\n\r\nIn addition, there could be a UI setting that toggles to `bech32` as a default, including change address, and then flipping the meaning of the above check box. Again a separate PR.\r\n\r\nWhenever the wallet creates a transaction it should, again not this PR, probably be smart and use the same address type for change as the destination.\r\n\r\n@sipa is there anything in this PR that could be merged to master separately (and first)?",
      "created_at" : "2017-12-18T10:09:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352381612",
      "id" : 352381612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-18T10:09:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352381612",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Ulmo I don't see \"Unable to decode output address\" for your transaction [92cf...](https://blockchain.info/tx/92cf6424a9648ce30b3cba8edb0a122cc2210168547eb06915d7aa8961cb0440). I've seen it work correctly when I tried a few weeks ago. Maybe it was a glitch?\r\n\r\nNote however that you can't click on a bech32 address to see all transactions. As far as I know no block explorer supports that yet; I'm sure that'll change, but it's another reason why it's better to make bech32 addresses opt-in, but encouraged, initially.",
      "created_at" : "2017-12-18T10:39:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352389135",
      "id" : 352389135,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-18T10:39:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352389135",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">  I added a todo to my ever growing list to add a check box in the UI where the user can specifically ask for a native SegWit bech32 address. It would be a separate PR. Happy to review if someone else is already doing this.\r\n\r\n@Sjors Right, I have code ready for a GUI setting to decide the address type to use. It's directly tied to the `addresstype` parameter and thus it's radio buttons and not single checkbox. Perhaps I could re-work to be a checkbox if people like it better.\r\nIt seems out of scope of this PR so I'll propose it after this one has been merged.\r\n\r\n> As far as I know no block explorer supports that yet\r\n\r\n@Sjors  @Ulmo I think https://btc.com supports BIP173/bech32-addresses better.",
      "created_at" : "2017-12-18T12:43:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352415511",
      "id" : 352415511,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-18T12:43:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352415511",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3824379?v=4",
         "events_url" : "https://api.github.com/users/hsjoberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hsjoberg/followers",
         "following_url" : "https://api.github.com/users/hsjoberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hsjoberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hsjoberg",
         "id" : 3824379,
         "login" : "hsjoberg",
         "organizations_url" : "https://api.github.com/users/hsjoberg/orgs",
         "received_events_url" : "https://api.github.com/users/hsjoberg/received_events",
         "repos_url" : "https://api.github.com/users/hsjoberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hsjoberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hsjoberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hsjoberg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157480601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157480601"
         }
      },
      "author_association" : "OWNER",
      "body" : "nit: `-addresstype=<type>` to make it clear that this option takes a value",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-18T13:15:10Z",
      "diff_hunk" : "@@ -16,6 +16,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", strprintf(_(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh\\\", \\\"bech32\\\", default: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157480601",
      "id" : 157480601,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 4,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 84127988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157480601",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hsjoberg ah, [yes it does](https://btc.com/bc1qt0qk2gpdgsh0zyefmy52pwvnd2tk7aafgju6xg).\r\n\r\nCan you make a WIP PR that uses this branch as its base? That way it's kept separate yet is easy to review. Once this PR is merged, you switch the base to master.\r\n\r\nA radio button for the global GUI setting makes sense to me. I would only use a check box for overriding the setting in the receive screen.\r\n\r\nUsers need to be able to use both address types depending on who they're requesting money from. Having to restart every time, which a global setting requires, would be inconvenient. Having a way to do this every time you generate a new address seems more useful, but that can exist side-by-side.",
      "created_at" : "2017-12-18T13:18:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352423026",
      "id" : 352423026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-18T13:18:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352423026",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Sjors I'll put it up as soon as I can. \r\n\r\n> Having to restart every time\r\n\r\nInterestingly enough, with a GUI-setting, it works without restarting if we directly change `g_address_type` global, I'm not sure if this is good practice though.",
      "created_at" : "2017-12-18T14:24:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352439567",
      "id" : 352439567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-18T14:24:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352439567",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3824379?v=4",
         "events_url" : "https://api.github.com/users/hsjoberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hsjoberg/followers",
         "following_url" : "https://api.github.com/users/hsjoberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hsjoberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hsjoberg",
         "id" : 3824379,
         "login" : "hsjoberg",
         "organizations_url" : "https://api.github.com/users/hsjoberg/orgs",
         "received_events_url" : "https://api.github.com/users/hsjoberg/received_events",
         "repos_url" : "https://api.github.com/users/hsjoberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hsjoberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hsjoberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hsjoberg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157686246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157686246"
         }
      },
      "author_association" : "OWNER",
      "body" : "Adding a test to address_types for this.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-19T08:13:46Z",
      "diff_hunk" : "@@ -4135,3 +4138,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157686246",
      "id" : 157686246,
      "in_reply_to_id" : 157384030,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 128,
      "path" : "src/wallet/wallet.cpp",
      "position" : 160,
      "pull_request_review_id" : 84368241,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157686246",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157686476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157686476"
         }
      },
      "author_association" : "OWNER",
      "body" : "I believe it's impossible, but it's certainly not trivial to see - I agree. However, if this code would ever run for an uncompressed key, it's *already* too late, as we're already considering the output to be ours.\r\n\r\nNote that just having an uncompressed key's corresponding CScript in our CKeyStore is not enough to make us treat P2SH-P2WPKH or P2WPKH scriptPubKeys to it as ours.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-19T08:15:14Z",
      "diff_hunk" : "@@ -4135,3 +4138,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);\n+    }\n+}\n+\n+std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n+{\n+    CKeyID keyid = key.GetID();\n+    if (key.IsCompressed()) {\n+        CTxDestination segwit = WitnessV0KeyHash(keyid);\n+        CTxDestination p2sh = CScriptID(GetScriptForDestination(segwit));\n+        return std::vector<CTxDestination>{std::move(keyid), std::move(p2sh), std::move(segwit)};\n+    } else {\n+        return std::vector<CTxDestination>{std::move(keyid)};\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForKey(const CPubKey& key, OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return key.GetID();\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        CTxDestination witdest = WitnessV0KeyHash(key.GetID());\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return key.GetID();\n+        // Even though CBasicKeyStore knows about P2WPKH redeemscripts implicitly, add it explicitly\n+        // so that downgrades to software without this are supported (as long as the wallet file is\n+        // up to date).\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_P2SH) {\n+            return CScriptID(witprog);\n+        } else {\n+            return witdest;\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+CTxDestination CWallet::AddDestinationForScript(const CScript& script, OutputType type)\n+{\n+    // Note that scripts over 520 bytes are not yet supported.\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY:\n+        return CScriptID(script);\n+    case OUTPUT_TYPE_P2SH:\n+    case OUTPUT_TYPE_BECH32: {\n+        WitnessV0ScriptHash hash;\n+        CSHA256().Write(script.data(), script.size()).Finalize(hash.begin());\n+        CTxDestination witdest = hash;\n+        CScript witprog = GetScriptForDestination(witdest);\n+        // Check if the resulting program is solvable (i.e. doesn't use an uncompressed key)\n+        if (!IsSolvable(*this, witprog)) return CScriptID(script);\n+        // Add the redeemscript, so that P2WSH and P2SH-P2WSH outputs are recognized as ours.\n+        AddCScript(witprog);\n+        if (type == OUTPUT_TYPE_BECH32) {\n+            return witdest;\n+        } else {\n+            return CScriptID(witprog);\n+        }\n+    }\n+    default: assert(false);\n+    }\n+}\n+\n+void CWallet::AddRelatedScripts(const CScript& scriptPubKey, const CKeyID& keyid)\n+{\n+    CTxDestination segwit = WitnessV0KeyHash(keyid);\n+    CScript witprog = GetScriptForDestination(segwit);\n+    CTxDestination p2sh = CScriptID(witprog);\n+    // For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that\n+    // older software versions (without implicit scripts) correctly treat these as ours.\n+    if (scriptPubKey == witprog || scriptPubKey == GetScriptForDestination(p2sh)) {\n+        assert(HaveKey(keyid));\n+        // No need for a IsSolvable check here, as this function is only called for outputs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157686476",
      "id" : 157686476,
      "in_reply_to_id" : 157384452,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 150,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 84368496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157686476",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@TheBlueMatt I've addressed several of your comments. However, for a few of them I think you're missing that `AddCScript` does not automatically make a script/output watched. It simply teaches the signing logic how to sign for such a P2SH/P2WSH script if it would appear somewhere. Having it there *may* result in considering something ours (but generally only if we also have the actual keys available).",
      "created_at" : "2017-12-19T08:26:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-352672871",
      "id" : 352672871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-19T08:26:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352672871",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@sipa sorry to intervene late, but \"All wallet private and public keys can be used for any type of address.\" sounds like a terrible idea. Even if you plan to add address-dependent derivation path later, once the harm is done, it will be too late to go back.\r\n\r\n`importprivkey` will need to lookup several output scripts per key. This will break compatibility with Electrum, and with various other wallets. Wallets that do not support segwit will return false negatives when attempting to import a private keys that has coins sent to segwit scripts. It will also create technological debt for wallets that do support segwit, because they will have to lookup old p2pkh scripts in order to be compatible with Bitcoin Core's private key import format.\r\n\r\nPlease consider using one address per private key, and a private key export format that includes information about the type of output script used with the key. This will avoid false negatives, and it will free new wallets from being forced to implement deprecated address types.",
      "created_at" : "2017-12-21T09:27:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353301840",
      "id" : 353301840,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-21T09:51:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353301840",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/2343238?v=4",
         "events_url" : "https://api.github.com/users/ecdsa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ecdsa/followers",
         "following_url" : "https://api.github.com/users/ecdsa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ecdsa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ecdsa",
         "id" : 2343238,
         "login" : "ecdsa",
         "organizations_url" : "https://api.github.com/users/ecdsa/orgs",
         "received_events_url" : "https://api.github.com/users/ecdsa/received_events",
         "repos_url" : "https://api.github.com/users/ecdsa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ecdsa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ecdsa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ecdsa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Tiny meta suggestion, I think this PR can use [0.16.0](https://github.com/bitcoin/bitcoin/milestone/30) milestone tag?",
      "created_at" : "2017-12-21T09:55:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353308700",
      "id" : 353308700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-21T09:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353308700",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6526666?v=4",
         "events_url" : "https://api.github.com/users/NLNicoo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NLNicoo/followers",
         "following_url" : "https://api.github.com/users/NLNicoo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NLNicoo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NLNicoo",
         "id" : 6526666,
         "login" : "NLNicoo",
         "organizations_url" : "https://api.github.com/users/NLNicoo/orgs",
         "received_events_url" : "https://api.github.com/users/NLNicoo/received_events",
         "repos_url" : "https://api.github.com/users/NLNicoo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NLNicoo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NLNicoo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NLNicoo"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> @sipa is there anything in this PR that could be merged to master separately (and first)?\r\n\r\nSame question - is there a way we can help move things forward, reduce this patch stack, by merging some parts? It looks like some smaller UI things are still being discussed while some of the base work was reviewed and found to be OK a long time ago. Blocking the entire thing for so long is not productive.\r\n\r\n> Tiny meta suggestion, I think this PR can useÃÂ 0.16.0ÃÂ milestone tag?\r\n\r\nDone, although it was implicit, there will be no 0.16.0 release without this.\r\n\r\n",
      "created_at" : "2017-12-21T10:34:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353317338",
      "id" : 353317338,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-21T10:34:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353317338",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> sorry to intervene late, but \"All wallet private and public keys can be used for any type of address.\" sounds like a terrible idea. Even if you plan to add address-dependent derivation path later, once the harm is done, it will be too late to go back.\r\n\r\nI agree, it's a terrible situation to be in, but unfortunately the harm is already done. Right now, the IsMine logic effectively works by seeing what we could sign for. If you have a key, and the corresponding witness script in your wallet, we will accept payment to P2PK, P2PKH, P2SH-P2PKH, P2WPKH, P2SH-P2WPKH, and even more insane combinations. Due to the backward compatibility requirement with the existing `addwitnessaddress` RPC, we can't drop that support.\r\n\r\nPlease read the gist I've written up for how to improve things in the future, but it's not something that can be done without very significant modifications and compatibility breaks first.",
      "created_at" : "2017-12-21T10:45:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353319637",
      "id" : 353319637,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-21T10:45:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353319637",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Cursory ACK ff295c33d7e26293229a05f4039a13fc747efcc0\r\n\r\nI don't see any obvious problems with the code, but that doesn't necessarily mean a lot. Setting p2wpkh-nested-in-p2sh as the default address type makes sense, and setting the change type to be the same likewise makes sense. The strategy outlined in the gist makes sense (despite being complicated and continuing the maintenance burden) and appears to work as intended. The test case looks good.\r\n\r\nUpgrading and downgrading between this and 0.15 seems to work pretty intuitively. I hit a few unrelated problems: segwit vbparams changes in regtest between 0.15 and master results in confusing errors, installing master then downgrading to 0.15 doesn't work the same way as upgrading from 0.15 then downgrading back to 0.15 because of the walletdir changes (#11466), and --with-incompatible-bdb results in the expected incompatibilities...\r\n\r\nNot even nits: \"legacy\" and \"p2sh\" maybe aren't the clearest possible names, but they're good enough. I wonder if ParseOutputType wouldn't have been better as bool ParseOutputType(OutputType &type, str, default), in which case OUTPUT_TYPE_NONE wouldn't have been needed.",
      "created_at" : "2017-12-21T18:38:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353425210",
      "id" : 353425210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-21T18:38:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353425210",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Please consider using one address per private key, and a private key export format that includes information about the type of output script used with the key. This will avoid false negatives, and it will free new wallets from being forced to implement deprecated address types.\r\n\r\nThe critical part of this, that I would like to emphasize, would be to have the private key export format include the output script type. Even if you allow all private keys internally to be associated with any script type, please include the script type in the export serialization format. The serialization of a private key (e.g. WIF) is more than an ecdsa private key, it should also contain metadata about how the ecdsa key is to be used.\r\n\r\nAs an example, for serializing private keys, currently Electrum [uses an extended WIF format](https://github.com/spesmilo/electrum/blob/f3a6491df4fbfa5135fa0d806b88f61df940c3ee/lib/bitcoin.py#L512-L528). It includes a prefix byte (similar to the compressed suffix byte) that encodes the script type to be used.\r\n\r\nIt would be great if the `dumpprivkey` and `dumpwallet` (and possibly other?) commands did something similar. For instance if the same ecdsa key is used with three different addresses, for each address there should be a corresponding \"WIF\" serialization.",
      "created_at" : "2017-12-21T20:50:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353454555",
      "id" : 353454555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-21T20:50:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353454555",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/29142493?v=4",
         "events_url" : "https://api.github.com/users/SomberNight/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SomberNight/followers",
         "following_url" : "https://api.github.com/users/SomberNight/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SomberNight/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SomberNight",
         "id" : 29142493,
         "login" : "SomberNight",
         "organizations_url" : "https://api.github.com/users/SomberNight/orgs",
         "received_events_url" : "https://api.github.com/users/SomberNight/received_events",
         "repos_url" : "https://api.github.com/users/SomberNight/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SomberNight/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SomberNight/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SomberNight"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "What is the argumentation here for using `legacy` instead of `p2pkh`? Legacy is an ambiguous term. At some point in the past, `p2pk`could have been considered legacy while using addresses was the new way. In the future, SegWit/bech32 could be considered legacy over a next generation addressing convention.",
      "created_at" : "2017-12-23T10:00:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353717636",
      "id" : 353717636,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-23T10:00:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353717636",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/853468?v=4",
         "events_url" : "https://api.github.com/users/stevenroose/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stevenroose/followers",
         "following_url" : "https://api.github.com/users/stevenroose/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stevenroose/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stevenroose",
         "id" : 853468,
         "login" : "stevenroose",
         "organizations_url" : "https://api.github.com/users/stevenroose/orgs",
         "received_events_url" : "https://api.github.com/users/stevenroose/received_events",
         "repos_url" : "https://api.github.com/users/stevenroose/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stevenroose/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stevenroose/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stevenroose"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@stevenroose Good point, it's not perfectly unambiguous. However, \"legacy\" does not mean just P2PKH. For multisig it means P2SH-multisig.\n\nArguably \"p2sh\" is also not perfect, as for multisig it refers to P2SH-P2WSH-multisig.\n\nUnambiguous would be using the names \"no-witness\" (instead of legacy), \"p2sh-witness-v0\" (instead of p2sh), and \"native-witness-v0\" (instead of bech32), but those aren't really well known things, and aren't really related to the names people use for the address encodings.\n\nSuggestions welcome.",
      "created_at" : "2017-12-23T10:08:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353718008",
      "id" : 353718008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-23T10:11:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353718008",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "maybe call it something like `pre-segwit`? Not especially elegant, but it would probably age better than `legacy`",
      "created_at" : "2017-12-23T11:43:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353721884",
      "id" : 353721884,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-23T11:43:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353721884",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/425166?v=4",
         "events_url" : "https://api.github.com/users/flack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/flack/followers",
         "following_url" : "https://api.github.com/users/flack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/flack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/flack",
         "id" : 425166,
         "login" : "flack",
         "organizations_url" : "https://api.github.com/users/flack/orgs",
         "received_events_url" : "https://api.github.com/users/flack/received_events",
         "repos_url" : "https://api.github.com/users/flack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/flack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/flack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/flack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "The two important factors are where the keys are taken from in the BIP32\nhierarchy and how the address is formatted visibly.\n\np2sh-p2wsh-multisig is indeed a bit more complex than what you want to\naddress in a single parameter..\n\nMaybe legacy is a good name when referring to the \"gen1\" addressing and we\ncan see what gen2 brings.\n\nTl;dr can't directly come up with a better naming idea.\n\n\n\n\nOn 23 Dec 2017 12:44 pm, \"flack\" <notifications@github.com> wrote:\n\nmaybe call it something like pre-segwit? Not especially elegant, but it\nwould probably age better than legacy\n\nÃ¢ÂÂ\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353721884>, or mute\nthe thread\n<https://github.com/notifications/unsubscribe-auth/AA0F3K71ugnEGbWLcA1vjaBB763mkfAMks5tDOeSgaJpZM4PjkGp>\n.\n",
      "created_at" : "2017-12-23T12:42:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353724238",
      "id" : 353724238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-23T12:42:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353724238",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/853468?v=4",
         "events_url" : "https://api.github.com/users/stevenroose/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stevenroose/followers",
         "following_url" : "https://api.github.com/users/stevenroose/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stevenroose/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stevenroose",
         "id" : 853468,
         "login" : "stevenroose",
         "organizations_url" : "https://api.github.com/users/stevenroose/orgs",
         "received_events_url" : "https://api.github.com/users/stevenroose/received_events",
         "repos_url" : "https://api.github.com/users/stevenroose/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stevenroose/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stevenroose/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stevenroose"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If v1 scripts will introduce new address types, maybe using \"bech32-v0\" and \"p2sh-v0\" now is a good idea? At least \"p2sh-v0\" is suggestive of witness support, unlike plain \"p2sh\" which sounds like a purely legacy mode.\r\n\r\nNaming the format after bips could also work: maybe \"bip16\", \"bip141-v0\", \"bip173-v0\" -- except bip16 isn't really accurate, and none of those are very intuitive. \"pre-witness\" or \"pre-segwit\" seems better than legacy if this option will still be useful when v1 scripts get implemented. Alternatively, \"base58\" or \"base58-legacy\" might match \"bech32-v0\" well.",
      "created_at" : "2017-12-23T13:07:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353725343",
      "id" : 353725343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-23T13:07:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353725343",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@ryanofsky @TheBlueMatt Updated `address_types.py` to also test `getrawchangeaddress`, and the `address_type` parameter to both RPCs.",
      "created_at" : "2017-12-23T17:31:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353738418",
      "id" : 353738418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-23T17:31:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353738418",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested ACK 10bd7d6c20028309b45d44d8f50188649a00825e\r\n \r\nTested on OSX on bitcoin testnet with an older HD Wallet, the various change addresses and address style changes worked fine.\r\n\r\nCurrently testing a linux build irresponsibly live on mainnet on one of my nodes with low volume outgoing transactions and it works great so far. Extensively tested on testnet before doing so.",
      "created_at" : "2017-12-25T00:38:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-353809911",
      "id" : 353809911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-25T00:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353809911",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/446261?v=4",
         "events_url" : "https://api.github.com/users/juscamarena/events{/privacy}",
         "followers_url" : "https://api.github.com/users/juscamarena/followers",
         "following_url" : "https://api.github.com/users/juscamarena/following{/other_user}",
         "gists_url" : "https://api.github.com/users/juscamarena/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/juscamarena",
         "id" : 446261,
         "login" : "juscamarena",
         "organizations_url" : "https://api.github.com/users/juscamarena/orgs",
         "received_events_url" : "https://api.github.com/users/juscamarena/received_events",
         "repos_url" : "https://api.github.com/users/juscamarena/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/juscamarena/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/juscamarena/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/juscamarena"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r158856867"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158856867"
         }
      },
      "author_association" : "MEMBER",
      "body" : "doesn't seem changed?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-27T19:12:49Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" \\\"address_type\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"address_type\\\"   (string, optional) The address type to use. Options are \\\"legacy\\\", \\\"p2sh\\\", and \\\"bech32\\\". Default is set by -addresstype.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r158856867",
      "id" : 158856867,
      "in_reply_to_id" : 153376955,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 85721165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158856867",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Po box 155 roland AR 72135\n\nSent from Mail<https://go.microsoft.com/fwlink/?LinkId=550986> for Windows 10\n\n________________________________\nFrom: Gregory Sanders <notifications@github.com>\nSent: Wednesday, December 27, 2017 12:15:26 PM\nTo: bitcoin/bitcoin\nCc: Subscribed\nSubject: Re: [bitcoin/bitcoin] SegWit wallet support (#11403)\n\n\n@instagibbs approved this pull request.\n\nre-ACK\n\n________________________________\n\nIn src/wallet/rpcwallet.cpp<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fbitcoin%2Fbitcoin%2Fpull%2F11403%23discussion_r158856867&data=02%7C01%7C%7C534c3e01ac5046a6e78908d54d6693ef%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636500025308058771&sdata=Rp81t72BgBOCcDqagp%2BG2UkzNAkkHI0oFVVqfe8azQU%3D&reserved=0>:\n\n>              \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"address_type\\\"   (string, optional) The address type to use. Options are \\\"legacy\\\", \\\"p2sh\\\", and \\\"bech32\\\". Default is set by -addresstype.\\n\"\n\n\ndoesn't seem changed?\n\nÃ¢ÂÂ\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fbitcoin%2Fbitcoin%2Fpull%2F11403%23pullrequestreview-85721165&data=02%7C01%7C%7C534c3e01ac5046a6e78908d54d6693ef%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636500025308058771&sdata=Le7UmkmCknftezT7cuai4aq9W2zxk0dipEc%2FtxawF8w%3D&reserved=0>, or mute the thread<https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAcUokU9RBIYSEfzyTK38zAVL7_x2cQeIks5tEqVegaJpZM4PjkGp&data=02%7C01%7C%7C534c3e01ac5046a6e78908d54d6693ef%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636500025308058771&sdata=sweL6a85aVs%2FaSPP47pKyENX6Z1fGXwHmNDoJhy1mtg%3D&reserved=0>.\n",
      "created_at" : "2017-12-27T22:44:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-354188968",
      "id" : 354188968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2017-12-27T22:44:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/354188968",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/29698193?v=4",
         "events_url" : "https://api.github.com/users/markaw67/events{/privacy}",
         "followers_url" : "https://api.github.com/users/markaw67/followers",
         "following_url" : "https://api.github.com/users/markaw67/following{/other_user}",
         "gists_url" : "https://api.github.com/users/markaw67/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/markaw67",
         "id" : 29698193,
         "login" : "markaw67",
         "organizations_url" : "https://api.github.com/users/markaw67/orgs",
         "received_events_url" : "https://api.github.com/users/markaw67/received_events",
         "repos_url" : "https://api.github.com/users/markaw67/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/markaw67/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/markaw67/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/markaw67"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r158907686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158907686"
         }
      },
      "author_association" : "NONE",
      "body" : "I would suggest to use `type.empty()` instead, no need to call string comparison fn. Generated code is much better.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-28T07:37:28Z",
      "diff_hunk" : "@@ -4135,3 +4139,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r158907686",
      "id" : 158907686,
      "original_commit_id" : "5d9243963a2591403043f0a1f06a8a7701f1cea7",
      "original_position" : 72,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 85777941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158907686",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/292191?v=4",
         "events_url" : "https://api.github.com/users/Talkless/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Talkless/followers",
         "following_url" : "https://api.github.com/users/Talkless/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Talkless/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Talkless",
         "id" : 292191,
         "login" : "Talkless",
         "organizations_url" : "https://api.github.com/users/Talkless/orgs",
         "received_events_url" : "https://api.github.com/users/Talkless/received_events",
         "repos_url" : "https://api.github.com/users/Talkless/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Talkless/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Talkless/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Talkless"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r158934040"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158934040"
         }
      },
      "author_association" : "OWNER",
      "body" : "I fixed it and changed it back in response to a comment by @TheBlueMatt. ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-28T11:58:01Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" \\\"address_type\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"address_type\\\"   (string, optional) The address type to use. Options are \\\"legacy\\\", \\\"p2sh\\\", and \\\"bech32\\\". Default is set by -addresstype.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r158934040",
      "id" : 158934040,
      "in_reply_to_id" : 153376955,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 85809037,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158934040",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r158934926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158934926"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-28T12:06:38Z",
      "diff_hunk" : "@@ -4135,3 +4139,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r158934926",
      "id" : 158934926,
      "in_reply_to_id" : 158907686,
      "original_commit_id" : "5d9243963a2591403043f0a1f06a8a7701f1cea7",
      "original_position" : 72,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 85810007,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158934926",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159017200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159017200"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> should never fail\r\n\r\nSounds like an assert:\r\n```cpp\r\nif (!ProduceSignature(creator, script, sigs)) return false;\r\nassert(VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker()));\r\nreturn true;\r\n```",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T01:29:34Z",
      "diff_hunk" : "@@ -422,3 +422,17 @@ bool DummySignatureCreator::CreateSig(std::vector<unsigned char>& vchSig, const\n     vchSig[6 + 33 + 32] = SIGHASH_ALL;\n     return true;\n }\n+\n+bool IsSolvable(const CKeyStore& store, const CScript& script)\n+{\n+    // This check is to make sure that the script we created can actually be solved for and signed by us\n+    // if we were to have the private keys. This is just to make sure that the script is valid and that,\n+    // if found in a transaction, we would still accept and relay that transaction. In particular,\n+    // it will reject witness outputs that require signing with an uncompressed public key.\n+    DummySignatureCreator creator(&store);\n+    SignatureData sigs;\n+    // Make sure that STANDARD_SCRIPT_VERIFY_FLAGS includes SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, the most\n+    // important property this function is designed to test for.\n+    static_assert(STANDARD_SCRIPT_VERIFY_FLAGS & SCRIPT_VERIFY_WITNESS_PUBKEYTYPE, \"IsSolvable requires standard script flags to include WITNESS_PUBKEYTYPE\");\n+    return (ProduceSignature(creator, script, sigs) && VerifyScript(sigs.scriptSig, script, &sigs.scriptWitness, STANDARD_SCRIPT_VERIFY_FLAGS, creator.Checker()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159017200",
      "id" : 159017200,
      "in_reply_to_id" : 156778208,
      "original_commit_id" : "b2c21fce66a2ce62cba832b87d086b5ea587691a",
      "original_position" : 16,
      "path" : "src/script/sign.cpp",
      "position" : null,
      "pull_request_review_id" : 85903766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159017200",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159017402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159017402"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"[refactor] GetAccountPubKey -> GetAccountDestination\"\r\n\r\nNit, could also rename `GetAccountAddress` to `GetAccountDestination`? (only 3 calls)",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T01:33:54Z",
      "diff_hunk" : "@@ -177,12 +177,12 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n \n CTxDestination GetAccountAddress(CWallet* const pwallet, std::string strAccount, bool bForceNew=false)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159017402",
      "id" : 159017402,
      "original_commit_id" : "63d4c88441253a12a6aa76f43bbe1611e0d333e7",
      "original_position" : 2,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 85903766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159017402",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159018376"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159018376"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Extend validateaddress information for P2SH-embedded witness\"\r\n\r\nNit, tag this comment as NOTE?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T01:54:33Z",
      "diff_hunk" : "@@ -155,6 +155,10 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n  * addressRet is populated with a single value and nRequiredRet is set to 1.\n  * Returns true if successful. Currently does not extract address from\n  * pay-to-witness scripts.\n+ *\n+ * This function confuses destinations (a subset of CScripts that are encodable",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159018376",
      "id" : 159018376,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 5,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 85903766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159018376",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159019268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159019268"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Missing test.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T02:17:30Z",
      "diff_hunk" : "@@ -131,23 +165,32 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean, optional) If the address is P2SH or P2WSH. Not included for unknown witness types.\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"witness_version\\\" : version   (number, optional) For all witness output types, gives the version number.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159019268",
      "id" : 159019268,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 98,
      "path" : "src/rpc/misc.cpp",
      "position" : 92,
      "pull_request_review_id" : 85903766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159019268",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159019271"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159019271"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Missing test.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T02:17:35Z",
      "diff_hunk" : "@@ -131,23 +165,32 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean, optional) If the address is P2SH or P2WSH. Not included for unknown witness types.\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"witness_version\\\" : version   (number, optional) For all witness output types, gives the version number.\\n\"\n+            \"  \\\"witness_program\\\" : \\\"hex\\\"     (string, optional) For all witness output types, gives the script or key hash present in the address.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159019271",
      "id" : 159019271,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 99,
      "path" : "src/rpc/misc.cpp",
      "position" : 93,
      "pull_request_review_id" : 85903766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159019271",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159019545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159019545"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same as https://github.com/bitcoin/bitcoin/pull/11403/files#r159020401.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T02:24:24Z",
      "diff_hunk" : "@@ -40,6 +40,52 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n+                CPubKey key(solutions_data[i].begin(), solutions_data[i].end());\n+                a.push_back(EncodeDestination(key.GetID()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159019545",
      "id" : 159019545,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 35,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 85903766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159019545",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159019973"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159019973"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should use same format as others?\r\n```cpp\r\n            \"2. \\\"address_type\\\"   (string, optional, default=\" + FormatOutputType(g_address_type) + \") The address type to use...\r\n```\r\nNit, drop command line argument hint, IMO.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T02:36:19Z",
      "diff_hunk" : "@@ -135,14 +135,15 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnewaddress ( \\\"account\\\" )\\n\"\n+            \"getnewaddress ( \\\"account\\\" \\\"address_type\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"2. \\\"address_type\\\"   (string, optional) The address type to use. Options are \\\"legacy\\\", \\\"p2sh\\\", and \\\"bech32\\\". Default is set by -addresstype.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159019973",
      "id" : 159019973,
      "in_reply_to_id" : 153376955,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 14,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 85903766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159019973",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159020124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159020124"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"SegWit wallet support\"\r\n\r\nNit, remove 2nd newline.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T02:39:54Z",
      "diff_hunk" : "@@ -4136,3 +4138,95 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type.empty()) {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159020124",
      "id" : 159020124,
      "original_commit_id" : "5a280466a36ade58e252bd3a15313e98dc467811",
      "original_position" : 65,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 85903766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159020124",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159020401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159020401"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could add `if (include_addresses) a.push_back(...);`",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T02:46:23Z",
      "diff_hunk" : "@@ -40,6 +40,52 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159020401",
      "id" : 159020401,
      "original_commit_id" : "17a7a7255958237b235c7c4104af7d9dd4482c8e",
      "original_position" : 25,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 85907171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159020401",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159080283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159080283"
         }
      },
      "author_association" : "OWNER",
      "body" : "Why? `embedded` should always be reported, it's not obsolete like `addresses`.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T16:34:41Z",
      "diff_hunk" : "@@ -40,6 +40,52 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159080283",
      "id" : 159080283,
      "in_reply_to_id" : 159020401,
      "original_commit_id" : "17a7a7255958237b235c7c4104af7d9dd4482c8e",
      "original_position" : 25,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 85982453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159080283",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159080363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159080363"
         }
      },
      "author_association" : "OWNER",
      "body" : "Why?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T16:35:21Z",
      "diff_hunk" : "@@ -40,6 +40,52 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n+                CPubKey key(solutions_data[i].begin(), solutions_data[i].end());\n+                a.push_back(EncodeDestination(key.GetID()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159080363",
      "id" : 159080363,
      "in_reply_to_id" : 159019545,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 35,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 85982546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159080363",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159082687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159082687"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Because `a` is only used if `include_addresses`? Or am I missing something?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-29T16:58:54Z",
      "diff_hunk" : "@@ -40,6 +40,52 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n+                CPubKey key(solutions_data[i].begin(), solutions_data[i].end());\n+                a.push_back(EncodeDestination(key.GetID()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159082687",
      "id" : 159082687,
      "in_reply_to_id" : 159019545,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 35,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 85985274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159082687",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159146912"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159146912"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157382629\n\n> Need some kind of corresponding erase in RemoveWatchOnly\n\n@TheBlueMatt can you clarify if you still think this is a bug.\n@sipa it might would be good to have a comment in RemoveWatchOnly saying CScripts are not removed but this should be harmless.\n",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-31T21:34:43Z",
      "diff_hunk" : "@@ -110,8 +133,10 @@ bool CBasicKeyStore::AddWatchOnly(const CScript &dest)\n     LOCK(cs_KeyStore);\n     setWatchOnly.insert(dest);\n     CPubKey pubKey;\n-    if (ExtractPubKey(dest, pubKey))\n+    if (ExtractPubKey(dest, pubKey)) {\n         mapWatchKeys[pubKey.GetID()] = pubKey;\n+        ImplicitlyLearnRelatedKeyScripts(pubKey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159146912",
      "id" : 159146912,
      "in_reply_to_id" : 157382629,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 44,
      "path" : "src/keystore.cpp",
      "position" : 47,
      "pull_request_review_id" : 86053634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159146912",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159146922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159146922"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157384169\n\n> If I'm reading this correctly, if you import with importpubkey you can downgrade and you'll still get the segwit watchonly, but not if you do an importprivkey?\n\n@TheBlueMatt can you describe what the documentation should say about this?\n",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-31T21:35:43Z",
      "diff_hunk" : "@@ -131,7 +131,11 @@ UniValue importprivkey(const JSONRPCRequest& request)\n     CKeyID vchAddress = pubkey.GetID();\n     {\n         pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+\n+        // We don't know which corresponding address will be used; label them all\n+        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159146922",
      "id" : 159146922,
      "in_reply_to_id" : 157384169,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 7,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 7,
      "pull_request_review_id" : 86053644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159146922",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159146923"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159146923"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r157401001\n\n> it should be impossible that g_address_type or g_change_type are unset, so if this assert triggers, there is a serious bug.\n\nAnother option would be to throw std::logic_error.\n",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2017-12-31T21:35:51Z",
      "diff_hunk" : "@@ -4135,3 +4138,110 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type == \"\") {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+\n+const std::string& FormatOutputType(OutputType type)\n+{\n+    switch (type) {\n+    case OUTPUT_TYPE_LEGACY: return OUTPUT_TYPE_STRING_LEGACY;\n+    case OUTPUT_TYPE_P2SH: return OUTPUT_TYPE_STRING_P2SH;\n+    case OUTPUT_TYPE_BECH32: return OUTPUT_TYPE_STRING_BECH32;\n+    default: assert(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159146923",
      "id" : 159146923,
      "in_reply_to_id" : 157383933,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 75,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 86053645,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159146923",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Regarding what to call the address types, this comment came up elsewhere about the `p2sh` type:\r\n\r\n> That's nice but it's ambiguous tho' ; \"P2SH\" doesn't tell you what script is inside (segwit, multisig, etc).\r\n\r\nI think that it should be slightly more specific to refer to segwit, something like `p2sh-segwit`. That way users will understand that those addresses are segwit addresses too.",
      "created_at" : "2018-01-02T23:19:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-354901608",
      "id" : 354901608,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-02T23:19:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/354901608",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159419364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159419364"
         }
      },
      "author_association" : "OWNER",
      "body" : "Discussed this IRL with @TheBlueMatt. I believe there is no problem here, and I've added comments to clarify that.\r\n  ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T12:59:25Z",
      "diff_hunk" : "@@ -110,8 +133,10 @@ bool CBasicKeyStore::AddWatchOnly(const CScript &dest)\n     LOCK(cs_KeyStore);\n     setWatchOnly.insert(dest);\n     CPubKey pubKey;\n-    if (ExtractPubKey(dest, pubKey))\n+    if (ExtractPubKey(dest, pubKey)) {\n         mapWatchKeys[pubKey.GetID()] = pubKey;\n+        ImplicitlyLearnRelatedKeyScripts(pubKey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159419364",
      "id" : 159419364,
      "in_reply_to_id" : 157382629,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 44,
      "path" : "src/keystore.cpp",
      "position" : 47,
      "pull_request_review_id" : 86362821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159419364",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159419578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159419578"
         }
      },
      "author_association" : "OWNER",
      "body" : "I discussed this IRL with @TheBlueMatt; what I believe he meant is that importing private keys does not explicitly add the related scripts for those keys to the wallet (possibly hurting the ability to detect outputs to such keys after downgrade). Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T13:00:52Z",
      "diff_hunk" : "@@ -131,7 +131,11 @@ UniValue importprivkey(const JSONRPCRequest& request)\n     CKeyID vchAddress = pubkey.GetID();\n     {\n         pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+\n+        // We don't know which corresponding address will be used; label them all\n+        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159419578",
      "id" : 159419578,
      "in_reply_to_id" : 157384169,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 7,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 7,
      "pull_request_review_id" : 86363100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159419578",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159419829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159419829"
         }
      },
      "author_association" : "OWNER",
      "body" : "Discussed this IRL. This was indeed a problem. It's fixed now by moving the call to `MarkReserveKeyAsUsed`.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T13:02:28Z",
      "diff_hunk" : "@@ -1054,6 +1056,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                     std::map<CKeyID, int64_t>::const_iterator mi = m_pool_key_to_index.find(keyid);\n                     if (mi != m_pool_key_to_index.end()) {\n                         LogPrintf(\"%s: Detected a used keypool key, mark all keypool key up to this key as used\\n\", __func__);\n+                        AddRelatedScripts(txout.scriptPubKey, mi->first);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159419829",
      "id" : 159419829,
      "in_reply_to_id" : 157384375,
      "original_commit_id" : "e721efb2bd3687176c0e93e1c5a9e9e31f76b083",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 86363404,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159419829",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159420109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159420109"
         }
      },
      "author_association" : "OWNER",
      "body" : "Thanks, I needed more context to see what you meant. Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T13:04:29Z",
      "diff_hunk" : "@@ -40,6 +40,52 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));\n+        }\n+\n+        // Only when the script is multisig (in which case the ExtractDestination above certainly failed):\n+        if (which_type == TX_MULTISIG) {\n+            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n+            obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n+            UniValue pubkeys(UniValue::VARR);\n+            for (size_t i = 1; i < solutions_data.size() - 1; ++i) {\n+                CPubKey key(solutions_data[i].begin(), solutions_data[i].end());\n+                a.push_back(EncodeDestination(key.GetID()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159420109",
      "id" : 159420109,
      "in_reply_to_id" : 159019545,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 35,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 86363724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159420109",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159423796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159423796"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T13:24:52Z",
      "diff_hunk" : "@@ -131,23 +165,32 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean, optional) If the address is P2SH or P2WSH. Not included for unknown witness types.\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"witness_version\\\" : version   (number, optional) For all witness output types, gives the version number.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159423796",
      "id" : 159423796,
      "in_reply_to_id" : 159019268,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 98,
      "path" : "src/rpc/misc.cpp",
      "position" : 92,
      "pull_request_review_id" : 86367726,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159423796",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159423831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159423831"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed (just testing the length/presence).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T13:25:07Z",
      "diff_hunk" : "@@ -131,23 +165,32 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"addresses\\\"                   (string, optional) Array of addresses associated with the known redeemscript\\n\"\n+            \"  \\\"isscript\\\" : true|false,      (boolean, optional) If the address is P2SH or P2WSH. Not included for unknown witness types.\\n\"\n+            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is P2WPKH, P2WSH, or an unknown witness version\\n\"\n+            \"  \\\"witness_version\\\" : version   (number, optional) For all witness output types, gives the version number.\\n\"\n+            \"  \\\"witness_program\\\" : \\\"hex\\\"     (string, optional) For all witness output types, gives the script or key hash present in the address.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159423831",
      "id" : 159423831,
      "in_reply_to_id" : 159019271,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 99,
      "path" : "src/rpc/misc.cpp",
      "position" : 93,
      "pull_request_review_id" : 86367772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159423831",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159425986"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159425986"
         }
      },
      "author_association" : "OWNER",
      "body" : "OKAY.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T13:37:10Z",
      "diff_hunk" : "@@ -155,6 +155,10 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n  * addressRet is populated with a single value and nRequiredRet is set to 1.\n  * Returns true if successful. Currently does not extract address from\n  * pay-to-witness scripts.\n+ *\n+ * This function confuses destinations (a subset of CScripts that are encodable",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159425986",
      "id" : 159425986,
      "in_reply_to_id" : 159018376,
      "original_commit_id" : "5886f934873d7763257668ee43ecb222edf58da4",
      "original_position" : 5,
      "path" : "src/script/standard.h",
      "position" : null,
      "pull_request_review_id" : 86370240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159425986",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159427232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159427232"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T13:43:15Z",
      "diff_hunk" : "@@ -177,12 +177,12 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n \n CTxDestination GetAccountAddress(CWallet* const pwallet, std::string strAccount, bool bForceNew=false)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159427232",
      "id" : 159427232,
      "in_reply_to_id" : 159017402,
      "original_commit_id" : "63d4c88441253a12a6aa76f43bbe1611e0d333e7",
      "original_position" : 2,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 86371745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159427232",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159427451"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159427451"
         }
      },
      "author_association" : "OWNER",
      "body" : "Done.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T13:44:10Z",
      "diff_hunk" : "@@ -4136,3 +4138,95 @@ bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState&\n     fInMempool = ret;\n     return ret;\n }\n+\n+static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n+static const std::string OUTPUT_TYPE_STRING_P2SH = \"p2sh\";\n+static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n+\n+OutputType ParseOutputType(const std::string& type, OutputType default_type)\n+{\n+    if (type.empty()) {\n+        return default_type;\n+    } else if (type == OUTPUT_TYPE_STRING_LEGACY) {\n+        return OUTPUT_TYPE_LEGACY;\n+    } else if (type == OUTPUT_TYPE_STRING_P2SH) {\n+        return OUTPUT_TYPE_P2SH;\n+    } else if (type == OUTPUT_TYPE_STRING_BECH32) {\n+        return OUTPUT_TYPE_BECH32;\n+    } else {\n+        return OUTPUT_TYPE_NONE;\n+    }\n+}\n+\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159427451",
      "id" : 159427451,
      "in_reply_to_id" : 159020124,
      "original_commit_id" : "5a280466a36ade58e252bd3a15313e98dc467811",
      "original_position" : 65,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 86371990,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159427451",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159427508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159427508"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed, see elsewhere.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T13:44:21Z",
      "diff_hunk" : "@@ -40,6 +40,52 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n \n     explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n+    void ProcessSubScript(const CScript& subscript, UniValue& obj, bool include_addresses = false) const\n+    {\n+        // Always present: script type and redeemscript\n+        txnouttype which_type;\n+        std::vector<std::vector<unsigned char>> solutions_data;\n+        Solver(subscript, which_type, solutions_data);\n+        obj.pushKV(\"script\", GetTxnOutputType(which_type));\n+        obj.pushKV(\"hex\", HexStr(subscript.begin(), subscript.end()));\n+\n+        // Only when the script corresponds to an address:\n+        CTxDestination embedded;\n+        UniValue a(UniValue::VARR);\n+        if (ExtractDestination(subscript, embedded)) {\n+            UniValue subobj = boost::apply_visitor(*this, embedded);\n+            subobj.pushKV(\"address\", EncodeDestination(embedded));\n+            subobj.pushKV(\"scriptPubKey\", HexStr(subscript.begin(), subscript.end()));\n+            if (subobj.exists(\"pubkey\")) {\n+                // Always report the pubkey at the top level, so that `getnewaddress()['pubkey']` always works.\n+                obj.pushKV(\"pubkey\", subobj[\"pubkey\"]);\n+            }\n+            obj.pushKV(\"embedded\", std::move(subobj));\n+            a.push_back(EncodeDestination(embedded));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159427508",
      "id" : 159427508,
      "in_reply_to_id" : 159020401,
      "original_commit_id" : "17a7a7255958237b235c7c4104af7d9dd4482c8e",
      "original_position" : 25,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 86372049,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159427508",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Pushed a significant change: 17a7a7255958237b235c7c4104af7d9dd4482c8e -> 06cdb1dadc93b1fb273db3e74095656a1955e63c (squashed, not rebased):\r\n* Several comments addressing how it's harmless to have additional `CScript`s in the wallet, following comments by @TheBlueMatt.\r\n* Split up `AddDestinationForKey` into `GetDestinationForKey` (function) and `LearnRelatedScripts` (wallet method) as requested by @theuni and @ryanofsky. While being a bit more verbose, it's probably easier to read and more efficient for a few use cases.\r\n* Renamed `p2sh` as address type to `p2sh-segwit` as suggested by @achow101.\r\n* Restructured and improved the efficiency of `DescribeAddressVisitor::ProcessSubScript` a bit, as suggested by @promag.\r\n* Hopefully fixed two bugs noticed by @TheBlueMatt w.r.t. detection of wallet outputs after downgrade (specifically for imported keys, and for out-of-order recovery-detected keys); note that there are no tests for this - it only impacts downgrade to older software.\r\n* Added more comments and commit messages.\r\n* Added tests for `witness_version` and `witness_program` fields.\r\n\r\nSorry for the review that this invalidates, but I hope this can be the last update to this PR.\r\n  ",
      "created_at" : "2018-01-03T13:57:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355017652",
      "id" : 355017652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-03T14:12:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355017652",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "address_types.py appears to be failing on this assert for a single build:\r\n`assert_equal(unconf_balances[to_node], to_send * 10 * (2 + n))`",
      "created_at" : "2018-01-03T15:17:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355037129",
      "id" : 355037129,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-03T15:17:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355037129",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa I remembered I had power to kick travis, and did. All good.",
      "created_at" : "2018-01-03T15:54:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355047095",
      "id" : 355047095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-03T15:54:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355047095",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159458877"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159458877"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"SegWit wallet support\"\r\n\r\nSaying this is for \"backwards compatibility\" is a bit vague since that could imply this is needed for new software to load old wallets, but this is really for old software to be able to load new wallets. Maybe change \"earlier wallet versions\" to \"earlier wallet software\" in the next line to clarify.\r\n\r\nThe wording in the earlier version of this PR also seemed good: \"For SegWit scriptPubKeys, add the redeemscript explicitly to the wallet, so that older software versions (without implicit scripts) correctly treat these as ours.\"\r\n  \r\n  \r\n  ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T15:57:31Z",
      "diff_hunk" : "@@ -1129,6 +1142,20 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      * deadlock\n      */\n     void BlockUntilSyncedToCurrentChain();\n+\n+    /**\n+     * Explicitly make the wallet learn the related scripts for outputs to the\n+     * given key. This is purely for backward compatibility with earlier wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159458877",
      "id" : 159458877,
      "original_commit_id" : "6689c3c256612fbb39000ba54d706c2b57e5d045",
      "original_position" : 27,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 86409909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159458877",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159468527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159468527"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Part of the reason for that is that I feel using the term 'address' for change is wrong\r\n\r\nFor that reason rename argument above from `address_type` to `change_type`?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T16:34:39Z",
      "diff_hunk" : "@@ -243,16 +254,24 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n         pwallet->TopUpKeyPool();\n     }\n \n+    OutputType output_type = g_change_type;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159468527",
      "id" : 159468527,
      "in_reply_to_id" : 152037615,
      "original_commit_id" : "d0c76c351aad0454bea1cf2e4da7a8910f30c714",
      "original_position" : 77,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 93,
      "pull_request_review_id" : 86421365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159468527",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159472853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159472853"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"SegWit wallet support\"\r\n\r\nI didn't see this change mentioned in the comment (https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355017652), but it seems good not to reuse addresses. Since this isn't directly related to segwit, and is a change in behavior maybe it should be mentioned in the commit message or even release notes?\r\n  ",
      "commit_id" : "06cdb1dadc93b1fb273db3e74095656a1955e63c",
      "created_at" : "2018-01-03T16:52:47Z",
      "diff_hunk" : "@@ -636,27 +636,24 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, const SendCoinsRecipient& r\n     // Create a new refund address, or re-use:\n     QString account = tr(\"Refund from %1\").arg(recipient.authenticatedMerchant);\n     std::string strAccount = account.toStdString();\n-    std::set<CTxDestination> refundAddresses = wallet->GetAccountAddresses(strAccount);\n-    if (!refundAddresses.empty()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159472853",
      "id" : 159472853,
      "original_commit_id" : "6689c3c256612fbb39000ba54d706c2b57e5d045",
      "original_position" : 5,
      "path" : "src/qt/paymentserver.cpp",
      "position" : 5,
      "pull_request_review_id" : 86409909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-03T17:43:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159472853",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159477330"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159477330"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"SegWit wallet support\"\r\n\r\nMaybe explain OUTPUT_TYPE_P2SH_SEGWIT default argument in the comment since it seems a little arbitrary. I guess if no OutputType parameter is passed you want to store the p2wpkh script unconditionally.\r\n  \r\n  ",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-03T17:11:46Z",
      "diff_hunk" : "@@ -1129,6 +1142,20 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      * deadlock\n      */\n     void BlockUntilSyncedToCurrentChain();\n+\n+    /**\n+     * Explicitly make the wallet learn the related scripts for outputs to the\n+     * given key. This is purely for backward compatibility with earlier wallet\n+     * versions, as CBasicKeyStore automatically does this implicitly for all\n+     * keys now.\n+     */\n+    void LearnRelatedScripts(const CPubKey& key, OutputType = OUTPUT_TYPE_P2SH_SEGWIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159477330",
      "id" : 159477330,
      "original_commit_id" : "6689c3c256612fbb39000ba54d706c2b57e5d045",
      "original_position" : 31,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 86409909,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159477330",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159577303"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159577303"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If a key receives funds to an alternate address type, should the wallet force a new key?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-04T03:54:58Z",
      "diff_hunk" : "@@ -833,7 +835,7 @@ bool CWallet::GetAccountDestination(CTxDestination &dest, std::string strAccount\n             bForceNew = true;\n         else {\n             // Check if the current key has been used\n-            CScript scriptPubKey = GetScriptForDestination(account.vchPubKey.GetID());\n+            CScript scriptPubKey = GetScriptForDestination(GetDestinationForKey(account.vchPubKey, g_address_type));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159577303",
      "id" : 159577303,
      "original_commit_id" : "6689c3c256612fbb39000ba54d706c2b57e5d045",
      "original_position" : 14,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 86548676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159577303",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159862294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159862294"
         }
      },
      "author_association" : "OWNER",
      "body" : "Perhaps, but is it worth implementing that for accounts (which are deprecated)?",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-05T12:02:41Z",
      "diff_hunk" : "@@ -833,7 +835,7 @@ bool CWallet::GetAccountDestination(CTxDestination &dest, std::string strAccount\n             bForceNew = true;\n         else {\n             // Check if the current key has been used\n-            CScript scriptPubKey = GetScriptForDestination(account.vchPubKey.GetID());\n+            CScript scriptPubKey = GetScriptForDestination(GetDestinationForKey(account.vchPubKey, g_address_type));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159862294",
      "id" : 159862294,
      "in_reply_to_id" : 159577303,
      "original_commit_id" : "6689c3c256612fbb39000ba54d706c2b57e5d045",
      "original_position" : 14,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 86884602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159862294",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159865799"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159865799"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159577303\r\n\r\n> Perhaps, but is it worth implementing that for accounts (which are deprecated)?\r\n\r\nThis is also used by `getlabeladdress` in #7729. (If #11536 were merged, I think it would clear up some ongoing confusion about accounts and labels). But I think it still probably not worth changing the behavior in this PR, which is already doing enough things. Could have a comment here saying this code could check other address types besides `g_address_type` or store label/account addresses instead of pubkeys to be more reliable in the future.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-05T12:27:52Z",
      "diff_hunk" : "@@ -833,7 +835,7 @@ bool CWallet::GetAccountDestination(CTxDestination &dest, std::string strAccount\n             bForceNew = true;\n         else {\n             // Check if the current key has been used\n-            CScript scriptPubKey = GetScriptForDestination(account.vchPubKey.GetID());\n+            CScript scriptPubKey = GetScriptForDestination(GetDestinationForKey(account.vchPubKey, g_address_type));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159865799",
      "id" : 159865799,
      "in_reply_to_id" : 159577303,
      "original_commit_id" : "6689c3c256612fbb39000ba54d706c2b57e5d045",
      "original_position" : 14,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 86888866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159865799",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159910718"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159910718"
         }
      },
      "author_association" : "OWNER",
      "body" : "Rewritten a bit.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-05T16:00:49Z",
      "diff_hunk" : "@@ -1129,6 +1142,20 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      * deadlock\n      */\n     void BlockUntilSyncedToCurrentChain();\n+\n+    /**\n+     * Explicitly make the wallet learn the related scripts for outputs to the\n+     * given key. This is purely for backward compatibility with earlier wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159910718",
      "id" : 159910718,
      "in_reply_to_id" : 159458877,
      "original_commit_id" : "6689c3c256612fbb39000ba54d706c2b57e5d045",
      "original_position" : 27,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 86942166,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159910718",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159910778"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159910778"
         }
      },
      "author_association" : "OWNER",
      "body" : "Addressed by splitting the function up in two.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-05T16:01:02Z",
      "diff_hunk" : "@@ -1129,6 +1142,20 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      * deadlock\n      */\n     void BlockUntilSyncedToCurrentChain();\n+\n+    /**\n+     * Explicitly make the wallet learn the related scripts for outputs to the\n+     * given key. This is purely for backward compatibility with earlier wallet\n+     * versions, as CBasicKeyStore automatically does this implicitly for all\n+     * keys now.\n+     */\n+    void LearnRelatedScripts(const CPubKey& key, OutputType = OUTPUT_TYPE_P2SH_SEGWIT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159910778",
      "id" : 159910778,
      "in_reply_to_id" : 159477330,
      "original_commit_id" : "6689c3c256612fbb39000ba54d706c2b57e5d045",
      "original_position" : 31,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 86942239,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159910778",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159910831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159910831"
         }
      },
      "author_association" : "OWNER",
      "body" : "Added a TODO.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-05T16:01:13Z",
      "diff_hunk" : "@@ -833,7 +835,7 @@ bool CWallet::GetAccountDestination(CTxDestination &dest, std::string strAccount\n             bForceNew = true;\n         else {\n             // Check if the current key has been used\n-            CScript scriptPubKey = GetScriptForDestination(account.vchPubKey.GetID());\n+            CScript scriptPubKey = GetScriptForDestination(GetDestinationForKey(account.vchPubKey, g_address_type));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r159910831",
      "id" : 159910831,
      "in_reply_to_id" : 159577303,
      "original_commit_id" : "6689c3c256612fbb39000ba54d706c2b57e5d045",
      "original_position" : 14,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 86942291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159910831",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Built, tested, working here.",
      "created_at" : "2018-01-06T16:54:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355759677",
      "id" : 355759677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-06T16:54:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355759677",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4107993?v=4",
         "events_url" : "https://api.github.com/users/sneurlax/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sneurlax/followers",
         "following_url" : "https://api.github.com/users/sneurlax/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sneurlax/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sneurlax",
         "id" : 4107993,
         "login" : "sneurlax",
         "organizations_url" : "https://api.github.com/users/sneurlax/orgs",
         "received_events_url" : "https://api.github.com/users/sneurlax/received_events",
         "repos_url" : "https://api.github.com/users/sneurlax/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sneurlax/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sneurlax/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sneurlax"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Built in a Ubuntu VM for Windows. Tested: *creation of p2sh, *creation of bech32 using '-addresstype=bech32'.\r\n\r\nIf you create a new wallet using 0.15.0, it adds 1 address to the Receiving tab on creation:\r\nhttps://i.imgur.com/u0ibz3a.png\r\nThat is not the case with this branch (both p2sh and addresstype=bech32):\r\nhttps://i.imgur.com/H78fGtk.png\r\nI'm not sure whether this change is intended or whether it is relevant, but I'd thought I'd mention it. @sipa ?\r\n\r\nTested on mainnet. ACK.\r\n  ",
      "created_at" : "2018-01-07T17:21:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355837804",
      "id" : 355837804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-07T17:22:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355837804",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/17365556?v=4",
         "events_url" : "https://api.github.com/users/laudaa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laudaa/followers",
         "following_url" : "https://api.github.com/users/laudaa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laudaa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laudaa",
         "id" : 17365556,
         "login" : "laudaa",
         "organizations_url" : "https://api.github.com/users/laudaa/orgs",
         "received_events_url" : "https://api.github.com/users/laudaa/received_events",
         "repos_url" : "https://api.github.com/users/laudaa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laudaa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laudaa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laudaa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I believe this is due to a different change. The removal of the default\nkey.\n\nOn Jan 7, 2018 12:22 PM, \"Lauda\" <notifications@github.com> wrote:\n\n> Built in a Ubuntu VM for Windows. Tested: *creation of p2sh, *creation of\n> bech32 using '-addresstype=bech32'.\n>\n> If you create a new wallet using 0.15.0, it adds 1 address to the\n> Receiving tab on creation:\n> https://i.imgur.com/u0ibz3a.png <http://url>\n> That is not the case with this branch (both p2sh and addresstype=bech32):\n> https://i.imgur.com/H78fGtk.png <http://url>\n> I'm not sure whether this change is intended or whether it is relevant,\n> but I'd thought I'd mention it. @sipa <https://github.com/sipa> ?\n>\n> Tested on mainnet. ACK.\n>\n> Ã¢ÂÂ\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355837804>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFgC08wP3MrUjvE-8hlOBJOM0IZ7PoZNks5tIP1pgaJpZM4PjkGp>\n> .\n>\n",
      "created_at" : "2018-01-07T17:49:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355839541",
      "id" : 355839541,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-07T17:49:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355839541",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@instagibbs Tested using the 'legacy' option and you are right. ",
      "created_at" : "2018-01-07T18:34:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355842479",
      "id" : 355842479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-07T18:34:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355842479",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/17365556?v=4",
         "events_url" : "https://api.github.com/users/laudaa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laudaa/followers",
         "following_url" : "https://api.github.com/users/laudaa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laudaa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laudaa",
         "id" : 17365556,
         "login" : "laudaa",
         "organizations_url" : "https://api.github.com/users/laudaa/orgs",
         "received_events_url" : "https://api.github.com/users/laudaa/received_events",
         "repos_url" : "https://api.github.com/users/laudaa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laudaa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laudaa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laudaa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK.",
      "created_at" : "2018-01-08T02:43:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-355875193",
      "id" : 355875193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-08T02:43:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355875193",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160212731"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160212731"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "As discussed on IRC this stuff sucks. If you add a bech32 address to your mapAddressBook it comes back out as 3QJmnh in 0.15 and prior. I'm ok with leaving it after discussion, but needs good documentation.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-08T18:03:26Z",
      "diff_hunk" : "@@ -292,8 +292,8 @@ UniValue setaccount(const JSONRPCRequest& request)\n         // Detect when changing the account of an address that is the 'unused current key' of another account:\n         if (pwallet->mapAddressBook.count(dest)) {\n             std::string strOldAccount = pwallet->mapAddressBook[dest].name;\n-            if (dest == GetAccountAddress(pwallet, strOldAccount)) {\n-                GetAccountAddress(pwallet, strOldAccount, true);\n+            if (dest == GetAccountDestination(pwallet, strOldAccount)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160212731",
      "id" : 160212731,
      "original_commit_id" : "cbe197470ecc1f7b48771c4e7b654ab030af4c9e",
      "original_position" : 34,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 123,
      "pull_request_review_id" : 87289450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160212731",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160223175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160223175"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can we please not auto shit like this? It just needlessly makes reading the code impossible to save on typing 4 charachters.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-08T18:48:43Z",
      "diff_hunk" : "@@ -246,12 +246,12 @@ CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& pa\n         // Case 1: Bitcoin address and we have full public key:\n         CTxDestination dest = DecodeDestination(ks);\n         if (pwallet && IsValidDestination(dest)) {\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            if (!keyID) {\n+            auto key = GetKeyForDestination(*pwallet, dest);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160223175",
      "id" : 160223175,
      "in_reply_to_id" : 155607235,
      "original_commit_id" : "5a36cba99a4738063d486caac620d0dab6648ef9",
      "original_position" : 6,
      "path" : "src/rpc/misc.cpp",
      "position" : null,
      "pull_request_review_id" : 87289450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160223175",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160245838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160245838"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Comment is wrong - we use the AddCScript call to write the redeemscript to disk to support downgrade.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-08T20:21:03Z",
      "diff_hunk" : "@@ -1307,7 +1307,7 @@ UniValue addwitnessaddress(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot convert between witness address types\");\n         }\n     } else {\n-        pwallet->AddCScript(witprogram);\n+        pwallet->AddCScript(witprogram); // Implicit for single-key, but necessary for multisig",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160245838",
      "id" : 160245838,
      "original_commit_id" : "899c0ef898e6684fc0b80f9546464d42b4b0c5de",
      "original_position" : 5,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 87289450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160245838",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160283543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160283543"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it safe that we do not do a AddCScript based on a importpubkey? Seems to me that you'd never match the HaveCScript condition if you downgrade so maybe something might break? The final script will still be watched, but it just seems weird to not have the symmetry with importprivkey here.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-08T23:28:02Z",
      "diff_hunk" : "@@ -433,7 +438,9 @@ UniValue importpubkey(const JSONRPCRequest& request)\n \n     LOCK2(cs_main, pwallet->cs_wallet);\n \n-    ImportAddress(pwallet, pubKey.GetID(), strLabel);\n+    for (const auto& dest : GetAllDestinationsForKey(pubKey)) {\n+        ImportAddress(pwallet, dest, strLabel);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160283543",
      "id" : 160283543,
      "original_commit_id" : "fce5d09ae61b3cc617653211000589a454840174",
      "original_position" : 27,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 27,
      "pull_request_review_id" : 87289450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160283543",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I dont need to recieve email from,you\n\nOn Jan 8, 2018 4:56 PM, \"Matt Corallo\" <notifications@github.com> wrote:\n\n> *@TheBlueMatt* commented on this pull request.\n>\n> Seems fine to me, but I'm sick and cant review properly. Also not worth\n> holding this up anymore for me.\n> ------------------------------\n>\n> In src/wallet/rpcwallet.cpp\n> <https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160212731>:\n>\n> > @@ -292,8 +292,8 @@ UniValue setaccount(const JSONRPCRequest& request)\n>          // Detect when changing the account of an address that is the 'unused current key' of another account:\n>          if (pwallet->mapAddressBook.count(dest)) {\n>              std::string strOldAccount = pwallet->mapAddressBook[dest].name;\n> -            if (dest == GetAccountAddress(pwallet, strOldAccount)) {\n> -                GetAccountAddress(pwallet, strOldAccount, true);\n> +            if (dest == GetAccountDestination(pwallet, strOldAccount)) {\n>\n> As discussed on IRC this stuff sucks. If you add a bech32 address to your\n> mapAddressBook it comes back out as 3QJmnh in 0.15 and prior. I'm ok with\n> leaving it after discussion, but needs good documentation.\n> ------------------------------\n>\n> In src/rpc/misc.cpp\n> <https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160223175>:\n>\n> > @@ -246,12 +246,12 @@ CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& pa\n>          // Case 1: Bitcoin address and we have full public key:\n>          CTxDestination dest = DecodeDestination(ks);\n>          if (pwallet && IsValidDestination(dest)) {\n> -            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n> -            if (!keyID) {\n> +            auto key = GetKeyForDestination(*pwallet, dest);\n>\n> Can we please not auto shit like this? It just needlessly makes reading\n> the code impossible to save on typing 4 charachters.\n> ------------------------------\n>\n> In src/wallet/rpcwallet.cpp\n> <https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160245838>:\n>\n> > @@ -1307,7 +1307,7 @@ UniValue addwitnessaddress(const JSONRPCRequest& request)\n>              throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot convert between witness address types\");\n>          }\n>      } else {\n> -        pwallet->AddCScript(witprogram);\n> +        pwallet->AddCScript(witprogram); // Implicit for single-key, but necessary for multisig\n>\n> Comment is wrong - we use the AddCScript call to write the redeemscript to\n> disk to support downgrade.\n> ------------------------------\n>\n> In src/wallet/rpcdump.cpp\n> <https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160283543>:\n>\n> > @@ -433,7 +438,9 @@ UniValue importpubkey(const JSONRPCRequest& request)\n>\n>      LOCK2(cs_main, pwallet->cs_wallet);\n>\n> -    ImportAddress(pwallet, pubKey.GetID(), strLabel);\n> +    for (const auto& dest : GetAllDestinationsForKey(pubKey)) {\n> +        ImportAddress(pwallet, dest, strLabel);\n>\n> Is it safe that we do not do a AddCScript based on a importpubkey? Seems\n> to me that you'd never match the HaveCScript condition if you downgrade so\n> maybe something might break? The final script will still be watched, but it\n> just seems weird to not have the symmetry with importprivkey here.\n>\n> Ã¢ÂÂ\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11403#pullrequestreview-87289450>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AhH-NSFUINCKpWcrBToYMQJDDqQrdH_mks5tIqsegaJpZM4PjkGp>\n> .\n>\n",
      "created_at" : "2018-01-08T23:57:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-356135163",
      "id" : 356135163,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-08T23:57:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356135163",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/34733621?v=4",
         "events_url" : "https://api.github.com/users/Damballahwedo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Damballahwedo/followers",
         "following_url" : "https://api.github.com/users/Damballahwedo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Damballahwedo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Damballahwedo",
         "id" : 34733621,
         "login" : "Damballahwedo",
         "organizations_url" : "https://api.github.com/users/Damballahwedo/orgs",
         "received_events_url" : "https://api.github.com/users/Damballahwedo/received_events",
         "repos_url" : "https://api.github.com/users/Damballahwedo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Damballahwedo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Damballahwedo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Damballahwedo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160555382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160555382"
         }
      },
      "author_association" : "OWNER",
      "body" : "I believe you're right. Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-09T23:37:44Z",
      "diff_hunk" : "@@ -433,7 +438,9 @@ UniValue importpubkey(const JSONRPCRequest& request)\n \n     LOCK2(cs_main, pwallet->cs_wallet);\n \n-    ImportAddress(pwallet, pubKey.GetID(), strLabel);\n+    for (const auto& dest : GetAllDestinationsForKey(pubKey)) {\n+        ImportAddress(pwallet, dest, strLabel);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160555382",
      "id" : 160555382,
      "in_reply_to_id" : 160283543,
      "original_commit_id" : "fce5d09ae61b3cc617653211000589a454840174",
      "original_position" : 27,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 27,
      "pull_request_review_id" : 87693764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:37:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160555382",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160555403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160555403"
         }
      },
      "author_association" : "OWNER",
      "body" : "Fixed.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-09T23:37:54Z",
      "diff_hunk" : "@@ -1307,7 +1307,7 @@ UniValue addwitnessaddress(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot convert between witness address types\");\n         }\n     } else {\n-        pwallet->AddCScript(witprogram);\n+        pwallet->AddCScript(witprogram); // Implicit for single-key, but necessary for multisig",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160555403",
      "id" : 160555403,
      "in_reply_to_id" : 160245838,
      "original_commit_id" : "899c0ef898e6684fc0b80f9546464d42b4b0c5de",
      "original_position" : 5,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 87693797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:37:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160555403",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160555564"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160555564"
         }
      },
      "author_association" : "OWNER",
      "body" : "Release notes are for later I think (after importmulti/signmessage/dumpwallet/importwallet have been figured out).",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-09T23:38:55Z",
      "diff_hunk" : "@@ -292,8 +292,8 @@ UniValue setaccount(const JSONRPCRequest& request)\n         // Detect when changing the account of an address that is the 'unused current key' of another account:\n         if (pwallet->mapAddressBook.count(dest)) {\n             std::string strOldAccount = pwallet->mapAddressBook[dest].name;\n-            if (dest == GetAccountAddress(pwallet, strOldAccount)) {\n-                GetAccountAddress(pwallet, strOldAccount, true);\n+            if (dest == GetAccountDestination(pwallet, strOldAccount)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160555564",
      "id" : 160555564,
      "in_reply_to_id" : 160212731,
      "original_commit_id" : "cbe197470ecc1f7b48771c4e7b654ab030af4c9e",
      "original_position" : 34,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 123,
      "pull_request_review_id" : 87693978,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-09T23:38:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160555564",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "![brace-yourself-the-merge-is-coming](https://user-images.githubusercontent.com/3534524/34799540-18b80bfa-f658-11e7-9523-01a0215911e7.jpg)\r\n",
      "created_at" : "2018-01-10T22:46:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-356763236",
      "id" : 356763236,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-10T22:46:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356763236",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Re-Tested ACK b224a47a1",
      "created_at" : "2018-01-11T06:56:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-356843474",
      "id" : 356843474,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-11T06:56:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356843474",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "ty",
      "created_at" : "2018-01-11T06:58:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-356843792",
      "id" : 356843792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-11T06:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356843792",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/35320080?v=4",
         "events_url" : "https://api.github.com/users/tonyalester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tonyalester/followers",
         "following_url" : "https://api.github.com/users/tonyalester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tonyalester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tonyalester",
         "id" : 35320080,
         "login" : "tonyalester",
         "organizations_url" : "https://api.github.com/users/tonyalester/orgs",
         "received_events_url" : "https://api.github.com/users/tonyalester/received_events",
         "repos_url" : "https://api.github.com/users/tonyalester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tonyalester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tonyalester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tonyalester"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> ",
      "created_at" : "2018-01-11T06:58:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-356843861",
      "id" : 356843861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-11T06:58:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356843861",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/35320080?v=4",
         "events_url" : "https://api.github.com/users/tonyalester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tonyalester/followers",
         "following_url" : "https://api.github.com/users/tonyalester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tonyalester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tonyalester",
         "id" : 35320080,
         "login" : "tonyalester",
         "organizations_url" : "https://api.github.com/users/tonyalester/orgs",
         "received_events_url" : "https://api.github.com/users/tonyalester/received_events",
         "repos_url" : "https://api.github.com/users/tonyalester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tonyalester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tonyalester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tonyalester"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160882192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160882192"
         }
      },
      "author_association" : "NONE",
      "body" : "I love you guys.",
      "commit_id" : "b224a47a1a5feac380506abff63fae91d7a93b39",
      "created_at" : "2018-01-11T07:40:53Z",
      "diff_hunk" : "@@ -292,8 +292,8 @@ UniValue setaccount(const JSONRPCRequest& request)\n         // Detect when changing the account of an address that is the 'unused current key' of another account:\n         if (pwallet->mapAddressBook.count(dest)) {\n             std::string strOldAccount = pwallet->mapAddressBook[dest].name;\n-            if (dest == GetAccountAddress(pwallet, strOldAccount)) {\n-                GetAccountAddress(pwallet, strOldAccount, true);\n+            if (dest == GetAccountDestination(pwallet, strOldAccount)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#discussion_r160882192",
      "id" : 160882192,
      "in_reply_to_id" : 160212731,
      "original_commit_id" : "cbe197470ecc1f7b48771c4e7b654ab030af4c9e",
      "original_position" : 34,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 123,
      "pull_request_review_id" : 88076981,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
      "updated_at" : "2018-01-11T07:40:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160882192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/8888420?v=4",
         "events_url" : "https://api.github.com/users/stefment/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stefment/followers",
         "following_url" : "https://api.github.com/users/stefment/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stefment/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stefment",
         "id" : 8888420,
         "login" : "stefment",
         "organizations_url" : "https://api.github.com/users/stefment/orgs",
         "received_events_url" : "https://api.github.com/users/stefment/received_events",
         "repos_url" : "https://api.github.com/users/stefment/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stefment/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stefment/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stefment"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Post-merge utACK",
      "created_at" : "2018-01-11T20:08:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11403#issuecomment-357046524",
      "id" : 357046524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
      "updated_at" : "2018-01-11T20:08:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357046524",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   }
]
