[
   {
      "author_association" : "MEMBER",
      "body" : "To address the \"messy wallet.dat\" problem, there is an ongoing project called descriptor wallets (https://github.com/bitcoin/bitcoin/projects/12) that will revamp how thing are structured internally. While descriptors (see https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md) are already supported in import, they're still converted at import time to the old wallet.dat structures. With descriptor wallets, the actual description of the addresses/keys in the wallet will be one or a few descriptors, along with some metadata. That's not quite what you're talking about with BIP39-like constructions, but I believe it's a large improvement in minimizing and structuring the amount of state that needs to be safeguarded.\r\n",
      "created_at" : "2019-12-15T09:27:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-565792201",
      "id" : 565792201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTc5MjIwMQ==",
      "updated_at" : "2019-12-15T09:27:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565792201",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As far as mnemonics goes, I think it's very reasonable to have support for converting various kinds to descriptors and importing those once we have descriptor wallets, as that should be very easy and safe at that point.\r\n\r\nIf you're talking about *just* mnemonics there is the complication that there isn't really a watch-only version of them. Wallets should know what to watch (what type of scripts, keys for other multisig participants, possibly policies that degrade over time using locktime, ...) independently of what their own private key is. I expect that that will end up just being descriptors. So I don't know what mnemonics support would look like, and how useful it is, if you still need a separate (but non-secret) description of your wallet.",
      "created_at" : "2019-12-15T09:39:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-565793035",
      "id" : 565793035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTc5MzAzNQ==",
      "updated_at" : "2019-12-15T09:40:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565793035",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I just suggested that, at least, Bitcoin Core should support the *standardized* scheme of BIP39/44/49/84.\r\n\r\nThe user could just simply import the mnemonic, then the first accounts (in use) of three different address types (legacy/p2sh-segwit/bech32) would show up. If the user opened something like \"wallet explorer\" (could be the successor of \" ~~sending/~~ receiving address\" and \"coin selection\" window), there would be a hierarchical view showing that the mnemonic derived everything as \"root\".",
      "created_at" : "2019-12-15T10:40:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-565797306",
      "id" : 565797306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTc5NzMwNg==",
      "updated_at" : "2019-12-15T11:42:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565797306",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@sipa Sorry, I'm not sure whether I have completely understood what you said...\r\n\r\n>To address the \"messy wallet.dat\" problem, there is an ongoing project called descriptor wallets\r\n\r\nWhat you were talking about seemed to be low-level technical things that I'm not able to evaluate.\r\n\r\nI actually suggested that a single wallet.dat could already provide the functions of \"multi-wallet\". I was not quite sure on this, since Bitcoin Core had already supported multi-wallet (loading multiple wallet.dat) feature.\r\n\r\nBesides, what I suggested is far more than \"cleaning up the wallet.dat database\" - I think the current situation that, text labels being the only way to mark/classify addresses/keys/etc, is too primitive, so that we need a more advanced/powerful way to manage them.\r\n\r\n>If you're talking about just mnemonics there is the complication that there isn't really a watch-only version of them. Wallets should know what to watch (what type of scripts, keys for other multisig participants, possibly policies that degrade over time using locktime, ...) independently of what their own private key is.\r\n\r\nTo my understanding, since a BIP39 mnemonic phrase is supposed to be universal, there will never be a \"ultimate\" comprehensive \"description\" of \"what to watch\".\r\n\r\nHowever, the wallet only needs to watch what its user needs to watch.\r\n\r\nFor BIP44/49/84, three xpubs would be enough to cover the simplest situation (only one account was in use).\r\n\r\nHere comes another question: since we already have PSBT that was intended to solve the cross-implementation interoperability problem during transaction signing process, why couldn't we have a similar standard for \"watch-only wallet descrption\"?",
      "created_at" : "2019-12-15T11:49:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-565802257",
      "id" : 565802257,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NTgwMjI1Nw==",
      "updated_at" : "2019-12-15T11:49:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565802257",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@sipa \r\n>With descriptor wallets, the actual description of the addresses/keys in the wallet will be one or a few descriptors, along with some metadata.\r\n\r\nAddresses/keys, and xpubs (and its various descriptors) are *distinct* things.\r\n\r\nThe text labels provided by Bitcoin Core are not quite a powerful tool to manage the wallet. However, text labels will obviously still be needed in the future, on per address/key basis, even if we will be able to automatically derive addresses on-the-fly from descriptors.\r\n\r\nI don't know how these data should be stored at lower level. I just think it will be still necessary to expose the addresses/keys to the user, thus the user will be able to manage them efficiently. Besides, I think some advices should be told to those \"single WIF privkey fetishists\", especially to their potential new recruits.",
      "created_at" : "2019-12-19T09:06:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-567401152",
      "id" : 567401152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NzQwMTE1Mg==",
      "updated_at" : "2019-12-19T09:06:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/567401152",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A lot of what you are asking for is already done, or in the works via descriptor wallets. Just some things aren't exposed to users yet.\r\n\r\nPlease also stop mixing together BIP 39 with BIP 44/49/84, they describe different things. BIP 39 is the mnemonic scheme which is wholly independent of the derivation paths described by BIPs 44/49/84.\r\n\r\n> I actually suggested that a single wallet.dat could already provide the functions of \"multi-wallet\". I was not quite sure on this, since Bitcoin Core had already supported multi-wallet (loading multiple wallet.dat) feature.\r\n\r\nThis is what we did in the past. A single wallet.dat did a ton of things as if it were multiple wallets. This is *why* the wallet.dat is so messy, because it was one file that tried to act like multiple. We are moving away from this model, and I don't think it is a good idea to try to keep it up. Everything that you want that are multiple wallets should be multiple wallet files. Otherwise the code gets extremely messy, wallet.dat files get messy, and we get a combinatorial blow up of possibilities. It's far simpler to just have multiple wallets with each wallet having some flag indicating what it is.\r\n\r\nFor example, with descriptor wallets, we are getting rid of mixed watch-only and non-watch-only. A wallet will have the `PRIVATE_KEYS_DISABLED` flag to indicate that it is a watch-only wallet.\r\n\r\n> [READ-ONLY] This wallet.dat database was last saved at [time]\r\n\r\nWe basically already have this. The wallet records the height and hash of the most recent block. It's close enough to a timestamp.\r\n\r\n> Derived/independently generated/imported, at [time]\r\n\r\nThe birth/import time of keys is already recorded.\r\n\r\n> Default address derivation seed: currently, sethdseed (by default) simply replaces the HD seed with a newly generated, not-yet-backuped one, as far as I know. With this flag, the old HD seed could still be retained, thus the origins of privkeys derived by it could still be clear. This should also be useful to the watch-only side of cold storage.\r\n\r\nThe seed is not deleted. It is still in the wallet file, just not active. Furthermore, any keys that were generated from it still have their metadata say that it was generated by the old seed.\r\n\r\n***\r\n\r\nRegarding BIPs 44/49/84, descriptor wallets will default to creating descriptors that follow the derivation scheme. We will not be using the ypub/zpub export format as descriptors are far more descriptive than those are. The current wallet architecture does not allow for us to use the different derivation paths for the different address types, but descriptor wallets will.",
      "created_at" : "2019-12-19T16:25:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-567560704",
      "id" : 567560704,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NzU2MDcwNA==",
      "updated_at" : "2019-12-19T16:25:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/567560704",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@achow101 \r\n>A lot of what you are asking for is already done, or in the works via descriptor wallets. Just some things aren't exposed to users yet.\r\n\r\nThank you for clarification. It may or may not be proper to expose them to the users in the future, however, it's not my core idea. So far, in my opinion, it seems to be better to expose them.\r\n\r\n>This is what we did in the past. A single wallet.dat did a ton of things as if it were multiple wallets. This is why the wallet.dat is so messy, because it was one file that tried to act like multiple. We are moving away from this model, and I don't think it is a good idea to try to keep it up.\r\n\r\nIt's *fait accompli*. Creating new wallet.dat types won't eliminate all those existing old messy `wallet.dat`s.\r\n\r\n>Please also stop mixing together BIP 39 with BIP 44/49/84, they describe different things. BIP 39 is the mnemonic scheme which is wholly independent of the derivation paths described by BIPs 44/49/84.\r\n\r\nI didn't mix them up. I just said that it's exactly the point of BIP39 to be \"wholly independent of the derivation paths described by BIPs 44/49/84\", which was on the contrary considered a flaw of it.\r\n\r\nJust like what *Mastering Bitcoin* had said:\r\n>As bitcoin wallet technology has matured, certain common industry standards have emerged that make bitcoin wallets broadly interoperable, easy to use, secure, and flexible. These common standards are:\r\n>\r\n>- Mnemonic code words, based on BIP-39\r\n>\r\n>- HD wallets, based on BIP-32\r\n>\r\n>- Multipurpose HD wallet structure, based on BIP-43\r\n>\r\n>- Multicurrency and multiaccount wallets, based on BIP-44\r\n>\r\n>These standards may change or may become obsolete by future developments, but for now they form a set of interlocking technologies that have become the de facto wallet standard for bitcoin.\r\n>\r\n>The standards have been adopted by a broad range of software and hardware bitcoin wallets, making all these wallets interoperable. A user can export a mnemonic generated on one of these wallets and import it in another wallet, recovering all transactions, keys, and addresses.\r\n\r\nThe core idea I had suggested was that:\r\n\r\n1. Bitcoin Core should support the standardized scheme of BIP39/44/49/84.\r\n\r\n2. It should be the priority to deliver an usable solution to the users, rather than to wait for a nealy-ideal proposal to appear.\r\n\r\n3. A standardized proposal is always the best proposal, far better than a mess of \"improved proposals\" which are incompatible with each other.\r\n\r\nOtherwise, it's already scary enough to push the users to join the army of \"single precious WIF privkey fetishism\".\r\n\r\n>We will not be using the ypub/zpub export format as descriptors are far more descriptive than those are.\r\n\r\nAt least Bitcoin Core should support importing them. I think the interoperability provided by supporting ypub/zpub really worth it, although it might seem to be \"a non-normative way\" or \"a layer violation\".",
      "created_at" : "2019-12-20T03:49:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-567776486",
      "id" : 567776486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2Nzc3NjQ4Ng==",
      "updated_at" : "2019-12-20T03:49:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/567776486",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I have built Bitcoin Core from source with the \"native descriptor wallet\" commit.\r\n\r\nI can see the \"Disable private key\" option in the wallet creation dialog. I agree that it might be an useful feature (or a good forcing function).\r\n\r\nHowever, I still disagree with the design or idea behind this option, that abilities of wallet.dat should be artificially limited according to its \"predetermined type\".\r\n\r\n--------\r\n\r\nAs we all know, wallet.dat is a database, which contains detailed information, including both recoverable things like raw transaction data (and corresponding amount/date/recipient address etc), and non-recoverable things like labels and generation dates.\r\n\r\nTherefore, **a piggy backup of the whole wallet.dat should always be a distinct/independent function other than portable last-resort backup/recovery measures like WIF/mnemonic.**\r\n\r\n--------\r\n\r\nSince wallet.dat is a database, why couldn't it provide comprehensive management of various types of contents? IMHO, it should be able to remember (or even better, to **analyse/locate**) origins of each addr/pubkey/privkey stored inside it.\r\n\r\n--------\r\n\r\nTo address the privacy issue around coin selection, I think Bitcoin Core should bring back the grouping feature, which seems to be similar to the abandoned \"account\" mechanism.\r\n\r\n**The grouping mechanism should be exposed to the user in some form like \"sub-wallet\".** A simple \"Venn diagram\" should be able to explain this to the user.\r\n\r\nEdit: the user could be switch among different sub-wallets (or in other words, to activate one of them, while deactivating others at same time), just like the current multi-wallet.dat situation.\r\n\r\n--------\r\n\r\nIf this feature is considered to face too many complicated situations, I think Bitcoin Core could simply automatically complete the \"grouping\" job by itself (disallowing the user to change the grouping), just as if they were in different wallet.dat's.\r\n\r\nI think there could be a compromise still, that only standalone privkeys could be manually grouped by the user.\r\n\r\n--------\r\n\r\nOh, the classic **screw-up-by-change-address** issue should also be addressed here.\r\n\r\nI think Bitcoin Core should simply **never** automatically put the change coins onto newly generated (not-yet-backuped) addresses, since it seems really obvious to me that fund safety is much more important than privacy. It's better to use warnings/click-throughs to shape the user behavoir/habit, instead of silently introducing the risk of fund loss.",
      "created_at" : "2020-05-01T15:29:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-622434545",
      "id" : 622434545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjQzNDU0NQ==",
      "updated_at" : "2020-05-01T15:49:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622434545",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Ah. I found myself to be in fact bikeshedding... It's really embarrassing. If I've generated too much noise, I would say sorry for this.\r\n\r\nHowever, I didn't change my idea that the problems mentioned in my initial post should be addressed.\r\n\r\nAnyway, I found that the \"native descriptor wallet\" commit had adopted the standard BIP44/49/84 derivation path, which seems to be a good start.\r\n\r\nI still hope that mnemonic-based HD wallet backup could also been brought into Bitcoin Core soon, BIP39 to be best.",
      "created_at" : "2020-05-01T15:42:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-622439863",
      "id" : 622439863,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjQzOTg2Mw==",
      "updated_at" : "2020-05-01T15:42:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622439863",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "As far as I know, \"multi-wallet management\" could be a really complicated problem, that even some security vulnerabilities are probably related to this - just like [the case of Trezor](https://blog.trezor.io/details-of-the-multisig-change-address-issue-and-its-mitigation-6370ad73ed2a), which was considered to be vague borderline of \"what addresses belong to the current wallet\" by myself.\r\n\r\nI feel that this problem might be really out of my scope of knowledge. Maybe I have just overthought/misunderstood this...",
      "created_at" : "2020-05-01T15:56:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-622445615",
      "id" : 622445615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjQ0NTYxNQ==",
      "updated_at" : "2020-05-01T15:56:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622445615",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Since wallet.dat is a database, why couldn't it provide comprehensive management of various types of contents?\r\n\r\nLimitations of previous wallet architecture prevent us from doing that. We could just outright change it to something else but such changes are drastic, large, and hard to review, so they basically don't get merged. Moving slowly to another architecture is hard because incrementally changing to something very different is hard to do. It might be easier now with the ScritpPubKeyMan separation and I've been exploring more of BDB's features that could be useful to us.\r\n\r\n> I think Bitcoin Core should bring back the grouping feature, which seems to be similar to the abandoned \"account\" mechanism.\r\n\r\nThis feature never existed. The fact that people think that's what accounts did is part of why accounts was removed.\r\n\r\n> I think Bitcoin Core should simply never automatically put the change coins onto newly generated (not-yet-backuped) addresses,\r\n\r\nHow do you know if someone has made a backup?",
      "created_at" : "2020-05-01T16:07:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-622450037",
      "id" : 622450037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjQ1MDAzNw==",
      "updated_at" : "2020-05-01T16:08:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622450037",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : ">How do you know if someone has made a backup?\r\n\r\nThis could be done by a backup warning/guidance mechanism (which is very common in other wallet apps nowadays!), in which only the \"portable last-resort backup/recovery measures like WIF/mnemonic\" should really count.\r\n\r\nHowever, it's not my central point. In my opinion, even address reusing is still probably much better than silently introducing fund loss risks.\r\n\r\n>such changes are drastic, large, and hard to review\r\n\r\nAgreed. I would actually like to put this topic aside for the moment, and then bring up the mnemonic-based backup to priority.\r\n\r\nEdit: boldly speaking, maybe some drastic, large changes are inevitably needed to make Bitcoin Core really both user-friendly and powerful, although I don't think I have the knowledge to do the job of wallet architecture design, however.",
      "created_at" : "2020-05-01T16:38:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-622462445",
      "id" : 622462445,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjQ2MjQ0NQ==",
      "updated_at" : "2020-05-01T16:41:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622462445",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Ah, during an experiment of creating a watch-only wallet of Satoshi coins, I imported Satoshi's pubkey into my own wallet.dat for daily use by mistake :-/\r\n\r\nI think it would be great if I can revert this stupid human error (like, to disable it, or mark-as-hidden), otherwise I would have to recreate my daily-use wallet.dat, or just live with the fact that my Bitcoin Core always counts Satoshi's coins as if they were mine.",
      "created_at" : "2020-06-04T05:11:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-638606198",
      "id" : 638606198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzODYwNjE5OA==",
      "updated_at" : "2020-06-04T05:12:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638606198",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/4075106?v=4",
         "events_url" : "https://api.github.com/users/andronoob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andronoob/followers",
         "following_url" : "https://api.github.com/users/andronoob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andronoob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andronoob",
         "id" : 4075106,
         "login" : "andronoob",
         "node_id" : "MDQ6VXNlcjQwNzUxMDY=",
         "organizations_url" : "https://api.github.com/users/andronoob/orgs",
         "received_events_url" : "https://api.github.com/users/andronoob/received_events",
         "repos_url" : "https://api.github.com/users/andronoob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andronoob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andronoob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andronoob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "See also #19151: âSupport BIP39 mnemonic in descriptorsâ",
      "created_at" : "2020-08-12T10:57:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17748#issuecomment-672802571",
      "id" : 672802571,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17748",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjgwMjU3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T10:57:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672802571",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/12780394?v=4",
         "events_url" : "https://api.github.com/users/RobinLinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RobinLinus/followers",
         "following_url" : "https://api.github.com/users/RobinLinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RobinLinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RobinLinus",
         "id" : 12780394,
         "login" : "RobinLinus",
         "node_id" : "MDQ6VXNlcjEyNzgwMzk0",
         "organizations_url" : "https://api.github.com/users/RobinLinus/orgs",
         "received_events_url" : "https://api.github.com/users/RobinLinus/received_events",
         "repos_url" : "https://api.github.com/users/RobinLinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RobinLinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RobinLinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RobinLinus"
      }
   }
]
