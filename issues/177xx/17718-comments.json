[
   {
      "author_association" : "MEMBER",
      "body" : "The same applies also to `DecodeBase58Check(const std::string& str, â¦)`, `DecodeBase32(const std::string& str, â¦)` and `DecodeBase64(const std::string& str, â¦)`.",
      "created_at" : "2019-12-11T10:39:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17718#issuecomment-564482411",
      "id" : 564482411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDQ4MjQxMQ==",
      "updated_at" : "2019-12-11T10:39:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564482411",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also `ParseMoney(const std::string&, â¦)` and `ParseHex(const std::string& â¦)`.",
      "created_at" : "2019-12-11T16:44:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17718#issuecomment-564631364",
      "id" : 564631364,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDYzMTM2NA==",
      "updated_at" : "2019-12-11T16:44:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564631364",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is a list of functions that might be worth checking for potential problems introduced by \"`\\0`-stuffing\".\r\n\r\nI'll take a look :)\r\n\r\nThe candidate list was generated using `git grep -E '(\\(const std::string *&|[a-zA-Z0-9_]\\(const (unsigned |)char *\\*)'` and then filtered manually.\r\n\r\n```\r\nsrc/arith_uint256.cpp:template void base_uint<256>::SetHex(const char*);\r\nsrc/arith_uint256.cpp:template void base_uint<256>::SetHex(const std::string&);\r\n\r\nsrc/arith_uint256.cpp:void base_uint<BITS>::SetHex(const char* psz)\r\nsrc/arith_uint256.cpp:void base_uint<BITS>::SetHex(const std::string& str)\r\n\r\nsrc/base58.cpp:bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch)\r\nsrc/base58.cpp:bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet)\r\n\r\nsrc/base58.cpp:bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet)\r\nsrc/base58.cpp:bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRet)\r\n\r\nsrc/uint256.cpp:template void base_blob<160>::SetHex(const char*);\r\nsrc/uint256.cpp:template void base_blob<160>::SetHex(const std::string&);\r\n\r\nsrc/uint256.cpp:template void base_blob<256>::SetHex(const char*);\r\nsrc/uint256.cpp:template void base_blob<256>::SetHex(const std::string&);\r\n\r\nsrc/uint256.cpp:void base_blob<BITS>::SetHex(const char* psz)\r\nsrc/uint256.cpp:void base_blob<BITS>::SetHex(const std::string& str)\r\n\r\nsrc/uint256.h:inline uint256 uint256S(const char *str)\r\nsrc/uint256.h:inline uint256 uint256S(const std::string& str)\r\n\r\nsrc/util/moneystr.cpp:bool ParseMoney(const char* pszIn, CAmount& nRet)\r\nsrc/util/moneystr.cpp:bool ParseMoney(const std::string& str, CAmount& nRet)\r\n\r\nsrc/util/strencodings.cpp:int64_t atoi64(const char* psz)\r\nsrc/util/strencodings.cpp:int64_t atoi64(const std::string& str)\r\n\r\nsrc/util/strencodings.cpp:std::vector<unsigned char> DecodeBase32(const char* p, bool* pf_invalid)\r\nsrc/util/strencodings.cpp:std::string DecodeBase32(const std::string& str, bool* pf_invalid)\r\n\r\nsrc/util/strencodings.cpp:std::vector<unsigned char> DecodeBase64(const char* p, bool* pf_invalid)\r\nsrc/util/strencodings.cpp:std::string DecodeBase64(const std::string& str, bool* pf_invalid)\r\n\r\nsrc/util/strencodings.cpp:std::string EncodeBase32(const unsigned char* pch, size_t len)\r\nsrc/util/strencodings.cpp:std::string EncodeBase32(const std::string& str)\r\n\r\nsrc/util/strencodings.cpp:std::string EncodeBase64(const unsigned char* pch, size_t len)\r\nsrc/util/strencodings.cpp:std::string EncodeBase64(const std::string& str)\r\n\r\nsrc/util/strencodings.cpp:std::vector<unsigned char> ParseHex(const char* psz)\r\nsrc/util/strencodings.cpp:std::vector<unsigned char> ParseHex(const std::string& str)\r\n```\r\n\r\n",
      "created_at" : "2019-12-11T17:12:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17718#issuecomment-564642928",
      "id" : 564642928,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDY0MjkyOA==",
      "updated_at" : "2019-12-11T17:26:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564642928",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The thing has always been that a lot of those don't even have a mechanism to report parse errors. Handling `\\0` would just be the icing on the cake so to sayâ¦\r\n(I had a similar idea in #17385 to get rid of some of these, but I think it's just too deep a rabbit hole)",
      "created_at" : "2019-12-12T10:10:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17718#issuecomment-564939908",
      "id" : 564939908,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17718",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDkzOTkwOA==",
      "updated_at" : "2019-12-12T10:18:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564939908",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
