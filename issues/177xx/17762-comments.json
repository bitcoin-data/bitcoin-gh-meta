[
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK 4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de",
      "created_at" : "2019-12-17T15:31:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#issuecomment-566592445",
      "id" : 566592445,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NjU5MjQ0NQ==",
      "updated_at" : "2019-12-17T15:31:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/566592445",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I probably should have done this in #16021.",
      "created_at" : "2019-12-17T15:54:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#issuecomment-566602864",
      "id" : 566602864,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NjYwMjg2NA==",
      "updated_at" : "2019-12-17T15:54:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/566602864",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r360339386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/360339386"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, `unexpected` or `unhandled` instead or unknown?",
      "commit_id" : "4bdd68f301a9cee3360deafc7531c638e923226b",
      "created_at" : "2019-12-20T11:44:10Z",
      "diff_hunk" : "@@ -3333,32 +3333,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         if (!pfrom->vRecvGetData.empty())\n             fMoreWork = true;\n-    }\n-    catch (const std::ios_base::failure& e)\n-    {\n-        if (strstr(e.what(), \"end of data\")) {\n-            // Allow exceptions from under-length message on vRecv\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"size too large\")) {\n-            // Allow exceptions from over-long size\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"non-canonical ReadCompactSize()\")) {\n-            // Allow exceptions from non-canonical encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Superfluous witness record\")) {\n-            // Allow exceptions from illegal witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Unknown transaction optional data\")) {\n-            // Allow exceptions from unknown witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else {\n-            PrintExceptionContinue(&e, \"ProcessMessages()\");\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, \"ProcessMessages()\");\n+    } catch (const std::exception& e) {\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' (%s) caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what(), typeid(e).name());\n     } catch (...) {\n-        PrintExceptionContinue(nullptr, \"ProcessMessages()\");\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): Unknown exception caught\\n\", __func__, SanitizeString(strCommand), nMessageSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r360339386",
      "id" : 360339386,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MDMzOTM4Ng==",
      "original_commit_id" : "4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de",
      "original_position" : 32,
      "path" : "src/net_processing.cpp",
      "position" : 40,
      "pull_request_review_id" : 335212610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762",
      "updated_at" : "2020-01-02T19:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/360339386",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r360467871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/360467871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What is `typeid(e).name()` for here? Here's what an example log looks like:\r\n\r\n`[msghand] ProcessMessages(tx, 85 bytes): Exception 'Superfluous witness record: iostream error' (NSt8ios_base7failureB5cxx11E) caught`\r\n\r\nDoes that `(NSt8ios_base7failureB5cxx11E)` add any helpful information to the user?\r\n\r\nAccording to https://en.cppreference.com/w/cpp/language/typeid, you need to include `<typeinfo>` to use `typeid()`:\r\n\r\n> `The header <typeinfo> must be included before using typeid (if the header is not included, every use of the keyword typeid makes the program ill-formed.)`",
      "commit_id" : "4bdd68f301a9cee3360deafc7531c638e923226b",
      "created_at" : "2019-12-20T16:55:11Z",
      "diff_hunk" : "@@ -3333,32 +3333,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         if (!pfrom->vRecvGetData.empty())\n             fMoreWork = true;\n-    }\n-    catch (const std::ios_base::failure& e)\n-    {\n-        if (strstr(e.what(), \"end of data\")) {\n-            // Allow exceptions from under-length message on vRecv\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"size too large\")) {\n-            // Allow exceptions from over-long size\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"non-canonical ReadCompactSize()\")) {\n-            // Allow exceptions from non-canonical encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Superfluous witness record\")) {\n-            // Allow exceptions from illegal witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Unknown transaction optional data\")) {\n-            // Allow exceptions from unknown witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else {\n-            PrintExceptionContinue(&e, \"ProcessMessages()\");\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, \"ProcessMessages()\");\n+    } catch (const std::exception& e) {\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' (%s) caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what(), typeid(e).name());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r360467871",
      "id" : 360467871,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MDQ2Nzg3MQ==",
      "original_commit_id" : "4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de",
      "original_position" : 29,
      "path" : "src/net_processing.cpp",
      "position" : 37,
      "pull_request_review_id" : 335380936,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762",
      "updated_at" : "2020-01-02T19:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/360467871",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de ð\r\n\r\nTested both cases:\r\n\r\n* Normal exception:\r\n\r\n - 2019-12-20T16:50:10.551972Z [msghand] received: tx (85 bytes) peer=2\r\n - 2019-12-20T16:50:10.552100Z [msghand] ProcessMessages(tx, 85 bytes): Exception 'Superfluous witness record: iostream error' (NSt8ios_base7failureB5cxx11E) caught\r\n - 2019-12-20T16:50:10.552120Z [msghand] ProcessMessages(tx, 85 bytes) FAILED peer=2\r\n\r\n* Something else:\r\n\r\n - 2019-12-20T17:03:18.898307Z [msghand] received: tx (85 bytes) peer=2\r\n - 2019-12-20T17:03:18.898406Z [msghand] ProcessMessages(tx, 85 bytes): Unknown exception caught\r\n - 2019-12-20T17:03:18.898421Z [msghand] ProcessMessages(tx, 85 bytes) FAILED peer=2\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de ð\r\n\r\nTested both cases:\r\n\r\n* Normal exception:\r\n\r\n - 2019-12-20T16:50:10.551972Z [msghand] received: tx (85 bytes) peer=2\r\n - 2019-12-20T16:50:10.552100Z [msghand] ProcessMessages(tx, 85 bytes): Exception 'Superfluous witness record: iostream error' (NSt8ios_base7failureB5cxx11E) caught\r\n - 2019-12-20T16:50:10.552120Z [msghand] ProcessMessages(tx, 85 bytes) FAILED peer=2\r\n\r\n* Something else:\r\n\r\n - 2019-12-20T17:03:18.898307Z [msghand] received: tx (85 bytes) peer=2\r\n - 2019-12-20T17:03:18.898406Z [msghand] ProcessMessages(tx, 85 bytes): Unknown exception caught\r\n - 2019-12-20T17:03:18.898421Z [msghand] ProcessMessages(tx, 85 bytes) FAILED peer=2\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjeMwwArad7Z2G99LooWjtt7/fr7X2kNavsjZh1YvI8AytS/9uZkURdVFg96geY\r\nQ3jJqisfbeNTwJm0zsNbSWChN5OlWrZ8naGMDfyALM0oQXzj5rgCZM5WIZta4Me9\r\nXDFq4upRfvg5QhmFI1feGX4mIYqdf2YlxYjkLz293rvTRTnQsEJ655tk1uWrm1jK\r\nSnGKtv29IKNO0yEb4WOE4pB7muzlf3mXVO9K+21HglK5qY3Opy7hkO8NsJSpilvz\r\nGr4Y8yJFhJMWL8gG3fZb/YaViDzcNanbjMNXTUHIwMQZ6sQhOpDvXKYNvyNJG8Di\r\n1xleSq1lEHp/nAdPor29fMCLVaSi7EY7A32LetW7SE30I6zbqlbH3XW4rg/mgiHr\r\nbzoz/yJT6vrxRm8BOLYu9PjQLhKOVeDL0iGmxQaHxUdnpDdlQUYgjTeCcGUFMptB\r\nvwD7xTEfgFdeBQuDjwFccpDDgUdUO8FBtFBHxxOEa1VVHtEvteRRvMzXCnJFaR0K\r\nNONhQti2\r\n=lSTE\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `df6e3a596aced982ab075caecb0b392dea1ae5573fef22c74d4cdd198ffc188c  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108df6e3a596aced982ab075caecb0b392dea1ae5573fef22c74d4cdd198ffc188cf010d45d66122b30c694a61de7b9c222d2be08fff0104f675254a9a839c377b16cee1e17593108f1045dfcff18f008e2424083dadf3c740083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010609d28427843b979f1e3195cf414e6ce08f1045dfcff18f00837f259f4d6fbccc70083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010c47ee0a6e8a32ccec3980c9d694c21fb08f1045dfcff19f0082887de7986f5a06a0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010f123bfdbfbfe33d370aebe2cffc74c1f08f1045dfcff19f0089a7fe4b2ae0725680083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "created_at" : "2019-12-20T17:04:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#issuecomment-568002517",
      "id" : 568002517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2ODAwMjUxNw==",
      "updated_at" : "2019-12-20T17:04:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568002517",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2019-12-20T19:22:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#issuecomment-568056448",
      "id" : 568056448,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2ODA1NjQ0OA==",
      "updated_at" : "2019-12-20T19:22:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568056448",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r360548351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/360548351"
         }
      },
      "author_association" : "MEMBER",
      "body" : "And [`name()`](https://en.cppreference.com/w/cpp/types/type_info/name):\r\n> Returns an _implementation defined_ null-terminated character string containing the name of the type. _No guarantees are given_; in particular, the returned string can be identical for several types and change between invocations of the same program.\r\n\r\nOn Linux Mint 19.3 (GCC 7.4.0) with included `<typeinfo>` the output remains the same: something like `...(NSt8ios_base7failureB5cxx11E)...`.",
      "commit_id" : "4bdd68f301a9cee3360deafc7531c638e923226b",
      "created_at" : "2019-12-20T19:50:57Z",
      "diff_hunk" : "@@ -3333,32 +3333,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         if (!pfrom->vRecvGetData.empty())\n             fMoreWork = true;\n-    }\n-    catch (const std::ios_base::failure& e)\n-    {\n-        if (strstr(e.what(), \"end of data\")) {\n-            // Allow exceptions from under-length message on vRecv\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"size too large\")) {\n-            // Allow exceptions from over-long size\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"non-canonical ReadCompactSize()\")) {\n-            // Allow exceptions from non-canonical encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Superfluous witness record\")) {\n-            // Allow exceptions from illegal witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Unknown transaction optional data\")) {\n-            // Allow exceptions from unknown witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else {\n-            PrintExceptionContinue(&e, \"ProcessMessages()\");\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, \"ProcessMessages()\");\n+    } catch (const std::exception& e) {\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' (%s) caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what(), typeid(e).name());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r360548351",
      "id" : 360548351,
      "in_reply_to_id" : 360467871,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MDU0ODM1MQ==",
      "original_commit_id" : "4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de",
      "original_position" : 29,
      "path" : "src/net_processing.cpp",
      "position" : 37,
      "pull_request_review_id" : 335488032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762",
      "updated_at" : "2020-01-02T19:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/360548351",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r360551253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/360551253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also we use the same approach here (line 544):\r\nhttps://github.com/bitcoin/bitcoin/blob/0cda5573405d75d695aba417e8f22f1301ded001/src/util/system.cpp#L542-L547",
      "commit_id" : "4bdd68f301a9cee3360deafc7531c638e923226b",
      "created_at" : "2019-12-20T19:59:04Z",
      "diff_hunk" : "@@ -3333,32 +3333,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         if (!pfrom->vRecvGetData.empty())\n             fMoreWork = true;\n-    }\n-    catch (const std::ios_base::failure& e)\n-    {\n-        if (strstr(e.what(), \"end of data\")) {\n-            // Allow exceptions from under-length message on vRecv\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"size too large\")) {\n-            // Allow exceptions from over-long size\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"non-canonical ReadCompactSize()\")) {\n-            // Allow exceptions from non-canonical encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Superfluous witness record\")) {\n-            // Allow exceptions from illegal witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Unknown transaction optional data\")) {\n-            // Allow exceptions from unknown witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else {\n-            PrintExceptionContinue(&e, \"ProcessMessages()\");\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, \"ProcessMessages()\");\n+    } catch (const std::exception& e) {\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' (%s) caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what(), typeid(e).name());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r360551253",
      "id" : 360551253,
      "in_reply_to_id" : 360467871,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MDU1MTI1Mw==",
      "original_commit_id" : "4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de",
      "original_position" : 29,
      "path" : "src/net_processing.cpp",
      "position" : 37,
      "pull_request_review_id" : 335491950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762",
      "updated_at" : "2020-01-02T19:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/360551253",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r362602581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362602581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This was simply borrowed from the exception logging function that we've already used since Satoshi's days. I think the idea is that it shows the type in case the exception message is not informative, I'm ok with removing it, no opinion, but I don't think it hurtsâ¦",
      "commit_id" : "4bdd68f301a9cee3360deafc7531c638e923226b",
      "created_at" : "2020-01-02T19:40:59Z",
      "diff_hunk" : "@@ -3333,32 +3333,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         if (!pfrom->vRecvGetData.empty())\n             fMoreWork = true;\n-    }\n-    catch (const std::ios_base::failure& e)\n-    {\n-        if (strstr(e.what(), \"end of data\")) {\n-            // Allow exceptions from under-length message on vRecv\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"size too large\")) {\n-            // Allow exceptions from over-long size\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"non-canonical ReadCompactSize()\")) {\n-            // Allow exceptions from non-canonical encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Superfluous witness record\")) {\n-            // Allow exceptions from illegal witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Unknown transaction optional data\")) {\n-            // Allow exceptions from unknown witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else {\n-            PrintExceptionContinue(&e, \"ProcessMessages()\");\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, \"ProcessMessages()\");\n+    } catch (const std::exception& e) {\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' (%s) caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what(), typeid(e).name());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r362602581",
      "id" : 362602581,
      "in_reply_to_id" : 360467871,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwMjU4MQ==",
      "original_commit_id" : "4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de",
      "original_position" : 29,
      "path" : "src/net_processing.cpp",
      "position" : 37,
      "pull_request_review_id" : 337823191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762",
      "updated_at" : "2020-01-02T19:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362602581",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r362603406"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362603406"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's really *unknown*. All known exceptions go to the other path. If it ends up here, some really weird code (maybe in a dependency?) threw an integer or bare string or such.",
      "commit_id" : "4bdd68f301a9cee3360deafc7531c638e923226b",
      "created_at" : "2020-01-02T19:43:16Z",
      "diff_hunk" : "@@ -3333,32 +3333,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         if (!pfrom->vRecvGetData.empty())\n             fMoreWork = true;\n-    }\n-    catch (const std::ios_base::failure& e)\n-    {\n-        if (strstr(e.what(), \"end of data\")) {\n-            // Allow exceptions from under-length message on vRecv\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"size too large\")) {\n-            // Allow exceptions from over-long size\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"non-canonical ReadCompactSize()\")) {\n-            // Allow exceptions from non-canonical encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Superfluous witness record\")) {\n-            // Allow exceptions from illegal witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Unknown transaction optional data\")) {\n-            // Allow exceptions from unknown witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else {\n-            PrintExceptionContinue(&e, \"ProcessMessages()\");\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, \"ProcessMessages()\");\n+    } catch (const std::exception& e) {\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' (%s) caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what(), typeid(e).name());\n     } catch (...) {\n-        PrintExceptionContinue(nullptr, \"ProcessMessages()\");\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): Unknown exception caught\\n\", __func__, SanitizeString(strCommand), nMessageSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r362603406",
      "id" : 362603406,
      "in_reply_to_id" : 360339386,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwMzQwNg==",
      "original_commit_id" : "4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de",
      "original_position" : 32,
      "path" : "src/net_processing.cpp",
      "position" : 40,
      "pull_request_review_id" : 337824249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762",
      "updated_at" : "2020-01-02T19:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362603406",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r362604518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362604518"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll add a commit that adds `#include <typeinfo>` to here and system.cpp. I think that's a good point, though no C++ compiler seems to have stumbled over it.",
      "commit_id" : "4bdd68f301a9cee3360deafc7531c638e923226b",
      "created_at" : "2020-01-02T19:46:19Z",
      "diff_hunk" : "@@ -3333,32 +3333,10 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         if (!pfrom->vRecvGetData.empty())\n             fMoreWork = true;\n-    }\n-    catch (const std::ios_base::failure& e)\n-    {\n-        if (strstr(e.what(), \"end of data\")) {\n-            // Allow exceptions from under-length message on vRecv\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"size too large\")) {\n-            // Allow exceptions from over-long size\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"non-canonical ReadCompactSize()\")) {\n-            // Allow exceptions from non-canonical encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Superfluous witness record\")) {\n-            // Allow exceptions from illegal witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else if (strstr(e.what(), \"Unknown transaction optional data\")) {\n-            // Allow exceptions from unknown witness encoding\n-            LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-        } else {\n-            PrintExceptionContinue(&e, \"ProcessMessages()\");\n-        }\n-    }\n-    catch (const std::exception& e) {\n-        PrintExceptionContinue(&e, \"ProcessMessages()\");\n+    } catch (const std::exception& e) {\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): Exception '%s' (%s) caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what(), typeid(e).name());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#discussion_r362604518",
      "id" : 362604518,
      "in_reply_to_id" : 360467871,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNDUxOA==",
      "original_commit_id" : "4d88c3dcb61e7c075ed3dd442044e0eff4e3c8de",
      "original_position" : 29,
      "path" : "src/net_processing.cpp",
      "position" : 37,
      "pull_request_review_id" : 337825662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17762",
      "updated_at" : "2020-01-02T19:55:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362604518",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 4bdd68f301a9cee3360deafc7531c638e923226b (only change is adding includes) ð\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK 4bdd68f301a9cee3360deafc7531c638e923226b (only change is adding includes) ð\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUguNgwAoLtUwlt9Rl8Fd4Kkhw+iyyVzIoIfk+HL6LcG9BqfDfttfcijBiynEtNV\r\n29HzFgff3tiBWuYeN013IqeW1rE3MYxI4pDpGqeaWKkoj9YA6PW/jPWj8okAGzAC\r\naYsI/2cT/H6Ea/WL7foSeMejRryRLQfD8Jg241g4Rm8iPEm0U0Tqgk5s9oqzDfMi\r\nJ1R8Et1yDZo6+enk03ytF1WW3X+SN5PkI6M4CfShnf4ZxRyQ8atYUhRMOfOb8xFA\r\nvu2HKtYE+oWmFTfR1j6k5A9VO5ezOeL24nF8XP8FV+bcH7evzMOvudwdNMVuKag/\r\ngiW1i/ElaqHLZvTXxV1jGcu4/Vu1NfvylHQLuOft8H2BORe+OBrXAXT+qIpG5DtA\r\nq2xyhHCfkJwItwQAMGYhauHISq93NA77CNENxyxKPvupAMfwuViYYYG+gQ8cOXg9\r\n5YQ7GhkTFtCrTqU7abF/66XU62NKAEXvzJCjlF+/WzILoPncYAjTQcNO71pHMKYL\r\nlM2l3l5j\r\n=8t8Y\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `f5a70ac73ac8d01fd424479a9ace0934a6de8392add537503e92e054731e2b32  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108f5a70ac73ac8d01fd424479a9ace0934a6de8392add537503e92e054731e2b32f010acc9465022a02dc32aad2d5337bbcc2708fff010833031a0363ff77fb99a34f5a3019bc308f1045e0e4f40f0089236b85d2385fe5c0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010e5359b1732cb7e5f8b4be86661f790f508f1045e0e4f40f008883a9c0cf3e600b70083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "created_at" : "2020-01-02T20:15:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#issuecomment-570330040",
      "id" : 570330040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDMzMDA0MA==",
      "updated_at" : "2020-01-02T20:15:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570330040",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 4bdd68f301a9cee3360deafc7531c638e923226b, could squash.",
      "created_at" : "2020-01-02T20:18:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#issuecomment-570330967",
      "id" : 570330967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDMzMDk2Nw==",
      "updated_at" : "2020-01-02T20:18:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570330967",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Being backported in 17858.",
      "created_at" : "2020-01-05T23:59:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#issuecomment-570961826",
      "id" : 570961826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDk2MTgyNg==",
      "updated_at" : "2020-01-05T23:59:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570961826",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reviewers of this PR might want to review the somewhat related PR #17828 (\"net: Use log categories when logging events that P2P peers can trigger arbitrarily\").",
      "created_at" : "2020-01-22T17:32:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#issuecomment-577298413",
      "id" : 577298413,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NzI5ODQxMw==",
      "updated_at" : "2020-01-22T17:32:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577298413",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This was backported to the 0.18 branch in #17974.",
      "created_at" : "2020-01-23T02:08:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17762#issuecomment-577472441",
      "id" : 577472441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17762",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NzQ3MjQ0MQ==",
      "updated_at" : "2020-01-23T02:08:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577472441",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
