[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #15861 (Restore warning for individual unknown version bits, as well as unknown version schemas by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-05T09:24:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#issuecomment-623949854",
      "id" : 623949854,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzk0OTg1NA==",
      "updated_at" : "2020-05-05T09:24:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623949854",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423099458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423099458"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            self.nodes[0].sethdseed(seed= self.nodes[1].dumpprivkey(keyhash_to_p2pkh(hex_str_to_bytes(self.nodes[1].getwalletinfo()['hdseedid'])[::-1])))\r\n```\r\n\r\nnit: Could either leave this out or use named arguments `newkeypool`, so that people like me don't have to look this up in the docs?",
      "commit_id" : "f963a680515eda66429b3d1537a7baf281ab9283",
      "created_at" : "2020-05-11T14:54:24Z",
      "diff_hunk" : "@@ -81,8 +83,75 @@ def run_test(self):\n             # directory content should equal the generated transaction hashes\n             txids_rpc = list(map(lambda t: notify_outputname(self.wallet, t['txid']), self.nodes[1].listtransactions(\"*\", block_count)))\n             assert_equal(sorted(txids_rpc), sorted(os.listdir(self.walletnotify_dir)))\n+            for tx_file in os.listdir(self.walletnotify_dir):\n+                os.remove(os.path.join(self.walletnotify_dir, tx_file))\n+\n+            # Conflicting transactions tests. Give node 0 same wallet seed as\n+            # node 1, generate spends from node 0, and check notifications\n+            # triggered by node 1\n+            self.log.info(\"test -walletnotify with conflicting transactions\")\n+            self.nodes[0].sethdseed(True, self.nodes[1].dumpprivkey(keyhash_to_p2pkh(hex_str_to_bytes(self.nodes[1].getwalletinfo()['hdseedid'])[::-1])))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423099458",
      "id" : 423099458,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA5OTQ1OA==",
      "original_commit_id" : "2c1c162cd5f60e649d9d55f6c99301c4985d5bab",
      "original_line" : 93,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 409250424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T01:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423099458",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423100651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423100651"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Are those two needed? sync_mempools should already do the assert",
      "commit_id" : "f963a680515eda66429b3d1537a7baf281ab9283",
      "created_at" : "2020-05-11T14:56:03Z",
      "diff_hunk" : "@@ -81,8 +83,75 @@ def run_test(self):\n             # directory content should equal the generated transaction hashes\n             txids_rpc = list(map(lambda t: notify_outputname(self.wallet, t['txid']), self.nodes[1].listtransactions(\"*\", block_count)))\n             assert_equal(sorted(txids_rpc), sorted(os.listdir(self.walletnotify_dir)))\n+            for tx_file in os.listdir(self.walletnotify_dir):\n+                os.remove(os.path.join(self.walletnotify_dir, tx_file))\n+\n+            # Conflicting transactions tests. Give node 0 same wallet seed as\n+            # node 1, generate spends from node 0, and check notifications\n+            # triggered by node 1\n+            self.log.info(\"test -walletnotify with conflicting transactions\")\n+            self.nodes[0].sethdseed(True, self.nodes[1].dumpprivkey(keyhash_to_p2pkh(hex_str_to_bytes(self.nodes[1].getwalletinfo()['hdseedid'])[::-1])))\n+            self.nodes[0].rescanblockchain()\n+            self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_UNSPENDABLE)\n+\n+            # Generate transaction on node 0, sync mempools, and check for\n+            # notification on node 1.\n+            tx1 = self.nodes[0].sendtoaddress(address=ADDRESS_BCRT1_UNSPENDABLE, amount=1, replaceable=True)\n+            self.sync_mempools()\n+            assert_equal(tx1 in self.nodes[0].getrawmempool(), True)\n+            assert_equal(tx1 in self.nodes[1].getrawmempool(), True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423100651",
      "id" : 423100651,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEwMDY1MQ==",
      "original_commit_id" : "2c1c162cd5f60e649d9d55f6c99301c4985d5bab",
      "original_line" : 102,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 409250424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T01:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423100651",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423101996"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423101996"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same",
      "commit_id" : "f963a680515eda66429b3d1537a7baf281ab9283",
      "created_at" : "2020-05-11T14:57:50Z",
      "diff_hunk" : "@@ -81,8 +83,75 @@ def run_test(self):\n             # directory content should equal the generated transaction hashes\n             txids_rpc = list(map(lambda t: notify_outputname(self.wallet, t['txid']), self.nodes[1].listtransactions(\"*\", block_count)))\n             assert_equal(sorted(txids_rpc), sorted(os.listdir(self.walletnotify_dir)))\n+            for tx_file in os.listdir(self.walletnotify_dir):\n+                os.remove(os.path.join(self.walletnotify_dir, tx_file))\n+\n+            # Conflicting transactions tests. Give node 0 same wallet seed as\n+            # node 1, generate spends from node 0, and check notifications\n+            # triggered by node 1\n+            self.log.info(\"test -walletnotify with conflicting transactions\")\n+            self.nodes[0].sethdseed(True, self.nodes[1].dumpprivkey(keyhash_to_p2pkh(hex_str_to_bytes(self.nodes[1].getwalletinfo()['hdseedid'])[::-1])))\n+            self.nodes[0].rescanblockchain()\n+            self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_UNSPENDABLE)\n+\n+            # Generate transaction on node 0, sync mempools, and check for\n+            # notification on node 1.\n+            tx1 = self.nodes[0].sendtoaddress(address=ADDRESS_BCRT1_UNSPENDABLE, amount=1, replaceable=True)\n+            self.sync_mempools()\n+            assert_equal(tx1 in self.nodes[0].getrawmempool(), True)\n+            assert_equal(tx1 in self.nodes[1].getrawmempool(), True)\n+            self.expect_wallet_notify([tx1])\n+\n+            # Generate bump transaction, sync mempools, and check for bump1\n+            # notification. In the future, per\n+            # https://github.com/bitcoin/bitcoin/pull/9371, it might be better\n+            # to have notifications for both tx1 and bump1.\n+            bump1 = self.nodes[0].bumpfee(tx1)[\"txid\"]\n+            self.sync_mempools()\n+            assert_equal(bump1 in self.nodes[0].getrawmempool(), True)\n+            assert_equal(bump1 in self.nodes[1].getrawmempool(), True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423101996",
      "id" : 423101996,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEwMTk5Ng==",
      "original_commit_id" : "2c1c162cd5f60e649d9d55f6c99301c4985d5bab",
      "original_line" : 112,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 409250424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T01:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423101996",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423102464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423102464"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same",
      "commit_id" : "f963a680515eda66429b3d1537a7baf281ab9283",
      "created_at" : "2020-05-11T14:58:30Z",
      "diff_hunk" : "@@ -81,8 +83,75 @@ def run_test(self):\n             # directory content should equal the generated transaction hashes\n             txids_rpc = list(map(lambda t: notify_outputname(self.wallet, t['txid']), self.nodes[1].listtransactions(\"*\", block_count)))\n             assert_equal(sorted(txids_rpc), sorted(os.listdir(self.walletnotify_dir)))\n+            for tx_file in os.listdir(self.walletnotify_dir):\n+                os.remove(os.path.join(self.walletnotify_dir, tx_file))\n+\n+            # Conflicting transactions tests. Give node 0 same wallet seed as\n+            # node 1, generate spends from node 0, and check notifications\n+            # triggered by node 1\n+            self.log.info(\"test -walletnotify with conflicting transactions\")\n+            self.nodes[0].sethdseed(True, self.nodes[1].dumpprivkey(keyhash_to_p2pkh(hex_str_to_bytes(self.nodes[1].getwalletinfo()['hdseedid'])[::-1])))\n+            self.nodes[0].rescanblockchain()\n+            self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_UNSPENDABLE)\n+\n+            # Generate transaction on node 0, sync mempools, and check for\n+            # notification on node 1.\n+            tx1 = self.nodes[0].sendtoaddress(address=ADDRESS_BCRT1_UNSPENDABLE, amount=1, replaceable=True)\n+            self.sync_mempools()\n+            assert_equal(tx1 in self.nodes[0].getrawmempool(), True)\n+            assert_equal(tx1 in self.nodes[1].getrawmempool(), True)\n+            self.expect_wallet_notify([tx1])\n+\n+            # Generate bump transaction, sync mempools, and check for bump1\n+            # notification. In the future, per\n+            # https://github.com/bitcoin/bitcoin/pull/9371, it might be better\n+            # to have notifications for both tx1 and bump1.\n+            bump1 = self.nodes[0].bumpfee(tx1)[\"txid\"]\n+            self.sync_mempools()\n+            assert_equal(bump1 in self.nodes[0].getrawmempool(), True)\n+            assert_equal(bump1 in self.nodes[1].getrawmempool(), True)\n+            self.expect_wallet_notify([bump1])\n+\n+            # Add bump1 transaction to new block, checking for a notification\n+            # and the correct number of confirmations.\n+            self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_blocks()\n+            self.expect_wallet_notify([bump1])\n+            assert_equal(self.nodes[1].gettransaction(bump1)[\"confirmations\"], 1)\n+\n+            # Generate a second transaction to be bumped.\n+            tx2 = self.nodes[0].sendtoaddress(address=ADDRESS_BCRT1_UNSPENDABLE, amount=1, replaceable=True)\n+            self.sync_mempools()\n+            assert_equal(tx2 in self.nodes[0].getrawmempool(), True)\n+            assert_equal(tx2 in self.nodes[1].getrawmempool(), True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423102464",
      "id" : 423102464,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEwMjQ2NA==",
      "original_commit_id" : "2c1c162cd5f60e649d9d55f6c99301c4985d5bab",
      "original_line" : 126,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 409250424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T01:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423102464",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r424095604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424095604"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423099458\r\n\r\n> nit: Could either leave this out or use named arguments `newkeypool`, so that people like me don't have to look this up in the docs?\r\n\r\nThanks, updated",
      "commit_id" : "f963a680515eda66429b3d1537a7baf281ab9283",
      "created_at" : "2020-05-12T23:44:54Z",
      "diff_hunk" : "@@ -81,8 +83,75 @@ def run_test(self):\n             # directory content should equal the generated transaction hashes\n             txids_rpc = list(map(lambda t: notify_outputname(self.wallet, t['txid']), self.nodes[1].listtransactions(\"*\", block_count)))\n             assert_equal(sorted(txids_rpc), sorted(os.listdir(self.walletnotify_dir)))\n+            for tx_file in os.listdir(self.walletnotify_dir):\n+                os.remove(os.path.join(self.walletnotify_dir, tx_file))\n+\n+            # Conflicting transactions tests. Give node 0 same wallet seed as\n+            # node 1, generate spends from node 0, and check notifications\n+            # triggered by node 1\n+            self.log.info(\"test -walletnotify with conflicting transactions\")\n+            self.nodes[0].sethdseed(True, self.nodes[1].dumpprivkey(keyhash_to_p2pkh(hex_str_to_bytes(self.nodes[1].getwalletinfo()['hdseedid'])[::-1])))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r424095604",
      "id" : 424095604,
      "in_reply_to_id" : 423099458,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5NTYwNA==",
      "original_commit_id" : "2c1c162cd5f60e649d9d55f6c99301c4985d5bab",
      "original_line" : 93,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 410497452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T01:42:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424095604",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r424097621"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424097621"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/18878#discussion_r423100651\r\n\r\n> Are those two needed? sync_mempools should already do the assert\r\n\r\nThanks, replaced with a more compact mempool check (seems good for clarity & debugging to verify the transaction reached the mempool)",
      "commit_id" : "f963a680515eda66429b3d1537a7baf281ab9283",
      "created_at" : "2020-05-12T23:51:24Z",
      "diff_hunk" : "@@ -81,8 +83,75 @@ def run_test(self):\n             # directory content should equal the generated transaction hashes\n             txids_rpc = list(map(lambda t: notify_outputname(self.wallet, t['txid']), self.nodes[1].listtransactions(\"*\", block_count)))\n             assert_equal(sorted(txids_rpc), sorted(os.listdir(self.walletnotify_dir)))\n+            for tx_file in os.listdir(self.walletnotify_dir):\n+                os.remove(os.path.join(self.walletnotify_dir, tx_file))\n+\n+            # Conflicting transactions tests. Give node 0 same wallet seed as\n+            # node 1, generate spends from node 0, and check notifications\n+            # triggered by node 1\n+            self.log.info(\"test -walletnotify with conflicting transactions\")\n+            self.nodes[0].sethdseed(True, self.nodes[1].dumpprivkey(keyhash_to_p2pkh(hex_str_to_bytes(self.nodes[1].getwalletinfo()['hdseedid'])[::-1])))\n+            self.nodes[0].rescanblockchain()\n+            self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_UNSPENDABLE)\n+\n+            # Generate transaction on node 0, sync mempools, and check for\n+            # notification on node 1.\n+            tx1 = self.nodes[0].sendtoaddress(address=ADDRESS_BCRT1_UNSPENDABLE, amount=1, replaceable=True)\n+            self.sync_mempools()\n+            assert_equal(tx1 in self.nodes[0].getrawmempool(), True)\n+            assert_equal(tx1 in self.nodes[1].getrawmempool(), True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#discussion_r424097621",
      "id" : 424097621,
      "in_reply_to_id" : 423100651,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5NzYyMQ==",
      "original_commit_id" : "2c1c162cd5f60e649d9d55f6c99301c4985d5bab",
      "original_line" : 102,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 410497452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18878",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-13T01:42:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424097621",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for reviews, updated 2c1c162cd5f60e649d9d55f6c99301c4985d5bab -> f963a680515eda66429b3d1537a7baf281ab9283 ([`pr/nonot.2`](https://github.com/ryanofsky/bitcoin/commits/pr/nonot.2) -> [`pr/nonot.3`](https://github.com/ryanofsky/bitcoin/commits/pr/nonot.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nonot.2..pr/nonot.3)) with suggestions",
      "created_at" : "2020-05-13T01:42:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#issuecomment-627694431",
      "id" : 627694431,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzY5NDQzMQ==",
      "updated_at" : "2020-05-13T01:42:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627694431",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Good to have a test for this, it always used to be somewhat ill-defined functionality, apparently breaking many times (reading that list hurts!).\r\n\r\nACK f963a680515eda66429b3d1537a7baf281ab9283",
      "created_at" : "2020-05-13T13:27:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#issuecomment-627985500",
      "id" : 627985500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzk4NTUwMA==",
      "updated_at" : "2020-05-13T13:27:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627985500",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK f963a680515eda66429b3d1537a7baf281ab9283",
      "created_at" : "2020-05-13T13:30:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#issuecomment-627987517",
      "id" : 627987517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzk4NzUxNw==",
      "updated_at" : "2020-05-13T13:30:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627987517",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK f963a680515eda66429b3d1537a7baf281ab9283",
      "created_at" : "2020-05-13T13:30:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18878#issuecomment-627987774",
      "id" : 627987774,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzk4Nzc3NA==",
      "updated_at" : "2020-05-13T13:30:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627987774",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
