{
   "active_lock_reason" : "resolved",
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "I was working on an blockchain indexer and explorer, and as I was trying to figure out how to calculate the returned \"medianTime\" from the \"getblockchaininfo\", I realized that the value is not what I was expecting it to be.\r\n\r\nThis was in an C# implementation of similar code to Bitcoin, so I initially thought it was a bug in the .NET implementation. Then I had a look at the C++ implementation and to me it appears to be the same.\r\n\r\n```\r\n    static constexpr int nMedianTimeSpan = 11;\r\n\r\n    int64_t GetMedianTimePast() const\r\n    {\r\n        int64_t pmedian[nMedianTimeSpan];\r\n        int64_t* pbegin = &pmedian[nMedianTimeSpan];\r\n        int64_t* pend = &pmedian[nMedianTimeSpan];\r\n\r\n        const CBlockIndex* pindex = this;\r\n        for (int i = 0; i < nMedianTimeSpan && pindex; i++, pindex = pindex->pprev)\r\n            *(--pbegin) = pindex->GetBlockTime();\r\n\r\n        std::sort(pbegin, pend);\r\n        return pbegin[(pend - pbegin)/2];\r\n    }\r\n```\r\n\r\nFrom what I can understand, the method loops backwards through the blocks from the current block, populates the block time into an array, sort it (it's already sorted), then picks the middle one (5) and returns that.\r\n\r\nIs that correctly assumed?\r\n\r\nWouldn't simply selecting index - 5 do the exact same thing? Of course one would need to calculate for genesis and the first 10 blocks, but that's easy.\r\n\r\nI was expecting this method to do something else, namely take the diff time (not the timestamp) between each block, then picking the middle one, which would give the average time between each block for the last 10 blocks. Another quick way to calculate, would be take GetBlockTime from the block 10 indexes back, diff with current block and divide by 10, should give one type of average.\r\n\r\nThe current code populates an array of 10 timestamps, but it only picks the one in the middle. There is no reason to populate it with 10 timestamps, as the 5 oldest are not used for anything. It also doesn't use or calculate/care about any of the other blocks.\r\n\r\nSo if the last 5 blocks took:\r\n\r\n1 hour\r\n10 minutes\r\n10 minutes\r\n10 minutes\r\n10 minutes\r\n10 minutes\r\n10 minutes\r\n10 minutes\r\n10 minutes\r\n10 minutes\r\n\r\nThen GetMedianTimePast will return a timestamp 1 hour and 40 minutes back in time from current block. I understand median is correct name for the method (it returns the middle of the sorted numbers), but is the numbers to be sorted suppose to be time between blocks (datediff) and not the actual timestamps?\r\n\r\nThe \"medianTime\" returned is also not the time between blocks, it is the time 5 blocks back. Which is why I'm wondering why not simply grab the datetime of the block 5 indexes back instead?\r\n\r\nFor for me to show the median time between blocks in the block explorer, I must take (BlockTime - MedianTime / 5). From what I know, I think the calculate is used for consensus/mining, and not suppose to be what I'm after (average block time), I can calculate that another way, but I stumbled upon this and initially thought it to be something else, and thought it could maybe be improved a bit?\r\n\r\nIs that the way it is suppose to work, or am I not able to read the code properly? Thanks!",
   "closed_at" : "2020-04-30T17:24:51Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18833/comments",
   "created_at" : "2020-04-30T17:20:16Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18833/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/18833",
   "id" : 610252494,
   "labels" : [
      {
         "color" : "009800",
         "default" : false,
         "description" : null,
         "id" : 192202000,
         "name" : "Consensus",
         "node_id" : "MDU6TGFiZWwxOTIyMDIwMDA=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus"
      },
      {
         "color" : "006688",
         "default" : false,
         "description" : null,
         "id" : 477890092,
         "name" : "Questions and Help",
         "node_id" : "MDU6TGFiZWw0Nzc4OTAwOTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Questions%20and%20Help"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18833/labels{/name}",
   "locked" : true,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU2MTAyNTI0OTQ=",
   "number" : 18833,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18833/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18833/timeline",
   "title" : "GetMedianTimePast: Can it be optimized with a simple index - 5?",
   "updated_at" : "2022-02-15T10:44:10Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18833",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/309938?v=4",
      "events_url" : "https://api.github.com/users/sondreb/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sondreb/followers",
      "following_url" : "https://api.github.com/users/sondreb/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sondreb/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sondreb",
      "id" : 309938,
      "login" : "sondreb",
      "node_id" : "MDQ6VXNlcjMwOTkzOA==",
      "organizations_url" : "https://api.github.com/users/sondreb/orgs",
      "received_events_url" : "https://api.github.com/users/sondreb/received_events",
      "repos_url" : "https://api.github.com/users/sondreb/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sondreb/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sondreb/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sondreb"
   }
}
