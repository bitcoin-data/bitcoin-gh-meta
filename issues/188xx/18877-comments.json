[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems the `lint` target fails in the Travis CI.",
      "created_at" : "2020-05-05T08:46:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-623933451",
      "id" : 623933451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzkzMzQ1MQ==",
      "updated_at" : "2020-05-05T08:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623933451",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18876 ([WIP] Serve BIP 157 compact filters by jnewbery)\n* #18698 (Make g_chainman internal to validation by MarcoFalke)\n* #18638 (net: Use mockable time for ping/pong, add tests by MarcoFalke)\n* #18242 (Add BIP324 encrypted p2p transport de-/serializer (only used in tests) by jonasschnelli)\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-05T09:25:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-623950453",
      "id" : 623950453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMzk1MDQ1Mw==",
      "updated_at" : "2020-05-08T22:09:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623950453",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r420393465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420393465"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`g_enabled_filter_types.count(BlockFilterType::BASIC)`? otherwise `#include <algorithm>`.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-05T20:42:43Z",
      "diff_hunk" : "@@ -986,6 +987,16 @@ bool AppInitParameterInteraction()\n         }\n     }\n \n+    // Signal NODE_COMPACT_FILTERS if peercfilters and required index are both enabled.\n+    if (gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS)) {\n+        const bool index_enabled = std::find(g_enabled_filter_types.begin(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r420393465",
      "id" : 420393465,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM5MzQ2NQ==",
      "original_commit_id" : "493eb3bd47628610627d805ca520b9a0187b5240",
      "original_line" : 992,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 406139827,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420393465",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r420531180"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420531180"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good suggestion. Taken.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-06T03:52:17Z",
      "diff_hunk" : "@@ -986,6 +987,16 @@ bool AppInitParameterInteraction()\n         }\n     }\n \n+    // Signal NODE_COMPACT_FILTERS if peercfilters and required index are both enabled.\n+    if (gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS)) {\n+        const bool index_enabled = std::find(g_enabled_filter_types.begin(),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r420531180",
      "id" : 420531180,
      "in_reply_to_id" : 420393465,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUzMTE4MA==",
      "original_commit_id" : "493eb3bd47628610627d805ca520b9a0187b5240",
      "original_line" : 992,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 406289036,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420531180",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Note to reviewers: the Travis failures are timeouts and can be ignored. This PR is ready for review.",
      "created_at" : "2020-05-06T03:52:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-624428221",
      "id" : 624428221,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDQyODIyMQ==",
      "updated_at" : "2020-05-06T03:52:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624428221",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421010893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421010893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Update `allNetMessageTypes` as per namespace comment.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-06T18:41:33Z",
      "diff_hunk" : "@@ -234,6 +234,20 @@ extern const char *GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char *BLOCKTXN;\n+/**\n+ * getcfcheckpt requests evenly spaced compact filter headers, enabling\n+ * parallelized download and validation of the headers between them.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *GETCFCHECKPT;\n+/**\n+ * cfcheckpt is a response to a getcfcheckpt request containing a vector of\n+ * evenly spaced filter headers for blocks on the requested chain.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *CFCHECKPT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421010893",
      "id" : 421010893,
      "line" : 250,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAxMDg5Mw==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 250,
      "original_position" : 17,
      "original_start_line" : 237,
      "path" : "src/protocol.h",
      "position" : 17,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : 237,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421010893",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421021746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421021746"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Might be worth separating these checks. Otherwise, the logging is not quite accurate when `-peercfilters` is not set.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-06T18:59:13Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421021746",
      "id" : 421021746,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMTc0Ng==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 1999,
      "original_position" : 52,
      "original_start_line" : 1991,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421021746",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421029307"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421029307"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Also use `const` here for consistency with `stop_index`?",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-06T19:12:02Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421029307",
      "id" : 421029307,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyOTMwNw==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 1989,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421029307",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421043128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421043128"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Given block heights are of type `int` in `CBlockIndex`, perhaps `height` and `CFCHECKPT_INTERVAL` should be `int` as well instead of `uint32_t`.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-06T19:36:37Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and was at some point connected to the active chain.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {\n+            LogPrint(BCLog::NET, \"peer %d requested invalid block hash: %s\\n\",\n+                     pfrom->GetId(), stop_hash.ToString());\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    filter_index = GetBlockFilterIndex(filter_type);\n+    if (!filter_index) {\n+        LogPrint(BCLog::NET, \"Filter index for supported type %s not found\\n\", BlockFilterTypeName(filter_type));\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+/**\n+ * Handle a cfcheckpt request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFCheckPt(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)\n+{\n+    uint8_t filter_type_ser;\n+    uint256 stop_hash;\n+\n+    vRecv >> filter_type_ser >> stop_hash;\n+\n+    const BlockFilterType filter_type = static_cast<BlockFilterType>(filter_type_ser);\n+\n+    const CBlockIndex* stop_index;\n+    BlockFilterIndex* filter_index;\n+    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, stop_hash,\n+                                   stop_index, filter_index)) {\n+        return;\n+    }\n+\n+    std::vector<uint256> headers(stop_index->nHeight / CFCHECKPT_INTERVAL);\n+\n+    // Populate headers.\n+    const CBlockIndex* block_index = stop_index;\n+    for (int i = headers.size() - 1; i >= 0; i--) {\n+        uint32_t height = (i + 1) * CFCHECKPT_INTERVAL;\n+        block_index = block_index->GetAncestor(height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421043128",
      "id" : 421043128,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA0MzEyOA==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 2056,
      "original_position" : 109,
      "original_start_line" : 2050,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421043128",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421057005"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421057005"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "s/cfcheckpt/getcfcheckpt",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-06T20:01:22Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and was at some point connected to the active chain.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {\n+            LogPrint(BCLog::NET, \"peer %d requested invalid block hash: %s\\n\",\n+                     pfrom->GetId(), stop_hash.ToString());\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    filter_index = GetBlockFilterIndex(filter_type);\n+    if (!filter_index) {\n+        LogPrint(BCLog::NET, \"Filter index for supported type %s not found\\n\", BlockFilterTypeName(filter_type));\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+/**\n+ * Handle a cfcheckpt request.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421057005",
      "id" : 421057005,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA1NzAwNQ==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 2024,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406888129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421057005",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421330556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421330556"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is the following scenario plausible ? Client receives from peers block H1 as tip and goes offline. H1 is reorg'ed out of the active chain. After a month, Client goes back and try to start filter-sync through checkpoints. Sending H1 will be rejected as per `BlockRequestAllowed` we reject reorg'ed out block older than a month, but has been part of the active chain and dutifully announced.\r\n\r\nIt maybe a marginal issue, but at least comment should mention that stop block should have been connected to the active chain in the last month.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T08:29:42Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and was at some point connected to the active chain.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421330556",
      "id" : 421330556,
      "line" : 2006,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMzMDU1Ng==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 2006,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 59,
      "pull_request_review_id" : 407256641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421330556",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421344230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421344230"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this test verify the following spec requirement \"StopHash MUST be known to belong to a block accepted by the receiving peer. This is the case if the peer had previously sent a headers or inv message with any descendent blocks\" ?\r\n\r\nThis point is unclear to me with regards to the receiver requirement, what should we do in case of peer asking for a `StopHash` non-yet-announced to them. Do we check `StopHash` inferior ou equal to its `pindexBestHeaderSent` somewhere ?",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T08:51:29Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421344230",
      "id" : 421344230,
      "line" : 24,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM0NDIzMA==",
      "original_commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "original_line" : 24,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : 24,
      "pull_request_review_id" : 407256641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421344230",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421612318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421612318"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If `-peercfilters` isn't set, the resulting error message below would be confusing I think.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T15:53:22Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421612318",
      "id" : 421612318,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYxMjMxOA==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 1993,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 407610013,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421612318",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on master to fix the spurious travis failures, and addressed @jkczyz's review comments. Thanks for the review!",
      "created_at" : "2020-05-07T16:00:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625343964",
      "id" : 625343964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTM0Mzk2NA==",
      "updated_at" : "2020-05-07T16:00:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625343964",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421629462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421629462"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T16:18:59Z",
      "diff_hunk" : "@@ -234,6 +234,20 @@ extern const char *GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char *BLOCKTXN;\n+/**\n+ * getcfcheckpt requests evenly spaced compact filter headers, enabling\n+ * parallelized download and validation of the headers between them.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *GETCFCHECKPT;\n+/**\n+ * cfcheckpt is a response to a getcfcheckpt request containing a vector of\n+ * evenly spaced filter headers for blocks on the requested chain.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *CFCHECKPT;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421629462",
      "id" : 421629462,
      "in_reply_to_id" : 421010893,
      "line" : 250,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYyOTQ2Mg==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 250,
      "original_position" : 17,
      "original_start_line" : 237,
      "path" : "src/protocol.h",
      "position" : 17,
      "pull_request_review_id" : 407631865,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : 237,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421629462",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421631968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421631968"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think changing the log text to \"peer x requested unsupported block filter type\" addresses your concern (either `-peercfilters` is unset and they've requested any block filter type, or `-peercfilters` is set and they've requested a block filter type that isn't basic).\r\n\r\nLater on we'll switch this logic to use `GetLocalServices` instead: https://github.com/bitcoin/bitcoin/pull/18876/commits/5c23d400fec93c1a52e42a6d0c08f7164bbb268b#diff-eff7adeaec73a769788bb78858815c91R2038.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T16:22:58Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421631968",
      "id" : 421631968,
      "in_reply_to_id" : 421021746,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzMTk2OA==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 1999,
      "original_position" : 52,
      "original_start_line" : 1991,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 407635068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421631968",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421632032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421632032"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T16:23:03Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421632032",
      "id" : 421632032,
      "in_reply_to_id" : 421029307,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzMjAzMg==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 1989,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 407635139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421632032",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421632090"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421632090"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T16:23:08Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and was at some point connected to the active chain.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {\n+            LogPrint(BCLog::NET, \"peer %d requested invalid block hash: %s\\n\",\n+                     pfrom->GetId(), stop_hash.ToString());\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    filter_index = GetBlockFilterIndex(filter_type);\n+    if (!filter_index) {\n+        LogPrint(BCLog::NET, \"Filter index for supported type %s not found\\n\", BlockFilterTypeName(filter_type));\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+/**\n+ * Handle a cfcheckpt request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFCheckPt(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)\n+{\n+    uint8_t filter_type_ser;\n+    uint256 stop_hash;\n+\n+    vRecv >> filter_type_ser >> stop_hash;\n+\n+    const BlockFilterType filter_type = static_cast<BlockFilterType>(filter_type_ser);\n+\n+    const CBlockIndex* stop_index;\n+    BlockFilterIndex* filter_index;\n+    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, stop_hash,\n+                                   stop_index, filter_index)) {\n+        return;\n+    }\n+\n+    std::vector<uint256> headers(stop_index->nHeight / CFCHECKPT_INTERVAL);\n+\n+    // Populate headers.\n+    const CBlockIndex* block_index = stop_index;\n+    for (int i = headers.size() - 1; i >= 0; i--) {\n+        uint32_t height = (i + 1) * CFCHECKPT_INTERVAL;\n+        block_index = block_index->GetAncestor(height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421632090",
      "id" : 421632090,
      "in_reply_to_id" : 421043128,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzMjA5MA==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 2056,
      "original_position" : 109,
      "original_start_line" : 2050,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 407635208,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421632090",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421632124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421632124"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T16:23:12Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and was at some point connected to the active chain.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {\n+            LogPrint(BCLog::NET, \"peer %d requested invalid block hash: %s\\n\",\n+                     pfrom->GetId(), stop_hash.ToString());\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    filter_index = GetBlockFilterIndex(filter_type);\n+    if (!filter_index) {\n+        LogPrint(BCLog::NET, \"Filter index for supported type %s not found\\n\", BlockFilterTypeName(filter_type));\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+/**\n+ * Handle a cfcheckpt request.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421632124",
      "id" : 421632124,
      "in_reply_to_id" : 421057005,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzMjEyNA==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 2024,
      "original_position" : 77,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 407635257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421632124",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421636285"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421636285"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit:\r\n```suggestion\r\n    // Basic filters index must be enabled to serve compact filters\r\n    // because it is the only available filter option for now\r\n```",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T16:29:32Z",
      "diff_hunk" : "@@ -994,6 +995,12 @@ bool AppInitParameterInteraction()\n         }\n     }\n \n+    // Basic filters index must be enabled to serve compact filters",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421636285",
      "id" : 421636285,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzNjI4NQ==",
      "original_commit_id" : "48bc8ff2ca06dade1b24feafd75b59f51e05dd45",
      "original_line" : 998,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 407610013,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421636285",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421648046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421648046"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it matters. If a BIP 157 client pre-emptively requests a filter header for a block that the server hasn't yet accepted, then they would be disconnected.\r\n\r\nGenerally we don't consider block propagation timing to be a privacy/topology leak, since new block events are rare and too expensive to be controlled by an observer.\r\n\r\nRequesting a block that the server hasn't accepted yet is logically equivalent to requesting a non-existent block, which is tested in p2p_cfilters.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T16:48:36Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421648046",
      "id" : 421648046,
      "in_reply_to_id" : 421344230,
      "line" : 24,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY0ODA0Ng==",
      "original_commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "original_line" : 24,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : 24,
      "pull_request_review_id" : 407655285,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421648046",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421649572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421649572"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, that's possible. A client should always request the filter headers from a recently sync'ed block headers chain.\r\n\r\nI was going to update the comment to say something like \"Check that the stop block exists and is either in the best chain or was re-orged out less than a month ago\", but I don't like repeating program logic in a comment, especially if it's located far from the code, since any changes in the logic would make the comment obsolete. Instead I've changed it to \"Check that the stop block exists and the peer would be allowed to fetch it.\" Anyone reading the code can look up BlockRequestAllowed() for the exact conditions.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T16:51:01Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unknown block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and was at some point connected to the active chain.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421649572",
      "id" : 421649572,
      "in_reply_to_id" : 421330556,
      "line" : 2006,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY0OTU3Mg==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 2006,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 59,
      "pull_request_review_id" : 407657158,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421649572",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed @ariard's review comments.",
      "created_at" : "2020-05-07T16:51:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625372467",
      "id" : 625372467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTM3MjQ2Nw==",
      "updated_at" : "2020-05-07T16:51:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625372467",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421654189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421654189"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "i.e. I agree with what @jkczyz was saying earlier I think but just saw you addressed it now",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T16:58:29Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421654189",
      "id" : 421654189,
      "in_reply_to_id" : 421612318,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY1NDE4OQ==",
      "original_commit_id" : "bd1a924b34afb9b70bbe7012461ac8681788dad6",
      "original_line" : 1993,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 407662825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421654189",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421678792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421678792"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`CFCHECKPT_INTERVAL` is set to 1000, but perhaps add a static assert sanity check against division by zero (as well as against a `height` of zero on line 2055).\r\n```diff\r\n+    static_assert(CFCHECKPT_INTERVAL !=0);\r\n     std::vector<uint256> headers(stop_index->nHeight / CFCHECKPT_INTERVAL);\r\n```",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T17:39:46Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      const BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unsupported block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and the peer would be allowed to fetch it.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {\n+            LogPrint(BCLog::NET, \"peer %d requested invalid block hash: %s\\n\",\n+                     pfrom->GetId(), stop_hash.ToString());\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    filter_index = GetBlockFilterIndex(filter_type);\n+    if (!filter_index) {\n+        LogPrint(BCLog::NET, \"Filter index for supported type %s not found\\n\", BlockFilterTypeName(filter_type));\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+/**\n+ * Handle a getcfcheckpt request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFCheckPt(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)\n+{\n+    uint8_t filter_type_ser;\n+    uint256 stop_hash;\n+\n+    vRecv >> filter_type_ser >> stop_hash;\n+\n+    const BlockFilterType filter_type = static_cast<BlockFilterType>(filter_type_ser);\n+\n+    const CBlockIndex* stop_index;\n+    const BlockFilterIndex* filter_index;\n+    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, stop_hash,\n+                                   stop_index, filter_index)) {\n+        return;\n+    }\n+\n+    std::vector<uint256> headers(stop_index->nHeight / CFCHECKPT_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421678792",
      "id" : 421678792,
      "line" : 2050,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3ODc5Mg==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 2050,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 103,
      "pull_request_review_id" : 407693752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421678792",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421683976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421683976"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Current idiom in the test suite:\r\n```diff\r\n-        node0.send_message(request)\r\n-        node0.sync_with_ping(timeout=5)\r\n+        node0.send_and_ping(message=request, timeout=5)\r\n```",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T17:48:28Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.rpc_timeout = 480\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-blockfilterindex\", \"-peercfilters\"],\n+            [\"-blockfilterindex\"],\n+        ]\n+\n+    def run_test(self):\n+        # Node 0 supports COMPACT_FILTERS, node 1 does not.\n+        node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+\n+        # Nodes 0 & 1 share the same first 999 blocks in the chain.\n+        self.nodes[0].generate(999)\n+        self.sync_blocks(timeout=600)\n+\n+        # Stale blocks by disconnecting nodes 0 & 1, mining, then reconnecting\n+        disconnect_nodes(self.nodes[0], 1)\n+\n+        self.nodes[0].generate(1)\n+        wait_until(lambda: self.nodes[0].getblockcount() == 1000)\n+        stale_block_hash = self.nodes[0].getblockhash(1000)\n+\n+        self.nodes[1].generate(1001)\n+        wait_until(lambda: self.nodes[1].getblockcount() == 2000)\n+\n+        self.log.info(\"get cfcheckpt on chain to be re-orged out.\")\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping(timeout=5)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421683976",
      "id" : 421683976,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4Mzk3Ng==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 59,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : null,
      "pull_request_review_id" : 407693752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421683976",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421773505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421773505"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it be preferable to reference to const here?\r\n```diff\r\n-                                      BlockFilterType filter_type,\r\n+                                      const BlockFilterType& filter_type,\r\n```",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T20:27:52Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421773505",
      "id" : 421773505,
      "line" : 1986,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc3MzUwNQ==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 1986,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 407693752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421773505",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421789997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421789997"
         }
      },
      "author_association" : "MEMBER",
      "body" : "idem\r\n```diff\r\n-        node0.send_message(request)\r\n-        node0.sync_with_ping()\r\n+        node0.send_and_ping(request)\r\n```",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T20:58:41Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.rpc_timeout = 480\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-blockfilterindex\", \"-peercfilters\"],\n+            [\"-blockfilterindex\"],\n+        ]\n+\n+    def run_test(self):\n+        # Node 0 supports COMPACT_FILTERS, node 1 does not.\n+        node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+\n+        # Nodes 0 & 1 share the same first 999 blocks in the chain.\n+        self.nodes[0].generate(999)\n+        self.sync_blocks(timeout=600)\n+\n+        # Stale blocks by disconnecting nodes 0 & 1, mining, then reconnecting\n+        disconnect_nodes(self.nodes[0], 1)\n+\n+        self.nodes[0].generate(1)\n+        wait_until(lambda: self.nodes[0].getblockcount() == 1000)\n+        stale_block_hash = self.nodes[0].getblockhash(1000)\n+\n+        self.nodes[1].generate(1001)\n+        wait_until(lambda: self.nodes[1].getblockcount() == 2000)\n+\n+        self.log.info(\"get cfcheckpt on chain to be re-orged out.\")\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping(timeout=5)\n+        response = node0.last_message['cfcheckpt']\n+        assert_equal(response.filter_type, request.filter_type)\n+        assert_equal(response.stop_hash, request.stop_hash)\n+        assert_equal(len(response.headers), 1)\n+\n+        self.log.info(\"Reorg node 0 to a new chain.\")\n+        connect_nodes(self.nodes[0], 1)\n+        self.sync_blocks(timeout=600)\n+\n+        main_block_hash = self.nodes[0].getblockhash(1000)\n+        assert main_block_hash != stale_block_hash, \"node 0 chain did not reorganize\"\n+\n+        self.log.info(\"Check that peers can fetch cfcheckpt on active chain.\")\n+        tip_hash = self.nodes[0].getbestblockhash()\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(tip_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421789997",
      "id" : 421789997,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc4OTk5Nw==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 79,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : null,
      "pull_request_review_id" : 407693752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421789997",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421790143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421790143"
         }
      },
      "author_association" : "MEMBER",
      "body" : "and here as well\r\n```diff\r\n-        node0.send_message(request)\r\n-        node0.sync_with_ping()\r\n+        node0.send_and_ping(request)\r\n```",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T20:58:58Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.rpc_timeout = 480\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-blockfilterindex\", \"-peercfilters\"],\n+            [\"-blockfilterindex\"],\n+        ]\n+\n+    def run_test(self):\n+        # Node 0 supports COMPACT_FILTERS, node 1 does not.\n+        node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+\n+        # Nodes 0 & 1 share the same first 999 blocks in the chain.\n+        self.nodes[0].generate(999)\n+        self.sync_blocks(timeout=600)\n+\n+        # Stale blocks by disconnecting nodes 0 & 1, mining, then reconnecting\n+        disconnect_nodes(self.nodes[0], 1)\n+\n+        self.nodes[0].generate(1)\n+        wait_until(lambda: self.nodes[0].getblockcount() == 1000)\n+        stale_block_hash = self.nodes[0].getblockhash(1000)\n+\n+        self.nodes[1].generate(1001)\n+        wait_until(lambda: self.nodes[1].getblockcount() == 2000)\n+\n+        self.log.info(\"get cfcheckpt on chain to be re-orged out.\")\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping(timeout=5)\n+        response = node0.last_message['cfcheckpt']\n+        assert_equal(response.filter_type, request.filter_type)\n+        assert_equal(response.stop_hash, request.stop_hash)\n+        assert_equal(len(response.headers), 1)\n+\n+        self.log.info(\"Reorg node 0 to a new chain.\")\n+        connect_nodes(self.nodes[0], 1)\n+        self.sync_blocks(timeout=600)\n+\n+        main_block_hash = self.nodes[0].getblockhash(1000)\n+        assert main_block_hash != stale_block_hash, \"node 0 chain did not reorganize\"\n+\n+        self.log.info(\"Check that peers can fetch cfcheckpt on active chain.\")\n+        tip_hash = self.nodes[0].getbestblockhash()\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(tip_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping()\n+        response = node0.last_message['cfcheckpt']\n+        assert_equal(response.filter_type, request.filter_type)\n+        assert_equal(response.stop_hash, request.stop_hash)\n+\n+        main_cfcheckpt = self.nodes[0].getblockfilter(main_block_hash, 'basic')['header']\n+        tip_cfcheckpt = self.nodes[0].getblockfilter(tip_hash, 'basic')['header']\n+        assert_equal(\n+            response.headers,\n+            [int(header, 16) for header in (main_cfcheckpt, tip_cfcheckpt)]\n+        )\n+\n+        self.log.info(\"Check that peers can fetch cfcheckpt on stale chain.\")\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421790143",
      "id" : 421790143,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc5MDE0Mw==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 97,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : null,
      "pull_request_review_id" : 407693752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421790143",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421828302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421828302"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        assert_equal(response.stop_hash, request.stop_hash)\r\n        assert_equal(len(response.headers), 2)\r\n```",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-07T22:21:27Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.rpc_timeout = 480\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-blockfilterindex\", \"-peercfilters\"],\n+            [\"-blockfilterindex\"],\n+        ]\n+\n+    def run_test(self):\n+        # Node 0 supports COMPACT_FILTERS, node 1 does not.\n+        node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+\n+        # Nodes 0 & 1 share the same first 999 blocks in the chain.\n+        self.nodes[0].generate(999)\n+        self.sync_blocks(timeout=600)\n+\n+        # Stale blocks by disconnecting nodes 0 & 1, mining, then reconnecting\n+        disconnect_nodes(self.nodes[0], 1)\n+\n+        self.nodes[0].generate(1)\n+        wait_until(lambda: self.nodes[0].getblockcount() == 1000)\n+        stale_block_hash = self.nodes[0].getblockhash(1000)\n+\n+        self.nodes[1].generate(1001)\n+        wait_until(lambda: self.nodes[1].getblockcount() == 2000)\n+\n+        self.log.info(\"get cfcheckpt on chain to be re-orged out.\")\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping(timeout=5)\n+        response = node0.last_message['cfcheckpt']\n+        assert_equal(response.filter_type, request.filter_type)\n+        assert_equal(response.stop_hash, request.stop_hash)\n+        assert_equal(len(response.headers), 1)\n+\n+        self.log.info(\"Reorg node 0 to a new chain.\")\n+        connect_nodes(self.nodes[0], 1)\n+        self.sync_blocks(timeout=600)\n+\n+        main_block_hash = self.nodes[0].getblockhash(1000)\n+        assert main_block_hash != stale_block_hash, \"node 0 chain did not reorganize\"\n+\n+        self.log.info(\"Check that peers can fetch cfcheckpt on active chain.\")\n+        tip_hash = self.nodes[0].getbestblockhash()\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(tip_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping()\n+        response = node0.last_message['cfcheckpt']\n+        assert_equal(response.filter_type, request.filter_type)\n+        assert_equal(response.stop_hash, request.stop_hash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421828302",
      "id" : 421828302,
      "line" : 80,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgyODMwMg==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 80,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : 80,
      "pull_request_review_id" : 407877712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421828302",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421886525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421886525"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T01:32:32Z",
      "diff_hunk" : "@@ -994,6 +995,12 @@ bool AppInitParameterInteraction()\n         }\n     }\n \n+    // Basic filters index must be enabled to serve compact filters",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421886525",
      "id" : 421886525,
      "in_reply_to_id" : 421636285,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4NjUyNQ==",
      "original_commit_id" : "48bc8ff2ca06dade1b24feafd75b59f51e05dd45",
      "original_line" : 998,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 407941338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421886525",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421886946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421886946"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll pass on this one. No-one is ever going to change the constant to be zero.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T01:34:04Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      const BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unsupported block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and the peer would be allowed to fetch it.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {\n+            LogPrint(BCLog::NET, \"peer %d requested invalid block hash: %s\\n\",\n+                     pfrom->GetId(), stop_hash.ToString());\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    filter_index = GetBlockFilterIndex(filter_type);\n+    if (!filter_index) {\n+        LogPrint(BCLog::NET, \"Filter index for supported type %s not found\\n\", BlockFilterTypeName(filter_type));\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+/**\n+ * Handle a getcfcheckpt request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFCheckPt(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)\n+{\n+    uint8_t filter_type_ser;\n+    uint256 stop_hash;\n+\n+    vRecv >> filter_type_ser >> stop_hash;\n+\n+    const BlockFilterType filter_type = static_cast<BlockFilterType>(filter_type_ser);\n+\n+    const CBlockIndex* stop_index;\n+    const BlockFilterIndex* filter_index;\n+    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, stop_hash,\n+                                   stop_index, filter_index)) {\n+        return;\n+    }\n+\n+    std::vector<uint256> headers(stop_index->nHeight / CFCHECKPT_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421886946",
      "id" : 421886946,
      "in_reply_to_id" : 421678792,
      "line" : 2050,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4Njk0Ng==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 2050,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 103,
      "pull_request_review_id" : 407941758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421886946",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421887327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421887327"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T01:35:32Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.rpc_timeout = 480\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-blockfilterindex\", \"-peercfilters\"],\n+            [\"-blockfilterindex\"],\n+        ]\n+\n+    def run_test(self):\n+        # Node 0 supports COMPACT_FILTERS, node 1 does not.\n+        node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+\n+        # Nodes 0 & 1 share the same first 999 blocks in the chain.\n+        self.nodes[0].generate(999)\n+        self.sync_blocks(timeout=600)\n+\n+        # Stale blocks by disconnecting nodes 0 & 1, mining, then reconnecting\n+        disconnect_nodes(self.nodes[0], 1)\n+\n+        self.nodes[0].generate(1)\n+        wait_until(lambda: self.nodes[0].getblockcount() == 1000)\n+        stale_block_hash = self.nodes[0].getblockhash(1000)\n+\n+        self.nodes[1].generate(1001)\n+        wait_until(lambda: self.nodes[1].getblockcount() == 2000)\n+\n+        self.log.info(\"get cfcheckpt on chain to be re-orged out.\")\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping(timeout=5)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421887327",
      "id" : 421887327,
      "in_reply_to_id" : 421683976,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4NzMyNw==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 59,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : null,
      "pull_request_review_id" : 407942144,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421887327",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421887459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421887459"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T01:36:02Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.rpc_timeout = 480\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-blockfilterindex\", \"-peercfilters\"],\n+            [\"-blockfilterindex\"],\n+        ]\n+\n+    def run_test(self):\n+        # Node 0 supports COMPACT_FILTERS, node 1 does not.\n+        node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+\n+        # Nodes 0 & 1 share the same first 999 blocks in the chain.\n+        self.nodes[0].generate(999)\n+        self.sync_blocks(timeout=600)\n+\n+        # Stale blocks by disconnecting nodes 0 & 1, mining, then reconnecting\n+        disconnect_nodes(self.nodes[0], 1)\n+\n+        self.nodes[0].generate(1)\n+        wait_until(lambda: self.nodes[0].getblockcount() == 1000)\n+        stale_block_hash = self.nodes[0].getblockhash(1000)\n+\n+        self.nodes[1].generate(1001)\n+        wait_until(lambda: self.nodes[1].getblockcount() == 2000)\n+\n+        self.log.info(\"get cfcheckpt on chain to be re-orged out.\")\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping(timeout=5)\n+        response = node0.last_message['cfcheckpt']\n+        assert_equal(response.filter_type, request.filter_type)\n+        assert_equal(response.stop_hash, request.stop_hash)\n+        assert_equal(len(response.headers), 1)\n+\n+        self.log.info(\"Reorg node 0 to a new chain.\")\n+        connect_nodes(self.nodes[0], 1)\n+        self.sync_blocks(timeout=600)\n+\n+        main_block_hash = self.nodes[0].getblockhash(1000)\n+        assert main_block_hash != stale_block_hash, \"node 0 chain did not reorganize\"\n+\n+        self.log.info(\"Check that peers can fetch cfcheckpt on active chain.\")\n+        tip_hash = self.nodes[0].getbestblockhash()\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(tip_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping()\n+        response = node0.last_message['cfcheckpt']\n+        assert_equal(response.filter_type, request.filter_type)\n+        assert_equal(response.stop_hash, request.stop_hash)\n+\n+        main_cfcheckpt = self.nodes[0].getblockfilter(main_block_hash, 'basic')['header']\n+        tip_cfcheckpt = self.nodes[0].getblockfilter(tip_hash, 'basic')['header']\n+        assert_equal(\n+            response.headers,\n+            [int(header, 16) for header in (main_cfcheckpt, tip_cfcheckpt)]\n+        )\n+\n+        self.log.info(\"Check that peers can fetch cfcheckpt on stale chain.\")\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421887459",
      "id" : 421887459,
      "in_reply_to_id" : 421790143,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4NzQ1OQ==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 97,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : null,
      "pull_request_review_id" : 407942289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421887459",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421888211"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421888211"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No. The enum is a uint8_t. Passing an int is more efficient than passing a pointer (see eg https://stackoverflow.com/questions/3009543/passing-integers-as-constant-references-versus-copying)",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T01:38:47Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421888211",
      "id" : 421888211,
      "in_reply_to_id" : 421773505,
      "line" : 1986,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4ODIxMQ==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 1986,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 407943092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421888211",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421888981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421888981"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That'll be caught by the `assert_equal(response.headers, [int(header, 16) for header in (main_cfcheckpt, tip_cfcheckpt)])` below",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T01:41:22Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.rpc_timeout = 480\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [\"-blockfilterindex\", \"-peercfilters\"],\n+            [\"-blockfilterindex\"],\n+        ]\n+\n+    def run_test(self):\n+        # Node 0 supports COMPACT_FILTERS, node 1 does not.\n+        node0 = self.nodes[0].add_p2p_connection(P2PInterface())\n+        node1 = self.nodes[1].add_p2p_connection(P2PInterface())\n+\n+        # Nodes 0 & 1 share the same first 999 blocks in the chain.\n+        self.nodes[0].generate(999)\n+        self.sync_blocks(timeout=600)\n+\n+        # Stale blocks by disconnecting nodes 0 & 1, mining, then reconnecting\n+        disconnect_nodes(self.nodes[0], 1)\n+\n+        self.nodes[0].generate(1)\n+        wait_until(lambda: self.nodes[0].getblockcount() == 1000)\n+        stale_block_hash = self.nodes[0].getblockhash(1000)\n+\n+        self.nodes[1].generate(1001)\n+        wait_until(lambda: self.nodes[1].getblockcount() == 2000)\n+\n+        self.log.info(\"get cfcheckpt on chain to be re-orged out.\")\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping(timeout=5)\n+        response = node0.last_message['cfcheckpt']\n+        assert_equal(response.filter_type, request.filter_type)\n+        assert_equal(response.stop_hash, request.stop_hash)\n+        assert_equal(len(response.headers), 1)\n+\n+        self.log.info(\"Reorg node 0 to a new chain.\")\n+        connect_nodes(self.nodes[0], 1)\n+        self.sync_blocks(timeout=600)\n+\n+        main_block_hash = self.nodes[0].getblockhash(1000)\n+        assert main_block_hash != stale_block_hash, \"node 0 chain did not reorganize\"\n+\n+        self.log.info(\"Check that peers can fetch cfcheckpt on active chain.\")\n+        tip_hash = self.nodes[0].getbestblockhash()\n+        request = msg_getcfcheckpt(\n+            filter_type=FILTER_TYPE_BASIC,\n+            stop_hash=int(tip_hash, 16)\n+        )\n+        node0.send_message(request)\n+        node0.sync_with_ping()\n+        response = node0.last_message['cfcheckpt']\n+        assert_equal(response.filter_type, request.filter_type)\n+        assert_equal(response.stop_hash, request.stop_hash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421888981",
      "id" : 421888981,
      "in_reply_to_id" : 421828302,
      "line" : 80,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4ODk4MQ==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 80,
      "original_position" : 82,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : 80,
      "pull_request_review_id" : 407943846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T02:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421888981",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed all review comments from @fjahr and @jonatack . Thanks for the review!",
      "created_at" : "2020-05-08T02:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625595614",
      "id" : 625595614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTU5NTYxNA==",
      "updated_at" : "2020-05-08T02:33:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625595614",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421988220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421988220"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Generally we don't consider block propagation timing to be a privacy/topology leak, since new block events are rare and too expensive to be controlled by an observer.\r\n\r\nI think relying on event scarcity in case of block variance may not hold, so I would rather consider the heavily-optimized block propagation as an obstruction for an attacker to fingerprint topology with confidence.\r\n\r\n> Requesting a block that the server hasn't accepted yet is logically equivalent to requesting a non-existent block, which is tested in p2p_cfilters.\r\n\r\nI think there is logically a difference between accepting a block and header announcement, but AFAIK there is no types of connections for which we don't announce headers so doesn't make a difference in practice, I agree.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T07:25:11Z",
      "diff_hunk" : "@@ -0,0 +1,137 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peercfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r421988220",
      "id" : 421988220,
      "in_reply_to_id" : 421344230,
      "line" : 24,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk4ODIyMA==",
      "original_commit_id" : "fccc85728deec37acfb3d325409a9397b9397834",
      "original_line" : 24,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : 24,
      "pull_request_review_id" : 408051800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T07:25:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421988220",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code Review ACK 6691493, changes since last review are switch to `int` instead of `uint32_t`, renaming to `peerblockfilters`, test modifications, better comments.",
      "created_at" : "2020-05-08T07:30:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625680941",
      "id" : 625680941,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTY4MDk0MQ==",
      "updated_at" : "2020-05-08T07:30:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625680941",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422001372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422001372"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ugh, sorry John, I've been indoors for too long, for some reason I misread the BlockFilterType. Yes, an integer should be passed by value.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T07:54:30Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422001372",
      "id" : 422001372,
      "in_reply_to_id" : 421773505,
      "line" : 1986,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAwMTM3Mg==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 1986,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 39,
      "pull_request_review_id" : 408067587,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T07:54:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422001372",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422004990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422004990"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I'll pass on this one. No-one is ever going to change the constant to be zero.\r\n\r\nHeh, this is 2020, I don't count on anything to be sane anymore :)",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T08:02:10Z",
      "diff_hunk" : "@@ -1965,6 +1969,107 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n     }\n }\n \n+/**\n+ * Validation logic for compact filters request handling.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[out]  stop_index      The CBlockIndex for the stop_hash block, if the request can be serviced.\n+ * @param[out]  filter_index    The filter index, if the request can be serviced.\n+ * @return                      True if the request can be serviced.\n+ */\n+static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_params,\n+                                      BlockFilterType filter_type,\n+                                      const uint256& stop_hash,\n+                                      const CBlockIndex*& stop_index,\n+                                      const BlockFilterIndex*& filter_index)\n+{\n+    const bool supported_filter_type =\n+        (filter_type == BlockFilterType::BASIC &&\n+         gArgs.GetBoolArg(\"-peercfilters\", DEFAULT_PEERCFILTERS));\n+    if (!supported_filter_type) {\n+        LogPrint(BCLog::NET, \"peer %d requested unsupported block filter type: %d\\n\",\n+                 pfrom->GetId(), static_cast<uint8_t>(filter_type));\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        stop_index = LookupBlockIndex(stop_hash);\n+\n+        // Check that the stop block exists and the peer would be allowed to fetch it.\n+        if (!stop_index || !BlockRequestAllowed(stop_index, chain_params.GetConsensus())) {\n+            LogPrint(BCLog::NET, \"peer %d requested invalid block hash: %s\\n\",\n+                     pfrom->GetId(), stop_hash.ToString());\n+            pfrom->fDisconnect = true;\n+            return false;\n+        }\n+    }\n+\n+    filter_index = GetBlockFilterIndex(filter_type);\n+    if (!filter_index) {\n+        LogPrint(BCLog::NET, \"Filter index for supported type %s not found\\n\", BlockFilterTypeName(filter_type));\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+/**\n+ * Handle a getcfcheckpt request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFCheckPt(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)\n+{\n+    uint8_t filter_type_ser;\n+    uint256 stop_hash;\n+\n+    vRecv >> filter_type_ser >> stop_hash;\n+\n+    const BlockFilterType filter_type = static_cast<BlockFilterType>(filter_type_ser);\n+\n+    const CBlockIndex* stop_index;\n+    const BlockFilterIndex* filter_index;\n+    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, stop_hash,\n+                                   stop_index, filter_index)) {\n+        return;\n+    }\n+\n+    std::vector<uint256> headers(stop_index->nHeight / CFCHECKPT_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422004990",
      "id" : 422004990,
      "in_reply_to_id" : 421678792,
      "line" : 2050,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAwNDk5MA==",
      "original_commit_id" : "2a15f9943c065547e896aa221bcf26e7db8bd318",
      "original_line" : 2050,
      "original_position" : 103,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 103,
      "pull_request_review_id" : 408071764,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T08:02:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422004990",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422022167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422022167"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this line needed nowadays? I don't think any other functional p2p_* tests use `rpc_timeout`.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T08:40:58Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peerblockfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.rpc_timeout = 480",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422022167",
      "id" : 422022167,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyMjE2Nw==",
      "original_commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : 27,
      "pull_request_review_id" : 408092142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T08:54:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422022167",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422025238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422025238"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Per the change to `-peerblockfilters`, consider renaming `DEFAULT_PEERCFILTERS` to `DEFAULT_PEERBLOCKFILTERS` as well.\r\n\r\n```cpp\r\nsrc/init.cpp:449:    gArgs.AddArg(\"-peerblockfilters\", strprintf(\"Serve compact block filters to peers per BIP 157 (default: %u)\", DEFAULT_PEERCFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\r\nsrc/init.cpp:1000:    if (gArgs.GetBoolArg(\"-peerblockfilters\", DEFAULT_PEERCFILTERS) &&\r\nsrc/net_processing.cpp:1993:         gArgs.GetBoolArg(\"-peerblockfilters\", DEFAULT_PEERCFILTERS));\r\nsrc/net_processing.h:24:static const bool DEFAULT_PEERCFILTERS = false;\r\n```",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T08:47:48Z",
      "diff_hunk" : "@@ -994,6 +995,13 @@ bool AppInitParameterInteraction()\n         }\n     }\n \n+    // Basic filters are the only supported filters. The basic filters index must be enabled\n+    // to serve compact filters\n+    if (gArgs.GetBoolArg(\"-peerblockfilters\", DEFAULT_PEERCFILTERS) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422025238",
      "id" : 422025238,
      "line" : 1000,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyNTIzOA==",
      "original_commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "original_line" : 1000,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 14,
      "pull_request_review_id" : 408092142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T08:54:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422025238",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422026358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422026358"
         }
      },
      "author_association" : "MEMBER",
      "body" : "After the change to `-peerblockfilters`, should the test be renamed as well? e.g. `p2p_peerblockfilters.py`\r\n",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T08:50:15Z",
      "diff_hunk" : "@@ -225,6 +225,7 @@\n     'feature_loadblock.py',\n     'p2p_dos_header_tree.py',\n     'p2p_unrequested_blocks.py',\n+    'p2p_cfilters.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422026358",
      "id" : 422026358,
      "line" : 228,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAyNjM1OA==",
      "original_commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "original_line" : 228,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : 4,
      "pull_request_review_id" : 408092142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T08:54:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422026358",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422127037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422127037"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This was needed to prevent the test from timing out when run under valgrind. Since yesterday, we no longer run functional tests under valgrind on every travis run, but I'd prefer not to keep changing this. If people run this test under valgrind locally, they'd need to add this back.",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T12:56:23Z",
      "diff_hunk" : "@@ -0,0 +1,134 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n+\n+Tests that a node configured with -blockfilterindex and -peerblockfilters can serve\n+cfcheckpts.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    FILTER_TYPE_BASIC,\n+    msg_getcfcheckpt,\n+)\n+from test_framework.mininode import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    disconnect_nodes,\n+    wait_until,\n+)\n+\n+class CompactFiltersTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.rpc_timeout = 480",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422127037",
      "id" : 422127037,
      "in_reply_to_id" : 422022167,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyNzAzNw==",
      "original_commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "original_line" : 27,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/p2p_cfilters.py",
      "position" : 27,
      "pull_request_review_id" : 408217901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T12:56:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422127037",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422129130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422129130"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T13:01:09Z",
      "diff_hunk" : "@@ -994,6 +995,13 @@ bool AppInitParameterInteraction()\n         }\n     }\n \n+    // Basic filters are the only supported filters. The basic filters index must be enabled\n+    // to serve compact filters\n+    if (gArgs.GetBoolArg(\"-peerblockfilters\", DEFAULT_PEERCFILTERS) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422129130",
      "id" : 422129130,
      "in_reply_to_id" : 422025238,
      "line" : 1000,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyOTEzMA==",
      "original_commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "original_line" : 1000,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 14,
      "pull_request_review_id" : 408220558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T13:01:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422129130",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422129173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422129173"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "created_at" : "2020-05-08T13:01:14Z",
      "diff_hunk" : "@@ -225,6 +225,7 @@\n     'feature_loadblock.py',\n     'p2p_dos_header_tree.py',\n     'p2p_unrequested_blocks.py',\n+    'p2p_cfilters.py',",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#discussion_r422129173",
      "id" : 422129173,
      "in_reply_to_id" : 422026358,
      "line" : 228,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyOTE3Mw==",
      "original_commit_id" : "6691493340e5fd6b42095431a2e4e837d5c6f27c",
      "original_line" : 228,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/test_runner.py",
      "position" : 4,
      "pull_request_review_id" : 408220614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18877",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-08T13:01:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422129173",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for review @jonatack . I've addressed all your comments.",
      "created_at" : "2020-05-08T13:02:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625804510",
      "id" : 625804510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTgwNDUxMA==",
      "updated_at" : "2020-05-08T13:02:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625804510",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Thanks for review @jonatack . I've addressed all your comments.\r\n\r\nNeeds push. Also, please update the flag name in commit messages.",
      "created_at" : "2020-05-08T14:59:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625857203",
      "id" : 625857203,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTg1NzIwMw==",
      "updated_at" : "2020-05-08T14:59:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625857203",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Needs push. Also, please update the flag name in commit messages.\r\n\r\ndone and done!",
      "created_at" : "2020-05-08T15:27:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625870657",
      "id" : 625870657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTg3MDY1Nw==",
      "updated_at" : "2020-05-08T15:27:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625870657",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK 967e2b10a51b831e49abd9171e3f05843e00e76b\r\n\r\nChanges addressed nits discussed in the comments. Tests are green for me locally.",
      "created_at" : "2020-05-08T17:01:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625916125",
      "id" : 625916125,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTkxNjEyNQ==",
      "updated_at" : "2020-05-08T17:01:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625916125",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 967e2b10a51b831e49abd9171e3f05843e00e76b\r\n\r\nComments addressed and tests pass.",
      "created_at" : "2020-05-08T17:57:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625940516",
      "id" : 625940516,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk0MDUxNg==",
      "updated_at" : "2020-05-08T17:57:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625940516",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 967e2b10a51b831e49abd9171e3f05843e00e76b. I'm still thinking about the long-term consequences of adding BIP157 support but so far these changes seem fine. Per `git diff 6691493 967e2b1` the only change since my previous tested review was addressing my renaming comments.\r\n\r\nThere may be a update needed for #16224. Appveyor is signalling *init.cpp(1001,97): error C2664: 'bool InitError(const bilingual_str &)': cannot convert argument 1 from 'std::string' to 'const bilingual_str &'*.\r\n",
      "created_at" : "2020-05-08T18:19:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-625949821",
      "id" : 625949821,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTk0OTgyMQ==",
      "updated_at" : "2020-05-09T16:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625949821",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review re-ACK 23083856a551ca13e8b142791c296ecb25cc4e7f the only change since my review @ 967e2b1 is an update required for #16224 that was merged yesterday.\r\n```diff\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -999,22 +998,22 @@ bool AppInitParameterInteraction()\r\n     // to serve compact filters\r\n     if (gArgs.GetBoolArg(\"-peerblockfilters\", DEFAULT_PEERBLOCKFILTERS) &&\r\n         g_enabled_filter_types.count(BlockFilterType::BASIC) != 1) {\r\n-        return InitError(_(\"Cannot set -peerblockfilters without -blockfilterindex.\").translated);\r\n+        return InitError(_(\"Cannot set -peerblockfilters without -blockfilterindex.\"));\r\n     } \r\n```",
      "created_at" : "2020-05-09T16:07:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626198287",
      "id" : 626198287,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjE5ODI4Nw==",
      "updated_at" : "2020-05-09T16:07:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626198287",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK 23083856a551ca13e8b142791c296ecb25cc4e7f\r\n\r\nOnly change was fixing merge conflict in `init.cpp`:\r\n\r\n```\r\n$ git range-diff f54753293fe7355e4280944d766f22054b560ba1..967e2b10a51b831e49abd9171e3f05843e00e76b 5b24f6084ede92d0f493ff416b4726245140b2c1..23083856a551ca13e8b142791c296ecb25cc4e7f\r\n```",
      "created_at" : "2020-05-10T13:25:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626327752",
      "id" : 626327752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjMyNzc1Mg==",
      "updated_at" : "2020-05-10T13:25:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626327752",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK 23083856a551ca13e8b142791c296ecb25cc4e7f\r\n\r\nOnly change required in `init.cpp` for #16224.",
      "created_at" : "2020-05-10T18:03:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626366079",
      "id" : 626366079,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjM2NjA3OQ==",
      "updated_at" : "2020-05-10T18:03:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626366079",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-Code Review ACK 2308385",
      "created_at" : "2020-05-11T08:11:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626545296",
      "id" : 626545296,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjU0NTI5Ng==",
      "updated_at" : "2020-05-11T08:11:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626545296",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This [remains Concept NACK](https://github.com/bitcoin/bitcoin/pull/16442#issuecomment-623722125) since [it is harmful to Bitcoin](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-May/017820.html) and should not be merged, no matter how well-reviewed.",
      "created_at" : "2020-05-11T16:07:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626798022",
      "id" : 626798022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjc5ODAyMg==",
      "updated_at" : "2020-05-11T16:19:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626798022",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I also believe neutrino is harmful to bitcoin https://medium.com/@nicolasdorier/neutrino-is-dangerous-for-my-self-sovereignty-18fac5bcdc25\r\n\r\nHowever, I believe it can be useful to whitelisted peers. (I think you should add a permission flag for that)\r\n\r\nConcept NACK, except if protected by a permission flag to force its use only to specific trusted peers.",
      "created_at" : "2020-05-11T16:27:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626809421",
      "id" : 626809421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjgwOTQyMQ==",
      "updated_at" : "2020-05-11T16:28:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626809421",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "All three test suites passed here.",
      "created_at" : "2020-05-11T17:03:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626828598",
      "id" : 626828598,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjgyODU5OA==",
      "updated_at" : "2020-05-11T17:03:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626828598",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/63013654?v=4",
         "events_url" : "https://api.github.com/users/ThomasBucaioni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ThomasBucaioni/followers",
         "following_url" : "https://api.github.com/users/ThomasBucaioni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ThomasBucaioni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ThomasBucaioni",
         "id" : 63013654,
         "login" : "ThomasBucaioni",
         "node_id" : "MDQ6VXNlcjYzMDEzNjU0",
         "organizations_url" : "https://api.github.com/users/ThomasBucaioni/orgs",
         "received_events_url" : "https://api.github.com/users/ThomasBucaioni/received_events",
         "repos_url" : "https://api.github.com/users/ThomasBucaioni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ThomasBucaioni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ThomasBucaioni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ThomasBucaioni"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Tested ACK 23083856a",
      "created_at" : "2020-05-11T21:54:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626986048",
      "id" : 626986048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjk4NjA0OA==",
      "updated_at" : "2020-05-11T21:54:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626986048",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1562417?v=4",
         "events_url" : "https://api.github.com/users/clarkmoody/events{/privacy}",
         "followers_url" : "https://api.github.com/users/clarkmoody/followers",
         "following_url" : "https://api.github.com/users/clarkmoody/following{/other_user}",
         "gists_url" : "https://api.github.com/users/clarkmoody/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/clarkmoody",
         "id" : 1562417,
         "login" : "clarkmoody",
         "node_id" : "MDQ6VXNlcjE1NjI0MTc=",
         "organizations_url" : "https://api.github.com/users/clarkmoody/orgs",
         "received_events_url" : "https://api.github.com/users/clarkmoody/received_events",
         "repos_url" : "https://api.github.com/users/clarkmoody/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/clarkmoody/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/clarkmoody/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/clarkmoody"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This PR now has 6 ACKs:\r\n\r\n- @jonatack (https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626198287)\r\n- @fjahr (https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626327752)\r\n- @jkczyz (https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626366079)\r\n- @ariard (https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626545296)\r\n- @clarkmoody (https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-626986048)\r\n- @theStack (https://github.com/bitcoin/bitcoin/pull/18877#pullrequestreview-409907777)\r\n\r\nThe PR that this is a subset of also has an ACK:\r\n\r\n- @MarcoFalke (https://github.com/bitcoin/bitcoin/pull/16442#issuecomment-623037890)\r\n\r\nAnd there are 6 additional Concept ACKs for the change:\r\n\r\n- @Empact (https://github.com/bitcoin/bitcoin/pull/18876#issuecomment-624893632)\r\n- @michaelfolkson (https://github.com/bitcoin/bitcoin/pull/18876#issuecomment-625424908)\r\n- @jamesob (https://github.com/bitcoin/bitcoin/pull/16442#issuecomment-514643609)\r\n- @Sjors (https://github.com/bitcoin/bitcoin/pull/16442#issuecomment-520897695)\r\n- @marcinja (https://github.com/bitcoin/bitcoin/pull/16442#pullrequestreview-279909596)\r\n- @brakmic (https://github.com/bitcoin/bitcoin/pull/16442#issuecomment-621985134)\r\n\r\nThat's 13 ACKs/Concept ACKs. There does appear to be widespread support to move forwards with this.\r\n\r\n@luke-jr @NicolasDorier - your principled objection to BIP 157 has been heard and understood. Thank you for your input!",
      "created_at" : "2020-05-12T12:45:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-627319808",
      "id" : 627319808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzMxOTgwOA==",
      "updated_at" : "2020-05-12T12:45:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627319808",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 23083856a5 ð³\r\n\r\nOnly change since my previous review https://github.com/bitcoin/bitcoin/pull/18876#issuecomment-627322015\r\n\r\n* Rename setting\r\n* Small code and test refactoring\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK 23083856a5 ð³\r\n\r\nOnly change since my previous review https://github.com/bitcoin/bitcoin/pull/18876#issuecomment-627322015\r\n\r\n* Rename setting\r\n* Small code and test refactoring\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUgPkAv/fzn4E/8T8kcqmj3aMGV6rY1b0Kg0cqRZKVMrfapyWIJxuQ0+WiB7Leyl\r\nTbKLG8hXCWHy/GNdtkJjhXKtQDH4NA/m+jlIhTMIYCsi1YZ9IPzKLPm9NvuEQSp0\r\nMRmfkDFH/RMIgxSDROm96+StbWlunDDjXvy7recX7hLJ1pMAfufEiyVbqDHwuCjw\r\nK9lG2YbdBWwUxo6zP1iQkBV+DwTl0GNuEtF47e6oQUozAWNosBw0efBEDGNN41c6\r\nLi1aPBXnZUHd/Uwioxz0Ar0+N06VWz0b5Uz4NDOK//Bqu4sf3djZY4WEF/TdlrSs\r\nsXy8LIhyL3uCnSWKUL2L4zoKkYjImJthLk8MIdcFnFLotQO/Za1yDZ/ur/yKI7ee\r\nbYqLh7vbW8oupsKigJr25jtPZY1+p5EmdeFh+/4JYsSG/Da5gGryQ+AcWAi9Hk1/\r\n7U4XhAwiwyLEvadJpPJGuCuFKZXl89KCCKKTY8x/nuNzWuvzSNqv183muNIhrCqk\r\nIIprWPI3\r\n=Dnd8\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `286f8e8c18188195dc7b2da1cd9ec5c45e6b4ff0cfa7173476f9af073c383815  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108286f8e8c18188195dc7b2da1cd9ec5c45e6b4ff0cfa7173476f9af073c383815f010097cab933faf148ea12e3938382b95cb08fff010c018c931180268af5ea177cc99be884108f1045eba9d27f008d213f824c5b1be410083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010cf7b642e9b589d098803b105f2b0eeae08f1045eba9d28f0087a9c401f087a32d00083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff010d27c2e53c84c3c0a83f555cca2c6d52d08f1045eba9d27f008ff4f4fa006fa79010083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010d29584ed878143f73af080396d8c97a108f1045eba9d27f008f4532133d5ab3dd50083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6d)\r\n\r\n</details>\r\n",
      "created_at" : "2020-05-12T12:57:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-627325634",
      "id" : 627325634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzMyNTYzNA==",
      "updated_at" : "2020-05-12T12:57:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627325634",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Concept NACK, except if protected by a permission flag to force its use only to specific trusted peers.\r\n\r\nThe implementation here is incomplete. The follow-ups in #18876 need to be merged as well. And if another setting is seen to be needed for this to be safely shipped, this should also be done in a follow-up. However, I think we shouldn't block progress here based on Bitcoin Core related implementation details that can easily be fixed up later. There is enough time until the release to hash this out. (See #18947) If by then the implementation is still incomplete, it should be reverted.\r\n\r\nGiven that, I think this is ready for merge, both code-wise and conceptually.",
      "created_at" : "2020-05-12T13:02:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-627328398",
      "id" : 627328398,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzMyODM5OA==",
      "updated_at" : "2020-05-12T13:02:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627328398",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "post merge concept ACK.\r\n\r\nHowever, I think this merge was too fast. A 6 day window for a first concrete step in filter serving after BIP157 is IMO too fast for a reasonable discussion. I also still miss conceptual reviews from long term p2p contributors. There is no rush IMO.\r\n\r\n**Edit:** I probably underestimated the effort that went into #16442 (this PR is mostly recycled code from 16442) which could legitimate a quicker merge.",
      "created_at" : "2020-05-13T13:08:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-627972271",
      "id" : 627972271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzk3MjI3MQ==",
      "updated_at" : "2020-05-13T18:18:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627972271",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Edit: I probably underestimated the effort that went into #16442 (this PR is mostly recycled code from 16442) which could legitimate a quicker merge.\r\n\r\nThanks. Just wanted to reply that.\r\n\r\nFor reference, the permission flag pr is here, btw: #18972 \r\n\r\n",
      "created_at" : "2020-05-14T16:36:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18877#issuecomment-628750775",
      "id" : 628750775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18877",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODc1MDc3NQ==",
      "updated_at" : "2020-05-14T16:36:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628750775",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
