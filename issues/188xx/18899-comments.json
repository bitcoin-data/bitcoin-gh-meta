[
   {
      "author_association" : "MEMBER",
      "body" : "ACK https://github.com/bitcoin/bitcoin/pull/18899/commits/fa082d0a57afedca9122fac4aecd6a3070f06b04\r\n\r\nSad but true.",
      "created_at" : "2020-05-06T20:23:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624870483",
      "id" : 624870483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDg3MDQ4Mw==",
      "updated_at" : "2020-05-06T20:23:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624870483",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK! I think it's very important for developer experience to be able to iterate quickly on pull requests. If someone suggests a change and the author pushes it, then the ci should run quickly so reviewers don't feel blocked.\r\n\r\nI think it would make sense to have a valgrind run with just the unit tests, and perhaps a basic functional test, as long as that could be done in a reasonable time. I also think it'd be worthwhile doing a full valgrind test on nightly builds somewhere.",
      "created_at" : "2020-05-06T20:26:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624872124",
      "id" : 624872124,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDg3MjEyNA==",
      "updated_at" : "2020-05-06T20:26:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624872124",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oh, please don't remove Valgrind until we have an MSAN job in Travis. We *really* need automated detection of uninitialized memory reads enabled in Travis.",
      "created_at" : "2020-05-06T20:45:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624881756",
      "id" : 624881756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDg4MTc1Ng==",
      "updated_at" : "2020-05-06T20:46:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624881756",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Could run the job only in master (or non PR branch) or use travis cron?",
      "created_at" : "2020-05-06T21:59:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624913394",
      "id" : 624913394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDkxMzM5NA==",
      "updated_at" : "2020-05-06T22:02:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624913394",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift I think it's a trade-off. valgrind tests are useful, but running all the functional tests in valgrind for every branch push in every PR is terrible for fast iteration and developer experience. I fully support doing valgrind testing, just not for every functional test in every PR.\r\n\r\nThings like this:\r\n\r\n![image](https://user-images.githubusercontent.com/1063656/81233423-a9010600-8fc4-11ea-92cf-117179f93cfe.png)\r\n\r\n(7 hours since I pushed and travis is still pending) mean that I can't make progress on PRs. That branch is failing because of a valgrind timeout in a test, and because iteration is so slow, that PR hasn't made any progress for two days.",
      "created_at" : "2020-05-06T22:07:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624916450",
      "id" : 624916450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDkxNjQ1MA==",
      "updated_at" : "2020-05-06T22:10:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624916450",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18677 (Multiprocess build support by ryanofsky)\n* #18288 (build: Add MemorySanitizer (MSan) in Travis to detect use of uninitialized memory by practicalswift)\n* #10102 ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-07T00:45:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624964918",
      "id" : 624964918,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDk2NDkxOA==",
      "updated_at" : "2020-05-07T00:45:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624964918",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Travis completed in 1hr3mins. That's an improvement!\r\n\r\nutACK fa082d0a57afedca9122fac4aecd6a3070f06b04",
      "created_at" : "2020-05-07T02:17:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624989390",
      "id" : 624989390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDk4OTM5MA==",
      "updated_at" : "2020-05-07T02:17:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624989390",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Oh, please don't remove Valgrind until we have an MSAN job in Travis. We _really_ need automated detection of uninitialized memory reads enabled in Travis.\r\n>\r\n> @practicalswift I think it's a trade-off. valgrind tests are useful, but running all the functional tests in valgrind for every branch push in every PR is terrible for fast iteration and developer experience. I fully support doing valgrind testing, just not for every functional test in every PR.\r\n\r\nI agree: I think we **should** remove Valgrind testing in Travis as long as MSAN testing is added in the same PR.\r\n\r\nMSAN does not have this slowness problem :)\r\n\r\nAs long as we have some form of automated detection of uninitialized memory reads enabled in Travis (via Valgrind or MSAN) I'm happy :)\r\n\r\nIn summary:\r\n* ACK on removing Valgrind and adding MSAN.\r\n* NACK on removing Valgrind without adding MSAN.\r\n\r\n\r\n",
      "created_at" : "2020-05-07T06:08:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625048923",
      "id" : 625048923,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTA0ODkyMw==",
      "updated_at" : "2020-05-07T11:02:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625048923",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We could also just run Valgrind on master but not all PRs, independently of when/how msan testing is enabled.",
      "created_at" : "2020-05-07T07:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625076095",
      "id" : 625076095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTA3NjA5NQ==",
      "updated_at" : "2020-05-07T07:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625076095",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We could also just run Valgrind on master but not all PRs, independently of when/how msan testing is enabled.\r\n\r\nYes, that is a very good point.\r\n\r\nAs long as we continue guarding `master` on `bitcoin/bitcoin` from uninitialized memory reads by running the unit tests, functional tests and fuzz tests using Valgrind _or_ MSAN I'm happy :) ",
      "created_at" : "2020-05-07T08:11:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625101554",
      "id" : 625101554,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTEwMTU1NA==",
      "updated_at" : "2020-05-07T11:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625101554",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think it would make sense to have a valgrind run with just the unit tests, and perhaps a basic functional test, as long as that could be done in a reasonable time.\r\n\r\nI ike this idea. At least the initialization/shutdown sequence will be run at least once in valgrind in that case, which seems to be an effective use of CI resources.\r\n\r\n(but removing it entirely in the mean time is fine with me)",
      "created_at" : "2020-05-07T09:15:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625133216",
      "id" : 625133216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTEzMzIxNg==",
      "updated_at" : "2020-05-07T09:43:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625133216",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I now noticed that this PR removes also the valgrind fuzz job too, is that intentional? Is running the fuzzing targets against our seed corpus under `valgrind` *that* slow? :(\r\n\r\nFWIW: pulling in 7e14297b28bf77ad200075480df845365fe3414c from #18288 to this PR would allow us to get both a.) good CI speed _and_ b.) no reduction in uninitialized memory testing coverage. What are the best arguments for not doing that? :)",
      "created_at" : "2020-05-07T11:11:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625189502",
      "id" : 625189502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTE4OTUwMg==",
      "updated_at" : "2020-05-07T11:12:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625189502",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I am going to merge this to unbreak travis. This has two ACKs and is needed as a first step for anything that is done later. If someone has ideas or implementations of how this can be improved in the future, they are more than welcome to submit pull requests and ask me for review. When those improvements are ready for merge, I am happy to take them.\r\n\r\nJust to respond to some points:\r\n\r\n* We could run it on master\r\n\r\nIf this means run it on master in travis, then no, this is impossible as explained in the OP. The build might happen to pass right now because I reset the failing tests and the cache happens to be intact, but a fresh build without cache takes more than 3 hours. Builds that take more than 3 hours are impossible to run on travis.\r\n\r\nIf this means to run it on master somewhere else. Then: Hell yes! The ci system has been designed to be as flexible as possible. You can run it on your raspberry pi at home, on a virtual machine at home, or even inside of docker if you know how to (hint: grep for the env var that has `DANGER` in it), you can also run it on any cloud ci service that supports more builds longer than 3 hours. See for example the cirrus ci config in commit 2a9e983a8dc29b0a3839d1e2a9d675944827bc67 (just an example, anything is possible)\r\n\r\n* We could run just the unit tests or \"basic functional tests\"\r\n\r\nI am not aware of any memory bug that was caught by just the unit test valgrind run that was not caught by any other build configuration on travis, so I think this is useless. But as I said, improvements are welcome, and if people think this is worthwhile to peruse, a follow-up improvement should be submitted.\r\n\r\nI am not sure how to classify \"basic\" functional tests and this task sounds like bikeshedding to me, where if too little tests are classified as \"basic\", we will have an equivalent result of this pull request, or where too much tests are classified as \"basic\", we will have an equivalent result of before this pull request.\r\n\r\n* We could use MSAN instead\r\n\r\nSure, Concept ACK. Though, the pull is currently blocked on build system changes, which I am not capable to review.",
      "created_at" : "2020-05-07T11:56:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625209628",
      "id" : 625209628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18899",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTIwOTYyOA==",
      "updated_at" : "2020-05-07T11:56:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625209628",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
