[
   {
      "author_association" : "MEMBER",
      "body" : "My assumption is that those TODOs would be taken care of as part of #18807. Is that correct @amitiuttarwar ?",
      "created_at" : "2020-05-06T00:42:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-624381434",
      "id" : 624381434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDM4MTQzNA==",
      "updated_at" : "2020-05-06T00:42:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624381434",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fanquake sorry for the confusion ð\r\n@gzhao408 offered to implement these follow ups, so I asked her to open a PR so I & others could review. I was thinking (now that this PR is open), I'd update #18807 to let reviewers know, & focus that PR on updates to release notes and tests. \r\ndoes that seem reasonable? ",
      "created_at" : "2020-05-06T02:02:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-624404573",
      "id" : 624404573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDQwNDU3Mw==",
      "updated_at" : "2020-05-06T02:02:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624404573",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> does that seem reasonable?\r\n\r\n@amitiuttarwar Yea of course. Just wanted to clarify that you weren't both working on the same changes in parallel.",
      "created_at" : "2020-05-06T02:06:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-624405490",
      "id" : 624405490,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDQwNTQ5MA==",
      "updated_at" : "2020-05-06T02:06:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624405490",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fanquake thanks!\r\n\r\nConcept ACK :) will review soon ",
      "created_at" : "2020-05-06T02:11:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-624406521",
      "id" : 624406521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDQwNjUyMQ==",
      "updated_at" : "2020-05-06T02:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624406521",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r420908838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420908838"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        if (m_mempool.exists(txid)) {\r\n```\r\n\r\nstyle-nit: (feel free to ignore)\r\n\r\nWhen an `if` has an else branch, I generally recommend not using inversion in the condition, just to avoid double negation, which can make code harder to read. Obviously not an issue here, so feel free to ignore.\r\n\r\nHowever, while this fights the symptom (unbroadcast txid exists), it doesn't prevent it from happening. Also, `RelayTransaction` is hopefully already a noop if the txid does not exist.\r\n\r\nWhat do you think about adding this check to the mempool member function that adds the unbroadcast transactions to the set? This way, the error will be caught as early as possible.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-06T16:02:54Z",
      "diff_hunk" : "@@ -815,7 +815,12 @@ void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n     for (const uint256& txid : unbroadcast_txids) {\n-        RelayTransaction(txid, *connman);\n+        // Sanity check: all unbroadcast txns should exist in the mempool\n+        if (!m_mempool.exists(txid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r420908838",
      "id" : 420908838,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkwODgzOA==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 819,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406762220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420908838",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r420910109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420910109"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: instead of a \"blind cast\" I slightly prefer the one that enables compile time checks and fails compilation in case it should be impossible to cast without loss of precision.\r\n\r\n```suggestion\r\n    ret.pushKV(\"unbroadcastsize\", int64_t{pool.GetUnbroadcastTxs().size())};\r\n```",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-06T16:04:46Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r420910109",
      "id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxMDEwOQ==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 406762220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420910109",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r421008446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421008446"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point about inversion on an if+else, I'll rearrange to make it more clear.\r\n\r\nYeah, I think it'd make sense to add this check to `AddUnbroadcastTx` ([here](https://github.com/bitcoin/bitcoin/blob/7bcc42b4035b878719d13201286e322989b415c5/src/txmempool.h#L705)).\r\nApart from making sure we only add txids that exist in the mempool to unbroadcast, I think this sanity check helps if a tx was removed from the mempool but somehow stayed in the unbroadcast set - which shouldn't happen, but just in case?",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-06T18:37:28Z",
      "diff_hunk" : "@@ -815,7 +815,12 @@ void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n     for (const uint256& txid : unbroadcast_txids) {\n-        RelayTransaction(txid, *connman);\n+        // Sanity check: all unbroadcast txns should exist in the mempool\n+        if (!m_mempool.exists(txid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r421008446",
      "id" : 421008446,
      "in_reply_to_id" : 420908838,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAwODQ0Ng==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 819,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406885157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421008446",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r421014509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421014509"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Jup, better to do the check in two places than in one. This needs a mempool lookup, but the cost doesn't seem too much, as this is only done every 10 minutes or when a new transaction is added to the mempool anyway.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-06T18:47:28Z",
      "diff_hunk" : "@@ -815,7 +815,12 @@ void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n     std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n     for (const uint256& txid : unbroadcast_txids) {\n-        RelayTransaction(txid, *connman);\n+        // Sanity check: all unbroadcast txns should exist in the mempool\n+        if (!m_mempool.exists(txid)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r421014509",
      "id" : 421014509,
      "in_reply_to_id" : 420908838,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAxNDUwOQ==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 819,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 406892494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421014509",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Code looks good, will do ACK when @MarcoFalke comments are addressed.",
      "created_at" : "2020-05-07T13:21:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-625251641",
      "id" : 625251641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNTI1MTY0MQ==",
      "updated_at" : "2020-05-07T13:21:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625251641",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422529987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422529987"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That makes sense. The only issue is it wouldn't be consistent with all the other casts throughout the file. I'm not sure what's the best practice: let this one be inconsistent, change all of them in this PR, or change all of them in a followup PR? ",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-09T18:31:05Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422529987",
      "id" : 422529987,
      "in_reply_to_id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUyOTk4Nw==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 408673963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422529987",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422531192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422531192"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The guideline is that new code should follow best practices, old code can stay as is.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-09T18:41:54Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422531192",
      "id" : 422531192,
      "in_reply_to_id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUzMTE5Mg==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 408674857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422531192",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422531489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422531489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "it's tough to aim for consistency in bitcoin bc the project values careful review for any changes (thus refactor PRs are generally only considered if there's a feature being built on top) so generally, we try to improve over time as we touch lines of code. \r\n\r\nanother example you'll see is mismatched naming conventions. code that's been touched recently adheres to the best practices, but code that's been around for longer still follows old conventions \r\n\r\n(tldr- improve what you touch over time instead of aiming for consistency) ",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-09T18:44:31Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422531489",
      "id" : 422531489,
      "in_reply_to_id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUzMTQ4OQ==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 408675042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422531489",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422534493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422534493"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Makes sense, thank you!",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-09T19:12:52Z",
      "diff_hunk" : "@@ -1389,6 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n+    ret.pushKV(\"unbroadcastsize\", (int64_t)pool.GetUnbroadcastTxs().size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r422534493",
      "id" : 422534493,
      "in_reply_to_id" : 420910109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUzNDQ5Mw==",
      "original_commit_id" : "7abdadf113a4071bc73eff14cefa8ebaa6ae101d",
      "original_line" : 1394,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 408677031,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422534493",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry for all the force pushes ð. Addressed MarcoFalke's comments and the `mempool_packages.py` error. As mzumsande said, it was due to the `unbroadcast` value changing in between calls (i.e. a transaction completed initial broadcast while the test was running, so a subsequent call with `verbose=True` was inconsistent with before. \r\n\r\nWith `unbroadcast` as one of the mempool entry fields, it's probably not a good idea to compare mempool entries as a whole, ie `assert_equal(mempool0[tx], mempool1[tx]` because `unbroadcast` might be different. Most tests are more specific than this, so they are ok. I fixed `mempool_packages.py` by having the node wait for `len(mempool)` invs, so all `unbroadcast`s should be False.",
      "created_at" : "2020-05-09T22:04:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-626241339",
      "id" : 626241339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNjI0MTMzOQ==",
      "updated_at" : "2020-05-09T22:04:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626241339",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I meant an earlier spot in my comment: The `assert_equal(entry, mempool[x])` in L92 can fail because \r\n`mempool = self.nodes[0].getrawmempool(True)` and \r\n`entry = self.nodes[0].getmempoolentry(x)` \r\ncan have inconsistent unbroadcast flags if we haven't waited before calling `getrawmempool` the first time.",
      "created_at" : "2020-05-13T00:03:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-627663719",
      "id" : 627663719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzY2MzcxOQ==",
      "updated_at" : "2020-05-13T00:03:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627663719",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I meant an earlier spot in my comment: The `assert_equal(entry, mempool[x])` in L92 \r\n\r\n@mzumsande OMG I am so sorry ð¤¦ââï¸ that should have been obvious. Just fixed it (I hope), waiting to see what travis says. \r\n\r\n",
      "created_at" : "2020-05-13T00:40:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-627674733",
      "id" : 627674733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzY3NDczMw==",
      "updated_at" : "2020-05-13T00:41:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627674733",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #12677 (RPC: Add ancestor{count,size,fees} to listunspent output by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-05-13T08:38:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-627838670",
      "id" : 627838670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNzgzODY3MA==",
      "updated_at" : "2020-05-13T08:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627838670",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424416374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424416374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The condition for initial broadcast is not that an inv was sent, but that a getdata was received\r\n\r\nI think you can simply replace this with a `self.sync_mempools()` and remove the newly added p2p connection",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-13T12:59:13Z",
      "diff_hunk" : "@@ -72,6 +74,10 @@ def run_test(self):\n             value = sent_value\n             chain.append(txid)\n \n+        # Wait until mempool transactions have passed initial broadcast (got an inv for each one)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424416374",
      "id" : 424416374,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxNjM3NA==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 77,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : null,
      "pull_request_review_id" : 410896873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424416374",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424419308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424419308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    ret.pushKV(\"unbroadcastsize\", int64_t{pool.GetUnbroadcastTxs().size())};\r\n```\r\n\r\nThis does the same thing, but has additional compile time checks that fail compilation when the conversion comes with a loss of precision.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-13T13:03:30Z",
      "diff_hunk" : "@@ -1389,7 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n-\n+    ret.pushKV(\"unbroadcastsize\", static_cast<int64_t>(pool.GetUnbroadcastTxs().size()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424419308",
      "id" : 424419308,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxOTMwOA==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 1394,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 410900699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424419308",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424697810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424697810"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think you can simply replace this with a self.sync_mempools() and remove the newly added p2p connection\r\n\r\nI've tried this, but it times out: `AssertionError: Mempool sync timed out after 60s`\r\n\r\n> The condition for initial broadcast is not that an inv was sent, but that a getdata was received\r\n\r\nOh this is my misunderstanding. I can try to have a `wait_until` that counts the `msg_getdata`s received by `nodes[0]`? Open to suggestions",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-13T20:02:12Z",
      "diff_hunk" : "@@ -72,6 +74,10 @@ def run_test(self):\n             value = sent_value\n             chain.append(txid)\n \n+        # Wait until mempool transactions have passed initial broadcast (got an inv for each one)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424697810",
      "id" : 424697810,
      "in_reply_to_id" : 424416374,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5NzgxMA==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 77,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : null,
      "pull_request_review_id" : 411256894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424697810",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424700892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424700892"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I missed that the second node has a stricter `limitancestorcount` set.\r\n\r\nIn that case your suggestion to wait for the getdata makes most sense, I guess.\r\n\r\nSo \r\n\r\n* register callback in mininode to send getdata when inv arrives\r\n* wait for invs\r\n* sync_with_ping (to flush all buffers)\r\n\r\nshould work",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-13T20:07:59Z",
      "diff_hunk" : "@@ -72,6 +74,10 @@ def run_test(self):\n             value = sent_value\n             chain.append(txid)\n \n+        # Wait until mempool transactions have passed initial broadcast (got an inv for each one)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424700892",
      "id" : 424700892,
      "in_reply_to_id" : 424416374,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwMDg5Mg==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 77,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : null,
      "pull_request_review_id" : 411260915,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424700892",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424701189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424701189"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Really sorry about this - I got a compilation error: \r\n```\r\nrpc/blockchain.cpp:1394:43: error: non-constant-expression cannot be narrowed from type 'std::__1::set<uint256, std::__1::less<uint256>,\r\n      std::__1::allocator<uint256> >::size_type' (aka 'unsigned long') to 'int64_t' (aka 'long long') in initializer list [-Wc++11-narrowing]\r\n    ret.pushKV(\"unbroadcastsize\", int64_t{pool.GetUnbroadcastTxs().size()});\r\n                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nrpc/blockchain.cpp:1394:43: note: insert an explicit cast to silence this issue\r\n    ret.pushKV(\"unbroadcastsize\", int64_t{pool.GetUnbroadcastTxs().size()});\r\n                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                                          static_cast<int64_t>(          )\r\n```\r\nSo I followed the suggestion to fix it. I'm not sure why it didn't work for me.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-13T20:08:36Z",
      "diff_hunk" : "@@ -1389,7 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n-\n+    ret.pushKV(\"unbroadcastsize\", static_cast<int64_t>(pool.GetUnbroadcastTxs().size()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424701189",
      "id" : 424701189,
      "in_reply_to_id" : 424419308,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwMTE4OQ==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 1394,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 411261320,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424701189",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424702151"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424702151"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you, this is super helpful! ð ",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-13T20:10:22Z",
      "diff_hunk" : "@@ -72,6 +74,10 @@ def run_test(self):\n             value = sent_value\n             chain.append(txid)\n \n+        # Wait until mempool transactions have passed initial broadcast (got an inv for each one)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424702151",
      "id" : 424702151,
      "in_reply_to_id" : 424416374,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwMjE1MQ==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 77,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : null,
      "pull_request_review_id" : 411262553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424702151",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424708021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424708021"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I guess you can use this signature `bool pushKV(const std::string&, uint64_t)`. It should already be selected by default, so I don't see why we want to cast in the first place.\r\n\r\nI think you can either:\r\n\r\n* Remove the cast\r\n* Select the signature for `uint64_t`",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-13T20:21:19Z",
      "diff_hunk" : "@@ -1389,7 +1391,7 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"maxmempool\", (int64_t) maxmempool);\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n-\n+    ret.pushKV(\"unbroadcastsize\", static_cast<int64_t>(pool.GetUnbroadcastTxs().size()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r424708021",
      "id" : 424708021,
      "in_reply_to_id" : 424419308,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwODAyMQ==",
      "original_commit_id" : "4ebe10fb9c7e4fdb5f88f6f21f7091c1d0da39e1",
      "original_line" : 1394,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 411270051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424708021",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425492787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425492787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You still need to provide the callback. The default one does not reply with a getdata. See\r\n\r\n```py\r\nclass P2PTxInvStore(P2PInterface):\r\n    \"\"\"A P2PInterface which stores a count of how many times each txid has been announced.\"\"\"\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.tx_invs_received = defaultdict(int)\r\n\r\n    def on_inv(self, message):\r\n        # Store how many times invs have been received for each tx.\r\n        for i in message.inv:\r\n            if i.type == MSG_TX:\r\n                # save txid\r\n                self.tx_invs_received[i.hash] += 1\r\n",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-14T23:56:55Z",
      "diff_hunk" : "@@ -58,6 +59,7 @@ def chain_transaction(self, node, parent_txid, vout, value, fee, num_outputs):\n \n     def run_test(self):\n         # Mine some blocks and have them mature.\n+        self.nodes[0].add_p2p_connection(P2PTxInvStore()) # keep track of invs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425492787",
      "id" : 425492787,
      "line" : 62,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5Mjc4Nw==",
      "original_commit_id" : "c8ac4373ee57e567022ab64a840e55a37b5ba0f4",
      "original_line" : 62,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 12,
      "pull_request_review_id" : 412261379,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425492787",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425492838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425492838"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can run `git grep -W 'def on_inv'` to find examples on how to do that.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-14T23:57:09Z",
      "diff_hunk" : "@@ -58,6 +59,7 @@ def chain_transaction(self, node, parent_txid, vout, value, fee, num_outputs):\n \n     def run_test(self):\n         # Mine some blocks and have them mature.\n+        self.nodes[0].add_p2p_connection(P2PTxInvStore()) # keep track of invs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425492838",
      "id" : 425492838,
      "in_reply_to_id" : 425492787,
      "line" : 62,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5MjgzOA==",
      "original_commit_id" : "c8ac4373ee57e567022ab64a840e55a37b5ba0f4",
      "original_line" : 62,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 12,
      "pull_request_review_id" : 412261432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425492838",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425503768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425503768"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm. Looks like the tests passed on travis. I am still unsure why.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-15T00:36:32Z",
      "diff_hunk" : "@@ -58,6 +59,7 @@ def chain_transaction(self, node, parent_txid, vout, value, fee, num_outputs):\n \n     def run_test(self):\n         # Mine some blocks and have them mature.\n+        self.nodes[0].add_p2p_connection(P2PTxInvStore()) # keep track of invs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425503768",
      "id" : 425503768,
      "in_reply_to_id" : 425492787,
      "line" : 62,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwMzc2OA==",
      "original_commit_id" : "c8ac4373ee57e567022ab64a840e55a37b5ba0f4",
      "original_line" : 62,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 12,
      "pull_request_review_id" : 412274144,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425503768",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425512778"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425512778"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Gah, I made a super dumb assumption that it would automatically call `P2PInterface`'s `on_inv` (which responds with the `getdata`) since it inherits from it. I'm working on that right now. Not sure why travis passed haha\r\n",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-15T01:12:09Z",
      "diff_hunk" : "@@ -58,6 +59,7 @@ def chain_transaction(self, node, parent_txid, vout, value, fee, num_outputs):\n \n     def run_test(self):\n         # Mine some blocks and have them mature.\n+        self.nodes[0].add_p2p_connection(P2PTxInvStore()) # keep track of invs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425512778",
      "id" : 425512778,
      "in_reply_to_id" : 425492787,
      "line" : 62,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUxMjc3OA==",
      "original_commit_id" : "c8ac4373ee57e567022ab64a840e55a37b5ba0f4",
      "original_line" : 62,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 12,
      "pull_request_review_id" : 412284464,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425512778",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425762457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425762457"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I reset travis, so that it properly shows failure. :sweat_smile: ",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-15T12:19:24Z",
      "diff_hunk" : "@@ -58,6 +59,7 @@ def chain_transaction(self, node, parent_txid, vout, value, fee, num_outputs):\n \n     def run_test(self):\n         # Mine some blocks and have them mature.\n+        self.nodes[0].add_p2p_connection(P2PTxInvStore()) # keep track of invs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r425762457",
      "id" : 425762457,
      "in_reply_to_id" : 425492787,
      "line" : 62,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc2MjQ1Nw==",
      "original_commit_id" : "c8ac4373ee57e567022ab64a840e55a37b5ba0f4",
      "original_line" : 62,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 12,
      "pull_request_review_id" : 412596444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425762457",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426091135"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426091135"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I spoke with @amitiuttarwar and decided to just have `P2PTxInvStore` call `super().on_inv` since she's planning on doing it anyway (in [#18807](https://github.com/bitcoin/bitcoin/pull/18807/files#diff-a77567bbc57dc1bbc033560e5cdd3b7dR647)). We've agreed to resolve any conflicts that happen depending on which gets merged first.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-15T23:48:40Z",
      "diff_hunk" : "@@ -58,6 +59,7 @@ def chain_transaction(self, node, parent_txid, vout, value, fee, num_outputs):\n \n     def run_test(self):\n         # Mine some blocks and have them mature.\n+        self.nodes[0].add_p2p_connection(P2PTxInvStore()) # keep track of invs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426091135",
      "id" : 426091135,
      "in_reply_to_id" : 425492787,
      "line" : 62,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA5MTEzNQ==",
      "original_commit_id" : "c8ac4373ee57e567022ab64a840e55a37b5ba0f4",
      "original_line" : 62,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : 12,
      "pull_request_review_id" : 413021608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426091135",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426168298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426168298"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        self.wait_until(lambda: set(self.get_invs()) == set(txns))\r\n```\r\n\r\n* self.wait_until because we need the scaling factor\r\n* self.get_inv because we need to take the lock\r\n* set because we want to check the txids",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-16T16:26:31Z",
      "diff_hunk" : "@@ -647,3 +648,11 @@ def on_inv(self, message):\n     def get_invs(self):\n         with mininode_lock:\n             return list(self.tx_invs_received.keys())\n+\n+    def wait_for_broadcast(self, num_txns):\n+        # Waits for num_txns transactions to complete initial broadcast.\n+        # Wait until num_txns invs have been received (and getdatas sent).\n+        wait_until(lambda: len(self.tx_invs_received.keys()) == num_txns)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426168298",
      "id" : 426168298,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2ODI5OA==",
      "original_commit_id" : "bc2d7a9f25fb27e844b208ec5bcc675c0d1ad10c",
      "original_line" : 655,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 413089599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426168298",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426291819"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426291819"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This makes sense. \r\n\r\nIt seems like a `P2PInterface`s don't have a `self.wait_until` function. I get a `object has no attribute 'wait_until'` error. The classes in `mininode.py` use `wait_until` with the `mininode_lock`.  I'm not familiar with what you mean by scaling factor, but is there something else I could do?",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-17T18:43:32Z",
      "diff_hunk" : "@@ -647,3 +648,11 @@ def on_inv(self, message):\n     def get_invs(self):\n         with mininode_lock:\n             return list(self.tx_invs_received.keys())\n+\n+    def wait_for_broadcast(self, num_txns):\n+        # Waits for num_txns transactions to complete initial broadcast.\n+        # Wait until num_txns invs have been received (and getdatas sent).\n+        wait_until(lambda: len(self.tx_invs_received.keys()) == num_txns)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426291819",
      "id" : 426291819,
      "in_reply_to_id" : 426168298,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5MTgxOQ==",
      "original_commit_id" : "bc2d7a9f25fb27e844b208ec5bcc675c0d1ad10c",
      "original_line" : 655,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 413188078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426291819",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426296267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426296267"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Are you sure you are on current master? I am seeing this function locally:\r\n\r\n```\r\n$ git grep 'def wait_until'\r\ntest/functional/test_framework/mininode.py:    def wait_until(self, test_function, timeout):\r\n",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-17T19:33:43Z",
      "diff_hunk" : "@@ -647,3 +648,11 @@ def on_inv(self, message):\n     def get_invs(self):\n         with mininode_lock:\n             return list(self.tx_invs_received.keys())\n+\n+    def wait_for_broadcast(self, num_txns):\n+        # Waits for num_txns transactions to complete initial broadcast.\n+        # Wait until num_txns invs have been received (and getdatas sent).\n+        wait_until(lambda: len(self.tx_invs_received.keys()) == num_txns)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426296267",
      "id" : 426296267,
      "in_reply_to_id" : 426168298,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI5NjI2Nw==",
      "original_commit_id" : "bc2d7a9f25fb27e844b208ec5bcc675c0d1ad10c",
      "original_line" : 655,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 413191804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426296267",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426973619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426973619"
         }
      },
      "author_association" : "MEMBER",
      "body" : "when compiling, I'm seeing `warning: 'const' type qualifier on return type has no effect [-Wignored-qualifiers]`\r\n\r\njust took a little dive down the c++ rabbit hole.. I think declaring the return type as a const is meaningless if you are returning a built-in type by value. so in this example, the `const` wouldn't be enforcing anything on the caller. ",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T01:09:22Z",
      "diff_hunk" : "@@ -716,6 +719,12 @@ class CTxMemPool\n         return m_unbroadcast_txids;\n     }\n \n+    /** Returns if a txid is in the unbroadcast set */\n+    const bool InUnbroadcast(const uint256& txid) const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426973619",
      "id" : 426973619,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3MzYxOQ==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 723,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 414034692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426973619",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426977043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426977043"
         }
      },
      "author_association" : "MEMBER",
      "body" : "accidental extra whitespace? ",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T01:22:30Z",
      "diff_hunk" : "@@ -140,6 +146,7 @@ def run_test(self):\n                     assert_equal(ainfo['depends'], [])\n \n \n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426977043",
      "id" : 426977043,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3NzA0Mw==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 149,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : null,
      "pull_request_review_id" : 414034692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426977043",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426978409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426978409"
         }
      },
      "author_association" : "MEMBER",
      "body" : "consider updating part in parentheses to: `(initial broadcast not yet confirmed)`\r\n\r\nits a bit more accurate, but hard for me to evaluate clarity for end users ð \r\n",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T01:27:57Z",
      "diff_hunk" : "@@ -399,6 +399,7 @@ static std::vector<RPCResult> MempoolEntryDescription() { return {\n     RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n         {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n     RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction could be replaced due to BIP125 (replace-by-fee)\"},\n+    RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (not yet past initial broadcast)\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426978409",
      "id" : 426978409,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3ODQwOQ==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 402,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 414034692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426978409",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426979473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426979473"
         }
      },
      "author_association" : "MEMBER",
      "body" : "same as above, consider updating description. \r\n\r\nalso `unbroadcastcount` might make more sense than `unbroadcastsize`?",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T01:32:32Z",
      "diff_hunk" : "@@ -1408,6 +1410,7 @@ static UniValue getmempoolinfo(const JSONRPCRequest& request)\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n+                        {RPCResult::Type::NUM, \"unbroadcastsize\", \"Current number of transactions that haven't passed initial broadcast yet\"}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426979473",
      "id" : 426979473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3OTQ3Mw==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 1413,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 414034692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426979473",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426985995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426985995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "something to consider- to me, the naming `IsUnbroadcast` feels more natural. A transaction is in the mempool, but it might also be in the unbroadcast state. \r\n\r\nbut `InUnbroadcast` is still accurate in terms of implementation, since they are stored in the set of `m_unbroadcast_txids`.\r\n\r\nso might just be a preference thing. please feel free not to update :) ",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T01:56:58Z",
      "diff_hunk" : "@@ -716,6 +719,12 @@ class CTxMemPool\n         return m_unbroadcast_txids;\n     }\n \n+    /** Returns if a txid is in the unbroadcast set */\n+    const bool InUnbroadcast(const uint256& txid) const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r426985995",
      "id" : 426985995,
      "in_reply_to_id" : 426973619,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk4NTk5NQ==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 723,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 414034692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426985995",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427031724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427031724"
         }
      },
      "author_association" : "MEMBER",
      "body" : "hm, is there a reason this is a [doxygen comment](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-doxygen-compatible-comments)? I'm not sure what would happen, but I suspect you want normal `//` notation here\r\n",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T05:03:13Z",
      "diff_hunk" : "@@ -704,7 +704,10 @@ class CTxMemPool\n     /** Adds a transaction to the unbroadcast set */\n     void AddUnbroadcastTx(const uint256& txid) {\n         LOCK(cs);\n-        m_unbroadcast_txids.insert(txid);\n+        /** Sanity Check: the transaction should also be in the mempool */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427031724",
      "id" : 427031724,
      "line" : 707,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzMTcyNA==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 707,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : 5,
      "pull_request_review_id" : 414034692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427031724",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427039165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427039165"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: pull out the description of the function from the implementation & description for readability \r\n\r\n```suggestion\r\n    # Waits for the txns (txids) to complete initial broadcast.\r\n    # The mempool should mark unbroadcast=False for these transactions.\r\n    def wait_for_broadcast(self, txns):\r\n        # Wait until invs have been received (and getdatas sent) for each txid.\r\n        self.wait_until(lambda: set(self.get_invs()) == set([int(tx, 16) for tx in txns]), 60)\r\n        # Flush messages and wait for the getdatas to be processed\r\n        self.sync_with_ping()\r\n```",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T05:31:13Z",
      "diff_hunk" : "@@ -654,3 +655,11 @@ def on_inv(self, message):\n     def get_invs(self):\n         with mininode_lock:\n             return list(self.tx_invs_received.keys())\n+\n+    def wait_for_broadcast(self, txns):\n+        # Waits for the txns (txids) to complete initial broadcast.\n+        # Wait until invs have been received (and getdatas sent) for each txid.\n+        self.wait_until(lambda: set(self.get_invs()) == set([int(tx, 16) for tx in txns]), 60)\n+        # Flush messages and wait for the getdatas to be processed\n+        # The mempool should mark unbroadcast=False for these transactions.\n+        self.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427039165",
      "id" : 427039165,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzOTE2NQ==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 666,
      "original_position" : 19,
      "original_start_line" : 659,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 414034692,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427039165",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "also I realized, since this updates some RPC endpoints, should there be release notes added? @MarcoFalke ",
      "created_at" : "2020-05-19T18:23:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-630997343",
      "id" : 630997343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDk5NzM0Mw==",
      "updated_at" : "2020-05-19T18:23:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630997343",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sure, but I assumed this would be taken care of in the doc pr #18807 ",
      "created_at" : "2020-05-19T18:26:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-630998986",
      "id" : 630998986,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDk5ODk4Ng==",
      "updated_at" : "2020-05-19T18:26:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630998986",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427530299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427530299"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ð I'll delete this",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T18:58:09Z",
      "diff_hunk" : "@@ -140,6 +146,7 @@ def run_test(self):\n                     assert_equal(ainfo['depends'], [])\n \n \n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427530299",
      "id" : 427530299,
      "in_reply_to_id" : 426977043,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUzMDI5OQ==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 149,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "test/functional/mempool_packages.py",
      "position" : null,
      "pull_request_review_id" : 414736727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427530299",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427544333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427544333"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        self.wait_until(lambda: set(self.get_invs()) == set([int(tx, 16) for tx in txns]), timeout)\r\n```\r\n\r\nI think it makes sense to define a default value of `timeout=60` for the wait_for_broadcast member function. This way, callers can decide to overwrite it if needed.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T19:22:48Z",
      "diff_hunk" : "@@ -654,3 +655,11 @@ def on_inv(self, message):\n     def get_invs(self):\n         with mininode_lock:\n             return list(self.tx_invs_received.keys())\n+\n+    def wait_for_broadcast(self, txns):\n+        # Waits for the txns (txids) to complete initial broadcast.\n+        # Wait until invs have been received (and getdatas sent) for each txid.\n+        self.wait_until(lambda: set(self.get_invs()) == set([int(tx, 16) for tx in txns]), 60)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427544333",
      "id" : 427544333,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU0NDMzMw==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 662,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 414753834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427544333",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427577645"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427577645"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok after over-thinking this for a few hours ð I'm going to change it to `IsUnbroadcastTx` which looks pretty similar to the others and hopefully feels natural.\r\nI definitely think `entry.IsUnbroadcast()` would be ideal if it were a mempool entry method (I didn't do it that way because `m_unbroadcast_txids` belongs to the mempool). I just don't want it to sound like I'm saying the mempool is unbroadcast.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T20:24:25Z",
      "diff_hunk" : "@@ -716,6 +719,12 @@ class CTxMemPool\n         return m_unbroadcast_txids;\n     }\n \n+    /** Returns if a txid is in the unbroadcast set */\n+    const bool InUnbroadcast(const uint256& txid) const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427577645",
      "id" : 427577645,
      "in_reply_to_id" : 426973619,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3NzY0NQ==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 723,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 414795254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427577645",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427609851"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427609851"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point, gonna follow [this PEP-8 guideline](https://www.python.org/dev/peps/pep-0008/#documentation-strings)",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-19T21:26:23Z",
      "diff_hunk" : "@@ -654,3 +655,11 @@ def on_inv(self, message):\n     def get_invs(self):\n         with mininode_lock:\n             return list(self.tx_invs_received.keys())\n+\n+    def wait_for_broadcast(self, txns):\n+        # Waits for the txns (txids) to complete initial broadcast.\n+        # Wait until invs have been received (and getdatas sent) for each txid.\n+        self.wait_until(lambda: set(self.get_invs()) == set([int(tx, 16) for tx in txns]), 60)\n+        # Flush messages and wait for the getdatas to be processed\n+        # The mempool should mark unbroadcast=False for these transactions.\n+        self.sync_with_ping()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r427609851",
      "id" : 427609851,
      "in_reply_to_id" : 427039165,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwOTg1MQ==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 666,
      "original_position" : 19,
      "original_start_line" : 659,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 414835487,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-05-19T23:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427609851",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Review ACK 651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-20T00:07:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-631154732",
      "id" : 631154732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTE1NDczMg==",
      "updated_at" : "2020-05-20T00:07:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631154732",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 651f1d816f054cb9c637f8a99c9360bba381ef58 ð \r\n\r\ndouble checked functional tests for possible races around returning `unbroadcast` from the various RPCs. looks like `mempool_packages` is the only one comparing all the fields of the returned object, so your changes have them covered.",
      "created_at" : "2020-05-21T19:27:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#issuecomment-632298905",
      "id" : 632298905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18895",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMjI5ODkwNQ==",
      "updated_at" : "2020-05-21T19:27:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632298905",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429094005"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429094005"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I suspect you want normal `//` notation here\r\n\r\nAgree, perhaps can be touched up in #18807",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-22T07:45:54Z",
      "diff_hunk" : "@@ -704,7 +704,10 @@ class CTxMemPool\n     /** Adds a transaction to the unbroadcast set */\n     void AddUnbroadcastTx(const uint256& txid) {\n         LOCK(cs);\n-        m_unbroadcast_txids.insert(txid);\n+        /** Sanity Check: the transaction should also be in the mempool */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429094005",
      "id" : 429094005,
      "in_reply_to_id" : 427031724,
      "line" : 707,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NDAwNQ==",
      "original_commit_id" : "827fc8580741957ac296d7fef4e02596442af741",
      "original_line" : 707,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : 5,
      "pull_request_review_id" : 416712477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-22T07:48:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429094005",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429094526"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429094526"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This can be doxygen like the neighbouring functions. Perhaps touch up in #18807.",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-22T07:47:04Z",
      "diff_hunk" : "@@ -716,6 +719,12 @@ class CTxMemPool\n         return m_unbroadcast_txids;\n     }\n \n+    // Returns if a txid is in the unbroadcast set",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429094526",
      "id" : 429094526,
      "line" : 722,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NDUyNg==",
      "original_commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "original_line" : 722,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : 16,
      "pull_request_review_id" : 416712477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-22T07:48:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429094526",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429535717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429535717"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggested rephrasing: s/confirmed/acknowledged/.  I think \"confirmed\" might confuse the user into thinking we're referring to the transaction being included in a block.  Perhaps \"acknowledged\" would be less confusing, or if a few more words are ok, \"(initial broadcast not yet acknowledged by any peers)\".  Maybe @amitiuttarwar can squeeze this in #18807 (if not, I can open a separate PR).",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-23T10:52:07Z",
      "diff_hunk" : "@@ -399,6 +399,7 @@ static std::vector<RPCResult> MempoolEntryDescription() { return {\n     RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n         {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n     RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction could be replaced due to BIP125 (replace-by-fee)\"},\n+    RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet confirmed)\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429535717",
      "id" : 429535717,
      "line" : 402,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzNTcxNw==",
      "original_commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "original_line" : 402,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 417269676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-23T10:52:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429535717",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429565592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429565592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "great suggestion. adding to #18807 ",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-23T17:56:43Z",
      "diff_hunk" : "@@ -399,6 +399,7 @@ static std::vector<RPCResult> MempoolEntryDescription() { return {\n     RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n         {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n     RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction could be replaced due to BIP125 (replace-by-fee)\"},\n+    RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet confirmed)\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429565592",
      "id" : 429565592,
      "in_reply_to_id" : 429535717,
      "line" : 402,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTU5Mg==",
      "original_commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "original_line" : 402,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 417296550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-23T17:56:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429565592",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429574471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429574471"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-23T20:07:04Z",
      "diff_hunk" : "@@ -716,6 +719,12 @@ class CTxMemPool\n         return m_unbroadcast_txids;\n     }\n \n+    // Returns if a txid is in the unbroadcast set",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429574471",
      "id" : 429574471,
      "in_reply_to_id" : 429094526,
      "line" : 722,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3NDQ3MQ==",
      "original_commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "original_line" : 722,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : 16,
      "pull_request_review_id" : 417305239,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-23T20:07:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429574471",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429574475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429574475"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "created_at" : "2020-05-23T20:07:09Z",
      "diff_hunk" : "@@ -399,6 +399,7 @@ static std::vector<RPCResult> MempoolEntryDescription() { return {\n     RPCResult{RPCResult::Type::ARR, \"spentby\", \"unconfirmed transactions spending outputs from this transaction\",\n         {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"child transaction id\"}}},\n     RPCResult{RPCResult::Type::BOOL, \"bip125-replaceable\", \"Whether this transaction could be replaced due to BIP125 (replace-by-fee)\"},\n+    RPCResult{RPCResult::Type::BOOL, \"unbroadcast\", \"Whether this transaction is currently unbroadcast (initial broadcast not yet confirmed)\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18895#discussion_r429574475",
      "id" : 429574475,
      "in_reply_to_id" : 429535717,
      "line" : 402,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3NDQ3NQ==",
      "original_commit_id" : "651f1d816f054cb9c637f8a99c9360bba381ef58",
      "original_line" : 402,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 417305243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18895",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-23T20:07:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429574475",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   }
]
