{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This PR intends to improve transaction-origin privacy.\r\n\r\nIn general, we should try to not leak information about what transactions we have (recently) learned about before deciding to announce them to our peers. There is a controlled transaction dissemination process that reveals our transactions to peers that has various safeguards for privacy (it's rate-limited, delayed & batched, deterministically sorted, ...), and ideally there is no way to test which transactions we have before that controlled process reveals them. The handling of the `mempool` BIP35 message has protections in this regard as well, as it would be an obvious way to bypass these protections (handled asynchronously after a delay, also deterministically sorted).\r\n\r\nHowever, currently, if we receive a GETDATA for a transaction that we have not yet announced to the requester, we will still respond to it if it was announced to *some* other peer already (because it needs to be in `mapRelay`, which only happens on the first announcement). This is a slight privacy leak.\r\n\r\nThankfully, this seems easy to solve: `setInventontoryTxToSend` keeps track of the txids we have yet to announce to a peer - which almost(*) exactly corresponds to the transactions we know of that we haven't revealed to that peer. By checking whether a txid is in that set before responding to a GETDATA, we can filter these out.\r\n\r\n(*) Locally resubmitted or rebroadcasted transactions may end up in setInventoryTxToSend while the peer already knows we have them, which could result in us incorrectly claiming we don't have such transactions if coincidentally requested right after we schedule reannouncing them, but before they're actually INVed. This is made even harder by the fact that filterInventoryKnown will generally keep known reannouncements out of setInventoryTxToSend unless it overflows (which needs 50000 INVs in either direction before it happens).\r\n\r\nThe condition for responding now becomes:\r\n\r\n```\r\n  (not in setInventoryTxToSend) AND\r\n  (\r\n    (in relay map) OR\r\n    (\r\n      (in mempool) AND\r\n      (old enough that it could have expired from relay map) AND\r\n      (older than our last getmempool response)\r\n    )\r\n  )\r\n```",
   "closed_at" : "2020-05-19T07:18:43Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 24,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861/comments",
   "created_at" : "2020-05-04T07:20:31Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861",
   "id" : 611656010,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      },
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 249581124,
         "name" : "Privacy",
         "node_id" : "MDU6TGFiZWwyNDk1ODExMjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Privacy"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDEyNzc4ODEy",
   "number" : 18861,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18861.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18861",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18861.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18861"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Do not answer GETDATA for to-be-announced tx",
   "updated_at" : "2020-05-19T07:18:43Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18861",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
      "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sipa/followers",
      "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sipa",
      "id" : 548488,
      "login" : "sipa",
      "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
      "organizations_url" : "https://api.github.com/users/sipa/orgs",
      "received_events_url" : "https://api.github.com/users/sipa/received_events",
      "repos_url" : "https://api.github.com/users/sipa/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sipa"
   }
}
