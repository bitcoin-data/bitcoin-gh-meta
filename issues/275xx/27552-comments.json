[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1409007192) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-05-02T12:13:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531365179",
      "id" : 1531365179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bRsc7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531365179/reactions"
      },
      "updated_at" : "2023-05-02T12:38:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531365179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can you add some context to explain how this interacts with fuzzing engines? Will this make it harder for engines to start from an empty input set? Often, to find a sufficiently long input to pass basic deserialization, fuzz engines will have to be guided, for example `-use_value_profile=1` for libfuzzer, and discarding the inputs on the way would mean they will never succeed passing basic deserialization?\r\n\r\n\r\nMoreover, it could help to state a goal. Is it to keep the qa-assets repo small?\r\n",
      "created_at" : "2023-05-02T12:26:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531391032",
      "id" : 1531391032,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bRyw4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531391032/reactions"
      },
      "updated_at" : "2023-05-02T12:26:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531391032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182486207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182486207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe worth noting that this will only work for libFuzzer? (or i guess any engine that uses the libFuzzer harness and respects the -1 return value)",
      "commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "created_at" : "2023-05-02T12:33:53Z",
      "diff_hunk" : "@@ -20,28 +20,49 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+using TypeTestOneInput = std::function<bool(FuzzBufferType)>; /* returns true for useful test */\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns bool (false = uninteresting test). */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182486207",
      "id" : 1182486207,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII585Ge06_",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 36,
      "original_position" : 18,
      "original_start_line" : 35,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : 18,
      "pull_request_review_id" : 1409007192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182486207/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 35,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-02T12:38:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182486207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182489285"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182489285"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just noting that this was only recently added to libFuzzer: https://reviews.llvm.org/D128749?id=441094\r\n\r\nI think that is fine, running with older versions of libFuzzer makes little sense anyway.",
      "commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "created_at" : "2023-05-02T12:36:52Z",
      "diff_hunk" : "@@ -151,8 +151,8 @@ void signal_handler(int signal)\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n     static const auto& test_one_input = *Assert(g_test_one_input);\n-    test_one_input({data, size});\n-    return 0;\n+    /* Returning -1 means the input was not useful. */\n+    return int{test_one_input({data, size})} - 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182489285",
      "id" : 1182489285,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585Ge1rF",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 155,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.cpp",
      "position" : 7,
      "pull_request_review_id" : 1409007192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182489285/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-02T12:38:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182489285",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Fair question. I think the primary advantage is that it should help with the speed of fuzzing, by avoiding spending time on less interesting things. It is however somewhat delicate as you point out - if you mark too many things as \"uninteresting\", I can imagine it actually becomes harder to find a mutation path from one interesting test case to another. ",
      "created_at" : "2023-05-02T12:43:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531411293",
      "id" : 1531411293,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bR3td",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531411293/reactions"
      },
      "updated_at" : "2023-05-02T12:43:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531411293",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182499692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182499692"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I see it a bit more abstract: the macro is for *writing* a test that has such a return value. Whether the fuzz infrastructure uses it in an independent question (and if there are ones using `LLVMFuzzerTestOneInput` that don't support the return value -1 at all, we should make sure it also isn't returned, even if `FUZZ_PARTIAL_TARGET` is used).",
      "commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "created_at" : "2023-05-02T12:46:46Z",
      "diff_hunk" : "@@ -20,28 +20,49 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+using TypeTestOneInput = std::function<bool(FuzzBufferType)>; /* returns true for useful test */\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns bool (false = uninteresting test). */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182499692",
      "id" : 1182499692,
      "in_reply_to_id" : 1182486207,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII585Ge4Ns",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 36,
      "original_position" : 18,
      "original_start_line" : 35,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : 18,
      "pull_request_review_id" : 1409027736,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182499692/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 35,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-02T12:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182499692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah, it may help or hurt, depending on your goal and the fuzz target. My recommendation would be to make this off by default, and add an option to enable it at run time. This certainly can't hurt and may help for the use cases that want to enable it.",
      "created_at" : "2023-05-02T12:49:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531421409",
      "id" : 1531421409,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bR6Lh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531421409/reactions"
      },
      "updated_at" : "2023-05-02T12:49:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531421409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182509668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182509668"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggestion, if you want to go down the route to make this a runtime option:\r\n\r\n```cpp\r\nstatic const reject_unwated_inputs{std::getenv(\"REJECT_UNWANTED_FUZZ_INPUTS\")};\r\n```\r\n\r\n(or similar)",
      "commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "created_at" : "2023-05-02T12:55:43Z",
      "diff_hunk" : "@@ -151,8 +151,8 @@ void signal_handler(int signal)\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n     static const auto& test_one_input = *Assert(g_test_one_input);\n-    test_one_input({data, size});\n-    return 0;\n+    /* Returning -1 means the input was not useful. */\n+    return int{test_one_input({data, size})} - 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182509668",
      "id" : 1182509668,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585Ge6pk",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 155,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.cpp",
      "position" : 7,
      "pull_request_review_id" : 1409042713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182509668/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-02T12:55:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182509668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Perhaps, but I don't worry too much if it's used conservatively. The \"having to go through uninteresting cases to get to interesting ones\" is a concern with or without this functionality, because after all, the uninteresting cases are already unlikely to trigger much (useful) coverage, and the coverage that they do trigger is likely unrelated to what is interesting. The actual solution libfuzzer has for this concern is attempting multiple (up to 5, IIRC) mutations in one step.\r\n\r\nOf course, (over)use of this feature may make things worse, but that's up to the individual tests.\r\n\r\nMaybe it's worth experimenting a bit with to so how much impact it has; e.g. introduce old/known bugs into the code, start from an empty corpus, and measure on average how long in time it takes to find the bug, with and without this. The miniscript fuzzers (where I've added `return false;`s relatively liberally in this PR) could be a good guinea pig.",
      "created_at" : "2023-05-02T13:01:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531436567",
      "id" : 1531436567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bR94X",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531436567/reactions"
      },
      "updated_at" : "2023-05-02T13:01:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531436567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
