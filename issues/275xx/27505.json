{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Closes https://github.com/bitcoin/bitcoin/issues/16778\r\n\r\nBitcoin uses `getaddrinfo` to make DNS requests for DNS seed servers and for adding peers with `-addnode`, `-seednode` and `-connect`. Depending on the platform this can be clunky and a system issue could prevent name resolution from completing at all, blocking the thread and in some cases preventing a clean shutdown.\r\n\r\nAn attempt was made to switch to the asynchronous `getaddrinfo_a` in https://github.com/bitcoin/bitcoin/pull/4421 but that was reverted in https://github.com/bitcoin/bitcoin/pull/9229 after discovering that function has a segfault!\r\n\r\nTaking BlueMatt's suggestion in https://github.com/bitcoin/bitcoin/pull/10215#issue-221886328, this PR modifies our `g_dns_lookup` function to use `evdns_getaddrinfo()` from [libevent](https://libevent.org/libevent-book/Ref9_dns.html). This is an asynchronous function but I've implemented it in a polling loop so it still blocks -- but now will timeout after 2 seconds.\r\n\r\nTODO:\r\n- [ ] We could make the polling loop interruptible but I'm not sure the best approach to that, since these functions don't live in a class with a flag like `interruptNet` \r\n- [ ] Is it possible to add functional tests that mess with DNS? Probably not.\r\n- [ ] The unit test I added makes a live DNS request for `nic.com` that test will fail the platform has no DNS\r\n\r\nFuture work:\r\n- libevent has more low-level DNS functions as well, we could ultimately use those to (for example) request `TXT` records with onion addresses from our DNS seeders\r\n\r\n",
   "closed_at" : "2023-05-02T18:29:36Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
      "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
      "followers_url" : "https://api.github.com/users/pinheadmz/followers",
      "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
      "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/pinheadmz",
      "id" : 2084648,
      "login" : "pinheadmz",
      "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
      "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
      "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
      "repos_url" : "https://api.github.com/users/pinheadmz/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/pinheadmz"
   },
   "comments" : 10,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27505/comments",
   "created_at" : "2023-04-20T21:07:11Z",
   "draft" : true,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27505/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/27505",
   "id" : 1677432252,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      },
      {
         "color" : "cccccc",
         "default" : false,
         "description" : "",
         "id" : 5334691551,
         "name" : "CI failed",
         "node_id" : "LA_kwDOABII588AAAABPfju3w",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27505/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585Ozh_T",
   "number" : 27505,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/27505.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27505",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/27505.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27505"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27505/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27505/timeline",
   "title" : "net: use interruptible async getaddrinfo wrapper from libevent for DNS",
   "updated_at" : "2023-05-02T18:29:37Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27505",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
      "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
      "followers_url" : "https://api.github.com/users/pinheadmz/followers",
      "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
      "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/pinheadmz",
      "id" : 2084648,
      "login" : "pinheadmz",
      "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
      "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
      "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
      "repos_url" : "https://api.github.com/users/pinheadmz/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/pinheadmz"
   }
}
