{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Efficient isolated fuzzing of our message processing code (net processing) would be very valuable. However, to make that deterministic, fast and fuzzer friendly it appears that extensive refactoring is required. There are three main blockers: module separation (net/net processing/validation split), determinism, performance.\r\n\r\nI am gonna use this issue to track and motivate the work that needs to be done. It would be great if we can achieve the same outcome with less refactoring but I don't see how at the moment. Open to suggestions and feedback.\r\n\r\n### Module separation\r\n\r\nOnce we have a clean separation between our net, net processing and validation modules, we can fuzz/test them in isolation to maximize the bug yield (ð, ðª², ðª³). By design, most fuzzing engines are not great at finding bugs when the scope of the targets is too large (e.g. fuzzing net, net processing and validation all at once).\r\n\r\n* net / net processing split\r\n  * Move application layer data from net to net processing ([#19398](https://github.com/bitcoin/bitcoin/issues/19398))\r\n    - [ ] https://github.com/bitcoin/bitcoin/pull/26621\r\n  * Define a clean interface between net processing <-> net \r\n    - [ ] https://github.com/bitcoin/bitcoin/pull/25268\r\n      - [x] https://github.com/bitcoin/bitcoin/pull/25500\r\n      - [ ] https://github.com/bitcoin/bitcoin/pull/25572\r\n    - [ ] https://github.com/bitcoin/bitcoin/pull/25515\r\n    - [ ] https://github.com/bitcoin/bitcoin/pull/27407\r\n    - [x] https://github.com/bitcoin/bitcoin/pull/27257\r\n* net processing / validation split (lots of overlap with kernel)\r\n  * Reduce `cs_main` usage in net processing\r\n    - [ ] https://github.com/bitcoin/bitcoin/pull/26151\r\n    - [x] https://github.com/bitcoin/bitcoin/pull/26140\r\n    - [ ] Kill CNodeState\r\n  * Define a clean interface between net processing <-> validation\r\n\r\n### Determinism\r\n\r\nNon-deterministic fuzz targets are less efficient at finding bugs and debugging non-reproducible bugs is annoying/costly.\r\n\r\n* All required components should be newly setup for each target execution\r\n  * Can be done currently using our testing setup suite but that's waaaay too slow for fuzzing.\r\n* Avoid  `GetRand()` (mock it?)\r\n* Avoid globals (are there any globals left in net processing?)\r\n\r\n### Performance\r\n\r\nFuzzing is a search, the faster the search - the better.\r\n\r\n* Decouple net processing from ArgsMan (args setup is slow)\r\n  * Allows to fuzz the peerman options without depending on the global args man \r\n  - [ ] https://github.com/bitcoin/bitcoin/pull/27499\r\n* LevelDB (is in memory but still slow?)\r\n  * Probably solved by mocking out validation?\r\n* PeerManager construction is expensive because it requires multi megabyte allocations each time (mostly due to large bloom filters)\r\n* Disk usage\r\n  * Block storage\r\n    - [ ] https://github.com/bitcoin/bitcoin/pull/27125\r\n    - [ ] Create a mock of BlockManager for in memory block storage?\r\n  * BanMan (banlist is written to disk)\r\n\r\n---\r\n\r\nPlease let me know if you think there are PRs that aren't listed here but should be.\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27502/comments",
   "created_at" : "2023-04-20T16:06:11Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27502/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/27502",
   "id" : 1677018572,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "description" : null,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27502/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585j9UXM",
   "number" : 27502,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27502/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27502/timeline",
   "title" : "meta: Isolated fuzzing of net processing",
   "updated_at" : "2023-04-20T16:44:05Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27502",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
      "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
      "followers_url" : "https://api.github.com/users/dergoegge/followers",
      "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
      "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/dergoegge",
      "id" : 8077169,
      "login" : "dergoegge",
      "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
      "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
      "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
      "repos_url" : "https://api.github.com/users/dergoegge/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/dergoegge"
   }
}
