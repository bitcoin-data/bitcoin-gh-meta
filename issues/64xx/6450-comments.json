[
   {
      "body" : "I've noticed this issue too on my full-RBF nodes, doubly so on the full-RBF nodes that have a higher min-relay fee set. In some cases that resulted in huge amounts of bandwidth being wasted, as those nodes are otherwise well connected with nearly the full number of peers. So strong ACK on the intent.\r\n\r\nI think we could make the table quite a bit bigger though. Each entry is about 40 bytes, so 2000 replacements is only about 80k. Equally, for the purpose of rejecting txs it'd be perfectly acceptable to only store 64bit partial txids if we first hash them with a per-node nonce, so that gets us 16bytes/entry.\r\n\r\nIf someone is trying to do a bandwidth attack by flooding the network, right now the re-requests are a pretty big multiplier - if half your ~100 incoming peers relay a tx and half don't, you've increased your incoming bandwidth used by the flood by about 50x. With the patch that's reduced drastically.\r\n\r\nNow, to defeat this protection you basically need to relay enough txs to overflow the limitedmap, before all your peers send you the associated INVs. (modulo cases where the attacker is directy connected to you) The minimum tx size is about 60 bytes, so at 1MB/second you might receive 16k txs in a really extreme case - but that overflows the map multiple times over.\r\n\r\nSpending more like, say, 5MB of RAM to mitigate that kind of bandwidth attack seems reasonable to me. w/ the existing design, that's a 125,000 entry limitedmap; if you implement the 64-bit hash idea that's a 312,000 entry limited map.\r\n\r\nAlso, would the attack be harder to pull off if dropping entries from the map was probabalistic? I suspect yes.",
      "created_at" : "2015-07-17T06:56:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122198540",
      "id" : 122198540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6450",
      "updated_at" : "2015-07-17T06:56:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/122198540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "One more idea:  How about discarding the entire recent rejects map every time the best block hash changes? I suspect the most likely scenario where a previously rejected transaction is now again valid will probably be validity changes due to new/reorged blocks. For instance the main reason why my #6216 pull-req causes no issues w/ relaying is that if a node receives a transaction that it rejects due to the tx being non-final, it will be accepted again later as it winds its way around the network; this pull-req might break that behavior.\r\n\r\nIf you do this it'd probably be fine to remove the time expiration entirely, saving RAM, and implement the map with a simple set with txids dropped from it randomly.",
      "created_at" : "2015-07-17T07:30:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122202348",
      "id" : 122202348,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6450",
      "updated_at" : "2015-07-17T07:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/122202348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "(or for that matter, a simple bloom filter with a bit randomly cleared on each insertion to keep the fp rate steady)",
      "created_at" : "2015-07-17T07:32:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122203015",
      "id" : 122203015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6450",
      "updated_at" : "2015-07-17T07:32:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/122203015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6450#discussion_r34873327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6450"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/34873327"
         }
      },
      "body" : "Actually, this will relay invalid transactions from whitelisted peers as well.",
      "commit_id" : "d7b2800e0dc3399c2d4e62a94793f3afd67e6da9",
      "created_at" : "2015-07-17T09:08:14Z",
      "diff_hunk" : "@@ -4276,11 +4292,15 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             unsigned int nEvicted = LimitOrphanTxSize(nMaxOrphanTx);\n             if (nEvicted > 0)\n                 LogPrint(\"mempool\", \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n-        } else if (pfrom->fWhitelisted) {\n-            // Always relay transactions received from whitelisted peers, even\n-            // if they are already in the mempool (allowing the node to function\n-            // as a gateway for nodes hidden behind it).\n-            RelayTransaction(tx);\n+        } else {\n+            if (!mempool.exists(tx.GetHash()))\n+                mapRecentRejects.insert(make_pair(tx.GetHash(), GetTime()));\n+            if (pfrom->fWhitelisted) {\n+                // Always relay transactions received from whitelisted peers, even\n+                // if they are already in the mempool (allowing the node to function\n+                // as a gateway for nodes hidden behind it).\n+                RelayTransaction(tx);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6450#discussion_r34873327",
      "id" : 34873327,
      "original_commit_id" : "d7b2800e0dc3399c2d4e62a94793f3afd67e6da9",
      "original_position" : 57,
      "path" : "src/main.cpp",
      "position" : 57,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6450",
      "updated_at" : "2015-07-17T09:08:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/34873327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "Created #6452 with a bloom filter instead of limitedmap. Thoughts?",
      "created_at" : "2015-07-17T10:56:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122244811",
      "id" : 122244811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6450",
      "updated_at" : "2015-07-17T10:56:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/122244811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@ajweiss had suggested a bloom filter when I created this, but I was concerned about false positives.  I hadn't thought it through that much.  I'm not tied to a specific approach.  I was looking at this less as a DoS attack prevention and more as a response to the unfortunate p2p feedback loop of different acceptance policies, but I guess you're right its important to make sure it still works under load.\r\nI do like the idea of clearing when a block comes in.",
      "created_at" : "2015-07-17T12:09:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122257556",
      "id" : 122257556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6450",
      "updated_at" : "2015-07-17T12:09:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/122257556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "Yeah, it's quite cheap to get extremely low fp rates - my bloom filter approach has a one in a million FP rate. The (bloom filter) code also already exists and is well tested, as the netaddr stuff uses it.",
      "created_at" : "2015-07-17T12:15:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122258331",
      "id" : 122258331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6450",
      "updated_at" : "2015-07-17T12:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/122258331",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "Concept ACK. \r\nUsing a bloom filter is slightly more risky, but if we make sure that at least every node uses an (unpredictable) tweak the impact of false positives should be minimized.",
      "created_at" : "2015-07-18T08:08:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122510832",
      "id" : 122510832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6450",
      "updated_at" : "2015-07-18T08:08:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/122510832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Closing in favor of #6452 ",
      "created_at" : "2015-07-19T21:25:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122707915",
      "id" : 122707915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6450",
      "updated_at" : "2015-07-19T21:25:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/122707915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   }
]
