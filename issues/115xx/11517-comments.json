[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Cool! The benchmark suite is really not at all very good, sadly. If you feel up to it, I think we'd do better by just hardcoding the number of runs in each benchmark - it is often very easy to see very significant differences in the average runtime based on number of runs (even for things which take 1+ms per run!). Unless you have some better intuition than I about why this is the case, that is.",
      "created_at" : "2017-10-17T17:20:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-337303617",
      "id" : 337303617,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-17T17:20:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337303617",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "A while ago I wrote a microbenchmarking library similar to google benchmark. There I've used the geometric mean I think is a much better statistic than average here, and its better when you have outliers. I also think having the mean and confidence interval is much more reasonable than just min, max,avg values. Would you be interested in updates like this?",
      "created_at" : "2017-10-17T19:10:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-337338021",
      "id" : 337338021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-17T19:10:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337338021",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd be happy with anything that gives more reliable values, really. Right now, to compre benchmark runs, I often have to pin to a CPU, then run multiple times, and only consider differences if both runs had the same iteration count, which is a huge pain.",
      "created_at" : "2017-10-17T22:25:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-337393092",
      "id" : 337393092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-17T22:25:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337393092",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> Cool! The benchmark suite is really not at all very good, sadly. If you feel up to it, I think we'd do better by just hardcoding the number of runs in each benchmark \r\n\r\nThe idea of doing it this way is that the benchmarks can be run in roughly the same time on slower hardware, whereas on faster hardware they are more precise. The secp256k1 benchmarks have the problem that they take basically forever on lower-end CPUs. I agree it's probably broken though, and the range of CPUs that bitcoind can realistically run on is much smaller than secp256k1's.\r\n(if this is an issue, maybe a fixed scaling factor could be passed on the command line for this purpose, that scales all the benchmark iterations equally and is at least deterministic?)",
      "created_at" : "2017-10-18T13:59:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-337600615",
      "id" : 337600615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-18T15:00:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337600615",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yea, a scaling factor seems fine, even an auto-calculated one would probably also be fine, as long as it is very stable/deterministic on the same hardware between runs, which the current version is not.",
      "created_at" : "2017-10-18T15:28:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-337629929",
      "id" : 337629929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-18T15:28:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337629929",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I don't think using the exact same number of iterations is a huge benefit for stability. The problem is there will always be some random events in the system that cause some delays (unwanted fluctuations). The other problem are fluctuations that are inherent to what's benchmarked: e.g. if the code does any allocations, the runtime will always fluctuate. This fluctuation won't go away with fixed number of runs and I think the best way to deal with it is with better statistics. In my old library I am doing this:\r\n\r\n1. Perform 5 runs, each approximately 0.5 seconds.\r\n2. Calculate geometric mean of the runs.\r\n3. calculate the standard deviation of the runtime's logarithm, and print the 95% confidence interval of the runtime.\r\n\r\nUsing the logarithm is much more appropriate for benchmark results, because runtime simply can't be negative. With that data we can use a student's t test to compare the mean of two different algorithms to show if the difference is actually statistically significant or might be just random fluctuation.\r\n\r\nThat's a bit more complicated, but not by much; boost has all the features for calculating these statistics in a few lines of code. I can work on that but unfortunately I'm quite busy so that will take some time",
      "created_at" : "2017-10-19T06:43:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-337814350",
      "id" : 337814350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-19T06:43:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337814350",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "For my largest use of bench (FIBRE stuff, which has pretty wide-ranging bench's which run through FEC encode/decode + mempool scan + block decode) number of runs makes a huge difference. I'd be happy to be wrong, but my guess has always been cache-related/branch-prediction effects (the issues still appear when you give bench_bitcoin a dedicated core, minimizing any system disruption). Fluctuation is fine, but I often see fluctuations which are 2-4% when iteration count changes (on roughly-1ms-runtime!) when trying to tease out 5% changes. For something running that long, it seems strange to me that you'd see such huge fluctuations.",
      "created_at" : "2017-10-19T15:04:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-337937114",
      "id" : 337937114,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-19T15:04:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/337937114",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "That's strange. Using a fixed number of iterations should be a simple change. How about adding a command line option to specify a fixed number of iterations? Also a filter would be useful so only a specified test runs.",
      "created_at" : "2017-10-20T07:11:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-338124929",
      "id" : 338124929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-20T07:11:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338124929",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "The premise is a bit flawed, (though this version might still be better, I like the idea of visualizing the data),\r\n> used to make a function call for each call\r\n\r\nisn't true because the value of countMask changes in two different ways inside of this logic, increasing to prevent time and cycles from being collected on every other iteration (how it starts at first). That countMask jumps up pretty quickly to powers of 2 - 1 (so the loop condition exits unless the count is a pretty high power of 2 - 1).\r\n\r\nThere's a comment that says as much, but it's non-obvious since it's tucked pretty far inside that logic.\r\n    `// If the execution was much too fast (1/128th of maxElapsed), increase the count mask by 8x and restart timing.`\r\n   `// The restart avoids including the overhead of this code in the measurement.`\r\n\r\nI added another counter inside of KeepRunning to track those function invocations. It looks like when the benchmark has scaled up for the final timing loop for each, there are no more than 20 of these timing calls in the final output of the benchmark for the fastest benches ([example of this](https://pastebin.com/UjJAwRVw), new column overheadCount, and new row TimeLookup). The timing calls themselves take 25ns avg each according to the same benchmark code (heh).\r\n\r\nSo I guess the complexity / readability to achieve resource-independent 1s bench runs is the main thing that could be improve with this current version, I thought the same thing too until really digging into it and playing with countMask some.",
      "created_at" : "2017-10-21T22:14:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-338436056",
      "id" : 338436056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-21T22:14:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338436056",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/715986?v=4",
         "events_url" : "https://api.github.com/users/thebostik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/thebostik/followers",
         "following_url" : "https://api.github.com/users/thebostik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/thebostik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/thebostik",
         "id" : 715986,
         "login" : "thebostik",
         "organizations_url" : "https://api.github.com/users/thebostik/orgs",
         "received_events_url" : "https://api.github.com/users/thebostik/received_events",
         "repos_url" : "https://api.github.com/users/thebostik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/thebostik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/thebostik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/thebostik"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> isn't true because the value of countMask changes in two different ways inside of this logic, increasing to prevent time and cycles from being collected on every other iteration (how it starts at first). \r\n\r\nThat's right, but KeepRunning() itself used to introduce a function call overhead. With my change the fast path is inlined, and the slow measuring path is in the non-inlined method.\r\n\r\nI've benchmarked an extreme example (with cout so compiler doesn't optimize it away):\r\n\r\n    double d = 0.01;\r\n    while (state.KeepRunning()) {\r\n        d += 0.000001;\r\n    }\r\n    std::cout << d << std::endl;\r\n\r\nBefore my change that the measurement is 3.19 ns, with the inlined change I measure 0.83 ns.\r\n\r\nI also find the plot extremely useful, and the command line options. I can now do this:\r\n\r\n`./bench/bench_bitcoin -filter=Deser.* -evals=20 -printer=plot |tee out.html`\r\n\r\nThe output is a nice plot, I've uploaded it here: http://lawyer-maggie-58725.bitballoon.com/\r\nThere you can clearly see that there is an outlier for DeserializeAndCheckBlockTest. Using the median of multiple runs it is nicely filtered out.",
      "created_at" : "2017-10-22T07:13:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-338457167",
      "id" : 338457167,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-10-22T07:13:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338457167",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147789408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147789408"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This comment is now out of date.",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-10-30T18:14:46Z",
      "diff_hunk" : "@@ -36,53 +38,86 @@ BENCHMARK(CODE_TO_TIME);\n  */\n  \n namespace benchmark {\n+class State;\n \n-    class State {\n-        std::string name;\n-        double maxElapsed;\n-        double beginTime;\n-        double lastTime, minTime, maxTime;\n-        uint64_t count;\n-        uint64_t countMask;\n-        uint64_t beginCycles;\n-        uint64_t lastCycles;\n-        uint64_t minCycles;\n-        uint64_t maxCycles;\n-\n-        bool UpdateTimer();\n-    public:\n-        State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n-            minTime = std::numeric_limits<double>::max();\n-            maxTime = std::numeric_limits<double>::min();\n-            minCycles = std::numeric_limits<uint64_t>::max();\n-            maxCycles = std::numeric_limits<uint64_t>::min();\n-            countMask = 1;\n-        }\n-        inline bool KeepRunning() {\n-            if (count & countMask) {\n-                ++count;\n-                return true;\n-            }\n-            return UpdateTimer();\n+// interface to output benchmark results.\n+class Printer\n+{\n+public:\n+    virtual ~Printer() {}\n+    virtual void header() = 0;\n+    virtual void result(const State& state) = 0;\n+    virtual void footer() = 0;\n+};\n+\n+// default printer to console, shows min, max, median.\n+class ConsolePrinter : public Printer\n+{\n+public:\n+    void header();\n+    void result(const State& state);\n+    void footer();\n+};\n+\n+// creates box plot with plotly.js\n+class PlotlyPrinter : public Printer\n+{\n+public:\n+    void header();\n+    void result(const State& state);\n+    void footer();\n+};\n+\n+class State\n+{\n+public:\n+    std::string name;\n+    uint64_t numItersLeft;\n+    const uint64_t numIters;\n+    const uint64_t numEvals;\n+    std::vector<double> elapsedResults;\n+    Printer& printer;\n+\n+    std::chrono::time_point<std::chrono::high_resolution_clock> startTime;\n+\n+    bool UpdateTimer(std::chrono::time_point<std::chrono::high_resolution_clock> finishTime);\n+    void PrintResults() const;\n+    State(std::string _name, uint64_t _numEvals, double _numIters, Printer& _printer) : name(_name), numItersLeft(0), numIters(_numIters), numEvals(_numEvals), printer(_printer)\n+    {\n+    }\n+\n+    inline bool KeepRunning()\n+    {\n+        if (numItersLeft--) {\n+            return true;\n         }\n+\n+        bool result = UpdateTimer(std::chrono::high_resolution_clock::now());\n+        startTime = std::chrono::high_resolution_clock::now();\n+        return result;\n+    }\n     };\n \n     typedef std::function<void(State&)> BenchFunction;\n \n     class BenchRunner\n     {\n-        typedef std::map<std::string, BenchFunction> BenchmarkMap;\n+        struct Bench {\n+            BenchFunction func;\n+            double avgTime;\n+        };\n+        typedef std::map<std::string, Bench> BenchmarkMap;\n         static BenchmarkMap &benchmarks();\n \n     public:\n-        BenchRunner(std::string name, BenchFunction func);\n+        BenchRunner(std::string name, BenchFunction func, double avgTime);\n \n-        static void RunAll(double elapsedTimeForOne=1.0);\n+        static void RunAll(Printer& printer, uint64_t numEvals = 1, double elapsedTimeForOneEval = 0.5, const std::string& filter = \".*\", bool isListOnly = false);\n     };\n }\n \n // BENCHMARK(foo) expands to:  benchmark::BenchRunner bench_11foo(\"foo\", foo);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147789408",
      "id" : 147789408,
      "original_commit_id" : "f4d9ade8f6fa57e17468c420e75229af1d3ea8b8",
      "original_position" : 121,
      "path" : "src/bench/bench.h",
      "position" : null,
      "pull_request_review_id" : 72934969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147789408",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147789484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147789484"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Usage example at the top of bench.h is now out of date. Should also add comment there explaining the new macro argument.",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-10-30T18:15:02Z",
      "diff_hunk" : "@@ -36,53 +38,86 @@ BENCHMARK(CODE_TO_TIME);\n  */\n  \n namespace benchmark {\n+class State;\n \n-    class State {\n-        std::string name;\n-        double maxElapsed;\n-        double beginTime;\n-        double lastTime, minTime, maxTime;\n-        uint64_t count;\n-        uint64_t countMask;\n-        uint64_t beginCycles;\n-        uint64_t lastCycles;\n-        uint64_t minCycles;\n-        uint64_t maxCycles;\n-\n-        bool UpdateTimer();\n-    public:\n-        State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n-            minTime = std::numeric_limits<double>::max();\n-            maxTime = std::numeric_limits<double>::min();\n-            minCycles = std::numeric_limits<uint64_t>::max();\n-            maxCycles = std::numeric_limits<uint64_t>::min();\n-            countMask = 1;\n-        }\n-        inline bool KeepRunning() {\n-            if (count & countMask) {\n-                ++count;\n-                return true;\n-            }\n-            return UpdateTimer();\n+// interface to output benchmark results.\n+class Printer\n+{\n+public:\n+    virtual ~Printer() {}\n+    virtual void header() = 0;\n+    virtual void result(const State& state) = 0;\n+    virtual void footer() = 0;\n+};\n+\n+// default printer to console, shows min, max, median.\n+class ConsolePrinter : public Printer\n+{\n+public:\n+    void header();\n+    void result(const State& state);\n+    void footer();\n+};\n+\n+// creates box plot with plotly.js\n+class PlotlyPrinter : public Printer\n+{\n+public:\n+    void header();\n+    void result(const State& state);\n+    void footer();\n+};\n+\n+class State\n+{\n+public:\n+    std::string name;\n+    uint64_t numItersLeft;\n+    const uint64_t numIters;\n+    const uint64_t numEvals;\n+    std::vector<double> elapsedResults;\n+    Printer& printer;\n+\n+    std::chrono::time_point<std::chrono::high_resolution_clock> startTime;\n+\n+    bool UpdateTimer(std::chrono::time_point<std::chrono::high_resolution_clock> finishTime);\n+    void PrintResults() const;\n+    State(std::string _name, uint64_t _numEvals, double _numIters, Printer& _printer) : name(_name), numItersLeft(0), numIters(_numIters), numEvals(_numEvals), printer(_printer)\n+    {\n+    }\n+\n+    inline bool KeepRunning()\n+    {\n+        if (numItersLeft--) {\n+            return true;\n         }\n+\n+        bool result = UpdateTimer(std::chrono::high_resolution_clock::now());\n+        startTime = std::chrono::high_resolution_clock::now();\n+        return result;\n+    }\n     };\n \n     typedef std::function<void(State&)> BenchFunction;\n \n     class BenchRunner\n     {\n-        typedef std::map<std::string, BenchFunction> BenchmarkMap;\n+        struct Bench {\n+            BenchFunction func;\n+            double avgTime;\n+        };\n+        typedef std::map<std::string, Bench> BenchmarkMap;\n         static BenchmarkMap &benchmarks();\n \n     public:\n-        BenchRunner(std::string name, BenchFunction func);\n+        BenchRunner(std::string name, BenchFunction func, double avgTime);\n \n-        static void RunAll(double elapsedTimeForOne=1.0);\n+        static void RunAll(Printer& printer, uint64_t numEvals = 1, double elapsedTimeForOneEval = 0.5, const std::string& filter = \".*\", bool isListOnly = false);\n     };\n }\n \n // BENCHMARK(foo) expands to:  benchmark::BenchRunner bench_11foo(\"foo\", foo);\n-#define BENCHMARK(n) \\\n-    benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n);\n+#define BENCHMARK(n, avgTime) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147789484",
      "id" : 147789484,
      "original_commit_id" : "f4d9ade8f6fa57e17468c420e75229af1d3ea8b8",
      "original_position" : 124,
      "path" : "src/bench/bench.h",
      "position" : null,
      "pull_request_review_id" : 72934969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147789484",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147791717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147791717"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Suggest expected_time or estimated_duration instead of avgTime. Developer guide recommends using snake case for variables, and avg doesn't tell you what it's supposed to be the average of.",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-10-30T18:22:53Z",
      "diff_hunk" : "@@ -36,53 +38,86 @@ BENCHMARK(CODE_TO_TIME);\n  */\n  \n namespace benchmark {\n+class State;\n \n-    class State {\n-        std::string name;\n-        double maxElapsed;\n-        double beginTime;\n-        double lastTime, minTime, maxTime;\n-        uint64_t count;\n-        uint64_t countMask;\n-        uint64_t beginCycles;\n-        uint64_t lastCycles;\n-        uint64_t minCycles;\n-        uint64_t maxCycles;\n-\n-        bool UpdateTimer();\n-    public:\n-        State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n-            minTime = std::numeric_limits<double>::max();\n-            maxTime = std::numeric_limits<double>::min();\n-            minCycles = std::numeric_limits<uint64_t>::max();\n-            maxCycles = std::numeric_limits<uint64_t>::min();\n-            countMask = 1;\n-        }\n-        inline bool KeepRunning() {\n-            if (count & countMask) {\n-                ++count;\n-                return true;\n-            }\n-            return UpdateTimer();\n+// interface to output benchmark results.\n+class Printer\n+{\n+public:\n+    virtual ~Printer() {}\n+    virtual void header() = 0;\n+    virtual void result(const State& state) = 0;\n+    virtual void footer() = 0;\n+};\n+\n+// default printer to console, shows min, max, median.\n+class ConsolePrinter : public Printer\n+{\n+public:\n+    void header();\n+    void result(const State& state);\n+    void footer();\n+};\n+\n+// creates box plot with plotly.js\n+class PlotlyPrinter : public Printer\n+{\n+public:\n+    void header();\n+    void result(const State& state);\n+    void footer();\n+};\n+\n+class State\n+{\n+public:\n+    std::string name;\n+    uint64_t numItersLeft;\n+    const uint64_t numIters;\n+    const uint64_t numEvals;\n+    std::vector<double> elapsedResults;\n+    Printer& printer;\n+\n+    std::chrono::time_point<std::chrono::high_resolution_clock> startTime;\n+\n+    bool UpdateTimer(std::chrono::time_point<std::chrono::high_resolution_clock> finishTime);\n+    void PrintResults() const;\n+    State(std::string _name, uint64_t _numEvals, double _numIters, Printer& _printer) : name(_name), numItersLeft(0), numIters(_numIters), numEvals(_numEvals), printer(_printer)\n+    {\n+    }\n+\n+    inline bool KeepRunning()\n+    {\n+        if (numItersLeft--) {\n+            return true;\n         }\n+\n+        bool result = UpdateTimer(std::chrono::high_resolution_clock::now());\n+        startTime = std::chrono::high_resolution_clock::now();\n+        return result;\n+    }\n     };\n \n     typedef std::function<void(State&)> BenchFunction;\n \n     class BenchRunner\n     {\n-        typedef std::map<std::string, BenchFunction> BenchmarkMap;\n+        struct Bench {\n+            BenchFunction func;\n+            double avgTime;\n+        };\n+        typedef std::map<std::string, Bench> BenchmarkMap;\n         static BenchmarkMap &benchmarks();\n \n     public:\n-        BenchRunner(std::string name, BenchFunction func);\n+        BenchRunner(std::string name, BenchFunction func, double avgTime);\n \n-        static void RunAll(double elapsedTimeForOne=1.0);\n+        static void RunAll(Printer& printer, uint64_t numEvals = 1, double elapsedTimeForOneEval = 0.5, const std::string& filter = \".*\", bool isListOnly = false);\n     };\n }\n \n // BENCHMARK(foo) expands to:  benchmark::BenchRunner bench_11foo(\"foo\", foo);\n-#define BENCHMARK(n) \\\n-    benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n);\n+#define BENCHMARK(n, avgTime) \\\n+    benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n, avgTime);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147791717",
      "id" : 147791717,
      "original_commit_id" : "f4d9ade8f6fa57e17468c420e75229af1d3ea8b8",
      "original_position" : 125,
      "path" : "src/bench/bench.h",
      "position" : null,
      "pull_request_review_id" : 72934969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147791717",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147792454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147792454"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should add `-help` output describing what the options do.\r\n\r\nShould use snake_case for variable names (and ideally match them with option names).",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-10-30T18:25:30Z",
      "diff_hunk" : "@@ -10,16 +10,31 @@\n #include \"util.h\"\n #include \"random.h\"\n \n+#include <memory>\n+\n int\n main(int argc, char** argv)\n {\n+    gArgs.ParseParameters(argc, argv);\n+\n     SHA256AutoDetect();\n     RandomInit();\n     ECC_Start();\n     SetupEnvironment();\n     fPrintToDebugLog = false; // don't want to write to debug.log file\n \n-    benchmark::BenchRunner::RunAll();\n+    int64_t evaluations = gArgs.GetArg(\"-evals\", 5);\n+    std::string regexFilter = gArgs.GetArg(\"-filter\", \".*\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147792454",
      "id" : 147792454,
      "original_commit_id" : "f4d9ade8f6fa57e17468c420e75229af1d3ea8b8",
      "original_position" : 19,
      "path" : "src/bench/bench_bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : 72934969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147792454",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147799546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147799546"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "New code is missing indentation, so now it is inconsistent, and BenchRunner looks like it is nested inside State. Also, the State class is key for someone trying to understand the benchmark framework, so would recommend leaving on top of the printer classes (you can forward declare Printer).",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-10-30T18:49:11Z",
      "diff_hunk" : "@@ -36,53 +38,86 @@ BENCHMARK(CODE_TO_TIME);\n  */\n  \n namespace benchmark {\n+class State;\n \n-    class State {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147799546",
      "id" : 147799546,
      "original_commit_id" : "f4d9ade8f6fa57e17468c420e75229af1d3ea8b8",
      "original_position" : 15,
      "path" : "src/bench/bench.h",
      "position" : null,
      "pull_request_review_id" : 72934969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147799546",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147801124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147801124"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Default argument values never actually seem to be used. Would drop so they aren't repeated and don't become inconsistent in the future.",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-10-30T18:54:45Z",
      "diff_hunk" : "@@ -36,53 +38,86 @@ BENCHMARK(CODE_TO_TIME);\n  */\n  \n namespace benchmark {\n+class State;\n \n-    class State {\n-        std::string name;\n-        double maxElapsed;\n-        double beginTime;\n-        double lastTime, minTime, maxTime;\n-        uint64_t count;\n-        uint64_t countMask;\n-        uint64_t beginCycles;\n-        uint64_t lastCycles;\n-        uint64_t minCycles;\n-        uint64_t maxCycles;\n-\n-        bool UpdateTimer();\n-    public:\n-        State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n-            minTime = std::numeric_limits<double>::max();\n-            maxTime = std::numeric_limits<double>::min();\n-            minCycles = std::numeric_limits<uint64_t>::max();\n-            maxCycles = std::numeric_limits<uint64_t>::min();\n-            countMask = 1;\n-        }\n-        inline bool KeepRunning() {\n-            if (count & countMask) {\n-                ++count;\n-                return true;\n-            }\n-            return UpdateTimer();\n+// interface to output benchmark results.\n+class Printer\n+{\n+public:\n+    virtual ~Printer() {}\n+    virtual void header() = 0;\n+    virtual void result(const State& state) = 0;\n+    virtual void footer() = 0;\n+};\n+\n+// default printer to console, shows min, max, median.\n+class ConsolePrinter : public Printer\n+{\n+public:\n+    void header();\n+    void result(const State& state);\n+    void footer();\n+};\n+\n+// creates box plot with plotly.js\n+class PlotlyPrinter : public Printer\n+{\n+public:\n+    void header();\n+    void result(const State& state);\n+    void footer();\n+};\n+\n+class State\n+{\n+public:\n+    std::string name;\n+    uint64_t numItersLeft;\n+    const uint64_t numIters;\n+    const uint64_t numEvals;\n+    std::vector<double> elapsedResults;\n+    Printer& printer;\n+\n+    std::chrono::time_point<std::chrono::high_resolution_clock> startTime;\n+\n+    bool UpdateTimer(std::chrono::time_point<std::chrono::high_resolution_clock> finishTime);\n+    void PrintResults() const;\n+    State(std::string _name, uint64_t _numEvals, double _numIters, Printer& _printer) : name(_name), numItersLeft(0), numIters(_numIters), numEvals(_numEvals), printer(_printer)\n+    {\n+    }\n+\n+    inline bool KeepRunning()\n+    {\n+        if (numItersLeft--) {\n+            return true;\n         }\n+\n+        bool result = UpdateTimer(std::chrono::high_resolution_clock::now());\n+        startTime = std::chrono::high_resolution_clock::now();\n+        return result;\n+    }\n     };\n \n     typedef std::function<void(State&)> BenchFunction;\n \n     class BenchRunner\n     {\n-        typedef std::map<std::string, BenchFunction> BenchmarkMap;\n+        struct Bench {\n+            BenchFunction func;\n+            double avgTime;\n+        };\n+        typedef std::map<std::string, Bench> BenchmarkMap;\n         static BenchmarkMap &benchmarks();\n \n     public:\n-        BenchRunner(std::string name, BenchFunction func);\n+        BenchRunner(std::string name, BenchFunction func, double avgTime);\n \n-        static void RunAll(double elapsedTimeForOne=1.0);\n+        static void RunAll(Printer& printer, uint64_t numEvals = 1, double elapsedTimeForOneEval = 0.5, const std::string& filter = \".*\", bool isListOnly = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147801124",
      "id" : 147801124,
      "original_commit_id" : "f4d9ade8f6fa57e17468c420e75229af1d3ea8b8",
      "original_position" : 117,
      "path" : "src/bench/bench.h",
      "position" : null,
      "pull_request_review_id" : 72934969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147801124",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147900381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147900381"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks a lot for the review! I'll see if I can fix all that over the weekend.",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-10-31T05:49:17Z",
      "diff_hunk" : "@@ -10,16 +10,31 @@\n #include \"util.h\"\n #include \"random.h\"\n \n+#include <memory>\n+\n int\n main(int argc, char** argv)\n {\n+    gArgs.ParseParameters(argc, argv);\n+\n     SHA256AutoDetect();\n     RandomInit();\n     ECC_Start();\n     SetupEnvironment();\n     fPrintToDebugLog = false; // don't want to write to debug.log file\n \n-    benchmark::BenchRunner::RunAll();\n+    int64_t evaluations = gArgs.GetArg(\"-evals\", 5);\n+    std::string regexFilter = gArgs.GetArg(\"-filter\", \".*\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r147900381",
      "id" : 147900381,
      "in_reply_to_id" : 147792454,
      "original_commit_id" : "f4d9ade8f6fa57e17468c420e75229af1d3ea8b8",
      "original_position" : 19,
      "path" : "src/bench/bench_bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : 73060184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147900381",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r148651456"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148651456"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is somewhat confusing. Maybe call it the scaling factor for *runtime* to make it clear what it actually means?",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-02T20:33:15Z",
      "diff_hunk" : "@@ -9,17 +9,50 @@\n #include \"validation.h\"\n #include \"util.h\"\n #include \"random.h\"\n+#include \"init.h\"\n+\n+#include <memory>\n+\n+static const int64_t DEFAULT_BENCH_EVALUATIONS = 5;\n+static const char* DEFAULT_BENCH_FILTER = \".*\";\n+static const int64_t DEFAULT_BENCH_SCALING = 1000;\n+static const char* DEFAULT_BENCH_PRINTER = \"console\";\n \n int\n main(int argc, char** argv)\n {\n+    gArgs.ParseParameters(argc, argv);\n+\n+    if (gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") || gArgs.IsArgSet(\"-help\")) {\n+        std::cout << HelpMessageGroup(_(\"Options:\"))\n+                  << HelpMessageOpt(\"-?\", _(\"Print this help message and exit\"))\n+                  << HelpMessageOpt(\"-list\", _(\"List benchmarks without executing them. Can be combined with -scaling and -filter\"))\n+                  << HelpMessageOpt(\"-evals=<n>\", strprintf(_(\"Number of measurement evaluations to perform. (default: %u)\"), DEFAULT_BENCH_EVALUATIONS))\n+                  << HelpMessageOpt(\"-filter=<regex>\", strprintf(_(\"Regular expression filter to select benchmark by name (default: %s)\"), DEFAULT_BENCH_FILTER))\n+                  << HelpMessageOpt(\"-scaling=<n>\", strprintf(_(\"Scaling factor for iterations. The specified factor is then divided by 1000, so e.g. 500 results in a factor 0.5 (default: %u)\"), DEFAULT_BENCH_SCALING))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r148651456",
      "id" : 148651456,
      "original_commit_id" : "08e77aa51a57a645e00fe9d3a62055c586a97285",
      "original_position" : 24,
      "path" : "src/bench/bench_bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : 73930001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148651456",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r148652476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148652476"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Grr, I kinda feel yucky having code that generates a tracking request for people who want to see the output. Is it possible to check plotly in (does it have a compatible license?) or can we just put the graphs in simple cli form and skip the html output?",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-02T20:37:33Z",
      "diff_hunk" : "@@ -8,97 +8,120 @@\n #include <assert.h>\n #include <iostream>\n #include <iomanip>\n-#include <sys/time.h>\n+#include <chrono>\n+#include <algorithm>\n+#include <regex>\n \n-benchmark::BenchRunner::BenchmarkMap &benchmark::BenchRunner::benchmarks() {\n-    static std::map<std::string, benchmark::BenchFunction> benchmarks_map;\n-    return benchmarks_map;\n+void benchmark::ConsolePrinter::header()\n+{\n+    std::cout << \"# Benchmark, evals, iterations, total, min, max, median\" << std::endl;\n }\n \n-static double gettimedouble(void) {\n-    struct timeval tv;\n-    gettimeofday(&tv, nullptr);\n-    return tv.tv_usec * 0.000001 + tv.tv_sec;\n+void benchmark::ConsolePrinter::result(const State& state)\n+{\n+    auto results = state.m_elapsed_results;\n+    std::sort(results.begin(), results.end());\n+\n+    double total = state.m_num_iters * std::accumulate(results.begin(), results.end(), 0.0);\n+\n+    size_t mid = results.size() / 2;\n+    double median = results[mid];\n+    if (0 == results.size() % 2) {\n+        median = (results[mid] + results[mid + 1]) / 2;\n+    }\n+    std::cout << std::setprecision(6);\n+    std::cout << state.m_name << \", \" << state.m_num_evals << \", \" << state.m_num_iters << \", \" << total << \", \" << results.front() << \", \" << results.back() << \", \" << median << std::endl;\n }\n \n-benchmark::BenchRunner::BenchRunner(std::string name, benchmark::BenchFunction func)\n+void benchmark::ConsolePrinter::footer() {}\n+void benchmark::PlotlyPrinter::header()\n {\n-    benchmarks().insert(std::make_pair(name, func));\n+    std::cout << \"<html><head>\"\n+              << \"<script src=\\\"https://cdn.plot.ly/plotly-latest.min.js\\\"></script>\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r148652476",
      "id" : 148652476,
      "original_commit_id" : "08e77aa51a57a645e00fe9d3a62055c586a97285",
      "original_position" : 43,
      "path" : "src/bench/bench.cpp",
      "position" : null,
      "pull_request_review_id" : 73930001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148652476",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149200562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149200562"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is wrong for is_list_only - maybe is_list_only mode should also call result() with some other parameter for the mode?",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-06T20:55:40Z",
      "diff_hunk" : "@@ -8,97 +8,120 @@\n #include <assert.h>\n #include <iostream>\n #include <iomanip>\n-#include <sys/time.h>\n+#include <chrono>\n+#include <algorithm>\n+#include <regex>\n \n-benchmark::BenchRunner::BenchmarkMap &benchmark::BenchRunner::benchmarks() {\n-    static std::map<std::string, benchmark::BenchFunction> benchmarks_map;\n-    return benchmarks_map;\n+void benchmark::ConsolePrinter::header()\n+{\n+    std::cout << \"# Benchmark, evals, iterations, total, min, max, median\" << std::endl;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149200562",
      "id" : 149200562,
      "original_commit_id" : "d61637bf94284bc9cd90993fce0926064c7317aa",
      "original_position" : 14,
      "path" : "src/bench/bench.cpp",
      "position" : 13,
      "pull_request_review_id" : 73930001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149200562",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149201117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149201117"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This function is neither defined, nor used.",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-06T20:57:52Z",
      "diff_hunk" : "@@ -31,50 +33,97 @@ static void CODE_TO_TIME(benchmark::State& state)\n     ... do any cleanup needed...\n }\n \n-BENCHMARK(CODE_TO_TIME);\n+// default to running benchmark for 5000 iterations\n+BENCHMARK(CODE_TO_TIME, 5000);\n \n  */\n- \n+\n namespace benchmark {\n+class Printer;\n \n-    class State {\n-        std::string name;\n-        double maxElapsed;\n-        double beginTime;\n-        double lastTime, minTime, maxTime;\n-        uint64_t count;\n-        uint64_t countMask;\n-        uint64_t beginCycles;\n-        uint64_t lastCycles;\n-        uint64_t minCycles;\n-        uint64_t maxCycles;\n-    public:\n-        State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n-            minTime = std::numeric_limits<double>::max();\n-            maxTime = std::numeric_limits<double>::min();\n-            minCycles = std::numeric_limits<uint64_t>::max();\n-            maxCycles = std::numeric_limits<uint64_t>::min();\n-            countMask = 1;\n-        }\n-        bool KeepRunning();\n-    };\n+class State\n+{\n+public:\n+    std::string m_name;\n+    uint64_t m_num_iters_left;\n+    const uint64_t m_num_iters;\n+    const uint64_t m_num_evals;\n+    std::vector<double> m_elapsed_results;\n+    Printer& m_printer;\n \n-    typedef std::function<void(State&)> BenchFunction;\n+    std::chrono::time_point<std::chrono::high_resolution_clock> m_start_time;\n \n-    class BenchRunner\n+    bool UpdateTimer(std::chrono::time_point<std::chrono::high_resolution_clock> finish_time);\n+    void PrintResults() const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149201117",
      "id" : 149201117,
      "original_commit_id" : "d61637bf94284bc9cd90993fce0926064c7317aa",
      "original_position" : 59,
      "path" : "src/bench/bench.h",
      "position" : null,
      "pull_request_review_id" : 73930001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149201117",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149467270"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149467270"
         }
      },
      "author_association" : "NONE",
      "body" : "Plotly.js is released under the MIT license: https://github.com/plotly/plotly.js/blob/master/LICENSE, so that should be pretty compatible :)\r\nThe HTML output is optional, and default output is commandline, so I did not see a problem with that.\r\nI've chosen it because the box plots are really nice, especially when using more evaluations this the output make it very visible how the runtime actually fluctuates. That makes comparisons much easier. It would be very hard to reproduce that in the command line.",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-07T18:50:22Z",
      "diff_hunk" : "@@ -8,97 +8,120 @@\n #include <assert.h>\n #include <iostream>\n #include <iomanip>\n-#include <sys/time.h>\n+#include <chrono>\n+#include <algorithm>\n+#include <regex>\n \n-benchmark::BenchRunner::BenchmarkMap &benchmark::BenchRunner::benchmarks() {\n-    static std::map<std::string, benchmark::BenchFunction> benchmarks_map;\n-    return benchmarks_map;\n+void benchmark::ConsolePrinter::header()\n+{\n+    std::cout << \"# Benchmark, evals, iterations, total, min, max, median\" << std::endl;\n }\n \n-static double gettimedouble(void) {\n-    struct timeval tv;\n-    gettimeofday(&tv, nullptr);\n-    return tv.tv_usec * 0.000001 + tv.tv_sec;\n+void benchmark::ConsolePrinter::result(const State& state)\n+{\n+    auto results = state.m_elapsed_results;\n+    std::sort(results.begin(), results.end());\n+\n+    double total = state.m_num_iters * std::accumulate(results.begin(), results.end(), 0.0);\n+\n+    size_t mid = results.size() / 2;\n+    double median = results[mid];\n+    if (0 == results.size() % 2) {\n+        median = (results[mid] + results[mid + 1]) / 2;\n+    }\n+    std::cout << std::setprecision(6);\n+    std::cout << state.m_name << \", \" << state.m_num_evals << \", \" << state.m_num_iters << \", \" << total << \", \" << results.front() << \", \" << results.back() << \", \" << median << std::endl;\n }\n \n-benchmark::BenchRunner::BenchRunner(std::string name, benchmark::BenchFunction func)\n+void benchmark::ConsolePrinter::footer() {}\n+void benchmark::PlotlyPrinter::header()\n {\n-    benchmarks().insert(std::make_pair(name, func));\n+    std::cout << \"<html><head>\"\n+              << \"<script src=\\\"https://cdn.plot.ly/plotly-latest.min.js\\\"></script>\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149467270",
      "id" : 149467270,
      "in_reply_to_id" : 148652476,
      "original_commit_id" : "08e77aa51a57a645e00fe9d3a62055c586a97285",
      "original_position" : 43,
      "path" : "src/bench/bench.cpp",
      "position" : null,
      "pull_request_review_id" : 74864917,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149467270",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149467525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149467525"
         }
      },
      "author_association" : "NONE",
      "body" : "fixed in the following commit",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-07T18:51:16Z",
      "diff_hunk" : "@@ -8,97 +8,120 @@\n #include <assert.h>\n #include <iostream>\n #include <iomanip>\n-#include <sys/time.h>\n+#include <chrono>\n+#include <algorithm>\n+#include <regex>\n \n-benchmark::BenchRunner::BenchmarkMap &benchmark::BenchRunner::benchmarks() {\n-    static std::map<std::string, benchmark::BenchFunction> benchmarks_map;\n-    return benchmarks_map;\n+void benchmark::ConsolePrinter::header()\n+{\n+    std::cout << \"# Benchmark, evals, iterations, total, min, max, median\" << std::endl;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149467525",
      "id" : 149467525,
      "in_reply_to_id" : 149200562,
      "original_commit_id" : "d61637bf94284bc9cd90993fce0926064c7317aa",
      "original_position" : 14,
      "path" : "src/bench/bench.cpp",
      "position" : 13,
      "pull_request_review_id" : 74865248,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149467525",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149467695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149467695"
         }
      },
      "author_association" : "NONE",
      "body" : "thanks, I've removed it",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-07T18:51:50Z",
      "diff_hunk" : "@@ -31,50 +33,97 @@ static void CODE_TO_TIME(benchmark::State& state)\n     ... do any cleanup needed...\n }\n \n-BENCHMARK(CODE_TO_TIME);\n+// default to running benchmark for 5000 iterations\n+BENCHMARK(CODE_TO_TIME, 5000);\n \n  */\n- \n+\n namespace benchmark {\n+class Printer;\n \n-    class State {\n-        std::string name;\n-        double maxElapsed;\n-        double beginTime;\n-        double lastTime, minTime, maxTime;\n-        uint64_t count;\n-        uint64_t countMask;\n-        uint64_t beginCycles;\n-        uint64_t lastCycles;\n-        uint64_t minCycles;\n-        uint64_t maxCycles;\n-    public:\n-        State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n-            minTime = std::numeric_limits<double>::max();\n-            maxTime = std::numeric_limits<double>::min();\n-            minCycles = std::numeric_limits<uint64_t>::max();\n-            maxCycles = std::numeric_limits<uint64_t>::min();\n-            countMask = 1;\n-        }\n-        bool KeepRunning();\n-    };\n+class State\n+{\n+public:\n+    std::string m_name;\n+    uint64_t m_num_iters_left;\n+    const uint64_t m_num_iters;\n+    const uint64_t m_num_evals;\n+    std::vector<double> m_elapsed_results;\n+    Printer& m_printer;\n \n-    typedef std::function<void(State&)> BenchFunction;\n+    std::chrono::time_point<std::chrono::high_resolution_clock> m_start_time;\n \n-    class BenchRunner\n+    bool UpdateTimer(std::chrono::time_point<std::chrono::high_resolution_clock> finish_time);\n+    void PrintResults() const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149467695",
      "id" : 149467695,
      "in_reply_to_id" : 149201117,
      "original_commit_id" : "d61637bf94284bc9cd90993fce0926064c7317aa",
      "original_position" : 59,
      "path" : "src/bench/bench.h",
      "position" : null,
      "pull_request_review_id" : 74865432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149467695",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149468707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149468707"
         }
      },
      "author_association" : "NONE",
      "body" : "I've updated the description now too",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-07T18:55:25Z",
      "diff_hunk" : "@@ -9,17 +9,50 @@\n #include \"validation.h\"\n #include \"util.h\"\n #include \"random.h\"\n+#include \"init.h\"\n+\n+#include <memory>\n+\n+static const int64_t DEFAULT_BENCH_EVALUATIONS = 5;\n+static const char* DEFAULT_BENCH_FILTER = \".*\";\n+static const int64_t DEFAULT_BENCH_SCALING = 1000;\n+static const char* DEFAULT_BENCH_PRINTER = \"console\";\n \n int\n main(int argc, char** argv)\n {\n+    gArgs.ParseParameters(argc, argv);\n+\n+    if (gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") || gArgs.IsArgSet(\"-help\")) {\n+        std::cout << HelpMessageGroup(_(\"Options:\"))\n+                  << HelpMessageOpt(\"-?\", _(\"Print this help message and exit\"))\n+                  << HelpMessageOpt(\"-list\", _(\"List benchmarks without executing them. Can be combined with -scaling and -filter\"))\n+                  << HelpMessageOpt(\"-evals=<n>\", strprintf(_(\"Number of measurement evaluations to perform. (default: %u)\"), DEFAULT_BENCH_EVALUATIONS))\n+                  << HelpMessageOpt(\"-filter=<regex>\", strprintf(_(\"Regular expression filter to select benchmark by name (default: %s)\"), DEFAULT_BENCH_FILTER))\n+                  << HelpMessageOpt(\"-scaling=<n>\", strprintf(_(\"Scaling factor for iterations. The specified factor is then divided by 1000, so e.g. 500 results in a factor 0.5 (default: %u)\"), DEFAULT_BENCH_SCALING))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r149468707",
      "id" : 149468707,
      "in_reply_to_id" : 148651456,
      "original_commit_id" : "08e77aa51a57a645e00fe9d3a62055c586a97285",
      "original_position" : 24,
      "path" : "src/bench/bench_bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : 74866609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149468707",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. The plotly.js issue could be worked around by requiring that a url be supplied when plotting.\r\n\r\nIt'd be nice if this could be rebased on #11562, as I think that's a simple logical subset of the changes here.",
      "created_at" : "2017-11-07T22:26:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-342644612",
      "id" : 342644612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-11-07T22:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342644612",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK. Adding HTML as an optional format is neat, please keep CSV support though I need it (but you do so that's great).\r\n\r\nNACK on checking plotly (or any JS code) into the repository.\r\n\r\nI think it's ok to use this URI by default for the HTML output, but agree that it should be possible to provide your own (e.g. if you've installed it somewhere on your local network, and want to avoid the internet access).\r\n\r\nAlso agree on rebasing on top of #11562, that one is ready for merge and will go in today.",
      "created_at" : "2017-11-08T03:50:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-342703092",
      "id" : 342703092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-11-08T04:11:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342703092",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I've rebased and squashed my changes on top of the current master, and added configurable plotly.js URL. That was the first time I've done a rebase, I hope I've done it correctly! The travis build is green but for some reason it shows as \"build is in progress\"?",
      "created_at" : "2017-11-09T05:48:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-343053970",
      "id" : 343053970,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-11-09T05:48:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343053970",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Don't worry about the travis-yellow. This happens from time to time.",
      "created_at" : "2017-11-09T15:55:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-343198843",
      "id" : 343198843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-11-09T15:55:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343198843",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase",
      "created_at" : "2017-11-10T15:34:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-343505057",
      "id" : 343505057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-11-10T15:34:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/343505057",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r150665361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150665361"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Don't forget to `#include <numeric>` for `std::accumulate`.",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-13T21:09:04Z",
      "diff_hunk" : "@@ -8,98 +8,135 @@\n #include <assert.h>\n #include <iostream>\n #include <iomanip>\n+#include <algorithm>\n+#include <regex>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r150665361",
      "id" : 150665361,
      "original_commit_id" : "6c31a3599a66a6a59b23919f6e3724b80e936485",
      "original_position" : 5,
      "path" : "src/bench/bench.cpp",
      "position" : 5,
      "pull_request_review_id" : 76249785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/150665361",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r151833786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151833786"
         }
      },
      "author_association" : "NONE",
      "body" : "thanks, updated!",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-18T09:24:53Z",
      "diff_hunk" : "@@ -8,98 +8,135 @@\n #include <assert.h>\n #include <iostream>\n #include <iomanip>\n+#include <algorithm>\n+#include <regex>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r151833786",
      "id" : 151833786,
      "in_reply_to_id" : 150665361,
      "original_commit_id" : "6c31a3599a66a6a59b23919f6e3724b80e936485",
      "original_position" : 5,
      "path" : "src/bench/bench.cpp",
      "position" : 5,
      "pull_request_review_id" : 77611983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151833786",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I have removed the cycles statistics because I personally don't think it is necessary, and it simplifies the code. I could add it back though if others think its a helpful statistic",
      "created_at" : "2017-11-18T09:42:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-345430912",
      "id" : 345430912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-11-18T09:42:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345430912",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r153229334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153229334"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit (unrelated to your changes): Condition should be negated. \r\n\r\nMind to add a commit for this?",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-11-27T15:31:25Z",
      "diff_hunk" : "@@ -8,98 +8,136 @@\n #include <assert.h>\n #include <iostream>\n #include <iomanip>\n+#include <algorithm>\n+#include <regex>\n+#include <numeric>\n \n-benchmark::BenchRunner::BenchmarkMap &benchmark::BenchRunner::benchmarks() {\n-    static std::map<std::string, benchmark::BenchFunction> benchmarks_map;\n+void benchmark::ConsolePrinter::header()\n+{\n+    std::cout << \"# Benchmark, evals, iterations, total, min, max, median\" << std::endl;\n+}\n+\n+void benchmark::ConsolePrinter::result(const State& state)\n+{\n+    auto results = state.m_elapsed_results;\n+    std::sort(results.begin(), results.end());\n+\n+    double total = state.m_num_iters * std::accumulate(results.begin(), results.end(), 0.0);\n+\n+    double front = 0;\n+    double back = 0;\n+    double median = 0;\n+\n+    if (!results.empty()) {\n+        front = results.front();\n+        back = results.back();\n+\n+        size_t mid = results.size() / 2;\n+        median = results[mid];\n+        if (0 == results.size() % 2) {\n+            median = (results[mid] + results[mid + 1]) / 2;\n+        }\n+    }\n+\n+    std::cout << std::setprecision(6);\n+    std::cout << state.m_name << \", \" << state.m_num_evals << \", \" << state.m_num_iters << \", \" << total << \", \" << front << \", \" << back << \", \" << median << std::endl;\n+}\n+\n+void benchmark::ConsolePrinter::footer() {}\n+benchmark::PlotlyPrinter::PlotlyPrinter(std::string plotly_url, int64_t width, int64_t height)\n+    : m_plotly_url(plotly_url), m_width(width), m_height(height)\n+{\n+}\n+\n+void benchmark::PlotlyPrinter::header()\n+{\n+    std::cout << \"<html><head>\"\n+              << \"<script src=\\\"\" << m_plotly_url << \"\\\"></script>\"\n+              << \"</head><body><div id=\\\"myDiv\\\" style=\\\"width:\" << m_width << \"px; height:\" << m_height << \"px\\\"></div>\"\n+              << \"<script> var data = [\"\n+              << std::endl;\n+}\n+\n+void benchmark::PlotlyPrinter::result(const State& state)\n+{\n+    std::cout << \"{ \" << std::endl\n+              << \"  name: '\" << state.m_name << \"', \" << std::endl\n+              << \"  y: [\";\n+\n+    const char* prefix = \"\";\n+    for (const auto& e : state.m_elapsed_results) {\n+        std::cout << prefix << std::setprecision(6) << e;\n+        prefix = \", \";\n+    }\n+    std::cout << \"],\" << std::endl\n+              << \"  boxpoints: 'all', jitter: 0.3, pointpos: 0, type: 'box',\"\n+              << std::endl\n+              << \"},\" << std::endl;\n+}\n+\n+void benchmark::PlotlyPrinter::footer()\n+{\n+    std::cout << \"]; var layout = { showlegend: false, yaxis: { rangemode: 'tozero', autorange: true } };\"\n+              << \"Plotly.newPlot('myDiv', data, layout);\"\n+              << \"</script></body></html>\";\n+}\n+\n+\n+benchmark::BenchRunner::BenchmarkMap& benchmark::BenchRunner::benchmarks()\n+{\n+    static std::map<std::string, Bench> benchmarks_map;\n     return benchmarks_map;\n }\n \n-benchmark::BenchRunner::BenchRunner(std::string name, benchmark::BenchFunction func)\n+benchmark::BenchRunner::BenchRunner(std::string name, benchmark::BenchFunction func, uint64_t num_iters_for_one_second)\n {\n-    benchmarks().insert(std::make_pair(name, func));\n+    benchmarks().insert(std::make_pair(name, Bench{func, num_iters_for_one_second}));\n }\n \n-void\n-benchmark::BenchRunner::RunAll(benchmark::duration elapsedTimeForOne)\n+void benchmark::BenchRunner::RunAll(Printer& printer, uint64_t num_evals, double scaling, const std::string& filter, bool is_list_only)\n {\n     perf_init();\n     if (std::ratio_less_equal<benchmark::clock::period, std::micro>::value) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r153229334",
      "id" : 153229334,
      "original_commit_id" : "9b4567c7b8a59b8df34f3023570656629c0741b7",
      "original_position" : 99,
      "path" : "src/bench/bench.cpp",
      "position" : null,
      "pull_request_review_id" : 79204853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153229334",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r154492780"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154492780"
         }
      },
      "author_association" : "NONE",
      "body" : "Ah, thanks for noting. I have fixed that message and rebased & squashed everything",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-12-02T10:02:57Z",
      "diff_hunk" : "@@ -8,98 +8,136 @@\n #include <assert.h>\n #include <iostream>\n #include <iomanip>\n+#include <algorithm>\n+#include <regex>\n+#include <numeric>\n \n-benchmark::BenchRunner::BenchmarkMap &benchmark::BenchRunner::benchmarks() {\n-    static std::map<std::string, benchmark::BenchFunction> benchmarks_map;\n+void benchmark::ConsolePrinter::header()\n+{\n+    std::cout << \"# Benchmark, evals, iterations, total, min, max, median\" << std::endl;\n+}\n+\n+void benchmark::ConsolePrinter::result(const State& state)\n+{\n+    auto results = state.m_elapsed_results;\n+    std::sort(results.begin(), results.end());\n+\n+    double total = state.m_num_iters * std::accumulate(results.begin(), results.end(), 0.0);\n+\n+    double front = 0;\n+    double back = 0;\n+    double median = 0;\n+\n+    if (!results.empty()) {\n+        front = results.front();\n+        back = results.back();\n+\n+        size_t mid = results.size() / 2;\n+        median = results[mid];\n+        if (0 == results.size() % 2) {\n+            median = (results[mid] + results[mid + 1]) / 2;\n+        }\n+    }\n+\n+    std::cout << std::setprecision(6);\n+    std::cout << state.m_name << \", \" << state.m_num_evals << \", \" << state.m_num_iters << \", \" << total << \", \" << front << \", \" << back << \", \" << median << std::endl;\n+}\n+\n+void benchmark::ConsolePrinter::footer() {}\n+benchmark::PlotlyPrinter::PlotlyPrinter(std::string plotly_url, int64_t width, int64_t height)\n+    : m_plotly_url(plotly_url), m_width(width), m_height(height)\n+{\n+}\n+\n+void benchmark::PlotlyPrinter::header()\n+{\n+    std::cout << \"<html><head>\"\n+              << \"<script src=\\\"\" << m_plotly_url << \"\\\"></script>\"\n+              << \"</head><body><div id=\\\"myDiv\\\" style=\\\"width:\" << m_width << \"px; height:\" << m_height << \"px\\\"></div>\"\n+              << \"<script> var data = [\"\n+              << std::endl;\n+}\n+\n+void benchmark::PlotlyPrinter::result(const State& state)\n+{\n+    std::cout << \"{ \" << std::endl\n+              << \"  name: '\" << state.m_name << \"', \" << std::endl\n+              << \"  y: [\";\n+\n+    const char* prefix = \"\";\n+    for (const auto& e : state.m_elapsed_results) {\n+        std::cout << prefix << std::setprecision(6) << e;\n+        prefix = \", \";\n+    }\n+    std::cout << \"],\" << std::endl\n+              << \"  boxpoints: 'all', jitter: 0.3, pointpos: 0, type: 'box',\"\n+              << std::endl\n+              << \"},\" << std::endl;\n+}\n+\n+void benchmark::PlotlyPrinter::footer()\n+{\n+    std::cout << \"]; var layout = { showlegend: false, yaxis: { rangemode: 'tozero', autorange: true } };\"\n+              << \"Plotly.newPlot('myDiv', data, layout);\"\n+              << \"</script></body></html>\";\n+}\n+\n+\n+benchmark::BenchRunner::BenchmarkMap& benchmark::BenchRunner::benchmarks()\n+{\n+    static std::map<std::string, Bench> benchmarks_map;\n     return benchmarks_map;\n }\n \n-benchmark::BenchRunner::BenchRunner(std::string name, benchmark::BenchFunction func)\n+benchmark::BenchRunner::BenchRunner(std::string name, benchmark::BenchFunction func, uint64_t num_iters_for_one_second)\n {\n-    benchmarks().insert(std::make_pair(name, func));\n+    benchmarks().insert(std::make_pair(name, Bench{func, num_iters_for_one_second}));\n }\n \n-void\n-benchmark::BenchRunner::RunAll(benchmark::duration elapsedTimeForOne)\n+void benchmark::BenchRunner::RunAll(Printer& printer, uint64_t num_evals, double scaling, const std::string& filter, bool is_list_only)\n {\n     perf_init();\n     if (std::ratio_less_equal<benchmark::clock::period, std::micro>::value) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r154492780",
      "id" : 154492780,
      "in_reply_to_id" : 153229334,
      "original_commit_id" : "9b4567c7b8a59b8df34f3023570656629c0741b7",
      "original_position" : 99,
      "path" : "src/bench/bench.cpp",
      "position" : null,
      "pull_request_review_id" : 80671960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154492780",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 846ae3e5143a3959a03fe9bdff78e0253ef38a37",
      "created_at" : "2017-12-13T22:47:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-351550052",
      "id" : 351550052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-13T22:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351550052",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code-level utACK 846ae3e5143a3959a03fe9bdff78e0253ef38a37, but there are a few iteration counts that seem much too high (or low). My output is below (take note of CCheckQueueSpeed which took much, much too long, as well as CCheckQueueSpeedPrevectorJob, as well as a few which were much too short.\r\n\r\n # Benchmark, evals, iterations, total, min, max, median\r\nBase58CheckEncode, 5, 320000, 4.95443, 3.03136e-06, 3.15128e-06, 3.10137e-06\r\nBase58Decode, 5, 800000, 4.70946, 1.15549e-06, 1.19147e-06, 1.17997e-06\r\nBase58Encode, 5, 470000, 4.69162, 1.9516e-06, 2.03356e-06, 2.00767e-06\r\nBenchLockedPool, 5, 530, 4.77861, 0.00174317, 0.00186048, 0.00180833\r\nCCheckQueueSpeed, 5, 29000, 169.862, 0.00116512, 0.00117693, 0.00117196\r\nCCheckQueueSpeedPrevectorJob, 5, 1400, 24.7343, 0.00344175, 0.00358993, 0.00354375\r\nCCoinsCaching, 5, 170000, 5.63809, 6.55766e-06, 6.74362e-06, 6.64618e-06\r\nCoinSelection, 5, 650, 7.56354, 0.00229932, 0.00235094, 0.00234165\r\nDeserializeAndCheckBlockTest, 5, 160, 6.90174, 0.00853605, 0.00879497, 0.00859933\r\nDeserializeBlockTest, 5, 130, 4.66008, 0.00716357, 0.00717861, 0.00716775\r\nFastRandom_1bit, 5, 44000000, 0.552348, 2.49383e-09, 2.5533e-09, 2.50127e-09\r\nFastRandom_32bit, 5, 110000000, 5.47546, 9.9329e-09, 1.00259e-08, 9.93521e-09\r\nMempoolEviction, 5, 41000, 4.77384, 2.32089e-05, 2.34167e-05, 2.3244e-05\r\nPrevectorClear, 5, 5600, 5.79097, 0.000206768, 0.000206858, 0.000206819\r\nPrevectorDestructor, 5, 5700, 5.12332, 0.00017952, 0.00018031, 0.000179633\r\nRIPEMD160, 5, 440, 5.56629, 0.00252712, 0.00254049, 0.00252763\r\nRollingBloom, 5, 1500000, 6.21419, 8.1511e-07, 8.77143e-07, 8.16809e-07\r\nSHA1, 5, 570, 5.67104, 0.00198533, 0.00199761, 0.00198967\r\nSHA256, 5, 340, 5.67169, 0.00322694, 0.00361889, 0.00325424\r\nSHA256_32b, 5, 4700000, 5.55119, 2.33977e-07, 2.40388e-07, 2.35284e-07\r\nSHA512, 5, 330, 5.45279, 0.00328487, 0.00334672, 0.00329141\r\nSipHash_32b, 5, 40000000, 5.66765, 2.82588e-08, 2.84166e-08, 2.83323e-08\r\nSleep100ms, 5, 10, 5.0036, 0.10007, 0.100075, 0.100071\r\nTrig, 5, 12000000, 1.45462, 2.28395e-08, 2.80425e-08, 2.35008e-08\r\nVerifyScriptBench, 5, 6300, 5.76116, 0.000181074, 0.000186656, 0.000182651\r\n",
      "created_at" : "2017-12-14T21:44:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-351845252",
      "id" : 351845252,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-14T21:44:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351845252",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2017-12-14T23:38:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-351869310",
      "id" : 351869310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-14T23:38:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351869310",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@martinus Can you share your results?\r\n\r\n@TheBlueMatt That is interesting. Running on my laptop gives similar results to yours with the exception of CCheckQueueSpeed and CCheckQueueSpeedPrevectorJob\r\n\r\ndiffer:\r\n![ccheckqueuespeed](https://user-images.githubusercontent.com/6399679/34064648-b0a9e0f4-e1c8-11e7-87d8-bb1c7a9c43ca.png)\r\n\r\nsimilar:\r\n![coinselection](https://user-images.githubusercontent.com/6399679/34064652-bd688ffc-e1c8-11e7-8046-214ea4f7bf59.png)\r\n\r\n\r\nMarcoFalke.txt:\r\n\r\n```\r\n# Benchmark, evals, iterations, total, min, max, median\r\nBase58CheckEncode, 5, 320000, 4.5474, 2.817e-06, 2.8636e-06, 2.84568e-06\r\nBase58Decode, 5, 800000, 3.82362, 9.30481e-07, 1.00586e-06, 9.49333e-07\r\nBase58Encode, 5, 470000, 4.7699, 1.86009e-06, 2.11548e-06, 2.05627e-06\r\nBenchLockedPool, 5, 530, 5.17102, 0.00175682, 0.00213842, 0.00190727\r\nCCheckQueueSpeed, 5, 29000, 23.8431, 0.000159138, 0.000169364, 0.000164902\r\nCCheckQueueSpeedPrevectorJob, 5, 1400, 6.47687, 0.000917759, 0.000934733, 0.000922342\r\nCCoinsCaching, 5, 170000, 4.86768, 5.59884e-06, 5.89609e-06, 5.68206e-06\r\nCoinSelection, 5, 650, 7.6276, 0.00218004, 0.00252972, 0.00234302\r\nDeserializeAndCheckBlockTest, 5, 160, 6.98462, 0.00763635, 0.0101189, 0.00814532\r\nDeserializeBlockTest, 5, 130, 4.60714, 0.00664361, 0.00766447, 0.00692787\r\nFastRandom_1bit, 5, 44000000, 0.428713, 1.93345e-09, 1.97208e-09, 1.94739e-09\r\nFastRandom_32bit, 5, 110000000, 4.87081, 8.54002e-09, 9.68865e-09, 8.64202e-09\r\nMempoolEviction, 5, 41000, 4.25868, 2.01973e-05, 2.16433e-05, 2.0531e-05\r\nPrevectorClear, 5, 5600, 4.10787, 0.000139865, 0.000152129, 0.000148594\r\nPrevectorDestructor, 5, 5700, 3.80067, 0.000130306, 0.000137978, 0.000133524\r\nRIPEMD160, 5, 440, 5.45262, 0.00240383, 0.00258753, 0.00243835\r\nRollingBloom, 5, 1500000, 6.32018, 7.26596e-07, 9.93319e-07, 7.94326e-07\r\nSHA1, 5, 570, 5.27207, 0.00177787, 0.00190894, 0.00186143\r\nSHA256, 5, 340, 5.01164, 0.00285627, 0.00317001, 0.00289666\r\nSHA256_32b, 5, 4700000, 4.91959, 2.04949e-07, 2.16811e-07, 2.09041e-07\r\nSHA512, 5, 330, 4.41158, 0.00265473, 0.00268366, 0.00267743\r\nSipHash_32b, 5, 40000000, 4.93749, 2.42605e-08, 2.48857e-08, 2.47638e-08\r\nSleep100ms, 5, 10, 5.0058, 0.100097, 0.100133, 0.100118\r\nTrig, 5, 12000000, 1.16958, 1.89401e-08, 2.04877e-08, 1.90709e-08\r\nVerifyScriptBench, 5, 6300, 4.50527, 0.000139754, 0.000145372, 0.000143697",
      "created_at" : "2017-12-15T23:51:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-352140092",
      "id" : 352140092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-15T23:51:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352140092",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "That's interesting, here are my results:\r\n\r\n```\r\n# Benchmark, evals, iterations, total, min, max, median\r\nBase58CheckEncode, 5, 320000, 5.79601, 3.47514e-06, 3.90062e-06, 3.56941e-06\r\nBase58Decode, 5, 800000, 5.68374, 1.35576e-06, 1.47075e-06, 1.43981e-06\r\nBase58Encode, 5, 470000, 5.97008, 2.29896e-06, 2.8671e-06, 2.47352e-06\r\nBenchLockedPool, 5, 530, 5.74901, 0.00202647, 0.00244975, 0.00208988\r\nCCheckQueueSpeed, 5, 29000, 4.64417, 3.06441e-05, 3.39189e-05, 3.14987e-05\r\nCCheckQueueSpeedPrevectorJob, 5, 1400, 5.73779, 0.000769057, 0.000853848, 0.000828896\r\nCCoinsCaching, 5, 170000, 5.82152, 6.65853e-06, 7.02337e-06, 6.89329e-06\r\nCoinSelection, 5, 650, 5.41396, 0.00160549, 0.00172544, 0.00165988\r\nDeserializeAndCheckBlockTest, 5, 160, 6.57906, 0.00803611, 0.00852187, 0.00820457\r\nDeserializeBlockTest, 5, 130, 4.45676, 0.00673637, 0.00707143, 0.00679454\r\nFastRandom_1bit, 5, 44000000, 0.545512, 2.36596e-09, 2.6505e-09, 2.48319e-09\r\nFastRandom_32bit, 5, 110000000, 5.45518, 9.6993e-09, 1.00983e-08, 9.95917e-09\r\nMempoolEviction, 5, 41000, 5.60891, 2.63059e-05, 3.01792e-05, 2.64325e-05\r\nPrevectorClear, 5, 5600, 5.59075, 0.000189645, 0.000213659, 0.000199472\r\nPrevectorDestructor, 5, 5700, 5.83946, 0.000179477, 0.000234454, 0.000197302\r\nRIPEMD160, 5, 440, 5.58772, 0.00239881, 0.00266644, 0.00254531\r\nRollingBloom, 5, 1500000, 6.05577, 6.86181e-07, 9.65984e-07, 7.73467e-07\r\nSHA1, 5, 570, 5.15691, 0.00179377, 0.00183837, 0.00179627\r\nSHA256, 5, 340, 5.21523, 0.00300338, 0.0030959, 0.00308264\r\nSHA256_32b, 5, 4700000, 5.28716, 2.20308e-07, 2.30364e-07, 2.25683e-07\r\nSHA512, 5, 330, 5.22515, 0.00310101, 0.00323767, 0.00316392\r\nSipHash_32b, 5, 40000000, 5.31217, 2.60762e-08, 2.69529e-08, 2.68093e-08\r\nSleep100ms, 5, 10, 5.03343, 0.10037, 0.10093, 0.100714\r\nTrig, 5, 12000000, 5.09343, 8.40781e-08, 8.57396e-08, 8.51671e-08\r\nVerifyScriptBench, 5, 6300, 5.47213, 0.000165754, 0.00018609, 0.000169795\r\n```\r\n\r\nI have configured the runtimes so that total times is somewhat close to 5 seconds on my PC, the only mistake I see is that I have set `FastRandom_1bit` to 10 times too little iterations. `Trig` is a pretty useless benchmark just as demonstrations, so the runtimes there do not really matter IMHO. All other benchmarks take roughly a bit over 5 seconds for me. I'm using g++ 5.4.0 on Linux\r\n\r\nIt's really interesting that the runtimes of `CCheckQueueSpeed` are so different. What compiler are you using?",
      "created_at" : "2017-12-16T07:18:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-352166612",
      "id" : 352166612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-16T07:18:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352166612",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Heh, I went and checked and the CCheckQueue bench tests are just (rather uselessly) testing inter-core latency...when I turn the core count way down using taskset things get much faster (2 non-HT cores seems to be the fastest, didnt test across physical CPUs, but assume it would be very slow). I'd suggest we either turn the bench off wholesale or we put some semi-realistic work in the check there.",
      "created_at" : "2017-12-18T01:06:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-352301942",
      "id" : 352301942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-18T01:06:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352301942",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, also this is on a many-core system, so the checkqueue bench spawns a ton of threads (it uses a dynamic count based on hardware), making the bench even more inconsistent between systems.",
      "created_at" : "2017-12-18T01:08:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-352302166",
      "id" : 352302166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-18T01:08:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352302166",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@martinus I don't want to hold up your pull request any longer. I really like how flexible the new design is to jump in and hack own stuff into it.\r\nHowever, since there seems to be issues arising from hardcoding the number of iterations, I'd propose the following solution:\r\n\r\n<strike>Add a commit that also hardcodes the number of cores in checkqueue.cpp to 2. E.g.\r\n\r\n```diff\r\ndiff --git a/src/bench/checkqueue.cpp b/src/bench/checkqueue.cpp\r\nindex e79c986792..55590c4a72 100644\r\n--- a/src/bench/checkqueue.cpp\r\n+++ b/src/bench/checkqueue.cpp\r\n@@ -5,3 +5,2 @@\r\n #include <bench/bench.h>\r\n-#include <util.h>\r\n #include <validation.h>\r\n@@ -17,3 +16,3 @@\r\n // particularly visible\r\n-static const int MIN_CORES = 2;\r\n+static constexpr int NUM_CORES = 2;\r\n static const size_t BATCHES = 101;\r\n@@ -33,4 +32,4 @@ static void CCheckQueueSpeed(benchmark::State& state)\r\n     boost::thread_group tg;\r\n-    for (auto x = 0; x < std::max(MIN_CORES, GetNumCores()); ++x) {\r\n-       tg.create_thread([&]{queue.Thread();});\r\n+    for (auto x = 0; x < NUM_CORES; ++x) {\r\n+        tg.create_thread([&] { queue.Thread(); });\r\n     }\r\n@@ -80,4 +79,4 @@ static void CCheckQueueSpeedPrevectorJob(benchmark::State& state)\r\n     boost::thread_group tg;\r\n-    for (auto x = 0; x < std::max(MIN_CORES, GetNumCores()); ++x) {\r\n-       tg.create_thread([&]{queue.Thread();});\r\n+    for (auto x = 0; x < NUM_CORES; ++x) {\r\n+        tg.create_thread([&] { queue.Thread(); });\r\n     }\r\n```",
      "created_at" : "2017-12-19T22:34:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-352907424",
      "id" : 352907424,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-19T22:36:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352907424",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt suggested to get rid of the test, since it is not really a useful benchmark. I am fine with that, too.\r\n\r\n(Make sure to add it as separate commit, so it is easier to review)",
      "created_at" : "2017-12-19T22:36:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-352907682",
      "id" : 352907682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-19T22:36:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352907682",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r158134229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158134229"
         }
      },
      "author_association" : "OWNER",
      "body" : "Why does this add a dependency on init.h?",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-12-20T20:59:45Z",
      "diff_hunk" : "@@ -9,17 +9,64 @@\n #include <validation.h>\n #include <util.h>\n #include <random.h>\n+#include <init.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r158134229",
      "id" : 158134229,
      "original_commit_id" : "33dbba421db8d57919e45016bc6b5efb65af15df",
      "original_position" : 4,
      "path" : "src/bench/bench_bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : 84895532,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158134229",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r158134567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158134567"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why the reason for this change. It hides a valid warning for me at least:\r\n\r\n```\r\nArgs undocumented: 1\r\nset(['-plot-height'])",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-12-20T21:01:20Z",
      "diff_hunk" : "@@ -15,9 +15,9 @@\n import sys\n \n FOLDER_GREP = 'src'\n-FOLDER_TEST = 'src/test/'\n+FOLDER_TEST = 'src/(test|bench)/'",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r158134567",
      "id" : 158134567,
      "original_commit_id" : "33dbba421db8d57919e45016bc6b5efb65af15df",
      "original_position" : 5,
      "path" : "contrib/devtools/check-doc.py",
      "position" : null,
      "pull_request_review_id" : 84895967,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158134567",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r158134708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158134708"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Arg should say \"-plot-height=<x>\" to make the python check happy.",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-12-20T21:02:06Z",
      "diff_hunk" : "@@ -9,17 +9,64 @@\n #include <validation.h>\n #include <util.h>\n #include <random.h>\n+#include <init.h>\n+\n+#include <boost/lexical_cast.hpp>\n+\n+#include <memory>\n+\n+static const int64_t DEFAULT_BENCH_EVALUATIONS = 5;\n+static const char* DEFAULT_BENCH_FILTER = \".*\";\n+static const char* DEFAULT_BENCH_SCALING = \"1.0\";\n+static const char* DEFAULT_BENCH_PRINTER = \"console\";\n+static const char* DEFAULT_PLOT_PLOTLYURL = \"https://cdn.plot.ly/plotly-latest.min.js\";\n+static const int64_t DEFAULT_PLOT_WIDTH = 1024;\n+static const int64_t DEFAULT_PLOT_HEIGHT = 768;\n \n int\n main(int argc, char** argv)\n {\n+    gArgs.ParseParameters(argc, argv);\n+\n+    if (gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") || gArgs.IsArgSet(\"-help\")) {\n+        std::cout << HelpMessageGroup(_(\"Options:\"))\n+                  << HelpMessageOpt(\"-?\", _(\"Print this help message and exit\"))\n+                  << HelpMessageOpt(\"-list\", _(\"List benchmarks without executing them. Can be combined with -scaling and -filter\"))\n+                  << HelpMessageOpt(\"-evals=<n>\", strprintf(_(\"Number of measurement evaluations to perform. (default: %u)\"), DEFAULT_BENCH_EVALUATIONS))\n+                  << HelpMessageOpt(\"-filter=<regex>\", strprintf(_(\"Regular expression filter to select benchmark by name (default: %s)\"), DEFAULT_BENCH_FILTER))\n+                  << HelpMessageOpt(\"-scaling=<n>\", strprintf(_(\"Scaling factor for benchmark's runtime (default: %u)\"), DEFAULT_BENCH_SCALING))\n+                  << HelpMessageOpt(\"-printer=(console|plot)\", strprintf(_(\"Choose printer format. console: print data to console. plot: Print results as HTML graph (default: %s)\"), DEFAULT_BENCH_PRINTER))\n+                  << HelpMessageOpt(\"-plot-plotlyurl=<uri>\", strprintf(_(\"URL to use for plotly.js (default: %s)\"), DEFAULT_PLOT_PLOTLYURL))\n+                  << HelpMessageOpt(\"-plot-width=<x>\", strprintf(_(\"Plot width in pixel (default: %u)\"), DEFAULT_PLOT_WIDTH))\n+                  << HelpMessageOpt(\"-plot-width=<x>\", strprintf(_(\"Plot height in pixel (default: %u)\"), DEFAULT_PLOT_HEIGHT));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r158134708",
      "id" : 158134708,
      "original_commit_id" : "33dbba421db8d57919e45016bc6b5efb65af15df",
      "original_position" : 33,
      "path" : "src/bench/bench_bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : 84895967,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T20:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158134708",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I think I made my branch kaputt while trying to rebase :-(",
      "created_at" : "2017-12-21T20:42:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-353453059",
      "id" : 353453059,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-21T20:42:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353453059",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Git commits are unkaputtbar. Should be trivial to recover. Give me a sec...\n\nOn Dec 21, 2017 15:43, \"Martin Ankerl\" <notifications@github.com> wrote:\n\nI think I made my branch kaputt while trying to rebase :-(\n\nÃ¢ÂÂ\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\n<https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-353453059>, or mute\nthe thread\n<https://github.com/notifications/unsubscribe-auth/AGGmv1sgm_8LoAiTDtAlTAw0E1S0EiiKks5tCsLogaJpZM4P8dRz>\n.\n",
      "created_at" : "2017-12-21T22:10:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-353470404",
      "id" : 353470404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-21T22:10:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353470404",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "git checkout improved-benchmarking\r\ngit reset --hard 48ea572e79e1f63a5de4025d02ba72a666bcdc95\r\ngit rebase 604e08c83cf58ca7e7cda2ab284c1ace7bb12977\r\n# Solve the merge conflict (Should be straightforward): vim src/bench/checkqueue.cpp\r\ngit add src/bench/checkqueue.cpp && git rebase --continue\r\ngit rebase --interactive HEAD~4\r\n# Adjust the prefixes, and the order of the commits, such that it says (approx):\r\n# pick foobaa0 Improved microbenchmarking with multiple features.\r\n# f      foobaa1 increased number of iterations so it takes about 5 seconds\r\n# f      foobaa2 removed unused init.h include fixed argument help check for bench\r\n# pick foobaa3 Removed CCheckQueueSpeed benchmark\r\ngit push origin improved-benchmarking --force",
      "created_at" : "2017-12-21T22:27:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-353473610",
      "id" : 353473610,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-21T22:30:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353473610",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r158393977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158393977"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Don't forget to remove this as well",
      "commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "created_at" : "2017-12-21T22:35:22Z",
      "diff_hunk" : "@@ -17,7 +17,7 @@\n FOLDER_GREP = 'src'\n FOLDER_TEST = 'src/test/'\n CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/%s' % FOLDER_GREP\n-CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -v '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)\n+CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -Ev '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#discussion_r158393977",
      "id" : 158393977,
      "original_commit_id" : "e63f31138c15f91d717c47af337448f308e3456c",
      "original_position" : 5,
      "path" : "contrib/devtools/check-doc.py",
      "position" : 5,
      "pull_request_review_id" : 85201160,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11517",
      "updated_at" : "2017-12-21T22:35:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158393977",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks a lot @MarcoFalke!",
      "created_at" : "2017-12-23T10:22:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-353718584",
      "id" : 353718584,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-23T10:22:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353718584",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK 760af84",
      "created_at" : "2017-12-23T13:52:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-353727271",
      "id" : 353727271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-23T13:52:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353727271",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Post-merge checked that the rebase was done correct:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 760af84072408ba53d009e868fccc25fb186d40c\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIcBAEBCgAGBQJaPpFpAAoJENLqSFDnUosl6n4QAKHR/UGqeuxq0CJHWsaP2gX/\r\nJIG2y99LkAdepKBIUAaHxwSiLjUVPFX+8m+v5sdgcUuTMzhnF/oto59WDG7UJ5RN\r\nUTw+rGcZuFN8aBBcgtrLCKASjLVsAtImIESnx8uOgT+NQ2ShNtmwlbazNBmupx6e\r\nyChi665E30Olw5w7CCDHPKttzZozp5ZoCCTjMlYChJC9F7fr9+jmgr4cLhHrRCIt\r\nWtO874M6lzi45LJEPL6waLpV+DakCmss733iVwf9eb6aEvrJ6Ix2TSGiIRyLlarZ\r\nMSCEBEHJbEmYOxQmZtGAuTd+9dZHR1vuEQiWB9wbJaggb9K+/7aBTsHd7/h/XEvr\r\nDXb1wFiFmNjNytpqsIgYeOz1T3SK7vuLod9uFXSXx9TEc4/i91RuHZgQ9kBr1T8w\r\nBrYBzSlSAziJ5fqKthfShj1C3X3Wpj9axcVAxFyPo1h+JbamVUDAl8B5afSPtkY3\r\nh62TWy4n4KhYEqqBQfMi2UUNhyEvwR46MOVj9i3UrEemRnL/OtxnkitFa5mhqBi5\r\neye5MeRXgYvLSRRHUoErtx3W5wcpC+8DCF/CnHLKUiyvCWD74XDhhss7TRdePcjq\r\no103bXGqBvR8IjQT6WYqVZbkDkHBBIpqPrkEW/icp8MJLHsiqvI1ZR7eqXQxlHEC\r\nnfaCXEa0qfx+Qvd5+Ozp\r\n=siBw\r\n-----END PGP SIGNATURE-----",
      "created_at" : "2017-12-23T17:25:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11517#issuecomment-353738141",
      "id" : 353738141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11517",
      "updated_at" : "2017-12-23T17:25:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353738141",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
