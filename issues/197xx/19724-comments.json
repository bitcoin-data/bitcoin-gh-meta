[
   {
      "author_association" : "MEMBER",
      "body" : "I'm not 100% convinced about replacing `IsAddrRelayPeer()` with `RelayAddrsWithConn()`  9345f9c9d47a88987606d1421823914a4c48dbf9. \r\n\r\nPros: \r\n- It is more direct to check the connection type instead of a (missing) data structure based on the connection type.\r\n- Easy to update logic in the future \r\n- Less mental overhead, less code touch points to glean intention. \r\n\r\nCons: \r\n- We are now checking the same conditional in two places- [[1](https://github.com/bitcoin/bitcoin/pull/19724/commits/9345f9c9d47a88987606d1421823914a4c48dbf9#diff-1a8b9d1ad0a6fda5e751286c73102fc2R867)] & [[2](https://github.com/bitcoin/bitcoin/blob/master/src/net.cpp#L2783)], and need to manually ensure they do not fall out of sync. \r\n\r\nCurious to hear what other reviewers think is preferable. ",
      "created_at" : "2020-08-14T22:32:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-674298044",
      "id" : 674298044,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDI5ODA0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T22:59:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674298044",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@amitiuttarwar I think it makes sense to make the addr-relay decision depend on the connection type. That should be the most authoritative information about the connection. Sure, it's duplication, but if we accidentally forget to create the necessary data structures, test will fail; if we accidentally create them if they're not needed, at worst we've wasted a bit of memory we're already ok with for other nodes.",
      "created_at" : "2020-08-14T23:53:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-674314573",
      "id" : 674314573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDMxNDU3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T23:53:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674314573",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r470950246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470950246"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit:\r\n\r\n```suggestion\r\n                switch (pnode->m_conn_type) {\r\n```\r\n\r\nif you decide to do style-fixups, it would probably be good to do all of them in one go or not at all. Maybe with clang-format-diff?   https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-15T07:38:46Z",
      "diff_hunk" : "@@ -1841,11 +1841,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 // but inbound and manual peers do not use our outbound slots. Inbound peers\n                 // also have the added issue that they could be attacker controlled and used\n                 // to prevent us from connecting to particular hosts if we used them here.\n-                switch(pnode->m_conn_type){\n+                switch (pnode->m_conn_type){",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r470950246",
      "id" : 470950246,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk1MDI0Ng==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 1844,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 467955141,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470950246",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r470962473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470962473"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we're cleaning this up, we should really clean it up and move the `connman.MarkAddressGood()` out of this if statement, since it's not related to address advertising at all. Having it in the same conditional is a trap for developers to fall into.\r\n\r\n(specifically, a developer might think \"we don't need to advertise our address to FEELER connections, since we disconnect before we actually send the ADDR or GETADDR messages, so we can remove FEELER from AdvertiseAddressToConn\", but doing that breaks our FEELER connection logic, because `MarkAddressGood()` needs to be called to mark the address as good)\r\n\r\ncc @sdaftuar ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-15T10:16:06Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r470962473",
      "id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MjQ3Mw==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 467962627,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470962473",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Strong strong concept ACK.\r\n\r\nI think it'd be good to extract everything in the `while (!interruptNet)` in `ThreadOpenConnections()` into its own function since deeply nested while/for/if blocks obscure control flow and are very often the sources of bugs. Doing that might be scope creep for this PR though.",
      "created_at" : "2020-08-15T10:18:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-674379263",
      "id" : 674379263,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDM3OTI2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-15T10:18:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674379263",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r471019849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471019849"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was looking at this more and I believe we should leave the MarkAddressGood call in the if-block, though it needs an explanationâ the reason (I think) is that we donât want block-relay connections to leave a trace in the addrman that could be leaked by an attacker sniffing our addr responses.\r\n\r\nSo this just needs a comment explaining why itâs in here.\r\n",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-15T18:08:07Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r471019849",
      "id" : 471019849,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAxOTg0OQ==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 468009053,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471019849",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r471090087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471090087"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you explain this a bit? I think you're saying that if we connect out to a peer that we use for block-relay-only we don't want to mark it as good (essentially move it from New to Tried and update the last successful connect time) because then another peer might be able to tell that we've connected to them?\r\n\r\nMy understanding of how we respond to `getaddr` messages is that we'll respond with (up to) 1000 records taken at random from all records, regardless of whether they're in New or Tried, so marking a peer as good won't change whether we include it in `addr` responses.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-16T09:38:35Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r471090087",
      "id" : 471090087,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA5MDA4Nw==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 468049187,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471090087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r471131850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471131850"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't have a great understanding of the details of how addrman works or how we interact with it -- so possibly the fear was unfounded.  It used to be the case that you could trivially download a listening node's addrman though, and it also used to be the case (perhaps only long ago?) that we'd leak information about current connections based on time stamps stored in our addrman, so when I worked on #15759 I tried to [leave the addrman state unchanged](https://github.com/bitcoin/bitcoin/pull/15759#issuecomment-480398802) when making block-relay-only connections.\r\n\r\nI'm not sure that I fully succeeded in not leaking information, or that the concern is correct to begin with given how addrman already works.  So it's possible that with some analysis we could make improvements here.  Maybe not appropriate for this pr though...",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-16T16:29:01Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r471131850",
      "id" : 471131850,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEzMTg1MA==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 468077363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471131850",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r472084750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472084750"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe there are three ways that a peer's record is updated in addrman when we're connected to them:\r\n\r\n1. when we receive a `version` message from them, we'll mark their address good. That moves the address from the new table to the tried table, and updates the `nLastSuccess`/`nLastTry`/`nAttempts` fields. We only do this if the peer isn't inbound and isn't block-relay-only. I don't believe this change can easily be detected by a peer sending us `getaddr` messages.\r\n2. if a peer self-advertises to us, we'll call `AddAddressKnown()`, which could update the `nTime`, which is included in the address record that we send to a peer in response to a `getaddr` request.\r\n3. when we disconnect from the peer, we'll update the `nTime`, as long as the peer was marked as `fCurrentlyConnected`. That happens when we receive a `verack` from a peer which is not inbound. This doesn't include feeler peers, since we disconnect from them as soon as we receive a `version` message from them. The `nTime` is only updated during disconnection so spies can't find out who we're currently connected to (https://github.com/bitcoin/bitcoin/pull/5860#issuecomment-78397140).\r\n\r\nIn summary, I think block-relay-only peers _should_ have their address marked good when we connect to them (1). If we don't, then we'll update the `nLastTry` and `nAttempts` fields when we attempt to connect to them, but not update the `nLastSuccess`.\r\n\r\nThe reason it's important in this PR is that placing `MarkAddressGood()` behind a conditional `if (AdvertiseAddressToConn())` is very confusing for anyone reading the code, and makes it easy to introduce subtle bugs.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-18T10:42:50Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r472084750",
      "id" : 472084750,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA4NDc1MA==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 469203968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472084750",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r473793235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473793235"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I really dislike these functions being inside `CNode` (same as https://github.com/bitcoin/bitcoin/pull/19316#discussion_r464526492). This is very specific net_processing logic, rather than a general property of the CNode. Having the logic inside net.h rather than at the point it's needed makes it less readable.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-20T09:06:51Z",
      "diff_hunk" : "@@ -838,37 +838,89 @@ class CNode\n         assert(false);\n     }\n \n+    /* These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n     bool IsFullOutboundConn() const {\n-        return m_conn_type == ConnectionType::OUTBOUND;\n+        return m_conn_type == ConnectionType::OUTBOUND_FULL_RELAY;\n     }\n \n+    /* We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n     bool IsManualConn() const {\n         return m_conn_type == ConnectionType::MANUAL;\n     }\n \n+    /* After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the\n+     * network topology.\n+     */\n     bool IsBlockOnlyConn() const {\n         return m_conn_type == ConnectionType::BLOCK_RELAY;\n     }\n \n+    /* Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n     bool IsFeelerConn() const {\n         return m_conn_type == ConnectionType::FEELER;\n     }\n \n+    /* AddrFetch connections are short lived connections used to solicit\n+     * addresses from peers. These are initiated to addresses submitted via the\n+     * -seednode command line argument, or under certain conditions when the\n+     * AddrMan is empty.\n+     */\n     bool IsAddrFetchConn() const {\n         return m_conn_type == ConnectionType::ADDR_FETCH;\n     }\n \n+    /* Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n     bool IsInboundConn() const {\n         return m_conn_type == ConnectionType::INBOUND;\n     }\n \n+    /* Whether we send addr messages over this connection */\n+    bool RelayAddrsWithConn() const {\n+        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+    }\n+\n+    /* Whether we attempt to advertise our own address to the peer when\n+     * processing their VERSION message */\n+    bool AdvertiseAddressToConn() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r473793235",
      "id" : 473793235,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc5MzIzNQ==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 902,
      "original_position" : 95,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 471403773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473793235",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r473802643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473802643"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Format these as doxygen comments (start with `/**`) https://www.doxygen.nl/manual/docblocks.html",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-20T09:18:16Z",
      "diff_hunk" : "@@ -838,37 +838,89 @@ class CNode\n         assert(false);\n     }\n \n+    /* These are the default connections that we use to connect with the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r473802643",
      "id" : 473802643,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgwMjY0Mw==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 841,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 471403773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473802643",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r473805346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473805346"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These are great comments. Thank you! Should they be merged with the comments above on the enum members?",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-20T09:21:36Z",
      "diff_hunk" : "@@ -838,37 +838,89 @@ class CNode\n         assert(false);\n     }\n \n+    /* These are the default connections that we use to connect with the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r473805346",
      "id" : 473805346,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgwNTM0Ng==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 841,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 471403773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473805346",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474161665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474161665"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah I felt very indecisive when trying to figure out the best spots for the comments. here what I've gone for is having the enum comments be a more concise description of the nature of the connection, and the function provide more context around design goals, capacity, etc. \r\n\r\nI don't think the split is super clear though, so yeah, maybe it would be more helpful to consolidate it all into the enum member comments. is that what you're advocating for? or just trying to weigh like me? âï¸  ð",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-20T17:40:42Z",
      "diff_hunk" : "@@ -838,37 +838,89 @@ class CNode\n         assert(false);\n     }\n \n+    /* These are the default connections that we use to connect with the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474161665",
      "id" : 474161665,
      "in_reply_to_id" : 473805346,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE2MTY2NQ==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 841,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 471843142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474161665",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474184122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474184122"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yes, consolidate them to one place. I think the enum is the right place for them.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-20T18:22:03Z",
      "diff_hunk" : "@@ -838,37 +838,89 @@ class CNode\n         assert(false);\n     }\n \n+    /* These are the default connections that we use to connect with the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474184122",
      "id" : 474184122,
      "in_reply_to_id" : 473805346,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NDEyMg==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 841,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 471872069,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474184122",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19860 (Improve diversification of new connections: privacy and stability by naumenkogs)\n* #19858 (Periodically make block-relay connections and sync headers by sdaftuar)\n* #19843 (Refactoring and minor improvement for self-advertisements by naumenkogs)\n* #19829 ([net processing] Move block inventory state to net_processing by jnewbery)\n* #19794 (p2p: Remove fGetAddr flag by mzumsande)\n* #19763 (net: don't try to relay to the address' originator by vasild)\n* #19725 ([RPC] Add connection type to getpeerinfo, improve logs by amitiuttarwar)\n* #17785 (p2p: Unify Send and Receive protocol versions by hebasto)\n* #17428 (p2p: Try to preserve outbound block-relay-only connections during restart by hebasto)\n* #17194 (p2p: Avoid forwarding ADDR messages to SPV nodes by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-08-20T20:24:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-677884934",
      "id" : 677884934,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Nzg4NDkzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T01:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677884934",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474383770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474383770"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done! ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-21T03:09:31Z",
      "diff_hunk" : "@@ -838,37 +838,89 @@ class CNode\n         assert(false);\n     }\n \n+    /* These are the default connections that we use to connect with the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474383770",
      "id" : 474383770,
      "in_reply_to_id" : 473805346,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4Mzc3MA==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 841,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 472117367,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474383770",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474384238"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474384238"
         }
      },
      "author_association" : "MEMBER",
      "body" : "oof. so many options and yet I still missed the mark ð . moved the comments to the enum, but fixed this problem. thanks! ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-21T03:11:23Z",
      "diff_hunk" : "@@ -838,37 +838,89 @@ class CNode\n         assert(false);\n     }\n \n+    /* These are the default connections that we use to connect with the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474384238",
      "id" : 474384238,
      "in_reply_to_id" : 473802643,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NDIzOA==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 841,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 472117871,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474384238",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474385471"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474385471"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah, I agree. this is why I initially opted for having `m_conn_type` as a public member var, but feedback on #19316 led me to switching to private. anyway, given the current state, its a bit unfortunate we don't get the additional guarantee of a switch, but I agree with you & incorporated this feedback so it can be more understandable from the call site. ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-21T03:16:30Z",
      "diff_hunk" : "@@ -838,37 +838,89 @@ class CNode\n         assert(false);\n     }\n \n+    /* These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n     bool IsFullOutboundConn() const {\n-        return m_conn_type == ConnectionType::OUTBOUND;\n+        return m_conn_type == ConnectionType::OUTBOUND_FULL_RELAY;\n     }\n \n+    /* We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n     bool IsManualConn() const {\n         return m_conn_type == ConnectionType::MANUAL;\n     }\n \n+    /* After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the\n+     * network topology.\n+     */\n     bool IsBlockOnlyConn() const {\n         return m_conn_type == ConnectionType::BLOCK_RELAY;\n     }\n \n+    /* Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n     bool IsFeelerConn() const {\n         return m_conn_type == ConnectionType::FEELER;\n     }\n \n+    /* AddrFetch connections are short lived connections used to solicit\n+     * addresses from peers. These are initiated to addresses submitted via the\n+     * -seednode command line argument, or under certain conditions when the\n+     * AddrMan is empty.\n+     */\n     bool IsAddrFetchConn() const {\n         return m_conn_type == ConnectionType::ADDR_FETCH;\n     }\n \n+    /* Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n     bool IsInboundConn() const {\n         return m_conn_type == ConnectionType::INBOUND;\n     }\n \n+    /* Whether we send addr messages over this connection */\n+    bool RelayAddrsWithConn() const {\n+        return m_conn_type != ConnectionType::BLOCK_RELAY;\n+    }\n+\n+    /* Whether we attempt to advertise our own address to the peer when\n+     * processing their VERSION message */\n+    bool AdvertiseAddressToConn() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474385471",
      "id" : 474385471,
      "in_reply_to_id" : 473793235,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NTQ3MQ==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 902,
      "original_position" : 95,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 472119188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474385471",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474387266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474387266"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree that having `MarkAddressGood` in this conditional is surprising & that changing to `AdvertiseAddressToConn` augments the confusion. \r\n\r\nFor this PR- I've updated the conditional to be `!pfrom.IsInboundConn() && !pfrom.IsBlockOnlyConn()` (aka removed the misleading function), and added a comment.\r\n\r\nFor future work- I've noted this down. I've taken an initial look and @jnewbery I believe what you're saying makes sense, but I'll have to spend more time with it to fully convince myself. The fact that I missed this behavior in my initial pass affirms that its easy to miss or confuse. I'd like to either (1) understand why it should be in this conditional & comment or (2) understand why it shouldn't be & change it. But I'm leaving this for another PR :) ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-21T03:24:25Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474387266",
      "id" : 474387266,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NzI2Ng==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 472121140,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474387266",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474388701"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474388701"
         }
      },
      "author_association" : "MEMBER",
      "body" : "heh. thanks for the nudge. I've updated my tooling so I'll pay better attention to the clang-format-diff moving forward. I think I've now cleaned everything up properly in this PR? I'm not sure what exactly you mean by \"all in one go or not at all\"... \r\n\r\n(disclaimer: I didn't take the suggestions to not [IndentCaseBlocks](https://clang.llvm.org/docs/ClangFormatStyleOptions.html). I would much prefer if we turned that format option to true.)",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-21T03:30:47Z",
      "diff_hunk" : "@@ -1841,11 +1841,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 // but inbound and manual peers do not use our outbound slots. Inbound peers\n                 // also have the added issue that they could be attacker controlled and used\n                 // to prevent us from connecting to particular hosts if we used them here.\n-                switch(pnode->m_conn_type){\n+                switch (pnode->m_conn_type){",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474388701",
      "id" : 474388701,
      "in_reply_to_id" : 470950246,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4ODcwMQ==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 1844,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 472122714,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474388701",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thanks for the feedback! all comments should be addressed. \r\n\r\n@sipa \r\nI agree with this: \r\n> make the addr-relay decision depend on the connection type. That should be the most authoritative information about the connection.\r\n\r\nBut unfortunately I don't think this is true: \r\n>  but if we accidentally forget to create the necessary data structures, test will fail; \r\n\r\nI updated `RelayAddrsWithConn` to always return true, recompiled & ran `test_runner.py` & unit tests. Nothing failed. My concern would be addressed if it did :) I think with #19315, we should be able to add functional tests that would fail if a discrepancy occurs? \r\n\r\nCurrently I think the downside is probably acceptable, but want to highlight since I don't think we have any automatic protection in place. (unless I'm missing something?) \r\n\r\n---\r\n\r\n@jnewbery, RE: \r\n> I think it'd be good to extract everything in the while (!interruptNet) in ThreadOpenConnections() into its own function since deeply nested while/for/if blocks obscure control flow and are very often the sources of bugs. Doing that might be scope creep for this PR though.\r\n\r\nI 100% agree. I spent *so* many hours trying to interpret the exact logic around what types of connections are open, and have gotten very confused by the deeply nested logic flows & nuances of things like where a break / continue that's 4 levels deep will pop you back out to. I've taken a first pass at extracting the outer `while (!interruptNet)` loop here (yes, there are two levels nested): https://github.com/amitiuttarwar/bitcoin/commit/eecc5877c08744c55200846bb7b3b70c922b75ec. However, it needs to be done with great care and I would need to spend a lot more time / build a lot more confidence with these changes before I'd feel comfortable proposing them. Feel free to take a look or further the branch if you're interested :) ",
      "created_at" : "2020-08-21T03:40:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-678020419",
      "id" : 678020419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODAyMDQxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-21T03:55:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678020419",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK c99b26010eaf4d446eb5118e38dbcc03fabba11c\r\n\r\n> have gotten very confused by the deeply nested logic flows & nuances of things like where a break / continue that's 4 levels deep will pop you back out to.\r\n\r\nYes, deeply nested if/while/switch statements hide bugs. If it's possible to factor them out to clarify control flow, we should aim to do that.\r\n\r\n> I've taken a first pass at extracting the outer while (!interruptNet) loop here\r\n\r\nI've had a very quick skim of that branch and it looks like the right direction to me.\r\n\r\n> I would need to spend a lot more time / build a lot more confidence with these changes before I'd feel comfortable proposing them. Feel free to take a look or further the branch if you're interested :)\r\n\r\nI think you're very well positioned to open this PR if you want to. You've already spent hours getting to grips with the logic here :slightly_smiling_face: . I've already got my quota of refactor PRs open, but I can definitely commit to reviewing a PR if you open it. (Equally, we don't need to fix this all at once. We can always leave this for another time).",
      "created_at" : "2020-08-21T10:43:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-678218813",
      "id" : 678218813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODIxODgxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-21T10:43:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678218813",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475144532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475144532"
         }
      },
      "author_association" : "MEMBER",
      "body" : "EDIT: We may have already a bug here. I think comment \"Note that block-relay-only peers are already implicitly protected so we only consider setting m_protect for the full-relay peers\" is wrong as block-relay-only peers seems to not be protected from eviction by lagging chain logic and as such we should modify this check to scope them in setting `m_protect==true` (or either modify `ConsiderEviction`'s first check)\r\n\r\n\r\nAFAICT, we have 2 different logics to evict outbound peers : lagging-chain (`ConsiderEviction`) and (`CheckForStaleTipAndEvictPeers`). The former to sanitize out lazy/buggy peers who have never sent us a valid header and are always staying behind our tip, the latter triggered in case of stale tip due to block variance to seek a better chain by rotating our outbound peers if we already reach an outbound limit (`EvictExtraOutboundPeers`).\r\n\r\nWith regards to stale-tip, outbound block-relay-only are protected based on `m_tx_relay==nullptr` : https://github.com/bitcoin/bitcoin/blob/197450f80868fe752c6107955e5da80704212b34/src/net_processing.cpp#L3977\r\n\r\nWith regards to lagging-chain, outbound block-relay-only are protected based on  `m_protect==true` :\r\nhttps://github.com/bitcoin/bitcoin/blob/197450f80868fe752c6107955e5da80704212b34/src/net_processing.cpp#L3909\r\n\r\nSo we may evict them if due to block variance they fulfilled the lagging chain conditions, contrary to the intent of unconditionally conserve them once they announced to us a header.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T22:26:39Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ static void ProcessHeadersMessage(CNode& pfrom, CConnman& connman, ChainstateMan\n             }\n         }\n \n-        if (!pfrom.fDisconnect && pfrom.IsOutboundOrBlockRelayConn() && nodestate->pindexBestKnownBlock != nullptr && pfrom.m_tx_relay != nullptr) {\n+        if (!pfrom.fDisconnect && pfrom.IsFullOutboundConn() && nodestate->pindexBestKnownBlock != nullptr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475144532",
      "id" : 475144532,
      "line" : 2021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NDUzMg==",
      "original_commit_id" : "5dba7ab2414854f29af5d5e65304c06028111b50",
      "original_line" : 2021,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 25,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475144532",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475144843"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475144843"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`block-relay-only` to be consistent with mention of this connection type spread around the codebase.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T22:30:58Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475144843",
      "id" : 475144843,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NDg0Mw==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1864,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475144843",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475145041"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475145041"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/feeler/FEELER/g",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T22:34:13Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()\n+        // gets set when a stale tip is detected, so we try opening an\n+        // additional OUTBOUND_FULL_RELAY connection. If none of these\n+        // conditions are met, check the nNextFeeler timer to decide if we\n+        // should open a feeler.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475145041",
      "id" : 475145041,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NTA0MQ==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1868,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475145041",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475145666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475145666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you can use now `conn_type.IsFeelerConn()` instead of `fFeeler=true` in the feeler-related following checks, semantically they are the same ?",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T22:43:29Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()\n+        // gets set when a stale tip is detected, so we try opening an\n+        // additional OUTBOUND_FULL_RELAY connection. If none of these\n+        // conditions are met, check the nNextFeeler timer to decide if we\n+        // should open a feeler.\n+\n+        if (nOutboundFullRelay < m_max_outbound_full_relay) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n+            conn_type = ConnectionType::BLOCK_RELAY;\n+        } else if (GetTryNewOutboundPeer()) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextFeeler) {\n+            nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n+            conn_type = ConnectionType::FEELER;\n+            fFeeler = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475145666",
      "id" : 475145666,
      "line" : 1881,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NTY2Ng==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1881,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 62,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475145666",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475145927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475145927"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`Only attempted after finishing to open other types of outbound connections`, comment on order of connections was dropped from original location in `ThreadOpenConnections`",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T22:47:09Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475145927",
      "id" : 475145927,
      "line" : 149,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NTkyNw==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 149,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 38,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475145927",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475146629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475146629"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can mark that addresses for {BLOCK_RELAY,OUTBOUND_FULL_RELAY} are drawn from tried table.\r\n\r\nAlso `block-relay network topology`.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T22:57:51Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the\n+     * network topology. Addresses are selected from AddrMan.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475146629",
      "id" : 475146629,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NjYyOQ==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 161,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475146629",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475146768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475146768"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For both {ADDR_FETCH, FEELER} you can specify the condition suspending the connection (either VERSION or ADDR reception).",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T23:00:00Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the\n+     * network topology. Addresses are selected from AddrMan.\n+     */\n+    BLOCK_RELAY,\n+\n+    /**\n+     * AddrFetch connections are short lived connections used to solicit",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475146768",
      "id" : 475146768,
      "line" : 163,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0Njc2OA==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 163,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 52,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475146768",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475146909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475146909"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`transactions and addresses` to be strict",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T23:02:07Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475146909",
      "id" : 475146909,
      "line" : 155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NjkwOQ==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 155,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 44,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475146909",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475147312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475147312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's unclear to me how do you qualify what is a \"third party\" in a P2P network, either another connected peer, a not-directly connected peer to local node or an infrastructure observer ? For the last one it doesn't help at all. So maybe replace by `any other peer, either directly paired with local node or not` ?",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T23:08:34Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475147312",
      "id" : 475147312,
      "line" : 156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0NzMxMg==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 156,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475147312",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475148383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475148383"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I know this is likely temporary but comment may be made better like \"Our address sanitization logic (feeler) is less prone to manipulation by outbound connections rather than potentially attacker controlled inbound. We don't sanitize block-relay-only as it might be a leak of their presence\".",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T23:24:15Z",
      "diff_hunk" : "@@ -2454,6 +2452,9 @@ void ProcessMessage(\n             // Get recent addresses\n             connman.PushMessage(&pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+\n+            // Moves address from New to Tried table in Addrman\n+            // (unrelated to advertising our address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475148383",
      "id" : 475148383,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0ODM4Mw==",
      "original_commit_id" : "652e06117dab566404c79a0d8175507992bf24a1",
      "original_line" : 2450,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 472966059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475148383",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475148942"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475148942"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree with John that block-relay-only peers should have their address marked as good when we receive their `version`. To answer `getaddr` we fetch randomly a list of address from both `vvNew/vvTried` without record bias as far as a quick read of `CAddrMan::GetAddr_` let it think. So moving address from a table to another doesn't change the ability of an attacker to learn about a block-relay-only address.\r\n\r\nMaybe we could improve block-relay-only peers unobservability in future works around AddrMan by filtering out `block-relay-only` address from `getaddr` replies, without introducing an oracle for the original sender of the used address ? @naumenkogs ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-22T23:32:21Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475148942",
      "id" : 475148942,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE0ODk0Mg==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 472968449,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475148942",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-24T15:09:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-679185871",
      "id" : 679185871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTE4NTg3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T15:09:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679185871",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on these changes. Late to the party but will try to review soon-ish.",
      "created_at" : "2020-08-25T13:03:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-680011506",
      "id" : 680011506,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDAxMTUwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T13:03:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680011506",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r476635697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476635697"
         }
      },
      "author_association" : "MEMBER",
      "body" : "My instinct is that it'd be best if the addrman were completely unchanged as a result of block-relay connections, at least while we are connected to the peer. So if there are places where block-relay connections cause some kind of update in addrman, then those should be bugs that we fix.\r\n\r\nHere's my thinking:\r\n(a) it's not clear to me that there's not some way to sniff out things in the tried table from things in the new table. For instance, I think the new table tends to be much bigger than the tried table, yet I think when we respond to getaddr requests, we sample 50% from the tried table and 50% from the new table.  This creates a bias that, if you had the ability to read someone's addrman, might leak information about who someone might be connected to.\r\n\r\n(b) Even if we have limited the ability to read someone's addrman today (eg with fixes like #18991), I think it's helpful to separate the policies around addrman from being too tightly interwoven into other features like block-relay peers.  The easiest way to reason about this stuff is to say that block-relay peers have no effect on addrman, and then we know that any changes in addrman / addr relay can't possibly leak information about our block-relay peers.\r\n\r\nThe only potential hesitation I have advancing this point of view is if there are side effects from not updating addrman that might be detrimental.  For instance, it does seem like it would be terrible if an existing block-relay peer that we are successfully peered with for some time could be evicted from the addrman altogether, and then we forget about it.  But maybe it's enough to either update addrman at the time of disconnection, or save the peer as is suggested in #17428?\r\n\r\nAt any rate, this discussion over the best behavior for the interaction between block-relay peers and addrman deserves its own issue.  I do agree with the current version of the proposed code which checks for the peer being a block-relay peer.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-25T17:56:34Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r476635697",
      "id" : 476635697,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYzNTY5Nw==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 474723005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476635697",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r477628432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477628432"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ok, I've looked into this and am happy to discuss with you, but want to clarify we are on the same page that **this PR doesn't change the behavior.**\r\n\r\nI agree that the comment initially seems inconsistent with the logic in `ConsiderEviction`, but I'm still trying to wrap my head around all the mechanisms (since the chainwork check is repeated as the first conditional in `ConsiderEviction`, is the protection here essential?). I have many observations & questions, but I don't think this PR is the right place to have this conversation. are you willing to open an issue? ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-26T22:39:41Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ static void ProcessHeadersMessage(CNode& pfrom, CConnman& connman, ChainstateMan\n             }\n         }\n \n-        if (!pfrom.fDisconnect && pfrom.IsOutboundOrBlockRelayConn() && nodestate->pindexBestKnownBlock != nullptr && pfrom.m_tx_relay != nullptr) {\n+        if (!pfrom.fDisconnect && pfrom.IsFullOutboundConn() && nodestate->pindexBestKnownBlock != nullptr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r477628432",
      "id" : 477628432,
      "in_reply_to_id" : 475144532,
      "line" : 2021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYyODQzMg==",
      "original_commit_id" : "5dba7ab2414854f29af5d5e65304c06028111b50",
      "original_line" : 2021,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 25,
      "pull_request_review_id" : 475994222,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477628432",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r477754109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477754109"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes as far as I understand this code it is neither introduced by this PR or #19316. \r\n\r\n>  (since the chainwork check is repeated as the first conditional in ConsiderEviction, is the protection here essential?).\r\n\r\nYou mean the check `pindexBestKnownBlock != nullptr` ? But you have a conditional above and it won't exclude block-relay-only with `m_protect=false`. I'm not sure about the exact semantic of `m_protect` but yes I should be able to write a test for this with #19315 to assert bug :) ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T00:19:05Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ static void ProcessHeadersMessage(CNode& pfrom, CConnman& connman, ChainstateMan\n             }\n         }\n \n-        if (!pfrom.fDisconnect && pfrom.IsOutboundOrBlockRelayConn() && nodestate->pindexBestKnownBlock != nullptr && pfrom.m_tx_relay != nullptr) {\n+        if (!pfrom.fDisconnect && pfrom.IsFullOutboundConn() && nodestate->pindexBestKnownBlock != nullptr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r477754109",
      "id" : 477754109,
      "in_reply_to_id" : 475144532,
      "line" : 2021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzc1NDEwOQ==",
      "original_commit_id" : "5dba7ab2414854f29af5d5e65304c06028111b50",
      "original_line" : 2021,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 25,
      "pull_request_review_id" : 476196401,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477754109",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r477765833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477765833"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually it does also solve bucket conflict between 2 tried tables entries, see : https://github.com/bitcoin/bitcoin/pull/9037",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T00:25:21Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r477765833",
      "id" : 477765833,
      "in_reply_to_id" : 475145927,
      "line" : 149,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzc2NTgzMw==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 149,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 38,
      "pull_request_review_id" : 476207260,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477765833",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478657304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478657304"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T19:49:57Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478657304",
      "id" : 478657304,
      "in_reply_to_id" : 475144843,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY1NzMwNA==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1864,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 477031727,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478657304",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478657385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478657385"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T19:50:05Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()\n+        // gets set when a stale tip is detected, so we try opening an\n+        // additional OUTBOUND_FULL_RELAY connection. If none of these\n+        // conditions are met, check the nNextFeeler timer to decide if we\n+        // should open a feeler.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478657385",
      "id" : 478657385,
      "in_reply_to_id" : 475145041,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY1NzM4NQ==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1868,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 477031810,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478657385",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478658416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478658416"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`IsFeelerConn()` is a function on `CNode`, not `ConnectionType`, so I don't think this is possible",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T19:52:06Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()\n+        // gets set when a stale tip is detected, so we try opening an\n+        // additional OUTBOUND_FULL_RELAY connection. If none of these\n+        // conditions are met, check the nNextFeeler timer to decide if we\n+        // should open a feeler.\n+\n+        if (nOutboundFullRelay < m_max_outbound_full_relay) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n+            conn_type = ConnectionType::BLOCK_RELAY;\n+        } else if (GetTryNewOutboundPeer()) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextFeeler) {\n+            nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n+            conn_type = ConnectionType::FEELER;\n+            fFeeler = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478658416",
      "id" : 478658416,
      "in_reply_to_id" : 475145666,
      "line" : 1881,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY1ODQxNg==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1881,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 62,
      "pull_request_review_id" : 477033142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478658416",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478661838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478661838"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I already added a comment in `ThreadOpenConnections` with the specifics of the ordering: \r\n\r\n```\r\n        // Determine what type of connection to open. Opening\r\n        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\r\n        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\r\n        // until we hit our block-relay-only peer limit.\r\n        // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\r\n        // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\r\n        // these conditions are met, check the nNextFeeler timer to decide if\r\n        // we should open a FEELER.\r\n```\r\n\r\nand I believe that is the right place for documenting the order. I realized that the block-relay-only enum comment mentioned ordering so I've gone ahead and removed that. I think these comments are most valuable if they focus on the design goals and the high level description of the connection type & we look at the relevant code for more specifics. otherwise we also risk the comments falling out of date. \r\n\r\n---\r\n\r\n> Actually it does also solve bucket conflict between 2 tried tables entries, see : #9037\r\n\r\nwhat is this in response to? is there a suggested change? ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T19:58:38Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478661838",
      "id" : 478661838,
      "in_reply_to_id" : 475145927,
      "line" : 149,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY2MTgzOA==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 149,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 38,
      "pull_request_review_id" : 477037555,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478661838",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478662385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478662385"
         }
      },
      "author_association" : "MEMBER",
      "body" : "are they always? what happens if your tried table isn't populated yet ?",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T19:59:45Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the\n+     * network topology. Addresses are selected from AddrMan.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478662385",
      "id" : 478662385,
      "in_reply_to_id" : 475146629,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY2MjM4NQ==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 161,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 477038285,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478662385",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478664004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478664004"
         }
      },
      "author_association" : "MEMBER",
      "body" : "feels a bit deep in the weeds for this patch, both have nuances of how disconnection is executed ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T20:02:55Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the\n+     * network topology. Addresses are selected from AddrMan.\n+     */\n+    BLOCK_RELAY,\n+\n+    /**\n+     * AddrFetch connections are short lived connections used to solicit",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478664004",
      "id" : 478664004,
      "in_reply_to_id" : 475146768,
      "line" : 163,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY2NDAwNA==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 163,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 52,
      "pull_request_review_id" : 477040316,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478664004",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478665203"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478665203"
         }
      },
      "author_association" : "MEMBER",
      "body" : "hmm, seems like our minds are putting parenthesis in different places for this patch. I find \"or\" clearer. If you feel strongly I can try to rework the sentence. but otherwise, seems fairly trivial to me ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T20:05:22Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478665203",
      "id" : 478665203,
      "in_reply_to_id" : 475146909,
      "line" : 155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY2NTIwMw==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 155,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 44,
      "pull_request_review_id" : 477041867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478665203",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478665981"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478665981"
         }
      },
      "author_association" : "MEMBER",
      "body" : "if two nodes are connected, a third party is any other entity. I don't really understand your suggestion- if a node is \"directly paired\" with another peer, how would it be possible to obfuscate that connection to the peer? of course the peer can know what connections they have open? ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T20:06:58Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478665981",
      "id" : 478665981,
      "in_reply_to_id" : 475147312,
      "line" : 156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY2NTk4MQ==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 156,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 477042834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478665981",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478667146"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478667146"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I feel strongly that we should not cement opinions into docs in the codebase. since there are divergent opinions on whether or not we should have this logic here, I'd like to avoid documentation that indicates it must be here.  ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-27T20:09:13Z",
      "diff_hunk" : "@@ -2454,6 +2452,9 @@ void ProcessMessage(\n             // Get recent addresses\n             connman.PushMessage(&pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+\n+            // Moves address from New to Tried table in Addrman\n+            // (unrelated to advertising our address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r478667146",
      "id" : 478667146,
      "in_reply_to_id" : 475148383,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY2NzE0Ng==",
      "original_commit_id" : "652e06117dab566404c79a0d8175507992bf24a1",
      "original_line" : 2450,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 477044344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/478667146",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thanks for the review @jnewbery & @ariard ! all review comments are addressed \r\n\r\nrebased & made some small changes to docs",
      "created_at" : "2020-08-27T20:10:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-682166147",
      "id" : 682166147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MjE2NjE0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-27T20:10:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682166147",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480320438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480320438"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `MarkAddressGood()` has other side effects besides moving addresses from new to tried (such as resolving collisions in the tried table?) so maybe it'd be better to update the comment to indicate that's not all this does, eg `// Moves address from New to Tried table in Addrman, among other things`)",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-31T18:47:45Z",
      "diff_hunk" : "@@ -2454,6 +2452,9 @@ void ProcessMessage(\n             // Get recent addresses\n             connman.PushMessage(&pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+\n+            // Moves address from New to Tried table in Addrman\n+            // (unrelated to advertising our address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480320438",
      "id" : 480320438,
      "in_reply_to_id" : 475148383,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyMDQzOA==",
      "original_commit_id" : "652e06117dab566404c79a0d8175507992bf24a1",
      "original_line" : 2450,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 478857032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480320438",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480321060"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480321060"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: If you're including small style changes anyway, this could use curly braces.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-31T18:48:59Z",
      "diff_hunk" : "@@ -843,7 +843,7 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         LOCK(cs_main);\n         mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(addr, std::move(addrName), pnode->IsInboundConn(), pnode->IsManualConn()));\n     }\n-    if(!pnode->IsInboundConn())\n+    if (!pnode->IsInboundConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480321060",
      "id" : 480321060,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyMTA2MA==",
      "original_commit_id" : "8efe70ca9c497bb27c58d62b5b0e86693ad2dcf5",
      "original_line" : 846,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 478857032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480321060",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480327555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480327555"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like a documentation oversight when I changed around how this code worked while working on #15759. See https://github.com/bitcoin/bitcoin/pull/15759#pullrequestreview-281092623.  I think originally I was going to make block-relay-only peers immune from all eviction, and then changed it to only be immune to outbound peer rotation-based eviction.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-31T19:00:53Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ static void ProcessHeadersMessage(CNode& pfrom, CConnman& connman, ChainstateMan\n             }\n         }\n \n-        if (!pfrom.fDisconnect && pfrom.IsOutboundOrBlockRelayConn() && nodestate->pindexBestKnownBlock != nullptr && pfrom.m_tx_relay != nullptr) {\n+        if (!pfrom.fDisconnect && pfrom.IsFullOutboundConn() && nodestate->pindexBestKnownBlock != nullptr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480327555",
      "id" : 480327555,
      "in_reply_to_id" : 475144532,
      "line" : 2021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyNzU1NQ==",
      "original_commit_id" : "5dba7ab2414854f29af5d5e65304c06028111b50",
      "original_line" : 2021,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 25,
      "pull_request_review_id" : 478857032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480327555",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480332654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480332654"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It does seem a little weird to still have fFeeler as a variable after this change, but I don't feel strongly.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-08-31T19:10:37Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()\n+        // gets set when a stale tip is detected, so we try opening an\n+        // additional OUTBOUND_FULL_RELAY connection. If none of these\n+        // conditions are met, check the nNextFeeler timer to decide if we\n+        // should open a feeler.\n+\n+        if (nOutboundFullRelay < m_max_outbound_full_relay) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n+            conn_type = ConnectionType::BLOCK_RELAY;\n+        } else if (GetTryNewOutboundPeer()) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextFeeler) {\n+            nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n+            conn_type = ConnectionType::FEELER;\n+            fFeeler = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480332654",
      "id" : 480332654,
      "in_reply_to_id" : 475145666,
      "line" : 1881,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMzMjY1NA==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1881,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 62,
      "pull_request_review_id" : 478857032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480332654",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480954587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480954587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: not a big fan of this name... I actually think `IsAddrRelayPeer` is much better :)\r\nI already saw some discussion around the distinction between \"node\" and \"peer\", and now you start referring to it as a \"connection\".",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T08:13:08Z",
      "diff_hunk" : "@@ -861,6 +861,12 @@ class CNode\n         return m_conn_type == ConnectionType::INBOUND;\n     }\n \n+    /* Whether we send addr messages over this connection */\n+    bool RelayAddrsWithConn() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480954587",
      "id" : 480954587,
      "line" : 907,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1NDU4Nw==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 907,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 102,
      "pull_request_review_id" : 479501002,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480954587",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480960343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480960343"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also, this method should be now used here: https://github.com/bitcoin/bitcoin/blob/4c66cc0a5a99cbad51448e51d6b28e11e5232e33/src/net.cpp#L2772\r\n\r\nThe motivation is that we don't want changing the addr condition in one place, and forgetting to change in the other place.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T08:22:54Z",
      "diff_hunk" : "@@ -861,6 +861,12 @@ class CNode\n         return m_conn_type == ConnectionType::INBOUND;\n     }\n \n+    /* Whether we send addr messages over this connection */\n+    bool RelayAddrsWithConn() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480960343",
      "id" : 480960343,
      "in_reply_to_id" : 480954587,
      "line" : 907,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk2MDM0Mw==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 907,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 102,
      "pull_request_review_id" : 479508611,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480960343",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480964733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480964733"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the new code should be:\r\n\r\n```\r\n    if (conn_type_in != ConnectionType::BLOCK_RELAY) {\r\n        m_tx_relay = MakeUnique<TxRelay>();\r\n    }\r\n    if (IsAddrRelayPeer()) {\r\n        m_addr_known = MakeUnique<CRollingBloomFilter>(5000, 0.001);\r\n    }\r\n```",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T08:29:52Z",
      "diff_hunk" : "@@ -861,6 +861,12 @@ class CNode\n         return m_conn_type == ConnectionType::INBOUND;\n     }\n \n+    /* Whether we send addr messages over this connection */\n+    bool RelayAddrsWithConn() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480964733",
      "id" : 480964733,
      "in_reply_to_id" : 480954587,
      "line" : 907,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk2NDczMw==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 907,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 102,
      "pull_request_review_id" : 479514374,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480964733",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480965475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480965475"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Why removing the comment? :)",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T08:31:04Z",
      "diff_hunk" : "@@ -2426,9 +2426,7 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n-        {\n-            // Advertise our address",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480965475",
      "id" : 480965475,
      "line" : 2463,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk2NTQ3NQ==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 2463,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 35,
      "pull_request_review_id" : 479515286,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480965475",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480966499"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480966499"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is technically not a behavior change, but I don't understand the logic behind replacing `IsAddrRelayPeer` with `!IsBlockOnlyConn()`. Why not replacing it with `RelayAddrsWithConn`?",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T08:32:38Z",
      "diff_hunk" : "@@ -2426,9 +2426,7 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n-        {\n-            // Advertise our address\n+        if (!pfrom.IsInboundConn() && !pfrom.IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480966499",
      "id" : 480966499,
      "line" : 2462,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk2NjQ5OQ==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 2462,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 36,
      "pull_request_review_id" : 479516549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480966499",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480969871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480969871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't find this comment particularly helpful... Why `MarkAddressGood` is called here, why for outbounds and non-blocks-only?",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T08:38:21Z",
      "diff_hunk" : "@@ -2454,6 +2452,9 @@ void ProcessMessage(\n             // Get recent addresses\n             connman.PushMessage(&pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+\n+            // Moves address from New to Tried table in Addrman\n+            // (unrelated to advertising our address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480969871",
      "id" : 480969871,
      "in_reply_to_id" : 475148383,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk2OTg3MQ==",
      "original_commit_id" : "652e06117dab566404c79a0d8175507992bf24a1",
      "original_line" : 2450,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 479520767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480969871",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "reACK 4c66cc0a5a\r\n\r\nIt looks like all of the remaining review comments are on style/documentation. Perhaps we should aim to merge this and address those in a follow-up?",
      "created_at" : "2020-09-01T08:44:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-684589739",
      "id" : 684589739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDU4OTczOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T08:44:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684589739",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480980931"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480980931"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can this probably migrate to the enum?",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T08:56:36Z",
      "diff_hunk" : "@@ -1856,28 +1856,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480980931",
      "id" : 480980931,
      "line" : 1859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk4MDkzMQ==",
      "original_commit_id" : "1d89fe4ad41a0aed1ccdcd7c32ac4ce5f29ca1e4",
      "original_line" : 1859,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 20,
      "pull_request_review_id" : 479534637,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480980931",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481030527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481030527"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Instead of `if (fFeeler)`, we can now further  do `if (conn_type == ConnectionType::FEELER)`, and drop the `fFeeler` variable. I would prefer this.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T10:14:59Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()\n+        // gets set when a stale tip is detected, so we try opening an\n+        // additional OUTBOUND_FULL_RELAY connection. If none of these\n+        // conditions are met, check the nNextFeeler timer to decide if we\n+        // should open a feeler.\n+\n+        if (nOutboundFullRelay < m_max_outbound_full_relay) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n+            conn_type = ConnectionType::BLOCK_RELAY;\n+        } else if (GetTryNewOutboundPeer()) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextFeeler) {\n+            nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n+            conn_type = ConnectionType::FEELER;\n+            fFeeler = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481030527",
      "id" : 481030527,
      "in_reply_to_id" : 475145666,
      "line" : 1881,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzMDUyNw==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1881,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 62,
      "pull_request_review_id" : 479599686,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481030527",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481033095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481033095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Or, now that I see how many `if (fFeeler)` we have (a lot), I'm not so sure...",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T10:19:48Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()\n+        // gets set when a stale tip is detected, so we try opening an\n+        // additional OUTBOUND_FULL_RELAY connection. If none of these\n+        // conditions are met, check the nNextFeeler timer to decide if we\n+        // should open a feeler.\n+\n+        if (nOutboundFullRelay < m_max_outbound_full_relay) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n+            conn_type = ConnectionType::BLOCK_RELAY;\n+        } else if (GetTryNewOutboundPeer()) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextFeeler) {\n+            nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n+            conn_type = ConnectionType::FEELER;\n+            fFeeler = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481033095",
      "id" : 481033095,
      "in_reply_to_id" : 475145666,
      "line" : 1881,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzMzA5NQ==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1881,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 62,
      "pull_request_review_id" : 479602855,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481033095",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481070579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481070579"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: mix of terminology, we normally don't refer to addr as \"inventory\". Let's keep it that way :)\r\nProbably use something \"types of stuff\" or whatever else",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T11:34:25Z",
      "diff_hunk" : "@@ -118,12 +118,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481070579",
      "id" : 481070579,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3MDU3OQ==",
      "original_commit_id" : "630b9a5e1872ac91949b1e30f8cd7f28d1c946ab",
      "original_line" : 130,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 479651892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481070579",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481074255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481074255"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I think these comments are most valuable if they focus on the design goals and the high level description of the connection type & we look at the relevant code for more specifics.\r\n\r\nI agree\r\n\r\n>what is this in response to? is there a suggested change?\r\n\r\nAntoine just mentions that there is *another thing* done when considering a feeler. See [here](https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480320438). I think this part, if explained, also belongs there and not here.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T11:41:34Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481074255",
      "id" : 481074255,
      "in_reply_to_id" : 475145927,
      "line" : 149,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3NDI1NQ==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 149,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 38,
      "pull_request_review_id" : 479656310,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481074255",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481081269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481081269"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Partially done in 630b9a5e1872ac91949b1e30f8cd7f28d1c946ab, but some of the details are lost.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T11:55:37Z",
      "diff_hunk" : "@@ -1856,28 +1856,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481081269",
      "id" : 481081269,
      "in_reply_to_id" : 480980931,
      "line" : 1859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA4MTI2OQ==",
      "original_commit_id" : "1d89fe4ad41a0aed1ccdcd7c32ac4ce5f29ca1e4",
      "original_line" : 1859,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 20,
      "pull_request_review_id" : 479665210,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481081269",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481089295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481089295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I see it is justified (sort of?) [here](https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474387266).",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T12:10:12Z",
      "diff_hunk" : "@@ -2426,9 +2426,7 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n-        {\n-            // Advertise our address\n+        if (!pfrom.IsInboundConn() && !pfrom.IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481089295",
      "id" : 481089295,
      "in_reply_to_id" : 480966499,
      "line" : 2462,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA4OTI5NQ==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 2462,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 36,
      "pull_request_review_id" : 479675507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481089295",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481090126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481090126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sort of justified [here](https://github.com/bitcoin/bitcoin/pull/19724#discussion_r474387266), but i'm not convinced it's the right approach. See my comment there.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T12:11:45Z",
      "diff_hunk" : "@@ -2426,9 +2426,7 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n-        {\n-            // Advertise our address",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481090126",
      "id" : 481090126,
      "in_reply_to_id" : 480965475,
      "line" : 2463,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5MDEyNg==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 2463,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 35,
      "pull_request_review_id" : 479676530,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481090126",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481094603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481094603"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we're taking the wrong approach in the PR as it is right now. *At least* that condition should be split in 2 blocks:\r\n\r\nI think the current code change here is not useful, but only distracts:\r\nI) The comment `Advertise our address` is removedÂ for no reason\r\nII) The comment `(unrelated to advertising our address)` is very confusing. I managed to understand it only after reading this discussion\r\nIII) The comment `Moves address from New to Tried table in Addrman` is [not sufficient](https://github.com/bitcoin/bitcoin/pull/19724/files/c343ba35cfecb8aaf3aecb1259b6b30a225507f3..f26b0ddac590ac96e86fe043de744747e834ec0e#r480969871)\r\nIV) The change of `IsAddrRelayPeer` to `IsBlockOnlyConn` [here](https://github.com/bitcoin/bitcoin/pull/19724/files/c343ba35cfecb8aaf3aecb1259b6b30a225507f3..f26b0ddac590ac96e86fe043de744747e834ec0e#r480966499) is very confusing, the two blocks should be split into 2 very separate blocks according to the following reasoning:\r\n\r\n1. We self-announce to every peer that supports self-announcement AND it's a good idea:\r\n1a) not useful to self-announce to feelers as we won't actually send ADDR to them (i think?)\r\n1b) bad to self-announce to block-relay-only (maybe? wrt privacy)\r\n2. We MarkAddressGood according to the logic we have",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T12:20:18Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481094603",
      "id" : 481094603,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5NDYwMw==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 479682538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481094603",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481096143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481096143"
         }
      },
      "author_association" : "MEMBER",
      "body" : "w.r.t block-relay-only peers and AddrMan, I agree it's a separate issue, so i'd prefer to preserve the approach status quo here.\r\n\r\nThe current PR currently satisfies it, but I'm still unhappy with the code changes in this particular area (see the previous comment).",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T12:23:09Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481096143",
      "id" : 481096143,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5NjE0Mw==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 479684686,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481096143",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">It looks like all of the remaining review comments are on style/documentation. Perhaps we should aim to merge this and address those in a follow-up?\r\n\r\nMost of the changes in this commit are style/documentation. It's not like it's a big logic-changing PR with a lot of ACKs will have to invalidate :)\r\n\r\nBut actually, I'd be fine with ACKing this one as long as I get some feedback (code change, or at least a comment) on these two comments of mine I consider substantial: [first](https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481094603), [second](https://github.com/bitcoin/bitcoin/pull/19724#discussion_r480960343).\r\n",
      "created_at" : "2020-09-01T12:34:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-684819641",
      "id" : 684819641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDgxOTY0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T12:34:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684819641",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481301926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481301926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The skipping of this logic for block-relay-only outbound peers was introduced in #15759 -- gating it on whether the address-relay data structures are instantiated is confusing because the very last thing we do is unrelated to whether those data structures exist.\r\n\r\nInstead, what this block has in common is that we only want to skip it for inbound or block-relay only peers, which is what this patch does.  So I think this is right, and while we could split this block into two parts, one gated on whether the peer has the addr-relay data structures, and another gated on whether the peers is an outbound block-relay only connection, that seems pretty unnecessary to me.  If someone adds another connection type that is outbound and non-block-relay only and only needs part of this, it can be refactored then.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T17:09:14Z",
      "diff_hunk" : "@@ -2426,9 +2426,7 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n-        {\n-            // Advertise our address\n+        if (!pfrom.IsInboundConn() && !pfrom.IsBlockOnlyConn()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481301926",
      "id" : 481301926,
      "in_reply_to_id" : 480966499,
      "line" : 2462,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMwMTkyNg==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 2462,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 36,
      "pull_request_review_id" : 479952934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481301926",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481319297"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481319297"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@naumenkogs Would it be enough to just add some more comments to this block?  I think it's fine to leave as one block until we actually need to split it, so I'd propose something like this:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 7cd4f7c4cb5..4285e8ba898 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2427,6 +2427,21 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\r\n         }\r\n \r\n         if (!pfrom.IsInboundConn() && !pfrom.IsBlockOnlyConn()) {\r\n+            // For outbound peers, we try to relay our address (so that other\r\n+            // nodes can try to find us more quickly, as we have no guarantee\r\n+            // that an outbound peer is even aware of how to reach us) and do a\r\n+            // one-time address fetch (to help populate/update our addrman). If\r\n+            // we're starting up for the first time, our addrman may be pretty\r\n+            // empty and no one will know who we are.\r\n+            //\r\n+            // We also will update the addrman to record connection success for\r\n+            // these peers (which include OUTBOUND_FULL_RELAY peers and FEELER\r\n+            // connections) so that addrman will have an up-to-date notion of\r\n+            // which peers are online and available.\r\n+            //\r\n+            // We skip these operations for BLOCK_RELAY peers to avoid\r\n+            // potentially leaking information about our BLOCK_RELAY\r\n+            // connections via the addrman or address relay.\r\n             if (fListen && !::ChainstateActive().IsInitialBlockDownload())\r\n             {\r\n                 CAddress addr = GetLocalAddress(&pfrom.addr, pfrom.GetLocalServices());\r\n@@ -2446,8 +2461,8 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\r\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\r\n             pfrom.fGetAddr = true;\r\n \r\n-            // Moves address from New to Tried table in Addrman\r\n-            // (unrelated to advertising our address)\r\n+            // Moves address from New to Tried table in Addrman, resolves\r\n+            // tried-table collisions, etc.\r\n             m_connman.MarkAddressGood(pfrom.addr);\r\n         }\r\n```",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-01T17:39:46Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481319297",
      "id" : 481319297,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxOTI5Nw==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 479974856,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481319297",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481845587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481845587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd suggest making `If we're starting up for the first time, our addrman may be pretty empty and no one will know who we are.`  less ambiguous:\r\n`If we're starting up for the first time, it would improve our peering chances. Otherwise, our addrman may be pretty empty, and also no one will know who we are.`\r\n\r\nBut generally, I think this comment:\r\n- makes it much more clear\r\n- actually convinces me that it's an improvement over the existent code.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-02T07:46:23Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r481845587",
      "id" : 481845587,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg0NTU4Nw==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 480564786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481845587",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think there may be a silent merge conflict here, as a result of merging #19067 a few days ago (after the CI tests had run on this PR).  That PR introduces one new place where the OUTBOUND enum is used.\r\n\r\n(Noticed this because of the failing CI run in #19858, built on top of this one.)",
      "created_at" : "2020-09-02T13:13:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-685727294",
      "id" : 685727294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTcyNzI5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T13:13:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685727294",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482451640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482451640"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yup, I left it in essentially as a local alias. we use it 6 times in the function and it didn't seem helpful to switch those all over to the more verbose `conn_type == ConnectionType::FEELER`",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-02T20:52:35Z",
      "diff_hunk" : "@@ -1854,28 +1854,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections\n-        //\n-        // Design goals:\n-        //  * Increase the number of connectable addresses in the tried table.\n-        //\n-        // Method:\n-        //  * Choose a random address from new and attempt to connect to it if we can connect\n-        //    successfully it is added to tried.\n-        //  * Start attempting feeler connections only after node finishes making outbound\n-        //    connections.\n-        //  * Only make a feeler connection once every few minutes.\n-        //\n+        ConnectionType conn_type = ConnectionType::OUTBOUND_FULL_RELAY;\n+        int64_t nTime = GetTimeMicros();\n         bool fFeeler = false;\n \n-        if (nOutboundFullRelay >= m_max_outbound_full_relay && nOutboundBlockRelay >= m_max_outbound_block_relay && !GetTryNewOutboundPeer()) {\n-            int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n-            if (nTime > nNextFeeler) {\n-                nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n-                fFeeler = true;\n-            } else {\n-                continue;\n-            }\n+        // Determine what type of connection to open. Opening\n+        // OUTBOUND_FULL_RELAY connections gets the highest priority until we\n+        // meet our full-relay capacity. Then we open BLOCK_RELAY connection\n+        // until we hit our block-relay peer limit. GetTryNewOutboundPeer()\n+        // gets set when a stale tip is detected, so we try opening an\n+        // additional OUTBOUND_FULL_RELAY connection. If none of these\n+        // conditions are met, check the nNextFeeler timer to decide if we\n+        // should open a feeler.\n+\n+        if (nOutboundFullRelay < m_max_outbound_full_relay) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n+            conn_type = ConnectionType::BLOCK_RELAY;\n+        } else if (GetTryNewOutboundPeer()) {\n+            // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextFeeler) {\n+            nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n+            conn_type = ConnectionType::FEELER;\n+            fFeeler = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482451640",
      "id" : 482451640,
      "in_reply_to_id" : 475145666,
      "line" : 1881,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ1MTY0MA==",
      "original_commit_id" : "51f51813659d26a2e37ce289eab55b496a713363",
      "original_line" : 1881,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 62,
      "pull_request_review_id" : 481291562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482451640",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482605030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482605030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-02T23:51:37Z",
      "diff_hunk" : "@@ -843,7 +843,7 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         LOCK(cs_main);\n         mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(addr, std::move(addrName), pnode->IsInboundConn(), pnode->IsManualConn()));\n     }\n-    if(!pnode->IsInboundConn())\n+    if (!pnode->IsInboundConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482605030",
      "id" : 482605030,
      "in_reply_to_id" : 480321060,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNTAzMA==",
      "original_commit_id" : "8efe70ca9c497bb27c58d62b5b0e86693ad2dcf5",
      "original_line" : 846,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 481388222,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482605030",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482606146"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482606146"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ah nice. I like it! I was also concerned about the duplicated logic making room for future discrepancy. I've updated to include this, thanks! \r\n\r\nRE name: seems like an issue with the whole convention around connection types? The name I've chosen is consistent with all the `m_conn_type` functions. Its a little late to change all that so I'm going to resolve this comment. ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-02T23:55:23Z",
      "diff_hunk" : "@@ -861,6 +861,12 @@ class CNode\n         return m_conn_type == ConnectionType::INBOUND;\n     }\n \n+    /* Whether we send addr messages over this connection */\n+    bool RelayAddrsWithConn() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482606146",
      "id" : 482606146,
      "in_reply_to_id" : 480954587,
      "line" : 907,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNjE0Ng==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 907,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 102,
      "pull_request_review_id" : 481389458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482606146",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482607213"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482607213"
         }
      },
      "author_association" : "MEMBER",
      "body" : "the comment removal was leftover from a previous iteration of this code where I updated the conditional  to call a function `AdvertiseAddressToConn` or something that made the comment feel redundant. \r\n\r\nlatest push includes the more in depth commenting proposed in that thread, will continue convo there ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-02T23:59:02Z",
      "diff_hunk" : "@@ -2426,9 +2426,7 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n-        {\n-            // Advertise our address",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482607213",
      "id" : 482607213,
      "in_reply_to_id" : 480965475,
      "line" : 2463,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNzIxMw==",
      "original_commit_id" : "f26b0ddac590ac96e86fe043de744747e834ec0e",
      "original_line" : 2463,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 35,
      "pull_request_review_id" : 481390697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482607213",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482608389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482608389"
         }
      },
      "author_association" : "MEMBER",
      "body" : "what details are lost? the only thing not included is \"Start attempting feeler connections only after node finishes making outbound connections,\" but the ordering of connections is captured in `ThreadOpenConnections`. this seems like the same point as addressed over in [this thread](https://github.com/bitcoin/bitcoin/pull/19724#discussion_r475145927) where you've agreed with me??",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-03T00:02:50Z",
      "diff_hunk" : "@@ -1856,28 +1856,32 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             }\n         }\n \n-        // Feeler Connections",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482608389",
      "id" : 482608389,
      "in_reply_to_id" : 480980931,
      "line" : 1859,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwODM4OQ==",
      "original_commit_id" : "1d89fe4ad41a0aed1ccdcd7c32ac4ce5f29ca1e4",
      "original_line" : 1859,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 20,
      "pull_request_review_id" : 481391947,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482608389",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482608547"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482608547"
         }
      },
      "author_association" : "MEMBER",
      "body" : "oh, didn't realize. fixed ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-03T00:03:31Z",
      "diff_hunk" : "@@ -118,12 +118,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482608547",
      "id" : 482608547,
      "in_reply_to_id" : 481070579,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwODU0Nw==",
      "original_commit_id" : "630b9a5e1872ac91949b1e30f8cd7f28d1c946ab",
      "original_line" : 130,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 481392156,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482608547",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482610113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482610113"
         }
      },
      "author_association" : "MEMBER",
      "body" : "incorporated these comments into the changes, \r\n\r\nI agree this should be further improved, but I'm hoping this is sufficient for this PR. @naumenkogs are you comfortable with the current state? ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-03T00:08:54Z",
      "diff_hunk" : "@@ -2433,9 +2433,8 @@ void ProcessMessage(\n         UpdatePreferredDownload(pfrom, State(pfrom.GetId()));\n         }\n \n-        if (!pfrom.IsInboundConn() && pfrom.IsAddrRelayPeer())\n+        if (pfrom.AdvertiseAddressToConn())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482610113",
      "id" : 482610113,
      "in_reply_to_id" : 470962473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxMDExMw==",
      "original_commit_id" : "b672f8d84f8d4562fe8e228abd35c85a66bdbf4c",
      "original_line" : 2436,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 481393904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482610113",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482610624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482610624"
         }
      },
      "author_association" : "MEMBER",
      "body" : "resolving this conversation just to close off threads, feel free to continue [over here](https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482610113) ",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-03T00:10:38Z",
      "diff_hunk" : "@@ -2454,6 +2452,9 @@ void ProcessMessage(\n             // Get recent addresses\n             connman.PushMessage(&pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n+\n+            // Moves address from New to Tried table in Addrman\n+            // (unrelated to advertising our address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r482610624",
      "id" : 482610624,
      "in_reply_to_id" : 475148383,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxMDYyNA==",
      "original_commit_id" : "652e06117dab566404c79a0d8175507992bf24a1",
      "original_line" : 2450,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 481394475,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T00:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/482610624",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "thank you for the reviews! \r\n\r\ngood catch on the silent merge conflict @sdaftuar, Iâve rebased to address. (turns out, there was more than one)\r\n\r\nI've addressed all review comments. They were getting pretty web-like, so I've tried my best to resolve and focus on any outstanding conversations. \r\n\r\n\r\n>> It looks like all of the remaining review comments are on style/documentation. Perhaps we should aim to merge this and address those in a follow-up?\r\n\r\n> Most of the changes in this commit are style/documentation. It's not like it's a big logic-changing PR with a lot of ACKs will have to invalidate :)\r\n\r\nI'd like to get this PR merged sooner rather than later for a couple reasons: \r\n* Iâd like to get the renames on master to avoid possibility of more silent merge conflicts\r\n* there are now two PRs that build on this (#19858 & #19860). further improvements can be addressed in parallel rather than holding up the whole sequence. \r\n* I think its important not to discourage review / lose momentum. @jnewbery has ACKed the tip twice already & Iâve had to invalidate because of needing rebase. with 10 commits deep, it doesn't seem trivial to reACK, so I'd rather use that review energy on smaller isolated changes that can be handled in another PR.\r\n\r\njust trying to express that if I do get ACKs, I'm going to try to be cautious about invalidating, so might opt for starting another branch/PR if more non-essential changes are requested. ",
      "created_at" : "2020-09-03T00:43:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-686163043",
      "id" : 686163043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjE2MzA0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T00:51:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686163043",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "there's one failing build, but I'm confused by it. nothing in the logs appears to have failed?? \r\nhttps://travis-ci.org/github/bitcoin/bitcoin/jobs/723629947",
      "created_at" : "2020-09-03T02:24:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-686193868",
      "id" : 686193868,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjE5Mzg2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T02:24:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686193868",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@amitiuttarwar - This PR is based on parent commits that aren't passing - the fail may have nothing to do with your change. I recommend rebasing your commit on a recent passing commit.\r\n",
      "created_at" : "2020-09-03T02:36:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-686201705",
      "id" : 686201705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjIwMTcwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T02:36:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686201705",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-03T07:34:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-686312378",
      "id" : 686312378,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjMxMjM3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T07:34:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686312378",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-03T11:27:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-686425258",
      "id" : 686425258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjQyNTI1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T11:27:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686425258",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r483272276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483272276"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tracked in https://github.com/bitcoin/bitcoin/issues/19863#issue-692406060, either to document block-relay-only eviction expectations or align protection scope among all our outbound peers.",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-03T21:48:56Z",
      "diff_hunk" : "@@ -1982,7 +1982,7 @@ static void ProcessHeadersMessage(CNode& pfrom, CConnman& connman, ChainstateMan\n             }\n         }\n \n-        if (!pfrom.fDisconnect && pfrom.IsOutboundOrBlockRelayConn() && nodestate->pindexBestKnownBlock != nullptr && pfrom.m_tx_relay != nullptr) {\n+        if (!pfrom.fDisconnect && pfrom.IsFullOutboundConn() && nodestate->pindexBestKnownBlock != nullptr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r483272276",
      "id" : 483272276,
      "in_reply_to_id" : 475144532,
      "line" : 2021,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI3MjI3Ng==",
      "original_commit_id" : "5dba7ab2414854f29af5d5e65304c06028111b50",
      "original_line" : 2021,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 25,
      "pull_request_review_id" : 482226151,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T21:48:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483272276",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r483273322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483273322"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah sorry, in fact they are drawn from both `new/tried` tables at anytime. Surely being confused by `SelectTriedCollision` in `net.cpp` path!",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-03T21:51:32Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the\n+     * network topology. Addresses are selected from AddrMan.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r483273322",
      "id" : 483273322,
      "in_reply_to_id" : 475146629,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI3MzMyMg==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 161,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 482227419,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T21:51:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483273322",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r483274072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483274072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the detection hardness assumption is function on how you define the third-party. \r\n\r\nI meaned \"directed paired\" as Alice being connected with Bob and Caroll. Caroll guessing the connection Alice-Bob thanks to some relay leaks (like txn or addr).",
      "commit_id" : "eb1c5d090f4ef844dabc1e8bf3864c1afe1c791c",
      "created_at" : "2020-09-03T21:53:28Z",
      "diff_hunk" : "@@ -121,12 +121,54 @@ struct CSerializedNetMsg\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n enum class ConnectionType {\n-    INBOUND, /**< peer initiated connections */\n-    OUTBOUND_FULL_RELAY, /**< full relay connections (blocks, addrs, txns) made automatically. Addresses selected from AddrMan. */\n-    MANUAL, /**< connections to addresses added via addnode or the connect command line argument */\n-    FEELER, /**< short lived connections used to test address validity */\n-    BLOCK_RELAY, /**< only relay blocks to these automatic outbound connections. Addresses selected from AddrMan. */\n-    ADDR_FETCH, /**< short lived connections used to solicit addrs when starting the node without a populated AddrMan */\n+    /**\n+     * Inbound connections are those initiated by a peer. This is the only\n+     * property we know at the time of connection, until P2P messages are\n+     * exchanged.\n+     */\n+    INBOUND,\n+\n+    /**\n+     * These are the default connections that we use to connect with the\n+     * network. There is no restriction on the inventory relayed- by default we\n+     * relay blocks, addresses & transactions. We automatically attempt to open\n+     * MAX_OUTBOUND_FULL_RELAY_CONNECTIONS using addresses from our AddrMan.\n+     */\n+    OUTBOUND_FULL_RELAY,\n+\n+\n+    /**\n+     * We open manual connections to addresses that users explicitly inputted\n+     * via the addnode RPC, or the -connect command line argument. Even if a\n+     * manual connection is misbehaving, we do not automatically disconnect or\n+     * add it to our discouragement filter.\n+     */\n+    MANUAL,\n+\n+    /**\n+     * Feeler connections are short lived connections used to increase the\n+     * number of connectable addresses in our AddrMan. Approximately every\n+     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n+     * table. If successful, we add it to the tried table.\n+     */\n+    FEELER,\n+\n+    /**\n+     * After meeting our quota for full outbound connections, we attempt to\n+     * open MAX_BLOCK_RELAY_ONLY_CONNECTIONS to help prevent against partition\n+     * attacks. By not relaying transactions or addresses, these connections\n+     * are harder to detect by a third party, thus helping obfuscate the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#discussion_r483274072",
      "id" : 483274072,
      "in_reply_to_id" : 475147312,
      "line" : 156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI3NDA3Mg==",
      "original_commit_id" : "a2d4fe3d2e05c11ab1a7375b52767929766bc86c",
      "original_line" : 156,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 482228388,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T21:53:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483274072",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "post-merge Code Review ACK eb1c5d0",
      "created_at" : "2020-09-03T22:04:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19724#issuecomment-686787687",
      "id" : 686787687,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4Njc4NzY4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T22:04:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686787687",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
