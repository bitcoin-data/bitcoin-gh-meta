[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474801762"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474801762"
         }
      },
      "author_association" : "MEMBER",
      "body" : "since you're touching lines above and below this, you may as well change it to current style in the first commit.",
      "commit_id" : "fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
      "created_at" : "2020-08-21T16:27:17Z",
      "diff_hunk" : "@@ -196,58 +196,43 @@ TestingSetup::~TestingSetup()\n \n TestChain100Setup::TestChain100Setup()\n {\n-    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n-    // TODO: fix the code to support SegWit blocks.\n-    gArgs.ForceSetArg(\"-segwitheight\", \"432\");\n-    // Need to recreate chainparams\n-    SelectParams(CBaseChainParams::REGTEST);\n-\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n-    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < COINBASE_MATURITY; i++)\n-    {\n+    CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    for (int i = 0; i < COINBASE_MATURITY; i++) {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);\n         m_coinbase_txns.push_back(b.vtx[0]);\n     }\n }\n \n-// Create a new block with just given transactions, coinbase paying to\n-// scriptPubKey, and try to add it to the current chain.\n CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns, const CScript& scriptPubKey)\n {\n     const CChainParams& chainparams = Params();\n-    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(*m_node.mempool, chainparams).CreateNewBlock(scriptPubKey);\n+    CTxMemPool empty_pool;\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey);\n     CBlock& block = pblocktemplate->block;\n \n-    // Replace mempool-selected txns with just coinbase plus passed-in txns:\n-    block.vtx.resize(1);\n+    Assert(block.vtx.size() == 1);\n     for (const CMutableTransaction& tx : txns)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474801762",
      "id" : 474801762,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwMTc2Mg==",
      "original_commit_id" : "fad336e02b516790b030bc8c474d9995e57fbdc2",
      "original_line" : 217,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : null,
      "pull_request_review_id" : 472628032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474801762/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-08-21T16:45:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474801762",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474803985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474803985"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think there's any point in this local reference, since the function returns a `CBlock` value. You could just have:\r\n\r\n```\r\nCBlock block = pblocktemplate->block;\r\n```\r\n\r\nor maybe even better:\r\n\r\n```\r\n    CBlock block = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey)->block;\r\n```",
      "commit_id" : "fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
      "created_at" : "2020-08-21T16:31:38Z",
      "diff_hunk" : "@@ -196,58 +196,43 @@ TestingSetup::~TestingSetup()\n \n TestChain100Setup::TestChain100Setup()\n {\n-    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n-    // TODO: fix the code to support SegWit blocks.\n-    gArgs.ForceSetArg(\"-segwitheight\", \"432\");\n-    // Need to recreate chainparams\n-    SelectParams(CBaseChainParams::REGTEST);\n-\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n-    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < COINBASE_MATURITY; i++)\n-    {\n+    CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    for (int i = 0; i < COINBASE_MATURITY; i++) {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);\n         m_coinbase_txns.push_back(b.vtx[0]);\n     }\n }\n \n-// Create a new block with just given transactions, coinbase paying to\n-// scriptPubKey, and try to add it to the current chain.\n CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns, const CScript& scriptPubKey)\n {\n     const CChainParams& chainparams = Params();\n-    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(*m_node.mempool, chainparams).CreateNewBlock(scriptPubKey);\n+    CTxMemPool empty_pool;\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey);\n     CBlock& block = pblocktemplate->block;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474803985",
      "id" : 474803985,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwMzk4NQ==",
      "original_commit_id" : "fad336e02b516790b030bc8c474d9995e57fbdc2",
      "original_line" : 214,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : null,
      "pull_request_review_id" : 472628032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474803985/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-08-21T16:45:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474803985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474811251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811251"
         }
      },
      "author_association" : "MEMBER",
      "body" : "thx, fixed",
      "commit_id" : "fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
      "created_at" : "2020-08-21T16:46:36Z",
      "diff_hunk" : "@@ -196,58 +196,43 @@ TestingSetup::~TestingSetup()\n \n TestChain100Setup::TestChain100Setup()\n {\n-    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n-    // TODO: fix the code to support SegWit blocks.\n-    gArgs.ForceSetArg(\"-segwitheight\", \"432\");\n-    // Need to recreate chainparams\n-    SelectParams(CBaseChainParams::REGTEST);\n-\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n-    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < COINBASE_MATURITY; i++)\n-    {\n+    CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    for (int i = 0; i < COINBASE_MATURITY; i++) {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);\n         m_coinbase_txns.push_back(b.vtx[0]);\n     }\n }\n \n-// Create a new block with just given transactions, coinbase paying to\n-// scriptPubKey, and try to add it to the current chain.\n CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns, const CScript& scriptPubKey)\n {\n     const CChainParams& chainparams = Params();\n-    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(*m_node.mempool, chainparams).CreateNewBlock(scriptPubKey);\n+    CTxMemPool empty_pool;\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey);\n     CBlock& block = pblocktemplate->block;\n \n-    // Replace mempool-selected txns with just coinbase plus passed-in txns:\n-    block.vtx.resize(1);\n+    Assert(block.vtx.size() == 1);\n     for (const CMutableTransaction& tx : txns)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474811251",
      "id" : 474811251,
      "in_reply_to_id" : 474801762,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxMTI1MQ==",
      "original_commit_id" : "fad336e02b516790b030bc8c474d9995e57fbdc2",
      "original_line" : 217,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : null,
      "pull_request_review_id" : 472640141,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811251/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-08-21T16:46:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811251",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474811346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811346"
         }
      },
      "author_association" : "MEMBER",
      "body" : "thx, fixed",
      "commit_id" : "fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
      "created_at" : "2020-08-21T16:46:45Z",
      "diff_hunk" : "@@ -196,58 +196,43 @@ TestingSetup::~TestingSetup()\n \n TestChain100Setup::TestChain100Setup()\n {\n-    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n-    // TODO: fix the code to support SegWit blocks.\n-    gArgs.ForceSetArg(\"-segwitheight\", \"432\");\n-    // Need to recreate chainparams\n-    SelectParams(CBaseChainParams::REGTEST);\n-\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n-    CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < COINBASE_MATURITY; i++)\n-    {\n+    CScript scriptPubKey = CScript() << ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n+    for (int i = 0; i < COINBASE_MATURITY; i++) {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);\n         m_coinbase_txns.push_back(b.vtx[0]);\n     }\n }\n \n-// Create a new block with just given transactions, coinbase paying to\n-// scriptPubKey, and try to add it to the current chain.\n CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransaction>& txns, const CScript& scriptPubKey)\n {\n     const CChainParams& chainparams = Params();\n-    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(*m_node.mempool, chainparams).CreateNewBlock(scriptPubKey);\n+    CTxMemPool empty_pool;\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(empty_pool, chainparams).CreateNewBlock(scriptPubKey);\n     CBlock& block = pblocktemplate->block;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19775#discussion_r474811346",
      "id" : 474811346,
      "in_reply_to_id" : 474803985,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxMTM0Ng==",
      "original_commit_id" : "fad336e02b516790b030bc8c474d9995e57fbdc2",
      "original_line" : 214,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/test/util/setup_common.cpp",
      "position" : null,
      "pull_request_review_id" : 472640229,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19775",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811346/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-08-21T16:46:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474811346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fad84b7e14ff92465bc17bfdaf1362bcffe092f6",
      "created_at" : "2020-08-21T17:47:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19775#issuecomment-678411475",
      "id" : 678411475,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19775",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODQxMTQ3NQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678411475/reactions"
      },
      "updated_at" : "2020-08-21T17:47:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678411475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19806 (validation: UTXO snapshot activation by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-08-26T01:40:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19775#issuecomment-680409555",
      "id" : 680409555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19775",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDQwOTU1NQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680409555/reactions"
      },
      "updated_at" : "2020-08-26T01:40:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680409555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]
