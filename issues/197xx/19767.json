{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "# æ±å©ï¼ï¼ï¼ help!!!\r\n# P2SHå°åå¦ä½è¿è¡ç¦»çº¿äº¤æãHow to signrawtransaction for p2sh address;\r\n\r\n- org.bitcoinj.core.Transaction \r\n\r\n```\r\npublic TransactionInput addSignedInput(TransactionOutPoint prevOut, Script scriptPubKey, ECKey sigKey, Transaction.SigHash sigHash, boolean anyoneCanPay) throws ScriptException {\r\n        Preconditions.checkState(!this.outputs.isEmpty(), \"Attempting to sign tx without outputs.\");\r\n        TransactionInput input = new TransactionInput(this.params, this, new byte[0], prevOut);\r\n        this.addInput(input);\r\n        int inputIndex = this.inputs.size() - 1;\r\n        TransactionSignature signature;\r\n        if (ScriptPattern.isP2PK(scriptPubKey)) {\r\n            signature = this.calculateSignature(inputIndex, sigKey, scriptPubKey, sigHash, anyoneCanPay);\r\n            input.setScriptSig(ScriptBuilder.createInputScript(signature));\r\n            input.setWitness((TransactionWitness)null);\r\n        } else if (ScriptPattern.isP2PKH(scriptPubKey)) {\r\n            signature = this.calculateSignature(inputIndex, sigKey, scriptPubKey, sigHash, anyoneCanPay);\r\n            input.setScriptSig(ScriptBuilder.createInputScript(signature, sigKey));\r\n            input.setWitness((TransactionWitness)null);\r\n        } else {\r\n            if (!ScriptPattern.isP2WPKH(scriptPubKey)) {\r\n                throw new ScriptException(ScriptError.SCRIPT_ERR_UNKNOWN_ERROR, \"Don't know how to sign for this kind of scriptPubKey: \" + scriptPubKey);\r\n            }\r\n\r\n            Script scriptCode = ScriptBuilder.createP2PKHOutputScript(sigKey);\r\n            TransactionSignature signature = this.calculateWitnessSignature(inputIndex, sigKey, scriptCode, input.getValue(), sigHash, anyoneCanPay);\r\n            input.setScriptSig(ScriptBuilder.createEmpty());\r\n            input.setWitness(TransactionWitness.redeemP2WPKH(signature, sigKey));\r\n        }\r\n\r\n        return input;\r\n    }\r\n````\r\n\r\næ²¡æçå°p2shå°åå¤ççä»£ç ãéå¯¹è¯¥ç±»åå°åï¼å¦ä½è¿è¡ç­¾åã",
   "closed_at" : "2020-08-20T15:54:31Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19767/comments",
   "created_at" : "2020-08-20T09:37:51Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19767/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/19767",
   "id" : 682570661,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19767/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU2ODI1NzA2NjE=",
   "number" : 19767,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "How to signrawtransaction for p2sh address.",
   "updated_at" : "2020-08-20T15:54:32Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19767",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/26603935?v=4",
      "events_url" : "https://api.github.com/users/haorenlin/events{/privacy}",
      "followers_url" : "https://api.github.com/users/haorenlin/followers",
      "following_url" : "https://api.github.com/users/haorenlin/following{/other_user}",
      "gists_url" : "https://api.github.com/users/haorenlin/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/haorenlin",
      "id" : 26603935,
      "login" : "haorenlin",
      "node_id" : "MDQ6VXNlcjI2NjAzOTM1",
      "organizations_url" : "https://api.github.com/users/haorenlin/orgs",
      "received_events_url" : "https://api.github.com/users/haorenlin/received_events",
      "repos_url" : "https://api.github.com/users/haorenlin/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/haorenlin/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/haorenlin/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/haorenlin"
   }
}
