[
   {
      "author_association" : "MEMBER",
      "body" : "This was requested by @MarcoFalke @sdaftuar and @theuni in #19607 (https://github.com/bitcoin/bitcoin/pull/19607#discussion_r462032894).\r\n\r\nChanging `CConnman* connman` to `CConnman& m_connman` is the continuation of work in #19174. See https://github.com/bitcoin/bitcoin/pull/19542#issuecomment-660303800 and https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-658627037 for further discussion. Prior to this PR, connman was a pointer in PeerLogicValidation, but a reference everywhere else in net_processing. Changing it to a reference in PeerLogicValidation is required before moving the rest of the functions into PeerLogicValidation.\r\n\r\nEDIT: I've started by moving `ProcessMessage()` into PLV because in order to move the new `Peer` struct into PLV, `Misbehaving()` needs to be a member function of PLV, which means everything above it in this call tree https://doxygen.bitcoincore.org/net__processing_8cpp.html#ad2983e754c4d90bd68adf91b208664f5 needs to be a member (or hold a reference to `peer_logic`, which I don't think makes sense)",
      "created_at" : "2020-08-12T11:42:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672821085",
      "id" : 672821085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjgyMTA4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-15T20:33:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672821085",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Fuzzers fail because `ProcessMessage` is used in the harnesses.",
      "created_at" : "2020-08-12T12:23:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672838354",
      "id" : 672838354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjgzODM1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T12:23:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672838354",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK -- this is definitely a more appropriate location for `ProcessMessage` than the whole net_processing module scope. ",
      "created_at" : "2020-08-12T12:57:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672854102",
      "id" : 672854102,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mjg1NDEwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T12:57:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672854102",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've fixed the fuzz build (I think). Let's see what Travis thinks.",
      "created_at" : "2020-08-12T13:20:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672865975",
      "id" : 672865975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mjg2NTk3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T13:20:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672865975",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2020-08-12T13:30:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-672872005",
      "id" : 672872005,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mjg3MjAwNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T13:30:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672872005",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Light approach ACK, if there is a follow-up code branch to see where this is heading I'd look at it. ",
      "created_at" : "2020-08-13T20:09:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-673685601",
      "id" : 673685601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzY4NTYwMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T20:09:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673685601",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept Ack and lite-cr ack (doesn't seem to change any logic, just refactor).\r\n\r\nIn terms of approach might be nice to encapsulate processmessage as a subclass that only has access to the relevant references out of the PeerLogicValidation state, but I don't think that's required (just thinking ahead that we might want all the individual message handlers in their own class).\r\n\r\nedit: another reason for this is you can appropriately bind things in the interior class as const where relevant.\r\n",
      "created_at" : "2020-08-13T20:39:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-673698948",
      "id" : 673698948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzY5ODk0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T20:39:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673698948",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Lots of discussion on this at http://www.erisian.com.au/meetbot/bitcoin-core-dev/2020/bitcoin-core-dev.2020-08-13-19.00.log.html#l-104",
      "created_at" : "2020-08-14T09:44:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-673990948",
      "id" : 673990948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mzk5MDk0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T09:44:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673990948",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK cbcb80abc8b3bddaba81e8ba2b22c7d957f02f37.\r\n\r\nAm I missing something or this should have refactoring label?\r\n\r\nFirst 2 commits could be merged on its own.",
      "created_at" : "2020-08-14T14:03:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-674090872",
      "id" : 674090872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDA5MDg3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T14:03:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674090872",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19763 (net: don't try to relay to the address' originator by vasild)\n* #19753 (p2p: don't add AlreadyHave transactions to recentRejects by troygiorshev)\n* #19724 ([net] Cleanup connection types- followups by amitiuttarwar)\n* #19697 (Improvements on ADDR caching by naumenkogs)\n* #19668 (Do not hide compile-time thread safety warnings by hebasto)\n* #19610 (p2p: refactor AlreadyHave(), CInv::type, INV/TX processing by jonatack)\n* #19498 (Tidy up ProcessOrphanTx by jnewbery)\n* #19339 (validation: re-delegate absurd fee checking from mempool to clients by gzhao408)\n* #19306 (refactor: Replace RecursiveMutex with Mutex in CTxMemPool by hebasto)\n* #19107 (p2p: Move all header verification into the network layer, extend logging by troygiorshev)\n* #19031 (Implement ADDRv2 support (part of BIP155) by vasild)\n* #17785 (p2p: Unify Send and Receive protocol versions by hebasto)\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n* #15606 ([experimental] UTXO snapshots by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-08-20T20:37:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-677891365",
      "id" : 677891365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Nzg5MTM2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T01:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677891365",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474475437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474475437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit eb170099f3ea91555b56fdaaae89a64fe04b93be: It seems a bit confusing to pass in chainparams to be stored as a reference in a member variable, but then pass in the consensus params via a parameter of a function call, even though they can be \"derived\" from the chain params.\r\n\r\nI'd suggest the following patch:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 71b235f56b..4a5c7acc46 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -9,6 +9,7 @@\r\n #include <banman.h>\r\n #include <blockencodings.h>\r\n #include <blockfilter.h>\r\n+#include <chainparams.h>\r\n #include <consensus/validation.h>\r\n #include <hash.h>\r\n #include <index/blockfilterindex.h>\r\n@@ -1219,13 +1220,12 @@ PeerLogicValidation::PeerLogicValidation(const CChainParams& chainparams, CConnm\r\n     // same probability that we have in the reject filter).\r\n     g_recent_confirmed_transactions.reset(new CRollingBloomFilter(48000, 0.000001));\r\n \r\n-    const Consensus::Params& consensusParams = Params().GetConsensus();\r\n     // Stale tip checking and peer eviction are on two different timers, but we\r\n     // don't want them to get out of sync due to drift in the scheduler, so we\r\n     // combine them in one function and schedule at the quicker (peer-eviction)\r\n     // timer.\r\n     static_assert(EXTRA_PEER_CHECK_INTERVAL < STALE_CHECK_INTERVAL, \"peer eviction timer should be less than stale tip check timer\");\r\n-    scheduler.scheduleEvery([this, consensusParams] { this->CheckForStaleTipAndEvictPeers(consensusParams); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n+    scheduler.scheduleEvery([this] { this->CheckForStaleTipAndEvictPeers(); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n \r\n     // schedule next run for 10-15 minutes in the future\r\n     const std::chrono::milliseconds delta = std::chrono::minutes{10} + GetRandMillis(std::chrono::minutes{5});\r\n@@ -4011,7 +4011,7 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n     }\r\n }\r\n \r\n-void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\r\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers()\r\n {\r\n     LOCK(cs_main);\r\n \r\n@@ -4022,7 +4022,7 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\r\n     if (time_in_seconds > m_stale_tip_check_time) {\r\n         // Check whether our tip is stale, and if so, allow using an extra\r\n         // outbound peer\r\n-        if (!fImporting && !fReindex && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale(consensusParams)) {\r\n+        if (!fImporting && !fReindex && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale(m_chainparams.GetConsensus())) {\r\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\", time_in_seconds - g_last_tip_update);\r\n             m_connman.SetTryNewOutboundPeer(true);\r\n         } else if (m_connman.GetTryNewOutboundPeer()) {\r\ndiff --git a/src/net_processing.h b/src/net_processing.h\r\nindex b7a680f8ff..819c2c3d9f 100644\r\n--- a/src/net_processing.h\r\n+++ b/src/net_processing.h\r\n@@ -6,12 +6,11 @@\r\n #ifndef BITCOIN_NET_PROCESSING_H\r\n #define BITCOIN_NET_PROCESSING_H\r\n \r\n-#include <chainparams.h>\r\n-#include <consensus/params.h>\r\n #include <net.h>\r\n #include <sync.h>\r\n #include <validationinterface.h>\r\n \r\n+class CChainParams;\r\n class CTxMemPool;\r\n class ChainstateManager;\r\n \r\n@@ -82,7 +81,7 @@ public:\r\n     /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\r\n     void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n     /** Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound */\r\n-    void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\r\n+    void CheckForStaleTipAndEvictPeers();\r\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\r\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n     /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\r\ndiff --git a/src/test/denialofservice_tests.cpp b/src/test/denialofservice_tests.cpp\r\nindex c94d7c2d00..024345326d 100644\r\n--- a/src/test/denialofservice_tests.cpp\r\n+++ b/src/test/denialofservice_tests.cpp\r\n@@ -169,7 +169,7 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\r\n         AddRandomOutboundPeer(vNodes, *peerLogic, connman.get());\r\n     }\r\n \r\n-    peerLogic->CheckForStaleTipAndEvictPeers(consensusParams);\r\n+    peerLogic->CheckForStaleTipAndEvictPeers();\r\n \r\n     // No nodes should be marked for disconnection while we have no extra peers\r\n     for (const CNode *node : vNodes) {\r\n@@ -180,7 +180,7 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\r\n \r\n     // Now tip should definitely be stale, and we should look for an extra\r\n     // outbound peer\r\n-    peerLogic->CheckForStaleTipAndEvictPeers(consensusParams);\r\n+    peerLogic->CheckForStaleTipAndEvictPeers();\r\n     BOOST_CHECK(connman->GetTryNewOutboundPeer());\r\n \r\n     // Still no peers should be marked for disconnection\r\n@@ -193,7 +193,7 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\r\n     // required time connected check should be satisfied).\r\n     AddRandomOutboundPeer(vNodes, *peerLogic, connman.get());\r\n \r\n-    peerLogic->CheckForStaleTipAndEvictPeers(consensusParams);\r\n+    peerLogic->CheckForStaleTipAndEvictPeers();\r\n     for (int i=0; i<max_outbound_full_relay; ++i) {\r\n         BOOST_CHECK(vNodes[i]->fDisconnect == false);\r\n     }\r\n@@ -206,7 +206,7 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\r\n     // peer, and check that the next newest node gets evicted.\r\n     UpdateLastBlockAnnounceTime(vNodes.back()->GetId(), GetTime());\r\n \r\n-    peerLogic->CheckForStaleTipAndEvictPeers(consensusParams);\r\n+    peerLogic->CheckForStaleTipAndEvictPeers();\r\n     for (int i=0; i<max_outbound_full_relay-1; ++i) {\r\n         BOOST_CHECK(vNodes[i]->fDisconnect == false);\r\n     }\r\n",
      "commit_id" : "daed542a12e0a6a4692aca12a61b84cd55accc33",
      "created_at" : "2020-08-21T07:36:42Z",
      "diff_hunk" : "@@ -149,8 +150,9 @@ static void AddRandomOutboundPeer(std::vector<CNode *> &vNodes, PeerLogicValidat\n \n BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\n {\n+    const CChainParams& chainparams = Params();\n     auto connman = MakeUnique<CConnmanTest>(0x1337, 0x1337);\n-    auto peerLogic = MakeUnique<PeerLogicValidation>(*connman, nullptr, *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    auto peerLogic = MakeUnique<PeerLogicValidation>(chainparams, *connman, nullptr, *m_node.scheduler, *m_node.chainman, *m_node.mempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474475437",
      "id" : 474475437,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ3NTQzNw==",
      "original_commit_id" : "eb170099f3ea91555b56fdaaae89a64fe04b93be",
      "original_line" : 155,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/test/denialofservice_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 472270285,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-21T12:11:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474475437",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474476502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474476502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit eb170099f3ea91555b56fdaaae89a64fe04b93be: Seems a bit odd to require the whole header when only the name is needed (the compiler doesn't need to know the struct memory layout to keep a pointer or reference as a member variable)\r\n\r\nNote that txmemool.h isn't included either.\r\n\r\nI suggest the patch from the other comment",
      "commit_id" : "daed542a12e0a6a4692aca12a61b84cd55accc33",
      "created_at" : "2020-08-21T07:38:02Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_NET_PROCESSING_H\n #define BITCOIN_NET_PROCESSING_H\n \n+#include <chainparams.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474476502",
      "id" : 474476502,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ3NjUwMg==",
      "original_commit_id" : "eb170099f3ea91555b56fdaaae89a64fe04b93be",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 472270285,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-21T12:11:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474476502",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474603371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474603371"
         }
      },
      "author_association" : "MEMBER",
      "body" : "good idea. Done",
      "commit_id" : "daed542a12e0a6a4692aca12a61b84cd55accc33",
      "created_at" : "2020-08-21T10:06:25Z",
      "diff_hunk" : "@@ -149,8 +150,9 @@ static void AddRandomOutboundPeer(std::vector<CNode *> &vNodes, PeerLogicValidat\n \n BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\n {\n+    const CChainParams& chainparams = Params();\n     auto connman = MakeUnique<CConnmanTest>(0x1337, 0x1337);\n-    auto peerLogic = MakeUnique<PeerLogicValidation>(*connman, nullptr, *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n+    auto peerLogic = MakeUnique<PeerLogicValidation>(chainparams, *connman, nullptr, *m_node.scheduler, *m_node.chainman, *m_node.mempool);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474603371",
      "id" : 474603371,
      "in_reply_to_id" : 474475437,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYwMzM3MQ==",
      "original_commit_id" : "eb170099f3ea91555b56fdaaae89a64fe04b93be",
      "original_line" : 155,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/test/denialofservice_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 472367977,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-21T12:11:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474603371",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474603763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474603763"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yup. That's better. Done.",
      "commit_id" : "daed542a12e0a6a4692aca12a61b84cd55accc33",
      "created_at" : "2020-08-21T10:07:24Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_NET_PROCESSING_H\n #define BITCOIN_NET_PROCESSING_H\n \n+#include <chainparams.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474603763",
      "id" : 474603763,
      "in_reply_to_id" : 474476502,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYwMzc2Mw==",
      "original_commit_id" : "eb170099f3ea91555b56fdaaae89a64fe04b93be",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 472368596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-21T12:11:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474603763",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Great suggestions @MarcoFalke . I've taken them all.",
      "created_at" : "2020-08-21T10:07:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-678171638",
      "id" : 678171638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODE3MTYzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-21T10:07:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678171638",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "travis and cirrus:\r\n```\r\nMemorySanitizer: use-of-uninitialized-value \r\nsrc/net_processing.cpp:656:82 in (anonymous namespace)::TipMayBeStale(Consensus::Params const&)\r\n```\r\nhttps://travis-ci.org/github/bitcoin/bitcoin/jobs/719886303\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/19704/checks?check_run_id=1011864356",
      "created_at" : "2020-08-21T11:08:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-678236503",
      "id" : 678236503,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODIzNjUwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-21T11:08:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678236503",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474638561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474638561"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Does this need to be moved from the fuzz test into the codebase?",
      "commit_id" : "daed542a12e0a6a4692aca12a61b84cd55accc33",
      "created_at" : "2020-08-21T11:28:02Z",
      "diff_hunk" : "@@ -79,14 +81,19 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n     void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     /** Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound */\n-    void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\n+    void CheckForStaleTipAndEvictPeers();\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\n     void ReattemptInitialBroadcast(CScheduler& scheduler) const;\n \n+    /** Process a single message from a peer. Public for fuzz testing */\n+    void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474638561",
      "id" : 474638561,
      "line" : 90,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYzODU2MQ==",
      "original_commit_id" : "4d6c4d2058a96e0df640ce4d4c3f27a9a44c74d4",
      "original_line" : 90,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 31,
      "pull_request_review_id" : 472413507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-21T12:11:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474638561",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> travis and cirrus:\r\n> \r\n> MemorySanitizer: use-of-uninitialized-value \r\n> src/net_processing.cpp:656:82 in (anonymous namespace)::TipMayBeStale(Consensus::Params const&)\r\n\r\nIt looks like that happens because `SelectParams()` is called twice in the `TestChain100Setup` constructor, including after \r\nthe `PeerLogicValidation` object is constructed (see https://github.com/bitcoin/bitcoin/commit/666696b673c5d3b7ab467a890cafd13ac19be503).\r\n\r\nRather than fight against the unit test framework, I've removed that commit. It's not essential for this PR.",
      "created_at" : "2020-08-21T12:13:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-678259092",
      "id" : 678259092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODI1OTA5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-21T12:13:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678259092",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474658888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474658888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't understand the question. The method is public so it can be called by the fuzz test.",
      "commit_id" : "daed542a12e0a6a4692aca12a61b84cd55accc33",
      "created_at" : "2020-08-21T12:14:59Z",
      "diff_hunk" : "@@ -79,14 +81,19 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n     void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     /** Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound */\n-    void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\n+    void CheckForStaleTipAndEvictPeers();\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\n     void ReattemptInitialBroadcast(CScheduler& scheduler) const;\n \n+    /** Process a single message from a peer. Public for fuzz testing */\n+    void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r474658888",
      "id" : 474658888,
      "in_reply_to_id" : 474638561,
      "line" : 90,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY1ODg4OA==",
      "original_commit_id" : "4d6c4d2058a96e0df640ce4d4c3f27a9a44c74d4",
      "original_line" : 90,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 31,
      "pull_request_review_id" : 472438563,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-21T12:14:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474658888",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK daed542a12, only change is removing second commit ð´\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK daed542a12, only change is removing second commit ð´\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUi57gv/VAtt+n9kwA+RHgQQQsRU5ybObKW5pKc8cpR0kcgd6rwgJPvCdnYUZyIG\r\neDpCMi4O4oHW7usvpn9koFWtHr8S3NPGqXbmF2PiIDb0aK8qkaUafqLWNgb/vI5T\r\nxcTs1XpOF1SW3IB6LnrVtwjk9j9iCeQ67Uu1JdEa9o6e8d84CnMbYBiealLA4f5V\r\nUunvG+QZ/vCXzPks4+Q2u9k9FBGj68ED723xJILw743+JLa3Czu4JXT+SPLsC33D\r\n9THMkP38eaWpothKivyE8aNWzG9vSidi3R12apLHCisg54MuWRWNYygD3t5QEvpb\r\nCa8ZBXZy665M7TOkfrfayNtgWi39zNI7TJabFgH7OAa/InPlGKGtdMepgd1a3+EF\r\nZPhItdhgzwy221a80W2NtEyzxXnA3cWY0JBumvWA0P1HY6PIkAAe24rY5Zu25dyk\r\nNj3dBfg9LV/6cSSEJqIdZyWJ0/dPSeMDzejzFWwRGgF/gX4bpyYAhotHXcf1CcBY\r\nCYtzu5vy\r\n=l6KP\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `08eeaa12e1f73cc25bec71f7f0ba83ae3ad3bc6225f47932f8a0d313daf8ffd8  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e89294010808eeaa12e1f73cc25bec71f7f0ba83ae3ad3bc6225f47932f8a0d313daf8ffd8f010d6f3395283a1501bd200f48a7f075bc108fff01031500fc2ee276349b8c9428d4dbb37c108f1045f4380d4f0083f39a83fa4d762be0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010465a5dcbc146bb6973d8df468928d7de08f1045f4380d4f008b366e1045a36ef150083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff0104b58884f722f428ab3e7a040250ba59608f1045f4380d4f008b8a71ac20b992cd90083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f01084429c01f5159c89f4cee0e959c61cd308f1045f4380d4f0084a57d6b5ab436a190083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6d)\r\n\r\n</details>\r\n",
      "created_at" : "2020-08-24T08:57:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-679001051",
      "id" : 679001051,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTAwMTA1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T08:57:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679001051",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r475466316"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475466316"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, nvm.",
      "commit_id" : "daed542a12e0a6a4692aca12a61b84cd55accc33",
      "created_at" : "2020-08-24T09:31:15Z",
      "diff_hunk" : "@@ -79,14 +81,19 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n     void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     /** Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound */\n-    void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\n+    void CheckForStaleTipAndEvictPeers();\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\n     void ReattemptInitialBroadcast(CScheduler& scheduler) const;\n \n+    /** Process a single message from a peer. Public for fuzz testing */\n+    void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#discussion_r475466316",
      "id" : 475466316,
      "in_reply_to_id" : 474638561,
      "line" : 90,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2NjMxNg==",
      "original_commit_id" : "4d6c4d2058a96e0df640ce4d4c3f27a9a44c74d4",
      "original_line" : 90,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.h",
      "position" : 31,
      "pull_request_review_id" : 473291202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19704",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T09:31:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475466316",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK daed542a12e0a6a4692aca12a61b84cd55accc33.",
      "created_at" : "2020-08-24T09:36:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-679020442",
      "id" : 679020442,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19704",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTAyMDQ0Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T09:36:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679020442",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
