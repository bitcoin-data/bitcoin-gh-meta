[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469325245"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469325245"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Taking a subspan is a cheap operation (akin to pointer arithmetic), right?",
      "commit_id" : "356988e200b1debaa80d210d502d2d085c72dc64",
      "created_at" : "2020-08-12T15:00:10Z",
      "diff_hunk" : "@@ -84,21 +84,21 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch, int max_ret_\n     return true;\n }\n \n-std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n+std::string EncodeBase58(Span<const unsigned char> input)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n     int length = 0;\n-    while (pbegin != pend && *pbegin == 0) {\n-        pbegin++;\n+    while (input.size() > 0 && input[0] == 0) {\n+        input = input.subspan(1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469325245",
      "id" : 469325245,
      "line" : 93,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyNTI0NQ==",
      "original_commit_id" : "356988e200b1debaa80d210d502d2d085c72dc64",
      "original_line" : 93,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/base58.cpp",
      "position" : 13,
      "pull_request_review_id" : 466002873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T15:00:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469325245",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469371527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469371527"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, taking a subspan only needs to update pointer and size, which I would still consider cheap. I guess often the size update can be optimized away so that in the end only pointer arithmetic is involved, but I wouldn't feel qualified enough to give any guarantees here. Maybe @sipa can shed a bit more light on this topic.\r\n\r\nHowever, I felt keen to experiment... Here is a godbolt snippet where you can see the difference of \"count leading zero-bytes\" implementations, on one hand implemented with pointers and on the other hand with spans (using the Bitcoin Core substitute implementation, as I couldn't find a compiler that supported C++20 std::spans yet): https://godbolt.org/z/1oGGPP  The generated codes for the loop bodies are basically identical.",
      "commit_id" : "356988e200b1debaa80d210d502d2d085c72dc64",
      "created_at" : "2020-08-12T16:02:35Z",
      "diff_hunk" : "@@ -84,21 +84,21 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch, int max_ret_\n     return true;\n }\n \n-std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n+std::string EncodeBase58(Span<const unsigned char> input)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n     int length = 0;\n-    while (pbegin != pend && *pbegin == 0) {\n-        pbegin++;\n+    while (input.size() > 0 && input[0] == 0) {\n+        input = input.subspan(1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469371527",
      "id" : 469371527,
      "in_reply_to_id" : 469325245,
      "line" : 93,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM3MTUyNw==",
      "original_commit_id" : "356988e200b1debaa80d210d502d2d085c72dc64",
      "original_line" : 93,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/base58.cpp",
      "position" : 13,
      "pull_request_review_id" : 466060799,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T16:02:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469371527",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469402726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469402726"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Clear, I was just wondering, thank you.",
      "commit_id" : "356988e200b1debaa80d210d502d2d085c72dc64",
      "created_at" : "2020-08-12T16:53:46Z",
      "diff_hunk" : "@@ -84,21 +84,21 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch, int max_ret_\n     return true;\n }\n \n-std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n+std::string EncodeBase58(Span<const unsigned char> input)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n     int length = 0;\n-    while (pbegin != pend && *pbegin == 0) {\n-        pbegin++;\n+    while (input.size() > 0 && input[0] == 0) {\n+        input = input.subspan(1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469402726",
      "id" : 469402726,
      "in_reply_to_id" : 469325245,
      "line" : 93,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwMjcyNg==",
      "original_commit_id" : "356988e200b1debaa80d210d502d2d085c72dc64",
      "original_line" : 93,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/base58.cpp",
      "position" : 13,
      "pull_request_review_id" : 466100078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-12T16:53:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469402726",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 356988e200b1debaa80d210d502d2d085c72dc64",
      "created_at" : "2020-08-12T16:54:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19706#issuecomment-672992204",
      "id" : 672992204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19706",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mjk5MjIwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T16:54:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672992204",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-08-14T15:15:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19706#issuecomment-674123697",
      "id" : 674123697,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19706",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDEyMzY5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-14T15:15:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674123697",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
