[
   {
      "author_association" : "MEMBER",
      "body" : "Thanks!",
      "created_at" : "2020-08-24T13:55:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679140820",
      "id" : 679140820,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTE0MDgyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T13:55:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679140820",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "To be clear I think the current 1-of-2 signet setup is fine, it's experimental, and getting stuff deployed to gain experience is probably the best thing. Going forward we need to set expectations so people don't spend energy on integration if it's not worth it from their end with respect to lifespan, etc.",
      "created_at" : "2020-08-24T13:56:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679141461",
      "id" : 679141461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTE0MTQ2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T13:56:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679141461",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@instagibbs I think the general idea is that we keep signet running indefinitely.\r\n\r\nIf at some point in time, one of the keys or its owner goes missing/is leaked/becomes otherwise invalid, we have two options:\r\n\r\n1. We can rewrite the challenge to exclude the bad key, turning the 1-of-n into a 1-of-(n-1). ~(The solution does not commit to the challenge, so this is totally doable).~ (Edit: correction: new psbt style *does* commit to the challenge; perhaps a 'original challenge' and a 'updated challenge' as two separate settings could let us just arbitrarily go on forever. Would have to think about this.)  It would by default result in a magic change, which may given the circumstances be a good thing, but since serialization also depends on this for seeking, it may not be ideal. (We may have to add some \"signet starts at block X feature for this to be functional from IBD, as there may be blocks signed using the now invalidated key)\r\n2. We can start a new signet.\r\n\r\nThe same rules apply if the owner turns evil and tries to... I don't know, disrupt the signet network users.\r\n\r\nIf some early-activated soft fork turns out to be buggy and causing too much of a headache code-wise to account for*, we may decide to reboot signet, or do a big reorg back to before the problem occurred. This I think will require some time/trial and error.\r\n\r\n(* The current idea seems to be that we can probably get away with a lot of buggy soft forks by simply moving the goal post^W^Wactivation date as we run into issues, thus causing all the early buggy uses to transform into OP_TRUEs. @ajtowns was looking into this.)\r\n",
      "created_at" : "2020-08-24T14:28:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679160691",
      "id" : 679160691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTE2MDY5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T03:22:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679160691",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The solution does not commit to the challenge\r\n\r\nWith the recent psbt change to BIP325, the solution *does* commit to the challenge (via the scriptPubKey of the two virtual txs), so both the old challenge as well as the new challenge needs to be provided in some way or another to validate the full history and future blocks. See also the slightly related discussion of different reorg policies here: https://github.com/bitcoin/bips/pull/947#discussion_r475115137",
      "created_at" : "2020-08-24T14:52:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679174488",
      "id" : 679174488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTE3NDQ4OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T14:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679174488",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Going forward we need to set expectations so people don't spend energy on integration if it's not worth it from their end with respect to lifespan, etc.\r\n\r\nYeah longer term I think getting a proposed soft fork activated on Signet should be a prerequisite before being considered for activation on mainnet. One of the later stages after getting a BIP number, BIP review and open PR in Bitcoin Core repo.\r\n\r\n(This is assuming one public Signet network run by Kalle, AJ that most people use with other smaller independent, permissionless Signets run by random other individuals.)\r\n\r\nAn approach like [this](https://bitcoin.stackexchange.com/questions/98642/can-we-experiment-on-signet-with-multiple-proposed-soft-forks-whilst-maintaining) makes sense to me to facilitate testing of a proposed soft fork (with possible multiple iterations) whilst maintaining ability of full nodes to validate the whole chain. Although I don't know how this OP_TRUE approach for each iteration of a proposed soft fork would work (unless it was a soft fork introducing a new opcode).\r\n\r\nObviously reboots and massive re-orgs are always an option but we should aim to avoid them if we possibly can.",
      "created_at" : "2020-08-24T16:19:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679227759",
      "id" : 679227759,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTIyNzc1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T16:52:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679227759",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Thanks, I forgot about the psbt update now committing to the challenge. I updated my response above.",
      "created_at" : "2020-08-25T03:22:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679508792",
      "id" : 679508792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTUwODc5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T03:22:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679508792",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think we want to maintain the default signet in whatever way is optimal for as many people as possible to spend energy on integration, so that there's a super convenient testing infrastructure for it -- explorers, wallet support, debugging/attack tools, a reasonably complicated network of lightning nodes, etc. Running a custom signet is a great option to have, but it's more work if you also have to setup your own explorer and faucet, or can't test against other apps, or have to recompile debugging tools, etc.\r\n\r\nMaybe that means we want to have the default signet only last 12 or 24 months, so you can sync the chain without downloading lots of old data; or eventually expire txs that got mined that now don't comply with new soft-fork rules. I know I find syncing testnet tedious, but otoh testnet has ~34 years worth of blocks, so it's probably not a problem for signet anytime soon.\r\n\r\nI think the approach where the genesis block stays the same between the current default signet, custom signets, and any future rebooted default signet should minimise the work needed even if there is a chain restart though.\r\n\r\nIf block signing keys get compromised, that's definitely a hard-fork event; maybe you could preserve the existing chain even then by having some \"assumevalid\"-like behaviour though.",
      "created_at" : "2020-08-25T06:44:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679836225",
      "id" : 679836225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTgzNjIyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T06:44:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679836225",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think unintended reorgs can and should be avoided. There should be some sort of expectation for a stable default \"append-only\" \"never-reorg\" signet that explorers etc can use. Once a signet block on that chain has been mined, it can be assumed to be permanent. (Edit: This comment was about reorgs caused by consensus deployments, not about reorgs that happen in the network naturally)\r\n\r\nDeploying a soft-fork (or even un-deploying a soft-fork, aka \"hard fork\") can simply be done by restarting the signet miner with new consensus rules. Picking appropriate activation times (as mentioned above) should be sufficient to avoid invalidation of existing blocks already in the chain.\r\n\r\nI think any consensus deployment that activated on mainnet, can also be considered permanent on signet. Anything else should be considered experimental.",
      "created_at" : "2020-08-25T09:30:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679915476",
      "id" : 679915476,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTkxNTQ3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-26T09:05:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679915476",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I am also wondering if the discussion here is better suited on the mailing list. When it comes to Bitcoin Core, we are mostly interested in implementing the BIP in code. The meta discussion might benefit from a larger audience.",
      "created_at" : "2020-08-25T09:33:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679916732",
      "id" : 679916732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTkxNjczMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T09:33:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679916732",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke Agree with the soft-fork comments; think I just about have a branch where all that should work out of the box now, which (unless it all falls apart) I'll post about on the list...\r\n\r\n> There should be some sort of expectation for a stable default \"append-only\" \"never-reorg\" signet that explorers etc can use.\r\n\r\nThat bothers me a bit -- you can't rely on a lack of reorgs on the main chain, so relying on it on a test chain might build bad habits? I think doing an slightly weaker expectation of marking blocks that are will be reorged (and maybe a different marking for when they contain intentional double-spends that will be invalidated in the reorg) might be the way to go? I think using version bits for those markers should work, so long as we can avoid needing them for activating soft forks.",
      "created_at" : "2020-08-25T10:55:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679953441",
      "id" : 679953441,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTk1MzQ0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T10:55:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679953441",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I am also wondering if the discussion here is better suited on the mailing list\r\n\r\nAgreed. I will post on the mailing list once I have the transcript of the Signet Socratic done. Feel free to post before then though.",
      "created_at" : "2020-08-25T11:05:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679958147",
      "id" : 679958147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTk1ODE0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T11:05:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679958147",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I feel like having no reorgs kind of defeats the purpose as it no longer resembles the main chain. Having a guaranteed no 2+ block reorgs is fine, IMO.",
      "created_at" : "2020-08-26T01:22:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-680405020",
      "id" : 680405020,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDQwNTAyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-26T01:22:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680405020",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Makes sense.\r\n\r\nClosing for now per https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-679958147",
      "created_at" : "2020-08-26T05:46:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-680669966",
      "id" : 680669966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDY2OTk2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-26T05:46:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680669966",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think unintended reorgs can and should be avoided. There should be some sort of expectation for a stable default \"append-only\" \"never-reorg\" signet that explorers etc can use. Once a signet block on that chain has been mined, it can be assumed to be permanent.\r\n\r\nIt is impossible to avoid reorgs in a multisig block signer setup. In any signing protocol there comes a point where one person has attained their threshold of information necessary to publish a signed block.  For example in a k-of-n setup where one signer has possession of k-1 signatures from other signing nodes, giving them the choice to add their own signature and complete the block, or pretend to fail at the final step. They could wait for failure and allow the next proposed block to succeed, then publish their signature for the old block. Now there are two valid signed blocks for that height. Even if the chain continues to be built according to the block that didn't fail out of the signing protocol, some other node might see the withheld block first, then see a reorg to the other chain when subsequent blocks are published.\r\n\r\nIt is, AFAIK, impossible to avoid this scenario, though the details would on the signing protocol used. This is why, for example, Blockstream's Liquid product does not promise immediate finality, but rather has an at-most-1-block reorg policy. Transactions are final on the 2nd confirmation.\r\n\r\n-----\r\n\r\nRegarding the original question about key rotation, this is a strong argument for using a (possibly MuSig) Schnorr aggregate key instead of a traditional k-of-n ECDSA setup. Besides saving space, it allows the signing functionary set to grow, shrink, sub delegate, rotate keys, etc. without changing the public parameters at all. People watching the chain need not even be aware that the signing set went from a 1-of-2 to a 2-of-3, for example, or that a new split was performed to remove a presumed compromised key.",
      "created_at" : "2020-08-26T08:22:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-680734850",
      "id" : 680734850,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDczNDg1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-26T08:22:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680734850",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/69154?v=4",
         "events_url" : "https://api.github.com/users/maaku/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maaku/followers",
         "following_url" : "https://api.github.com/users/maaku/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maaku/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maaku",
         "id" : 69154,
         "login" : "maaku",
         "node_id" : "MDQ6VXNlcjY5MTU0",
         "organizations_url" : "https://api.github.com/users/maaku/orgs",
         "received_events_url" : "https://api.github.com/users/maaku/received_events",
         "repos_url" : "https://api.github.com/users/maaku/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maaku/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maaku/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maaku"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "bitcoin-dev mailing list post: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018145.html",
      "created_at" : "2020-08-29T12:45:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19787#issuecomment-683285622",
      "id" : 683285622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19787",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzI4NTYyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-29T12:45:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683285622",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   }
]
