[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ping @adaminsky ",
      "created_at" : "2020-08-24T15:54:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19789#issuecomment-679212073",
      "id" : 679212073,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19789",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTIxMjA3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T15:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679212073",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I can reproduce this, and I made a simple proof of concept test which seems to show this might be a problem with `thread_local` variables on macOS. I get the following error before the `AddressSanitizer:DEADLYSIGNAL` output:\r\n```\r\n/usr/local/opt/llvm/bin/../include/c++/v1/string:2728:44: runtime error: member call on misaligned address 0x000000000001 for type 'std::__1::basic_string<char> *', which requires 8 byte alignment\r\n```\r\n\r\nI think the issue is that the address for `util::ThreadGetInternalName()`, which comes from a `thread_local` variable, is not 8 byte aligned because macOS does not enforce any alignment for `thread_local` variables. clang seems to require that `thread_local` variables be treated similarly to global variables, so they must be properly aligned which may throw off the address sanitizer.\r\n\r\nThis small example creates a very similar error when compiled with `clang++ -g -O3 -fsanitize=address,undefined test.cpp -o test`.\r\n```c++\r\n#include <iostream>\r\n\r\nstatic thread_local std::string tstr = \"test1\";\r\nstd::string global = \"test2\";\r\n\r\nint main() {\r\n    std::cout << \"<\" + global + \">\" << std::endl; // Works fine\r\n    std::cout << \"<\" + tstr + \">\" << std::endl;   // Error\r\n}\r\n```\r\nThe `-O3` flag is important because when I try `-O1`, no error is found. The alignment problem can be seen by using a debugger to print the addresses of `global` and `tstr` to see how the first is correctly aligned and the second isn't. I think the above program should work correctly if I am using a `thread_local` variable correctly, so this could be an llvm issue.",
      "created_at" : "2020-08-25T21:24:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19789#issuecomment-680277495",
      "id" : 680277495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19789",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDI3NzQ5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T21:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680277495",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/29065991?v=4",
         "events_url" : "https://api.github.com/users/adaminsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adaminsky/followers",
         "following_url" : "https://api.github.com/users/adaminsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adaminsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adaminsky",
         "id" : 29065991,
         "login" : "adaminsky",
         "node_id" : "MDQ6VXNlcjI5MDY1OTkx",
         "organizations_url" : "https://api.github.com/users/adaminsky/orgs",
         "received_events_url" : "https://api.github.com/users/adaminsky/received_events",
         "repos_url" : "https://api.github.com/users/adaminsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adaminsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adaminsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adaminsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It happens in the `process_messages` harness with varying regularity (depending on optimization flags) on my mac only with `-fsanitize=address,undefined` set (rather than just `-fsanitize=address`). I think all we can do here is add an asan suppression. What do you think @practicalswift ?",
      "created_at" : "2020-09-02T03:28:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19789#issuecomment-685268087",
      "id" : 685268087,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19789",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTI2ODA4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T03:28:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685268087",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "+1\r\n\r\nI reproduced this unintentionally while testing #19065.",
      "created_at" : "2020-10-18T20:38:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19789#issuecomment-711419220",
      "id" : 711419220,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19789",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMTQxOTIyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-18T20:38:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/711419220",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Crypt-iQ Sorry, I don't have any Mac to test on and I haven't seen this issue under Linux. I'm afraid I'll have to let someone else tackle this issue :)",
      "created_at" : "2020-10-18T20:44:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19789#issuecomment-711420031",
      "id" : 711420031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19789",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxMTQyMDAzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-18T20:44:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/711420031",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I can reproduce this, and I made a simple proof of concept test which seems to show this might be a problem with `thread_local` variables on macOS. I get the following error before the `AddressSanitizer:DEADLYSIGNAL` output:\r\n> \r\n> ```\r\n> /usr/local/opt/llvm/bin/../include/c++/v1/string:2728:44: runtime error: member call on misaligned address 0x000000000001 for type 'std::__1::basic_string<char> *', which requires 8 byte alignment\r\n> ```\r\n\r\nThat's an interesting find, I'm not sure it's the same one though, because the OP got a Segmentation Violation while you got a misaligned read.\r\nNevertheless you should report this to: https://bugs.llvm.org with the full details(clang version, Xcode version, full sanitizer output).",
      "created_at" : "2020-10-22T13:31:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19789#issuecomment-714496212",
      "id" : 714496212,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19789",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNDQ5NjIxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-22T13:31:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/714496212",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@elichai So I believe the two reports are related:\r\n\r\nThis is the full output I get when running the `process_messages` harness and using `--with-sanitizers=fuzzer,address,undefined,integer` in the configure script:\r\n\r\n<details>\r\n<summary>output</summary>\r\n\r\n```\r\nUBSAN_OPTIONS=\"suppressions=test/sanitizer_suppressions/ubsan:print_stacktrace=1:report_error_type=1\" src/test/fuzz/process_messages ~/qa-assets/fuzz_seed_corpus/process_messages\r\n/usr/local/opt/llvm/bin/../include/c++/v1/string:2728:44: runtime error: member call on misaligned address 0x000000000001 for type 'std::__1::basic_string<char> *', which requires 8 byte alignment\r\n0x000000000001: note: pointer points here\r\n<memory cannot be printed>\r\n    #0 0x10d0ac9d0 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::insert(unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) string\r\n    #1 0x10d02414a in BCLog::Logger::LogPrintStr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) logging.cpp:245\r\n    #2 0x10bd99d6e in void LogPrintf<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) logging.h:176\r\n    #3 0x10bd99540 in InitLogging(ArgsManager const&) init.cpp:890\r\n    #4 0x10d18290e in BasicTestingSetup::BasicTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&) setup_common.cpp:100\r\n    #5 0x10d184d3b in TestingSetup::TestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&) setup_common.cpp:128\r\n    #6 0x10bb86ae4 in initialize() process_messages.cpp:23\r\n    #7 0x10d2605dc in LLVMFuzzerInitialize fuzz.cpp:43\r\n    #8 0x10d4e9f77 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) FuzzerDriver.cpp:616\r\n    #9 0x10d5178d2 in main FuzzerMain.cpp:19\r\n    #10 0x7fff6dbe3cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: misaligned-pointer-use /usr/local/opt/llvm/bin/../include/c++/v1/string:2728:44 in \r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==37247==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000001 (pc 0x7fff6aee7712 bp 0x7ffee407ca70 sp 0x7ffee407ca40 T0)\r\n==37247==The signal is caused by a READ memory access.\r\n==37247==Hint: address points to the zero page.\r\n    #0 0x7fff6aee7712 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::insert(unsigned long, char const*, unsigned long)+0x1a (libc++.1.dylib:x86_64+0x38712)\r\n    #1 0x10d0ac969 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::insert(unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) string:2730\r\n    #2 0x10d02414a in BCLog::Logger::LogPrintStr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) logging.cpp:245\r\n    #3 0x10bd99d6e in void LogPrintf<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) logging.h:176\r\n    #4 0x10bd99540 in InitLogging(ArgsManager const&) init.cpp:890\r\n    #5 0x10d18290e in BasicTestingSetup::BasicTestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&) setup_common.cpp:100\r\n    #6 0x10d184d3b in TestingSetup::TestingSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&) setup_common.cpp:128\r\n    #7 0x10bb86ae4 in initialize() process_messages.cpp:23\r\n    #8 0x10d2605dc in LLVMFuzzerInitialize fuzz.cpp:43\r\n    #9 0x10d4e9f77 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) FuzzerDriver.cpp:616\r\n    #10 0x10d5178d2 in main FuzzerMain.cpp:19\r\n    #11 0x7fff6dbe3cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)\r\n\r\n==37247==Register values:\r\nrax = 0x0000000000000007  rbx = 0x0000000000000000  rcx = 0x0000000000000007  rdx = 0x000000010f552a81  \r\nrdi = 0x0000000000000001  rsi = 0x0000000000000000  rbp = 0x00007ffee407ca70  rsp = 0x00007ffee407ca40  \r\n r8 = 0x000000010f552a00   r9 = 0x00000085dc92e700  r10 = 0x00007fff6dd27a46  r11 = 0x0000000000000206  \r\nr12 = 0x000000010f552a81  r13 = 0x0000000000000000  r14 = 0x0000000000000007  r15 = 0x0000000000000001  \r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV (libc++.1.dylib:x86_64+0x38712) in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::insert(unsigned long, char const*, unsigned long)+0x1a\r\n==37247==ABORTING\r\nAbort trap: 6\r\n```\r\n\r\n</details>",
      "created_at" : "2020-10-24T18:14:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19789#issuecomment-716033786",
      "id" : 716033786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19789",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjAzMzc4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-24T18:14:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716033786",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Closing because I was able to fix this by installing a more recent llvm: `brew install llvm --HEAD`",
      "created_at" : "2021-03-01T23:19:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19789#issuecomment-788386754",
      "id" : 788386754,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19789",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4ODM4Njc1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-01T23:19:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788386754",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   }
]
