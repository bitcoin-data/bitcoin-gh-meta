[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This is an alternative approach to #15505 that's minimally invasive on the data structures. Doing something about this was suggested as a pre-req for #17303 in https://github.com/bitcoin/bitcoin/pull/17303#issuecomment-547589047\r\n\r\n@sdaftuar  expressed some concerns about how much of a CPU hit it could be in worst case scenarios, but it doesn't look too bad in testing:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 3373f7f544..1b9e66456a 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -735,8 +735,13 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\r\n     return process_time;\r\n }\r\n \r\n+static uint64_t xxx_time_spent GUARDED_BY(cs_main) = 0;\r\n+static uint64_t xxx_invocations GUARDED_BY(cs_main) = 0;\r\n+\r\n static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\r\n {\r\n+    uint64_t time_start = GetTimeMicros();\r\n+\r\n     CNodeState::TxDownloadState* best_d = nullptr;\r\n     std::chrono::microseconds best;\r\n \r\n@@ -764,6 +769,12 @@ static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::ch\r\n             }\r\n         }\r\n     }\r\n+\r\n+    xxx_time_spent += GetTimeMicros() - time_start;\r\n+    ++xxx_invocations;\r\n+    if (xxx_invocations % 1000 == 0) {\r\n+        LogPrintf(\"Time spent in RetryProcessTx %d.%03ds, %d us per call (%d calls)\\n\", xxx_time_spent / 1000000, (xxx_time_spent / 1000) % 1000, xxx_time_spent/xxx_invocations, xxx_invocations);\r\n+    }\r\n }\r\n \r\n void RequestTx(CNodeState* state, const uint256& txid, std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\r\ndiff --git a/test/functional/p2p_notfound_perf.py b/test/functional/p2p_notfound_perf.py\r\nnew file mode 100755\r\nindex 0000000000..970452696c\r\n--- /dev/null\r\n+++ b/test/functional/p2p_notfound_perf.py\r\n@@ -0,0 +1,63 @@\r\n+#!/usr/bin/env python3\r\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\r\n+# Distributed under the MIT software license, see the accompanying\r\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\r\n+\r\n+import time\r\n+from test_framework.messages import msg_notfound, msg_inv, CInv\r\n+from test_framework.mininode import P2PDataStore\r\n+from test_framework.test_framework import BitcoinTestFramework\r\n+from test_framework.util import (\r\n+    assert_equal,\r\n+)\r\n+\r\n+\r\n+class P2PNode(P2PDataStore):\r\n+    def on_inv(self, msg):\r\n+        pass\r\n+\r\n+    def on_getdata(self, msg):\r\n+        t = time.time()\r\n+        self.notfound_queue.extend(msg.inv)\r\n+        for inv in msg.inv:\r\n+            self.getdata[inv] = t\r\n+        while len(self.notfound_queue) >= 100:\r\n+            self.send_message(msg_notfound(vec=self.notfound_queue[:100]))\r\n+            self.notfound_queue = self.notfound_queue[100:]\r\n+\r\n+    def summary(self):\r\n+        return len(self.getdata), len(self.notfound_queue)\r\n+\r\n+class P2PNotFoundPerf(BitcoinTestFramework):\r\n+    def set_test_params(self):\r\n+        self.num_nodes = 1\r\n+\r\n+    def run_test(self):\r\n+        PEERS = 11\r\n+        TRANSACTIONS = 99000\r\n+\r\n+        gen_node = self.nodes[0]  # The block and tx generating node\r\n+        gen_node.generate(1)\r\n+\r\n+        inbound_peers = [ self.nodes[0].add_p2p_connection(P2PNode()) for _ in range(PEERS) ]\r\n+        for inbound in inbound_peers:\r\n+            inbound.getdata = {}\r\n+            inbound.notfound_queue = []\r\n+\r\n+        for txbatch in range(TRANSACTIONS//100):\r\n+            self.log.info(\"Doing batch %d\" % (txbatch+1))\r\n+            ann = [CInv(t=1, h=(txbatch*1000+i)) for i in range(100)]\r\n+            for inbound in inbound_peers:\r\n+                inbound.send_message(msg_inv(inv=ann))\r\n+\r\n+        #gen_node.logging(exclude=['net'])\r\n+\r\n+\r\n+        for i in range(60):\r\n+            self.log.info(\"State: \" + \" \".join(\"%d:%d\" % inbound.summary() for inbound in inbound_peers))\r\n+            time.sleep(15)\r\n+\r\n+\r\n+if __name__ == '__main__':\r\n+    P2PNotFoundPerf().main()\r\n```\r\n\r\nGives: `2020-03-02T06:58:54.778347Z [msghand] Time spent in RetryProcessTx 18.754s, 17 us per call (1089000 calls)` by the end for me, which doesn't seem too bad. It took about 12 minutes for all 99k transactions to get requested/notfound by all 11 peers, so 19 seconds total doesn't seem too bad. (The check for MAX_PEER_TX_IN_FLIGHT significantly cuts down on whether this actually does anything -- if there's lots of tx's announced by each peer, then most of them will always have most tx's in flight)",
      "created_at" : "2020-03-02T07:13:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-593254632",
      "id" : 593254632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MzI1NDYzMg==",
      "updated_at" : "2020-03-02T07:13:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/593254632",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19053 (refactor: replace CNode pointers by references within net_processing.{h,cpp} by theStack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-03-02T11:05:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-593348410",
      "id" : 593348410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MzM0ODQxMA==",
      "updated_at" : "2020-06-02T18:33:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/593348410",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Code looks good to me.\r\nCan you provide more context to understand the test? Are you basically trying to show that DoS-vector your PR opens is probably less than those which already exist?",
      "created_at" : "2020-03-02T17:44:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-593526565",
      "id" : 593526565,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MzUyNjU2NQ==",
      "updated_at" : "2020-03-02T17:44:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/593526565",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@naumenkogs Yeah; in a worst case scenario you could get 100 txids in a NOTFOUND message, have 125 peers to cycle through, and each peer could have announced 100k txs, so you end up with something like `O( 12,500 * log(100000) )` operations as a result of a single message (albeit with a fair chunk of setup). The test indicates that 11 peers on my hardware gives a time of about 20us per txid, so per NOTFOUND with 110 peers (so a factor of 100*10) that might result in 20ms processing time on a single message. That seemed low enough to be worth a PR to me.\r\n\r\nIf that's not good enough, could make it a bit lower in the worst case fairly easily by not retrying NOTFOUNDs as aggressively (eg, only do it for the first 10 txids in a NOTFOUND message, or ban peers if they often report a txid as NOTFOUND despite having INVed it recently, or change the retry delay from 0s-2s to 2s-4s, etc); but it'd need more rework of the data structures to get it to work efficiently, and then you have to ensure the new data structures don't introduce different DoS possibilities.",
      "created_at" : "2020-03-04T04:49:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-594325180",
      "id" : 594325180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NDMyNTE4MA==",
      "updated_at" : "2020-03-04T04:49:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594325180",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "No, I think this sounds reasonable. I'd rather not introduce new data structures. As I said, we probably already have easier ways to DoS a node.",
      "created_at" : "2020-03-04T16:30:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-594645262",
      "id" : 594645262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NDY0NTI2Mg==",
      "updated_at" : "2020-03-04T16:30:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594645262",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. \r\n\r\nOne difference to #15505 is that the retry-request there would be from outbound peers only, whereas this PR also includes inbound peers. \r\nIf I understand it correctly, this does not create any additional attack surface (e.g. for InvBlocks), because we keep the exact order of retries from the case where the peer does not answer at all (not even with NOTFOUND), just ask our next peer in line earlier than we would have otherwise.",
      "created_at" : "2020-03-20T15:56:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-601774053",
      "id" : 601774053,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTc3NDA1Mw==",
      "updated_at" : "2020-03-20T15:56:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601774053",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@mzumsande there's a little threat that, unlike with prior behavior, we won't have a 1 minute window between _first peer announced a tx and followed up with NOTFOUND_, and _we execute requests for the next peers_, during which more honest outbound peers can come with announcements and get prioritized against inbound dishonest peers.\r\n\r\nBut the only ways I think this can be exploited require dropping a transaction from an honest announcer's mempool, which is probably a more critical vulnerability anyway, so this doesn't reduce the overall security.",
      "created_at" : "2020-03-22T00:01:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-602122496",
      "id" : 602122496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjEyMjQ5Ng==",
      "updated_at" : "2020-03-22T00:03:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602122496",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r396040661"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396040661"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why is 2-seconds random delay useful here? It can accidentally prioritize inbound nodes over outbound :)",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-22T00:05:11Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {\n+         CNodeState::TxDownloadState* d = &el.second.m_tx_download;\n+         if (d->m_tx_in_flight.size() >= MAX_PEER_TX_IN_FLIGHT) continue;\n+         auto it = d->m_tx_announced.find(txid);\n+         if (it != d->m_tx_announced.end()) {\n+             if (best_d == nullptr || (it->second != std::chrono::microseconds::zero() && it->second < best)) {\n+                 best_d = d;\n+                 best = it->second;\n+             }\n+         }\n+    }\n+\n+    std::chrono::microseconds process_time = current_time + GetRandMicros(MAX_NOTFOUND_RETRY_RANDOM_DELAY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r396040661",
      "id" : 396040661,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MDY2MQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 43,
      "path" : "src/net_processing.cpp",
      "position" : 43,
      "pull_request_review_id" : 378961324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-22T00:05:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396040661",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r396884515"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396884515"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It already tests that `process_time < best` so the 2s delay will only bring a process time forward, not push it back past an inbound peer's process time.\r\n\r\nI think the scenario is likely to be:\r\n\r\n * bunch of peers announce a new tx, outbound connections get polled asap, inbound connections get polled after 2s\r\n * you pick one of those, likely an outbound, and send a GETDATA\r\n * other peers announce, get a 60s-64s delay\r\n * the early announcing peers get their process time rescheduled with an additional 60-64s delay\r\n * a NOTFOUND comes back, and you pick whoever's delay was shortest; if it came back in under 2s, you'll next ask an inbound connection who announced early; if it came back later, you'll probably ask an outbound connection who announced after you'd sent the first GETDATA\r\n\r\nWhich is to say, I don't think we're consistently prioritising outbounds after the first request anyway.\r\n\r\nI don't have a good rationale for the 2s random delay; instantly going from a NOTFOUND from one peer to a GETDATA to another peer seems risky to me though.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-24T03:33:28Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {\n+         CNodeState::TxDownloadState* d = &el.second.m_tx_download;\n+         if (d->m_tx_in_flight.size() >= MAX_PEER_TX_IN_FLIGHT) continue;\n+         auto it = d->m_tx_announced.find(txid);\n+         if (it != d->m_tx_announced.end()) {\n+             if (best_d == nullptr || (it->second != std::chrono::microseconds::zero() && it->second < best)) {\n+                 best_d = d;\n+                 best = it->second;\n+             }\n+         }\n+    }\n+\n+    std::chrono::microseconds process_time = current_time + GetRandMicros(MAX_NOTFOUND_RETRY_RANDOM_DELAY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r396884515",
      "id" : 396884515,
      "in_reply_to_id" : 396040661,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4NDUxNQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 43,
      "path" : "src/net_processing.cpp",
      "position" : 43,
      "pull_request_review_id" : 379978515,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-24T03:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396884515",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397167955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397167955"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, I was a bit confused, now what's on your mind makes sense to me.\r\nI'm probably fine with leaving your 2s random delay.\r\n\r\n>Which is to say, I don't think we're consistently prioritising outbounds after the first request anyway.\r\n\r\nI think we do? That's probably off-topic here, although i'd be curious why you think so.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-24T13:52:24Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {\n+         CNodeState::TxDownloadState* d = &el.second.m_tx_download;\n+         if (d->m_tx_in_flight.size() >= MAX_PEER_TX_IN_FLIGHT) continue;\n+         auto it = d->m_tx_announced.find(txid);\n+         if (it != d->m_tx_announced.end()) {\n+             if (best_d == nullptr || (it->second != std::chrono::microseconds::zero() && it->second < best)) {\n+                 best_d = d;\n+                 best = it->second;\n+             }\n+         }\n+    }\n+\n+    std::chrono::microseconds process_time = current_time + GetRandMicros(MAX_NOTFOUND_RETRY_RANDOM_DELAY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397167955",
      "id" : 397167955,
      "in_reply_to_id" : 396040661,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE2Nzk1NQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 43,
      "path" : "src/net_processing.cpp",
      "position" : 43,
      "pull_request_review_id" : 380328631,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-24T13:52:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397167955",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397176111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397176111"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could we come up with a better variable name? :(\r\nMaybe \"tx_communication\" or something. Yeah it sucks, but probably nothing is worse than 1-letter name for something meaningful like this.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-24T14:03:30Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {\n+         CNodeState::TxDownloadState* d = &el.second.m_tx_download;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397176111",
      "id" : 397176111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE3NjExMQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 32,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 380339215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-24T14:03:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397176111",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397176897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397176897"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "also best->best_time",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-24T14:04:33Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {\n+         CNodeState::TxDownloadState* d = &el.second.m_tx_download;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397176897",
      "id" : 397176897,
      "in_reply_to_id" : 397176111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE3Njg5Nw==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 32,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 380340216,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-24T14:04:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397176897",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397211419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397211419"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this line handles a tricky corner case. Can we add comment to reduce the cognitive burned on code reviewer?\r\nWhat I think happens is (correct me if I'm wrong):\r\n- request from X1, not found\r\n- request from X2, ignores us for 1 minute\r\n- request from X3, notfound\r\n- this line prevents us from querying X2 again (we would if this line is deleted)\r\n\r\nNow that I wrote this, one could simply check the presence of m_tx_in_flight for that peer, and if it is in flight, not consider for re-query? ",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-24T14:48:54Z",
      "diff_hunk" : "@@ -4039,6 +4076,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n             // Erase this entry from tx_process_time (it may be added back for\n             // processing at a later time, see below)\n             tx_process_time.erase(tx_process_time.begin());\n+            state.m_tx_download.m_tx_announced[txid] = std::chrono::microseconds::zero();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397211419",
      "id" : 397211419,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIxMTQxOQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 94,
      "path" : "src/net_processing.cpp",
      "position" : 94,
      "pull_request_review_id" : 380384599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-24T14:48:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397211419",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397615753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397615753"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Or I renamed `best` to `lower_process_time` while reviewing, but I agree names can be more meaningful.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T05:24:14Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {\n+         CNodeState::TxDownloadState* d = &el.second.m_tx_download;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397615753",
      "id" : 397615753,
      "in_reply_to_id" : 397176111,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxNTc1Mw==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 32,
      "path" : "src/net_processing.cpp",
      "position" : 32,
      "pull_request_review_id" : 380865364,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T06:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397615753",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397628040"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397628040"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Did you consider to filter by `nPreferredDownload` to favor outbound peers and lower DoS risk? Only querying outbound peers should be good enough to achieve goal of finding NOTFOUND transactions but even if we don't success due to bad-connectivity of our outbounds, worst-case scenario we hit the 1-min window (and a transaction not being announced by our outbounds is less likely to be a honest announcement?)",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T06:13:20Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397628040",
      "id" : 397628040,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyODA0MA==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 31,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 380865364,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T06:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397628040",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397861849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397861849"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I get a compiler warning that `best` might be used before initialization:\r\n\r\n```\r\nnet_processing.cpp: In function âbool ProcessMessage(CNode*, const string&, CDataStream&, int64_t, const CChainParams&, CConnman*, BanMan*, const std::atomic<bool>&)â:\r\nnet_processing.cpp:756:27: warning: âbestâ may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n     if (best_d != nullptr && process_time < best) {\r\n         ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\r\nnet_processing.cpp:741:31: note: âbestâ was declared here\r\n     std::chrono::microseconds best;\r\n                               ^~~~\r\n```\r\n\r\nThe logic below means that this can't be read before set, but I don't see any harm in initializing to 0 or `std::chrono::microseconds::max()`.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T13:41:58Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397861849",
      "id" : 397861849,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg2MTg0OQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 29,
      "path" : "src/net_processing.cpp",
      "position" : 29,
      "pull_request_review_id" : 381156849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T15:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397861849",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397862854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397862854"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This can be an unordered map for average constant-time lookup:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 3373f7f54..2e097d44e 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -30,6 +30,7 @@\r\n \r\n #include <memory>\r\n #include <typeinfo>\r\n+#include <unordered_map>\r\n \r\n #if defined(NDEBUG)\r\n # error \"Bitcoin cannot be compiled without assertions.\"\r\n@@ -204,6 +205,11 @@ namespace {\r\n     static std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(g_cs_orphans);\r\n } // namespace\r\n \r\n+struct TxHasher\r\n+{\r\n+    size_t operator()(const uint256& hash) const { return ReadLE64(hash.begin()); }\r\n+};\r\n+\r\n namespace {\r\n /**\r\n  * Maintain validation-specific state about nodes, protected by cs_main, instead\r\n@@ -349,7 +355,7 @@ struct CNodeState {\r\n         /* Store all the transactions a peer has recently announced,\r\n          * along with their process time\r\n          */\r\n-        std::map<uint256, std::chrono::microseconds> m_tx_announced;\r\n+        std::unordered_map<uint256, std::chrono::microseconds, TxHasher> m_tx_announced;\r\n \r\n         //! Store transactions which were requested by us, with timestamp\r\n```",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T13:43:26Z",
      "diff_hunk" : "@@ -344,8 +346,10 @@ struct CNodeState {\n          */\n         std::multimap<std::chrono::microseconds, uint256> m_tx_process_time;\n \n-        //! Store all the transactions a peer has recently announced\n-        std::set<uint256> m_tx_announced;\n+        /* Store all the transactions a peer has recently announced,\n+         * along with their process time\n+         */\n+        std::map<uint256, std::chrono::microseconds> m_tx_announced;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397862854",
      "id" : 397862854,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg2Mjg1NA==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 18,
      "path" : "src/net_processing.cpp",
      "position" : 18,
      "pull_request_review_id" : 381156849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T15:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397862854",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397883915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397883915"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this comment could be slightly improved. The time is set to:\r\n\r\n- `std::chrono::microseconds::zero()` if the transaction has been requested from this peer (ie exists in `m_tx_in_flight`)\r\n- the process time if the transaction has not yet been requested from this peer (ie exists in `m_tx_process_time`)\r\n",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T14:11:00Z",
      "diff_hunk" : "@@ -344,8 +346,10 @@ struct CNodeState {\n          */\n         std::multimap<std::chrono::microseconds, uint256> m_tx_process_time;\n \n-        //! Store all the transactions a peer has recently announced\n-        std::set<uint256> m_tx_announced;\n+        /* Store all the transactions a peer has recently announced,\n+         * along with their process time",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397883915",
      "id" : 397883915,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4MzkxNQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 16,
      "path" : "src/net_processing.cpp",
      "position" : 16,
      "pull_request_review_id" : 381156849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T15:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397883915",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397916687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397916687"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Did you consider moving all of the `NOTFOUND` processing to its own function `ProcessNotFound()`? Splitting the logic between here and `RetryProcessTx()` makes it more difficult to follow than if it was all in one place.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T14:51:57Z",
      "diff_hunk" : "@@ -3222,6 +3257,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         std::vector<CInv> vInv;\n         vRecv >> vInv;\n         if (vInv.size() <= MAX_PEER_TX_IN_FLIGHT + MAX_BLOCKS_IN_TRANSIT_PER_PEER) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397916687",
      "id" : 397916687,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNjY4Nw==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 77,
      "path" : "src/net_processing.cpp",
      "position" : 77,
      "pull_request_review_id" : 381156849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T15:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397916687",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397925056"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397925056"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe I'm misunderstanding the logic here, but this will bring the `NodeState`'s `m_tx_process_time` forward (to now + ~1second), but does nothing to the global `g_already_asked_for` time, which means that next time we go round `SendMessages()`, we won't actually rerequest the transaction, since `last_request_time > current_time - GETDATA_TX_INTERVAL`. Am I missing something?\r\n\r\nIf I'm right, I think we need to do something like reset `g_already_asked_for` to one minute ago.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T15:02:03Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {\n+         CNodeState::TxDownloadState* d = &el.second.m_tx_download;\n+         if (d->m_tx_in_flight.size() >= MAX_PEER_TX_IN_FLIGHT) continue;\n+         auto it = d->m_tx_announced.find(txid);\n+         if (it != d->m_tx_announced.end()) {\n+             if (best_d == nullptr || (it->second != std::chrono::microseconds::zero() && it->second < best)) {\n+                 best_d = d;\n+                 best = it->second;\n+             }\n+         }\n+    }\n+\n+    std::chrono::microseconds process_time = current_time + GetRandMicros(MAX_NOTFOUND_RETRY_RANDOM_DELAY);\n+    if (best_d != nullptr && process_time < best) {\n+        auto end = best_d->m_tx_process_time.end();\n+        for (auto it = best_d->m_tx_process_time.lower_bound(best); it != end && it->first == best; ++it) {\n+            if (it->second == txid) {\n+                best_d->m_tx_process_time.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397925056",
      "id" : 397925056,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyNTA1Ng==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 48,
      "path" : "src/net_processing.cpp",
      "position" : 48,
      "pull_request_review_id" : 381156849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T15:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397925056",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397928486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397928486"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Now that we're potentially rerequesting txs from different peers after receiving a NOTFOUND, I think we _shouldn't_ erase them from a peer's _m_tx_in_flight_ and _m_tx_announced_ structures in receipt of a `NOTFOUND`, and keep them there until the `TX_EXPIRY_INTERVAL` in `SendMessages()`, otherwise there might be an attack where an adversary has multiple connections to you, and then juggles you between them by sending an `INV` for a transaction, holding on to the `GETDATA`, and then sending a `NOTFOUND` immediately followed by an `INV` reannouncing the same tx.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T15:06:39Z",
      "diff_hunk" : "@@ -3234,6 +3270,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     }\n                     state->m_tx_download.m_tx_in_flight.erase(in_flight_it);\n                     state->m_tx_download.m_tx_announced.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397928486",
      "id" : 397928486,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyODQ4Ng==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 85,
      "path" : "src/net_processing.cpp",
      "position" : 85,
      "pull_request_review_id" : 381156849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T15:09:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397928486",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK but echoing jnewbery's feedback I also still have questions and agree with most of his code comments. I also think that code is currently not tested, so adding an explicit test would be very valuable. Additionally, comments in the `RetryProcessTx` code would be helpful for understanding.\r\n\r\nnit on the commit message: s/find one who doesn't already have its inflight/find all who don't already have their inflight/",
      "created_at" : "2020-03-25T16:38:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-603949033",
      "id" : 603949033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMzk0OTAzMw==",
      "updated_at" : "2020-03-25T16:38:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603949033",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398008657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398008657"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This condition could probably be simplified considerably if (1) `best` is initialized appropriately and (2) the entry for the `txid` in `m_tx_announced` is removed on line 4079 rather than zeroed (like what is done on line 3272). Was zeroing chosen on line 4079 for a specific reason?",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T16:48:18Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {\n+         CNodeState::TxDownloadState* d = &el.second.m_tx_download;\n+         if (d->m_tx_in_flight.size() >= MAX_PEER_TX_IN_FLIGHT) continue;\n+         auto it = d->m_tx_announced.find(txid);\n+         if (it != d->m_tx_announced.end()) {\n+             if (best_d == nullptr || (it->second != std::chrono::microseconds::zero() && it->second < best)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398008657",
      "id" : 398008657,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwODY1Nw==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 36,
      "path" : "src/net_processing.cpp",
      "position" : 36,
      "pull_request_review_id" : 381339908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T16:50:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398008657",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/4015903?v=4",
         "events_url" : "https://api.github.com/users/jkczyz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jkczyz/followers",
         "following_url" : "https://api.github.com/users/jkczyz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jkczyz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jkczyz",
         "id" : 4015903,
         "login" : "jkczyz",
         "node_id" : "MDQ6VXNlcjQwMTU5MDM=",
         "organizations_url" : "https://api.github.com/users/jkczyz/orgs",
         "received_events_url" : "https://api.github.com/users/jkczyz/received_events",
         "repos_url" : "https://api.github.com/users/jkczyz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jkczyz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jkczyz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398015110"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398015110"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My guess for the reason is [here](https://github.com/bitcoin/bitcoin/pull/18238#discussion_r397211419) :)",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T16:57:12Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {\n+         CNodeState::TxDownloadState* d = &el.second.m_tx_download;\n+         if (d->m_tx_in_flight.size() >= MAX_PEER_TX_IN_FLIGHT) continue;\n+         auto it = d->m_tx_announced.find(txid);\n+         if (it != d->m_tx_announced.end()) {\n+             if (best_d == nullptr || (it->second != std::chrono::microseconds::zero() && it->second < best)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398015110",
      "id" : 398015110,
      "in_reply_to_id" : 398008657,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAxNTExMA==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 36,
      "path" : "src/net_processing.cpp",
      "position" : 36,
      "pull_request_review_id" : 381347967,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T16:57:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398015110",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398205912"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398205912"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it'd be even better to change the 'best' definition to prefer outbound peers where we can, but fall back to inbound peers if there are no outbound peers that have announced the tx.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T22:21:23Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398205912",
      "id" : 398205912,
      "in_reply_to_id" : 397628040,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwNTkxMg==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 31,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 381579206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T22:37:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398205912",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398212938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398212938"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We discussed this in PR Review Club (https://bitcoincore.reviews/18238.html#l-115 and https://bitcoincore.reviews/18238.html#l-180), and there was some agreement that even for a small struct like this, the dependencies between the fields make it difficult to reason about and potentially bug-prone.\r\n\r\nI think from a high level, in the future we might want a `TxDownloadState` class which contains:\r\n\r\n- {txid, timestamp, state} objects where\r\n    - state can be 'announced' or 'requested'\r\n    - timestamp refers to 'when to request' if state is announced, and 'when requested' if state is requested\r\n- a way to lookup the object by txid\r\n- a way to iterate through the 'announced' objects sorted by timestamp\r\n- a way to iterate through the 'requested' objects (doesn't necessarily need to be sorted by timestamp since there can only be MAX_PEER_TX_IN_FLIGHT = 100 of them)\r\n- public functions to add, remove, refresh timestamps, etc\r\n    ",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-25T22:36:57Z",
      "diff_hunk" : "@@ -344,8 +346,10 @@ struct CNodeState {\n          */\n         std::multimap<std::chrono::microseconds, uint256> m_tx_process_time;\n \n-        //! Store all the transactions a peer has recently announced\n-        std::set<uint256> m_tx_announced;\n+        /* Store all the transactions a peer has recently announced,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398212938",
      "id" : 398212938,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIxMjkzOA==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 15,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 381579206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-25T22:37:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398212938",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398318859"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398318859"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm +1 on this, but maybe it'd be better to get wtxid relay #18044 in first?",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-26T05:00:57Z",
      "diff_hunk" : "@@ -344,8 +346,10 @@ struct CNodeState {\n          */\n         std::multimap<std::chrono::microseconds, uint256> m_tx_process_time;\n \n-        //! Store all the transactions a peer has recently announced\n-        std::set<uint256> m_tx_announced;\n+        /* Store all the transactions a peer has recently announced,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398318859",
      "id" : 398318859,
      "in_reply_to_id" : 398212938,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxODg1OQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 15,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 381703565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-26T05:00:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398318859",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398327348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398327348"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think you'd need that to remain constant/log time in worst-case/attack scenarios because the announced hash is completely under the control of an attacker.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-26T05:35:58Z",
      "diff_hunk" : "@@ -344,8 +346,10 @@ struct CNodeState {\n          */\n         std::multimap<std::chrono::microseconds, uint256> m_tx_process_time;\n \n-        //! Store all the transactions a peer has recently announced\n-        std::set<uint256> m_tx_announced;\n+        /* Store all the transactions a peer has recently announced,\n+         * along with their process time\n+         */\n+        std::map<uint256, std::chrono::microseconds> m_tx_announced;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r398327348",
      "id" : 398327348,
      "in_reply_to_id" : 397862854,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMyNzM0OA==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 18,
      "path" : "src/net_processing.cpp",
      "position" : 18,
      "pull_request_review_id" : 381713265,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-26T05:35:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398327348",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r399952805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399952805"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "why have any delay?",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-30T06:27:35Z",
      "diff_hunk" : "@@ -75,6 +75,8 @@ static constexpr std::chrono::microseconds INBOUND_PEER_TX_DELAY{std::chrono::se\n static constexpr std::chrono::microseconds GETDATA_TX_INTERVAL{std::chrono::seconds{60}};\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n static constexpr std::chrono::microseconds MAX_GETDATA_RANDOM_DELAY{std::chrono::seconds{2}};\n+/** Delay between receiving a NOTFOUND and trying the next peer. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r399952805",
      "id" : 399952805,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk1MjgwNQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 4,
      "path" : "src/net_processing.cpp",
      "position" : 4,
      "pull_request_review_id" : 383559888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-30T06:27:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399952805",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1530283?v=4",
         "events_url" : "https://api.github.com/users/rebroad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rebroad/followers",
         "following_url" : "https://api.github.com/users/rebroad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rebroad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rebroad",
         "id" : 1530283,
         "login" : "rebroad",
         "node_id" : "MDQ6VXNlcjE1MzAyODM=",
         "organizations_url" : "https://api.github.com/users/rebroad/orgs",
         "received_events_url" : "https://api.github.com/users/rebroad/received_events",
         "repos_url" : "https://api.github.com/users/rebroad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rebroad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rebroad"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400232009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400232009"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We have some discussion [here](https://github.com/bitcoin/bitcoin/pull/18238#discussion_r396040661)",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-30T14:23:12Z",
      "diff_hunk" : "@@ -75,6 +75,8 @@ static constexpr std::chrono::microseconds INBOUND_PEER_TX_DELAY{std::chrono::se\n static constexpr std::chrono::microseconds GETDATA_TX_INTERVAL{std::chrono::seconds{60}};\n /** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others. */\n static constexpr std::chrono::microseconds MAX_GETDATA_RANDOM_DELAY{std::chrono::seconds{2}};\n+/** Delay between receiving a NOTFOUND and trying the next peer. */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400232009",
      "id" : 400232009,
      "in_reply_to_id" : 399952805,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzMjAwOQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 4,
      "path" : "src/net_processing.cpp",
      "position" : 4,
      "pull_request_review_id" : 383906271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-30T14:23:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400232009",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400597100"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400597100"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've had a first attempt at this: https://github.com/jnewbery/bitcoin/tree/2020-03-tx-download-class\r\n\r\nNo tests or comments yet, and it could be tidied up, but do you think this is heading in the right direction?",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-31T01:55:06Z",
      "diff_hunk" : "@@ -344,8 +346,10 @@ struct CNodeState {\n          */\n         std::multimap<std::chrono::microseconds, uint256> m_tx_process_time;\n \n-        //! Store all the transactions a peer has recently announced\n-        std::set<uint256> m_tx_announced;\n+        /* Store all the transactions a peer has recently announced,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400597100",
      "id" : 400597100,
      "in_reply_to_id" : 398212938,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NzEwMA==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 15,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 384351531,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-31T01:55:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400597100",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400649805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400649805"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We already prefer outbound peers when we bump the process time (in `CalculateTxGetDataTime()`), and this chooses the lowest process time which will reflect that preference. I don't think it makes sense to complicate this further unless someone wants to do some real world testing on how well/badly the process time preferencing works in practice when the first thing we try results in a notfound.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-31T05:21:07Z",
      "diff_hunk" : "@@ -731,6 +735,37 @@ std::chrono::microseconds CalculateTxGetDataTime(const uint256& txid, std::chron\n     return process_time;\n }\n \n+static void RetryProcessTx(CConnman& connman, const uint256& txid, const std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState* best_d = nullptr;\n+    std::chrono::microseconds best;\n+\n+    for (auto& el : mapNodeState) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400649805",
      "id" : 400649805,
      "in_reply_to_id" : 397628040,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY0OTgwNQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 31,
      "path" : "src/net_processing.cpp",
      "position" : 31,
      "pull_request_review_id" : 384409301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-31T05:21:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400649805",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400651358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400651358"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the idea was to stop you from doing `INV x; NOTFOUND x; INV x` repeatedly and making it harder for you to query other peers. But I think this introduces a bug -- the `zero` entry never gets cleared from `m_tx_announced`, because that's only cleared based on what's in `in_flight` and `process_time` and the txid isn't in either of those anymore.",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-31T05:26:37Z",
      "diff_hunk" : "@@ -4039,6 +4076,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n             // Erase this entry from tx_process_time (it may be added back for\n             // processing at a later time, see below)\n             tx_process_time.erase(tx_process_time.begin());\n+            state.m_tx_download.m_tx_announced[txid] = std::chrono::microseconds::zero();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400651358",
      "id" : 400651358,
      "in_reply_to_id" : 397211419,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY1MTM1OA==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 94,
      "path" : "src/net_processing.cpp",
      "position" : 94,
      "pull_request_review_id" : 384411020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-31T05:26:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400651358",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400965176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400965176"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, that means a peer that sends a NOTFOUND is treated exactly the same as one that just ignores the request; so NOTFOUND is just a \"fyi, I'm never going to respond, so feel free to try someone else\". That... seems like it makes a lot of sense? If we were to ever start punishing peers for (frequently) not responding to tx requests, maybe it would make sense to punish them for (equally frequently) sending notfounds too?",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-31T14:36:50Z",
      "diff_hunk" : "@@ -3234,6 +3270,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     }\n                     state->m_tx_download.m_tx_in_flight.erase(in_flight_it);\n                     state->m_tx_download.m_tx_announced.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400965176",
      "id" : 400965176,
      "in_reply_to_id" : 397928486,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2NTE3Ng==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 85,
      "path" : "src/net_processing.cpp",
      "position" : 85,
      "pull_request_review_id" : 384798575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-31T14:36:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400965176",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400967015"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400967015"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I was having a go at it too when I saw your comment, https://github.com/ajtowns/bitcoin/commits/202002-bump-notfound-wip -- separates out the current code into the class first, before changing it, which I think works better. Might be good to have some comments/style nits on the refactor?",
      "commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "created_at" : "2020-03-31T14:39:10Z",
      "diff_hunk" : "@@ -344,8 +346,10 @@ struct CNodeState {\n          */\n         std::multimap<std::chrono::microseconds, uint256> m_tx_process_time;\n \n-        //! Store all the transactions a peer has recently announced\n-        std::set<uint256> m_tx_announced;\n+        /* Store all the transactions a peer has recently announced,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#discussion_r400967015",
      "id" : 400967015,
      "in_reply_to_id" : 398212938,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2NzAxNQ==",
      "original_commit_id" : "a204d1586ca9e8f2d7b3951358fa5e63faa1810b",
      "original_position" : 15,
      "path" : "src/net_processing.cpp",
      "position" : 15,
      "pull_request_review_id" : 384800998,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18238",
      "updated_at" : "2020-03-31T14:39:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400967015",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-06-04T20:36:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-639102646",
      "id" : 639102646,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTEwMjY0Ng==",
      "updated_at" : "2020-06-04T20:36:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639102646",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Obsoleted by #19184",
      "created_at" : "2020-06-15T03:37:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18238#issuecomment-643884901",
      "id" : 643884901,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18238",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Mzg4NDkwMQ==",
      "updated_at" : "2020-06-15T03:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643884901",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
