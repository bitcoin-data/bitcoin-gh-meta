{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This fixes the race in p2p_blocksonly\r\n\r\nE.g. https://travis-ci.org/MarcoFalke/bitcoin-core/jobs/657038844#L4500\r\n\r\n```\r\n ...\r\n test  2020-03-01T20:58:28.825000Z TestFramework.mininode (DEBUG): Closed connection to: 127.0.0.1:11828 \r\n node0 2020-03-01T20:58:28.825642Z [net] disconnecting peer=0 \r\n node0 2020-03-01T20:58:28.825826Z [net] Cleared nodestate for peer=0\r\n node0 2020-03-01T20:58:28.875835Z [http] Received a POST request for / from 127.0.0.1:53448 \r\n node0 2020-03-01T20:58:28.876067Z [httpworker.0] ThreadRPCServer method=getmempoolinfo user=__cookie__ \r\n test  2020-03-01T20:58:28.877000Z TestFramework.mininode (DEBUG): Connecting to Bitcoin Node: 127.0.0.1:11828 \r\n test  2020-03-01T20:58:28.878000Z TestFramework.mininode (DEBUG): Connected & Listening: 127.0.0.1:11828 \r\n test  2020-03-01T20:58:28.878000Z TestFramework.mininode (DEBUG): Send message to 127.0.0.1:11828: msg_version(nVersion=70014 nServices=9 nTime=Sun Mar  1 20:58:28 2020 addrTo=CAddress(nServices=1 ip=127.0.0.1 port=11828) addrFrom=CAddress(nServices=1 ip=0.0.0.0 port=0) nNonce=0x164D5DEB952A4A0B strSubVer=b'/python-mininode-tester:0.0.3/' nStartingHeight=-1 nRelay=1) \r\n node0 2020-03-01T20:58:28.883808Z [net] Added connection peer=1 \r\n node0 2020-03-01T20:58:28.883950Z [net] connection from 127.0.0.1:33798 accepted \r\n node0 2020-03-01T20:58:28.884300Z [msghand] received: version (116 bytes) peer=1 \r\n node0 2020-03-01T20:58:28.884483Z [msghand] sending version (114 bytes) peer=1 \r\n node0 2020-03-01T20:58:28.884700Z [msghand] send version message: version 70015, blocks=200, us=[::]:0, peer=1\r\n node0 2020-03-01T20:58:28.884765Z [msghand] sending verack (0 bytes) peer=1 \r\n test  2020-03-01T20:58:28.885000Z TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11828: msg_version(nVersion=70015 nServices=1033 nTime=Sun Mar  1 20:58:28 2020 addrTo=CAddress(nServices=0 ip=0.0.0.0 port=0) addrFrom=CAddress(nServices=1033 ip=0.0.0.0 port=0) nNonce=0x4A0F2F4C549B3399 strSubVer=b'/Satoshi:0.19.99(testnode0)/' nStartingHeight=200 nRelay=0) \r\n test  2020-03-01T20:58:28.885000Z TestFramework.mininode (DEBUG): Send message to 127.0.0.1:11828: msg_verack() \r\n test  2020-03-01T20:58:28.885000Z TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11828: msg_verack() \r\n node0 2020-03-01T20:58:28.885004Z [msghand] receive version message: /python-mininode-tester:0.0.3/: version 70014, blocks=-1, us=127.0.0.1:11828, peer=1 \r\n test  2020-03-01T20:58:28.886000Z TestFramework (INFO): Check that txs from rpc are not rejected and relayed to other peers \r\n node0 2020-03-01T20:58:28.886556Z [http] Received a POST request for / from 127.0.0.1:53448 \r\n node0 2020-03-01T20:58:28.886783Z [httpworker.1] ThreadRPCServer method=getpeerinfo user=__cookie__ \r\n node0 2020-03-01T20:58:28.889032Z [http] Received a POST request for / from 127.0.0.1:53448 \r\n node0 2020-03-01T20:58:28.889294Z [httpworker.2] ThreadRPCServer method=testmempoolaccept user=__cookie__ \r\n node0 2020-03-01T20:58:28.891655Z [http] Received a POST request for / from 127.0.0.1:53448 \r\n node0 2020-03-01T20:58:28.891963Z [httpworker.3] ThreadRPCServer method=sendrawtransaction user=__cookie__ \r\n node0 2020-03-01T20:58:28.893115Z [httpworker.3] Enqueuing TransactionAddedToMempool: txid=af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f wtxid=af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f \r\n node0 2020-03-01T20:58:28.893443Z [scheduler] TransactionAddedToMempool: txid=af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f wtxid=af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f \r\n node0 2020-03-01T20:58:28.894814Z [msghand] received: verack (0 bytes) peer=1 \r\n node0 2020-03-01T20:58:28.894937Z [msghand] sending sendheaders (0 bytes) peer=1 \r\n node0 2020-03-01T20:58:28.895087Z [msghand] sending sendcmpct (9 bytes) peer=1 \r\n node0 2020-03-01T20:58:28.895235Z [msghand] sending sendcmpct (9 bytes) peer=1 \r\n node0 2020-03-01T20:58:28.895430Z [msghand] sending ping (8 bytes) peer=1 \r\n node0 2020-03-01T20:58:28.895896Z [msghand] initial getheaders (199) to peer=1 (startheight:-1) \r\n test  2020-03-01T20:58:28.896000Z TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11828: msg_sendheaders() \r\n node0 2020-03-01T20:58:28.896016Z [msghand] sending getheaders (645 bytes) peer=1 \r\n node0 2020-03-01T20:58:28.896607Z [msghand] sending feefilter (8 bytes) peer=1 \r\n test  2020-03-01T20:58:28.897000Z TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11828: msg_sendcmpct(announce=False, version=2) \r\n test  2020-03-01T20:58:28.897000Z TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11828: msg_sendcmpct(announce=False, version=1) \r\n test  2020-03-01T20:58:28.897000Z TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11828: msg_ping(nonce=f735096062d217b5) \r\n test  2020-03-01T20:58:28.897000Z TestFramework.mininode (DEBUG): Send message to 127.0.0.1:11828: msg_pong(nonce=f735096062d217b5) \r\n test  2020-03-01T20:58:28.897000Z TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11828: msg_getheaders(locator=CBlockLocator(nVersion=70014 vHave=[48924041037103782797700918670732352379567180837453042168545380831411841797392, 28010422273815860773972769588722664110955084223364219183119416607410792753789, 5954376895683677137597080246740451260829355661937599865380797589540815086241, 14500403275336359851183244421245184901482464358719551678581030092830439955257, 17853919108052771837249729512111680264864054213441538187113939176285784834878, 28843166929059356839755035875664073555480989477... (msg truncated) \r\n test  2020-03-01T20:58:28.897000Z TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11828: msg_feefilter(feerate=000003e8) \r\n node0 2020-03-01T20:58:28.898144Z [msghand] received: pong (8 bytes) peer=1 \r\n node0 2020-03-01T20:59:28.338539Z [scheduler] Feeding 13446 bytes of dynamic environment data into RNG \r\n test  2020-03-01T20:59:28.908000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: '''' \r\n                                           def test_function():\r\n                                               assert self.is_connected\r\n                                               if not self.last_message.get('tx'):\r\n                                                   return False\r\n                                               return self.last_message['tx'].tx.rehash() == txid\r\n                                   '''\r\n test  2020-03-01T20:59:28.908000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/home/travis/build/MarcoFalke/bitcoin-core/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 112, in main\r\n                                       self.run_test()\r\n                                     File \"/home/travis/build/MarcoFalke/bitcoin-core/build/bitcoin-x86_64-pc-linux-gnu/test/functional/p2p_blocksonly.py\", line 57, in run_test\r\n                                       self.nodes[0].p2p.wait_for_tx(txid)\r\n                                     File \"/home/travis/build/MarcoFalke/bitcoin-core/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/mininode.py\", line 369, in wait_for_tx\r\n                                       wait_until(test_function, timeout=timeout, lock=mininode_lock)\r\n                                     File \"/home/travis/build/MarcoFalke/bitcoin-core/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 234, in wait_until\r\n                                       raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\n                                   AssertionError: Predicate ''''\r\n                                           def test_function():\r\n                                               assert self.is_connected\r\n                                               if not self.last_message.get('tx'):\r\n                                                   return False\r\n                                               return self.last_message['tx'].tx.rehash() == txid\r\n                                   ''' not true after 60 seconds",
   "closed_at" : "2020-04-01T02:54:55Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18247/comments",
   "created_at" : "2020-03-02T19:14:18Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18247/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18247",
   "id" : 574187218,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18247/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : null,
      "closed_issues" : 58,
      "created_at" : "2019-03-06T20:02:40Z",
      "creator" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      },
      "description" : "",
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/42",
      "id" : 4116761,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/42/labels",
      "node_id" : "MDk6TWlsZXN0b25lNDExNjc2MQ==",
      "number" : 42,
      "open_issues" : 14,
      "state" : "open",
      "title" : "0.20.0",
      "updated_at" : "2020-04-01T02:54:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/42"
   },
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzgyNTU4NzEy",
   "number" : 18247,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18247.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18247",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18247.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18247"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "test: Wait for both veracks in add_p2p_connection",
   "updated_at" : "2020-04-01T02:56:16Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18247",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   }
}
