{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "https://github.com/bitcoin/bitcoin/pull/14121 implemented `blockfilterindex` in a way that it is extensible to different filter types, however there is only one single filter type so far, which is the default one, and combinations of these filter types aren't possible. In this proposal I describe how it is possible to add other filter types in a way that it is (1) backwards compatible and (2) all possible combinations of different filter types are possible.\r\n\r\n### Having Different Filters In Parallel\r\n\r\nAs far as I understand the code it is already prepared and adding a new filter type does not require refactoring to achieve this. So one would be able to define\r\n\r\n```\r\nblockfilterindex=basic\r\nblockfilterindex=p2wpkh\r\n```\r\n\r\nand the software will create both of those filters in parallel.\r\n\r\n### Combinations of Filters\r\n\r\n`blockfilterindex=basic`'s value maps to `uint8_t` values: 0 and 1. We can also represent `uint8_t` with a byte array that holds 8 octets. In case of `basic` it would be `00000000` (0) or `00000001` (1).  \r\n\r\n![image](https://user-images.githubusercontent.com/9156103/75546298-8680c880-5a28-11ea-9880-b19b7d50a4ed.png)\r\n\r\nThe idea is to use the bytes to denote the next filter types. For example we can assign `00000010` (2) to `p2wpkh` and `00000100` (4) to `p2wsh`. Further as the need arises we can use a larger type `uint32_t` or something like that to be able to define larger number of types.\r\n\r\n![image](https://user-images.githubusercontent.com/9156103/75546336-98fb0200-5a28-11ea-8b99-6e0542f9cb32.png)\r\n\r\nBut why not just go `1,2,3,4,5...` instead? Because this would enable us to also specify filter combinations. For example if I specify 6 (`00000110`) then I see that the `p2wpkh` and `p2wsh` octets are both flipped to true, so the software would add both to the filter:\r\n\r\n![image](https://user-images.githubusercontent.com/9156103/75546383-af08c280-5a28-11ea-8c38-4167f310ba51.png)\r\n\r\n```c++\r\n// If blockfilterindex  is turned on.\r\nforeach (var script in scripts) {\r\n\r\n    if (no higher octets are flipped to true other than the basic filter type's) {\r\n        filter.Add(script);\r\n        continue;\r\n    }\r\n    // However for backwards compatibility if a higher octet is true then disregard the basic filter type's octet since currently both 0 and 1 are defined to be the basic octet type. This will result two numbers evaluating to the same combination (Alternatively config parsing can throw an error or whatever to disable one of the number.)\r\n\r\n    if (p2wpkh octet is true AND script is p2wpkh) {\r\n        filter.Add(script);\r\n        continue;\r\n    }\r\n\r\n    if (p2wsh octet is true AND script is p2wsh) {\r\n        filter.Add(script);\r\n        continue;\r\n    }\r\n\r\n    // Add other types\r\n}\r\n```\r\n\r\n### Not In a Hurry\r\n\r\nLuckily whoever would add the next filter type wouldn't need to consider this proposal at all, because the next filter type would be `2` anyway, which lets us delay the decision until the 3rd filter type is added, of which according to this proposal should hold the value of `4` instead of `3` in order to facilitate the combinations of filter types.",
   "closed_at" : "2020-02-28T14:37:53Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
      "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
      "followers_url" : "https://api.github.com/users/nopara73/followers",
      "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
      "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/nopara73",
      "id" : 9156103,
      "login" : "nopara73",
      "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
      "organizations_url" : "https://api.github.com/users/nopara73/orgs",
      "received_events_url" : "https://api.github.com/users/nopara73/received_events",
      "repos_url" : "https://api.github.com/users/nopara73/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/nopara73"
   },
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18221/comments",
   "created_at" : "2020-02-28T11:58:45Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18221/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/18221",
   "id" : 572712050,
   "labels" : [
      {
         "color" : "7cf575",
         "default" : false,
         "description" : null,
         "id" : 64583,
         "name" : "Feature",
         "node_id" : "MDU6TGFiZWw2NDU4Mw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18221/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU1NzI3MTIwNTA=",
   "number" : 18221,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "`blockfilterindex` Extensibility Proposal",
   "updated_at" : "2020-02-28T14:38:20Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18221",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/9156103?v=4",
      "events_url" : "https://api.github.com/users/nopara73/events{/privacy}",
      "followers_url" : "https://api.github.com/users/nopara73/followers",
      "following_url" : "https://api.github.com/users/nopara73/following{/other_user}",
      "gists_url" : "https://api.github.com/users/nopara73/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/nopara73",
      "id" : 9156103,
      "login" : "nopara73",
      "node_id" : "MDQ6VXNlcjkxNTYxMDM=",
      "organizations_url" : "https://api.github.com/users/nopara73/orgs",
      "received_events_url" : "https://api.github.com/users/nopara73/received_events",
      "repos_url" : "https://api.github.com/users/nopara73/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/nopara73/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/nopara73"
   }
}
