{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Our handling of duplicate keys in JSON dictionaries is different from that of other languages like Python, Javascript (and most others I know of).\r\n\r\nWhile those languages parse the JSON and build hash tables, the last assignment of a key is what takes effect. e.g.\r\n```python\r\n>>> json.loads('{\"a\": \"first\", \"a\": \"second\"}')\r\n{'a': 'second'}\r\n```\r\n\r\nOur  `univalue`, though, stores every (key,value) pair in an array, and when a key is queried it returns the *first* associated value.\r\n\r\n```c++\r\n#include <iostream>\r\n#include <univalue.h>\r\n\r\nint main() {\r\n    UniValue val;\r\n    val.read(\"{\\\"a\\\": \\\"first\\\", \\\"a\\\": \\\"second\\\"}\");\r\n    std::cout << val[\"a\"].write() << std::endl;\r\n    return 0;\r\n}\r\n```\r\n\r\n```bash\r\n$ g++ unitest.cpp -o unitest -Iunivalue/include -L src/univalue/.libs -lunivalue\r\n$ ./unitest \r\n\"first\"\r\n```\r\n\r\nThis is not generally a problem but can create subtle interoperability issues. For example a proxy that validates the allowed JSON-RPC commands and lets through only some combinations of command/argument could be misled in this way.\r\n\r\nEither reversing this order or adding a \"strict mode\" that rejects duplicate keys might make sense. I don't know.\r\n\r\n(issue originally reported by Florian Mathieu)",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20949/comments",
   "created_at" : "2021-01-16T11:47:26Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20949/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/20949",
   "id" : 787449588,
   "labels" : [
      {
         "color" : "0052cc",
         "default" : false,
         "description" : null,
         "id" : 98279177,
         "name" : "RPC/REST/ZMQ",
         "node_id" : "MDU6TGFiZWw5ODI3OTE3Nw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20949/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU3ODc0NDk1ODg=",
   "number" : 20949,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Handling of duplicate keys in JSON",
   "updated_at" : "2021-01-16T12:10:28Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20949",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   }
}
