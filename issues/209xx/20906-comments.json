[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20906#discussion_r555650181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20906"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555650181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Where is the `DB_STR(\"3025\",` gone?",
      "commit_id" : "92370033a2606ee88f4d080193e0bf6da481dc2e",
      "created_at" : "2021-01-12T10:02:28Z",
      "diff_hunk" : "@@ -68,10 +68,155 @@ tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n \n # Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n-CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n-CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n-http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n-patch -p2 < clang.patch\n+patch --ignore-whitespace -p1 << 'EOF'\n+commit 3311d68f11d1697565401eee6efc85c34f022ea7\n+Author: fanquake <fanquake@gmail.com>\n+Date:   Mon Aug 17 20:03:56 2020 +0800\n+\n+    Fix C++11 compatibility\n+\n+diff --git a/dbinc/atomic.h b/dbinc/atomic.h\n+index 0034dcc..7c11d4a 100644\n+--- a/dbinc/atomic.h\n++++ b/dbinc/atomic.h\n+@@ -70,7 +70,7 @@ typedef struct {\n+  * These have no memory barriers; the caller must include them when necessary.\n+  */\n+ #define\tatomic_read(p)\t\t((p)->value)\n+-#define\tatomic_init(p, val)\t((p)->value = (val))\n++#define\tatomic_init_db(p, val)\t((p)->value = (val))\n+\n+ #ifdef HAVE_ATOMIC_SUPPORT\n+\n+@@ -144,7 +144,7 @@ typedef LONG volatile *interlocked_val;\n+ #define\tatomic_inc(env, p)\t__atomic_inc(p)\n+ #define\tatomic_dec(env, p)\t__atomic_dec(p)\n+ #define\tatomic_compare_exchange(env, p, o, n)\t\\\n+-\t__atomic_compare_exchange((p), (o), (n))\n++\t__atomic_compare_exchange_db((p), (o), (n))\n+ static inline int __atomic_inc(db_atomic_t *p)\n+ {\n+ \tint\ttemp;\n+@@ -176,7 +176,7 @@ static inline int __atomic_dec(db_atomic_t *p)\n+  * http://gcc.gnu.org/onlinedocs/gcc-4.1.0/gcc/Atomic-Builtins.html\n+  * which configure could be changed to use.\n+  */\n+-static inline int __atomic_compare_exchange(\n++static inline int __atomic_compare_exchange_db(\n+ \tdb_atomic_t *p, atomic_value_t oldval, atomic_value_t newval)\n+ {\n+ \tatomic_value_t was;\n+@@ -206,7 +206,7 @@ static inline int __atomic_compare_exchange(\n+ #define\tatomic_dec(env, p)\t(--(p)->value)\n+ #define\tatomic_compare_exchange(env, p, oldval, newval)\t\t\\\n+ \t(DB_ASSERT(env, atomic_read(p) == (oldval)),\t\t\\\n+-\tatomic_init(p, (newval)), 1)\n++\tatomic_init_db(p, (newval)), 1)\n+ #else\n+ #define atomic_inc(env, p)\t__atomic_inc(env, p)\n+ #define atomic_dec(env, p)\t__atomic_dec(env, p)\n+diff --git a/mp/mp_fget.c b/mp/mp_fget.c\n+index 5fdee5a..0b75f57 100644\n+--- a/mp/mp_fget.c\n++++ b/mp/mp_fget.c\n+@@ -617,7 +617,7 @@ alloc:\t\t/* Allocate a new buffer header and data space. */\n+\n+ \t\t/* Initialize enough so we can call __memp_bhfree. */\n+ \t\talloc_bhp->flags = 0;\n+-\t\tatomic_init(&alloc_bhp->ref, 1);\n++\t\tatomic_init_db(&alloc_bhp->ref, 1);\n+ #ifdef DIAGNOSTIC\n+ \t\tif ((uintptr_t)alloc_bhp->buf & (sizeof(size_t) - 1)) {\n+ \t\t\t__db_errx(env,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#discussion_r555650181",
      "id" : 555650181,
      "line" : 130,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY1MDE4MQ==",
      "original_commit_id" : "92370033a2606ee88f4d080193e0bf6da481dc2e",
      "original_line" : 130,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "contrib/install_db4.sh",
      "position" : 67,
      "pull_request_review_id" : 566110535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20906",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T10:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555650181",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20906#discussion_r555650860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20906"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555650860"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This was `MVCC_MPROTECT(bhp->buf, mfp->pagesize,` before.",
      "commit_id" : "92370033a2606ee88f4d080193e0bf6da481dc2e",
      "created_at" : "2021-01-12T10:03:33Z",
      "diff_hunk" : "@@ -68,10 +68,155 @@ tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n \n # Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n-CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n-CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n-http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n-patch -p2 < clang.patch\n+patch --ignore-whitespace -p1 << 'EOF'\n+commit 3311d68f11d1697565401eee6efc85c34f022ea7\n+Author: fanquake <fanquake@gmail.com>\n+Date:   Mon Aug 17 20:03:56 2020 +0800\n+\n+    Fix C++11 compatibility\n+\n+diff --git a/dbinc/atomic.h b/dbinc/atomic.h\n+index 0034dcc..7c11d4a 100644\n+--- a/dbinc/atomic.h\n++++ b/dbinc/atomic.h\n+@@ -70,7 +70,7 @@ typedef struct {\n+  * These have no memory barriers; the caller must include them when necessary.\n+  */\n+ #define\tatomic_read(p)\t\t((p)->value)\n+-#define\tatomic_init(p, val)\t((p)->value = (val))\n++#define\tatomic_init_db(p, val)\t((p)->value = (val))\n+\n+ #ifdef HAVE_ATOMIC_SUPPORT\n+\n+@@ -144,7 +144,7 @@ typedef LONG volatile *interlocked_val;\n+ #define\tatomic_inc(env, p)\t__atomic_inc(p)\n+ #define\tatomic_dec(env, p)\t__atomic_dec(p)\n+ #define\tatomic_compare_exchange(env, p, o, n)\t\\\n+-\t__atomic_compare_exchange((p), (o), (n))\n++\t__atomic_compare_exchange_db((p), (o), (n))\n+ static inline int __atomic_inc(db_atomic_t *p)\n+ {\n+ \tint\ttemp;\n+@@ -176,7 +176,7 @@ static inline int __atomic_dec(db_atomic_t *p)\n+  * http://gcc.gnu.org/onlinedocs/gcc-4.1.0/gcc/Atomic-Builtins.html\n+  * which configure could be changed to use.\n+  */\n+-static inline int __atomic_compare_exchange(\n++static inline int __atomic_compare_exchange_db(\n+ \tdb_atomic_t *p, atomic_value_t oldval, atomic_value_t newval)\n+ {\n+ \tatomic_value_t was;\n+@@ -206,7 +206,7 @@ static inline int __atomic_compare_exchange(\n+ #define\tatomic_dec(env, p)\t(--(p)->value)\n+ #define\tatomic_compare_exchange(env, p, oldval, newval)\t\t\\\n+ \t(DB_ASSERT(env, atomic_read(p) == (oldval)),\t\t\\\n+-\tatomic_init(p, (newval)), 1)\n++\tatomic_init_db(p, (newval)), 1)\n+ #else\n+ #define atomic_inc(env, p)\t__atomic_inc(env, p)\n+ #define atomic_dec(env, p)\t__atomic_dec(env, p)\n+diff --git a/mp/mp_fget.c b/mp/mp_fget.c\n+index 5fdee5a..0b75f57 100644\n+--- a/mp/mp_fget.c\n++++ b/mp/mp_fget.c\n+@@ -617,7 +617,7 @@ alloc:\t\t/* Allocate a new buffer header and data space. */\n+\n+ \t\t/* Initialize enough so we can call __memp_bhfree. */\n+ \t\talloc_bhp->flags = 0;\n+-\t\tatomic_init(&alloc_bhp->ref, 1);\n++\t\tatomic_init_db(&alloc_bhp->ref, 1);\n+ #ifdef DIAGNOSTIC\n+ \t\tif ((uintptr_t)alloc_bhp->buf & (sizeof(size_t) - 1)) {\n+ \t\t\t__db_errx(env,\n+@@ -911,7 +911,7 @@ alloc:\t\t/* Allocate a new buffer header and data space. */\n+ \t\t\tMVCC_MPROTECT(bhp->buf, mfp->stat.st_pagesize,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#discussion_r555650860",
      "id" : 555650860,
      "line" : 132,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY1MDg2MA==",
      "original_commit_id" : "92370033a2606ee88f4d080193e0bf6da481dc2e",
      "original_line" : 132,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "contrib/install_db4.sh",
      "position" : 69,
      "pull_request_review_id" : 566110535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20906",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T10:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555650860",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20906#discussion_r555652015"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20906"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555652015"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```diff\r\n-@@ -269,7 +269,7 @@ __memp_init(env, dbmp, reginfo_off, htab_buckets, max_nreg)\r\n- \t\thp->mtx_hash = (mtx_base == MUTEX_INVALID) ? MUTEX_INVALID :\r\n- \t\t    mtx_base + i;\r\n+@@ -302,7 +302,7 @@ no_prealloc:\r\n+ \t\t} else\r\n+ \t\t\thp->mtx_hash = mtx_base + (i % dbenv->mp_mtxcount);\r\n```",
      "commit_id" : "92370033a2606ee88f4d080193e0bf6da481dc2e",
      "created_at" : "2021-01-12T10:05:19Z",
      "diff_hunk" : "@@ -68,10 +68,155 @@ tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n \n # Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n-CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n-CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n-http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n-patch -p2 < clang.patch\n+patch --ignore-whitespace -p1 << 'EOF'\n+commit 3311d68f11d1697565401eee6efc85c34f022ea7\n+Author: fanquake <fanquake@gmail.com>\n+Date:   Mon Aug 17 20:03:56 2020 +0800\n+\n+    Fix C++11 compatibility\n+\n+diff --git a/dbinc/atomic.h b/dbinc/atomic.h\n+index 0034dcc..7c11d4a 100644\n+--- a/dbinc/atomic.h\n++++ b/dbinc/atomic.h\n+@@ -70,7 +70,7 @@ typedef struct {\n+  * These have no memory barriers; the caller must include them when necessary.\n+  */\n+ #define\tatomic_read(p)\t\t((p)->value)\n+-#define\tatomic_init(p, val)\t((p)->value = (val))\n++#define\tatomic_init_db(p, val)\t((p)->value = (val))\n+\n+ #ifdef HAVE_ATOMIC_SUPPORT\n+\n+@@ -144,7 +144,7 @@ typedef LONG volatile *interlocked_val;\n+ #define\tatomic_inc(env, p)\t__atomic_inc(p)\n+ #define\tatomic_dec(env, p)\t__atomic_dec(p)\n+ #define\tatomic_compare_exchange(env, p, o, n)\t\\\n+-\t__atomic_compare_exchange((p), (o), (n))\n++\t__atomic_compare_exchange_db((p), (o), (n))\n+ static inline int __atomic_inc(db_atomic_t *p)\n+ {\n+ \tint\ttemp;\n+@@ -176,7 +176,7 @@ static inline int __atomic_dec(db_atomic_t *p)\n+  * http://gcc.gnu.org/onlinedocs/gcc-4.1.0/gcc/Atomic-Builtins.html\n+  * which configure could be changed to use.\n+  */\n+-static inline int __atomic_compare_exchange(\n++static inline int __atomic_compare_exchange_db(\n+ \tdb_atomic_t *p, atomic_value_t oldval, atomic_value_t newval)\n+ {\n+ \tatomic_value_t was;\n+@@ -206,7 +206,7 @@ static inline int __atomic_compare_exchange(\n+ #define\tatomic_dec(env, p)\t(--(p)->value)\n+ #define\tatomic_compare_exchange(env, p, oldval, newval)\t\t\\\n+ \t(DB_ASSERT(env, atomic_read(p) == (oldval)),\t\t\\\n+-\tatomic_init(p, (newval)), 1)\n++\tatomic_init_db(p, (newval)), 1)\n+ #else\n+ #define atomic_inc(env, p)\t__atomic_inc(env, p)\n+ #define atomic_dec(env, p)\t__atomic_dec(env, p)\n+diff --git a/mp/mp_fget.c b/mp/mp_fget.c\n+index 5fdee5a..0b75f57 100644\n+--- a/mp/mp_fget.c\n++++ b/mp/mp_fget.c\n+@@ -617,7 +617,7 @@ alloc:\t\t/* Allocate a new buffer header and data space. */\n+\n+ \t\t/* Initialize enough so we can call __memp_bhfree. */\n+ \t\talloc_bhp->flags = 0;\n+-\t\tatomic_init(&alloc_bhp->ref, 1);\n++\t\tatomic_init_db(&alloc_bhp->ref, 1);\n+ #ifdef DIAGNOSTIC\n+ \t\tif ((uintptr_t)alloc_bhp->buf & (sizeof(size_t) - 1)) {\n+ \t\t\t__db_errx(env,\n+@@ -911,7 +911,7 @@ alloc:\t\t/* Allocate a new buffer header and data space. */\n+ \t\t\tMVCC_MPROTECT(bhp->buf, mfp->stat.st_pagesize,\n+ \t\t\t    PROT_READ);\n+\n+-\t\tatomic_init(&alloc_bhp->ref, 1);\n++\t\tatomic_init_db(&alloc_bhp->ref, 1);\n+ \t\tMUTEX_LOCK(env, alloc_bhp->mtx_buf);\n+ \t\talloc_bhp->priority = bhp->priority;\n+ \t\talloc_bhp->pgno = bhp->pgno;\n+diff --git a/mp/mp_mvcc.c b/mp/mp_mvcc.c\n+index 34467d2..f05aa0c 100644\n+--- a/mp/mp_mvcc.c\n++++ b/mp/mp_mvcc.c\n+@@ -276,7 +276,7 @@ __memp_bh_freeze(dbmp, infop, hp, bhp, need_frozenp)\n+ #else\n+ \tmemcpy(frozen_bhp, bhp, SSZA(BH, buf));\n+ #endif\n+-\tatomic_init(&frozen_bhp->ref, 0);\n++\tatomic_init_db(&frozen_bhp->ref, 0);\n+ \tif (mutex != MUTEX_INVALID)\n+ \t\tfrozen_bhp->mtx_buf = mutex;\n+ \telse if ((ret = __mutex_alloc(env, MTX_MPOOL_BH,\n+@@ -428,7 +428,7 @@ __memp_bh_thaw(dbmp, infop, hp, frozen_bhp, alloc_bhp)\n+ #endif\n+ \t\talloc_bhp->mtx_buf = mutex;\n+ \t\tMUTEX_LOCK(env, alloc_bhp->mtx_buf);\n+-\t\tatomic_init(&alloc_bhp->ref, 1);\n++\t\tatomic_init_db(&alloc_bhp->ref, 1);\n+ \t\tF_CLR(alloc_bhp, BH_FROZEN);\n+ \t}\n+\n+diff --git a/mp/mp_region.c b/mp/mp_region.c\n+index e6cece9..ddbe906 100644\n+--- a/mp/mp_region.c\n++++ b/mp/mp_region.c\n+@@ -224,7 +224,7 @@ __memp_init(env, dbmp, reginfo_off, htab_buckets, max_nreg)\n+ \t\t\t     MTX_MPOOL_FILE_BUCKET, 0, &htab[i].mtx_hash)) != 0)\n+ \t\t\t\treturn (ret);\n+ \t\t\tSH_TAILQ_INIT(&htab[i].hash_bucket);\n+-\t\t\tatomic_init(&htab[i].hash_page_dirty, 0);\n++\t\t\tatomic_init_db(&htab[i].hash_page_dirty, 0);\n+ \t\t}\n+\n+ \t\t/*\n+@@ -269,7 +269,7 @@ __memp_init(env, dbmp, reginfo_off, htab_buckets, max_nreg)\n+ \t\thp->mtx_hash = (mtx_base == MUTEX_INVALID) ? MUTEX_INVALID :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#discussion_r555652015",
      "id" : 555652015,
      "line" : 176,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY1MjAxNQ==",
      "original_commit_id" : "92370033a2606ee88f4d080193e0bf6da481dc2e",
      "original_line" : 176,
      "original_position" : 113,
      "original_start_line" : null,
      "path" : "contrib/install_db4.sh",
      "position" : 113,
      "pull_request_review_id" : 566110535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20906",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-01-12T10:05:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555652015",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@jonasschnelli The patch is an exact copy of https://github.com/bitcoin/bitcoin/blob/master/depends/patches/bdb/clang_cxx_11.patch",
      "created_at" : "2021-01-12T10:09:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#issuecomment-758550521",
      "id" : 758550521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20906",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODU1MDUyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-12T10:09:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758550521",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/11212268?v=4",
         "events_url" : "https://api.github.com/users/gruve-p/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gruve-p/followers",
         "following_url" : "https://api.github.com/users/gruve-p/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gruve-p/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gruve-p",
         "id" : 11212268,
         "login" : "gruve-p",
         "node_id" : "MDQ6VXNlcjExMjEyMjY4",
         "organizations_url" : "https://api.github.com/users/gruve-p/orgs",
         "received_events_url" : "https://api.github.com/users/gruve-p/received_events",
         "repos_url" : "https://api.github.com/users/gruve-p/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gruve-p/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gruve-p/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gruve-p"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n(and code review ACK if the patch matches)",
      "created_at" : "2021-01-12T13:07:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#issuecomment-758643780",
      "id" : 758643780,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20906",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1ODY0Mzc4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-12T13:08:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758643780",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nðµï¸ @practicalswift has been requested to review this pull request as specified in the REVIEWERS file.",
      "created_at" : "2021-01-13T11:45:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#issuecomment-759396037",
      "id" : 759396037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20906",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1OTM5NjAzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-13T11:45:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/759396037",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: in-repo is more robust and easier to review than out-of-repo :)",
      "created_at" : "2021-01-14T12:09:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#issuecomment-760156703",
      "id" : 760156703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20906",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MDE1NjcwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-14T12:09:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760156703",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I am concept ACK on this, but why did you choose to change the patch format? This makes the change more difficult to review.",
      "created_at" : "2021-01-15T21:26:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#issuecomment-761205817",
      "id" : 761205817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20906",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MTIwNTgxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-15T21:26:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/761205817",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jamesob The patch format is exactly the same as we use for depends: https://github.com/bitcoin/bitcoin/blob/master/depends/patches/bdb/clang_cxx_11.patch",
      "created_at" : "2021-01-15T21:31:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#issuecomment-761209187",
      "id" : 761209187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20906",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MTIwOTE4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-15T21:31:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/761209187",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/11212268?v=4",
         "events_url" : "https://api.github.com/users/gruve-p/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gruve-p/followers",
         "following_url" : "https://api.github.com/users/gruve-p/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gruve-p/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gruve-p",
         "id" : 11212268,
         "login" : "gruve-p",
         "node_id" : "MDQ6VXNlcjExMjEyMjY4",
         "organizations_url" : "https://api.github.com/users/gruve-p/orgs",
         "received_events_url" : "https://api.github.com/users/gruve-p/received_events",
         "repos_url" : "https://api.github.com/users/gruve-p/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gruve-p/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gruve-p/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gruve-p"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It would have been easier for reviewers if you made it clear in the PR description that this is now using the `depends/patches/bdb/clang_cxx_11.patch` and not the one from the gist.\r\n\r\nAnyhowâI checked that it (apart from whitespace) matches.\r\n\r\nACK 92370033a2606ee88f4d080193e0bf6da481dc2e",
      "created_at" : "2021-01-19T16:29:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20906#issuecomment-762959182",
      "id" : 762959182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20906",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2Mjk1OTE4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-19T16:29:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/762959182",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
