[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/26898#pullrequestreview-1254130211), [sipa](https://github.com/bitcoin/bitcoin/pull/26898#issuecomment-1398630808) |\n| Stale ACK | [MarcoFalke](https://github.com/bitcoin/bitcoin/pull/26898#pullrequestreview-1265301293) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-01-16T15:39:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#issuecomment-1384227723",
      "id" : 1384227723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26898",
      "node_id" : "IC_kwDOABII585SgaOL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384227723/reactions"
      },
      "updated_at" : "2023-01-23T16:32:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384227723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1073956267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073956267"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: etxra -> extra",
      "commit_id" : "b350ffd07c04d3b499f5960973d664d699341ec1",
      "created_at" : "2023-01-18T19:00:48Z",
      "diff_hunk" : "@@ -0,0 +1,119 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_etxra_txn{fuzzed_data_provider.ConsumeBool()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1073956267",
      "id" : 1073956267,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AA0Wr",
      "original_commit_id" : "1105efe46170c7edb3c4d5918ba573ff3aa49967",
      "original_line" : 67,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : null,
      "pull_request_review_id" : 1254130211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073956267/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-18T23:32:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073956267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1073984596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073984596"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "maybe add named arguments for the bools",
      "commit_id" : "b350ffd07c04d3b499f5960973d664d699341ec1",
      "created_at" : "2023-01-18T19:31:12Z",
      "diff_hunk" : "@@ -197,7 +197,8 @@ ReadStatus PartiallyDownloadedBlock::FillBlock(CBlock& block, const std::vector<\n         return READ_STATUS_INVALID;\n \n     BlockValidationState state;\n-    if (!CheckBlock(block, state, Params().GetConsensus())) {\n+    CheckBlockFn check_block = check_block_mock ? check_block_mock : CheckBlock;\n+    if (!check_block(block, state, Params().GetConsensus(), true, true)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1073984596",
      "id" : 1073984596,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AA7RU",
      "original_commit_id" : "f463998ccb7f8f0289d9e74f97db7184b7d54ded",
      "original_line" : 201,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/blockencodings.cpp",
      "position" : null,
      "pull_request_review_id" : 1254130211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073984596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-18T23:32:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073984596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1080665669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080665669"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "maybe we could memorize if we decided to skip an unavailable tx (i.e. one we were supposed to include in `missing`), and later assert that the FillBlock result must not be `READ_STATUS_OK` in this case?",
      "commit_id" : "b350ffd07c04d3b499f5960973d664d699341ec1",
      "created_at" : "2023-01-18T23:28:56Z",
      "diff_hunk" : "@@ -0,0 +1,119 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_etxra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_etxra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        bool skip{fuzzed_data_provider.ConsumeBool()};\n+        assert(init_status != READ_STATUS_OK ||\n+               (available.count(i) == 1) == pdb.IsTxAvailable(i));\n+        if (!pdb.IsTxAvailable(i) && !skip && i < block->vtx.size()) {\n+            missing.push_back(block->vtx[i]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1080665669",
      "id" : 1080665669,
      "line" : 100,
      "node_id" : "PRRC_kwDOABII585AaaZF",
      "original_commit_id" : "1105efe46170c7edb3c4d5918ba573ff3aa49967",
      "original_line" : 100,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : 100,
      "pull_request_review_id" : 1254130211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080665669/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-18T23:33:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080665669",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1082418099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082418099"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good idea, added an extra commit for this",
      "commit_id" : "b350ffd07c04d3b499f5960973d664d699341ec1",
      "created_at" : "2023-01-20T12:00:45Z",
      "diff_hunk" : "@@ -0,0 +1,119 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_etxra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_etxra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        bool skip{fuzzed_data_provider.ConsumeBool()};\n+        assert(init_status != READ_STATUS_OK ||\n+               (available.count(i) == 1) == pdb.IsTxAvailable(i));\n+        if (!pdb.IsTxAvailable(i) && !skip && i < block->vtx.size()) {\n+            missing.push_back(block->vtx[i]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1082418099",
      "id" : 1082418099,
      "in_reply_to_id" : 1080665669,
      "line" : 100,
      "node_id" : "PRRC_kwDOABII585AhGOz",
      "original_commit_id" : "1105efe46170c7edb3c4d5918ba573ff3aa49967",
      "original_line" : 100,
      "original_position" : 90,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : 100,
      "pull_request_review_id" : 1263469523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082418099/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T12:00:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082418099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2023-01-20T16:27:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#issuecomment-1398630808",
      "id" : 1398630808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26898",
      "node_id" : "IC_kwDOABII585TXWmY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398630808/reactions"
      },
      "updated_at" : "2023-01-20T16:27:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1398630808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1083856840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1083856840"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `m_` prefix?",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T10:07:22Z",
      "diff_hunk" : "@@ -129,6 +134,11 @@ class PartiallyDownloadedBlock {\n     const CTxMemPool* pool;\n public:\n     CBlockHeader header;\n+\n+    // Can be overriden for testing\n+    using CheckBlockFn = std::function<bool(const CBlock&, BlockValidationState&, const Consensus::Params&, bool, bool)>;\n+    CheckBlockFn check_block_mock{nullptr};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1083856840",
      "id" : 1083856840,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AmlfI",
      "original_commit_id" : "c41f50d389a48c98d6d643ac83820da301737d39",
      "original_line" : 140,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/blockencodings.h",
      "position" : null,
      "pull_request_review_id" : 1265301293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1083856840/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T15:02:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1083856840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084094778"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084094778"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit 1136999e0ce7b13e209ac3c3153ed698938b6f6e: Any reason to mention the unused names, other than `state`? Seems fragile, given that the names may go out-of-sync in the future or may have compilers warn/error on the dummy symbols.",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T14:01:59Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084094778",
      "id" : 1084094778,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Anfk6",
      "original_commit_id" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e",
      "original_line" : 34,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : null,
      "pull_request_review_id" : 1265301293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084094778/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T15:02:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084094778",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084151062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084151062"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e nit: Why not `if (init_status == READ_STATUS_OK) assert(...`? Seems less confusing to have less checks in one assert.",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T14:49:58Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_extra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_extra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        // If init_status == READ_STATUS_OK then a available transaction in the\n+        // compact block (i.e. IsTxAvailable(i) == true) implies that we marked\n+        // that transaction as available above (i.e. available.count(i) > 0).\n+        // The reverse is not true, due to possible compact block short id\n+        // collisions (i.e. available.count(i) > 0 does not imply\n+        // IsTxAvailable(i) == true).\n+        assert(init_status != READ_STATUS_OK ||",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084151062",
      "id" : 1084151062,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AntUW",
      "original_commit_id" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e",
      "original_line" : 92,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : null,
      "pull_request_review_id" : 1265301293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084151062/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T15:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084151062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084151594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084151594"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not that it matters, but a bitvector might use less space and time",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T14:50:23Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084151594",
      "id" : 1084151594,
      "line" : 59,
      "node_id" : "PRRC_kwDOABII585Antcq",
      "original_commit_id" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e",
      "original_line" : 59,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : 59,
      "pull_request_review_id" : 1265301293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084151594/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T15:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084151594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084152813"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084152813"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why would `i` ever be larger or equal to `vtx.size()`? Also, why would `BlockTxCount` ever be not equal to `vtx.size`?",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T14:51:23Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_extra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_extra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        // If init_status == READ_STATUS_OK then a available transaction in the\n+        // compact block (i.e. IsTxAvailable(i) == true) implies that we marked\n+        // that transaction as available above (i.e. available.count(i) > 0).\n+        // The reverse is not true, due to possible compact block short id\n+        // collisions (i.e. available.count(i) > 0 does not imply\n+        // IsTxAvailable(i) == true).\n+        assert(init_status != READ_STATUS_OK ||\n+               !pdb.IsTxAvailable(i) || available.count(i) > 0);\n+\n+        bool skip{fuzzed_data_provider.ConsumeBool()};\n+        if (!pdb.IsTxAvailable(i) && !skip && i < block->vtx.size()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084152813",
      "id" : 1084152813,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Antvt",
      "original_commit_id" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e",
      "original_line" : 96,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : null,
      "pull_request_review_id" : 1265301293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084152813/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T15:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084152813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084157755"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084157755"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Using `PickValue`, like the other enums, would be using less casts",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T14:55:19Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_extra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_extra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        // If init_status == READ_STATUS_OK then a available transaction in the\n+        // compact block (i.e. IsTxAvailable(i) == true) implies that we marked\n+        // that transaction as available above (i.e. available.count(i) > 0).\n+        // The reverse is not true, due to possible compact block short id\n+        // collisions (i.e. available.count(i) > 0 does not imply\n+        // IsTxAvailable(i) == true).\n+        assert(init_status != READ_STATUS_OK ||\n+               !pdb.IsTxAvailable(i) || available.count(i) > 0);\n+\n+        bool skip{fuzzed_data_provider.ConsumeBool()};\n+        if (!pdb.IsTxAvailable(i) && !skip && i < block->vtx.size()) {\n+            missing.push_back(block->vtx[i]);\n+        }\n+    }\n+\n+    // Mock CheckBlock\n+    bool fail_check_block{fuzzed_data_provider.ConsumeBool()};\n+    auto validation_result{static_cast<BlockValidationResult>(\n+        fuzzed_data_provider.ConsumeIntegralInRange<int>(\n+            (int)BlockValidationResult::BLOCK_RESULT_UNSET,\n+            (int)BlockValidationResult::BLOCK_HEADER_LOW_WORK))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084157755",
      "id" : 1084157755,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Anu87",
      "original_commit_id" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e",
      "original_line" : 106,
      "original_position" : 106,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : null,
      "pull_request_review_id" : 1265301293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084157755/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T15:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084157755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084159761"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084159761"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you want to use casts, I'd recommend std::underlying_type",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T14:56:50Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_extra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_extra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        // If init_status == READ_STATUS_OK then a available transaction in the\n+        // compact block (i.e. IsTxAvailable(i) == true) implies that we marked\n+        // that transaction as available above (i.e. available.count(i) > 0).\n+        // The reverse is not true, due to possible compact block short id\n+        // collisions (i.e. available.count(i) > 0 does not imply\n+        // IsTxAvailable(i) == true).\n+        assert(init_status != READ_STATUS_OK ||\n+               !pdb.IsTxAvailable(i) || available.count(i) > 0);\n+\n+        bool skip{fuzzed_data_provider.ConsumeBool()};\n+        if (!pdb.IsTxAvailable(i) && !skip && i < block->vtx.size()) {\n+            missing.push_back(block->vtx[i]);\n+        }\n+    }\n+\n+    // Mock CheckBlock\n+    bool fail_check_block{fuzzed_data_provider.ConsumeBool()};\n+    auto validation_result{static_cast<BlockValidationResult>(\n+        fuzzed_data_provider.ConsumeIntegralInRange<int>(\n+            (int)BlockValidationResult::BLOCK_RESULT_UNSET,\n+            (int)BlockValidationResult::BLOCK_HEADER_LOW_WORK))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084159761",
      "id" : 1084159761,
      "in_reply_to_id" : 1084157755,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AnvcR",
      "original_commit_id" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e",
      "original_line" : 106,
      "original_position" : 106,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : null,
      "pull_request_review_id" : 1265301293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084159761/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T15:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084159761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084163667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084163667"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Use `|=`?",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T15:00:06Z",
      "diff_hunk" : "@@ -96,6 +99,8 @@ FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n         if (!pdb.IsTxAvailable(i) && !skip && i < block->vtx.size()) {\n             missing.push_back(block->vtx[i]);\n         }\n+\n+        skipped_missing = skipped_missing || (!pdb.IsTxAvailable(i) && skip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084163667",
      "id" : 1084163667,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AnwZT",
      "original_commit_id" : "b350ffd07c04d3b499f5960973d664d699341ec1",
      "original_line" : 103,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : null,
      "pull_request_review_id" : 1265301293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084163667/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T15:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084163667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084282052"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084282052"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yea this is not needed, i suspect I this is a remnant of an earlier version of the target.",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T16:33:28Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_extra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_extra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        // If init_status == READ_STATUS_OK then a available transaction in the\n+        // compact block (i.e. IsTxAvailable(i) == true) implies that we marked\n+        // that transaction as available above (i.e. available.count(i) > 0).\n+        // The reverse is not true, due to possible compact block short id\n+        // collisions (i.e. available.count(i) > 0 does not imply\n+        // IsTxAvailable(i) == true).\n+        assert(init_status != READ_STATUS_OK ||\n+               !pdb.IsTxAvailable(i) || available.count(i) > 0);\n+\n+        bool skip{fuzzed_data_provider.ConsumeBool()};\n+        if (!pdb.IsTxAvailable(i) && !skip && i < block->vtx.size()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084282052",
      "id" : 1084282052,
      "in_reply_to_id" : 1084152813,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AoNTE",
      "original_commit_id" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e",
      "original_line" : 96,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : null,
      "pull_request_review_id" : 1265939382,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084282052/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T16:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084282052",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084283041"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084283041"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is worth it for now, but I might open a follow up if this turns out to significantly improve performance.",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T16:34:14Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084283041",
      "id" : 1084283041,
      "in_reply_to_id" : 1084151594,
      "line" : 59,
      "node_id" : "PRRC_kwDOABII585AoNih",
      "original_commit_id" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e",
      "original_line" : 59,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : 59,
      "pull_request_review_id" : 1265941038,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084283041/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T16:34:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084283041",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084283397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084283397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Dropped the unused names",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-23T16:34:28Z",
      "diff_hunk" : "@@ -0,0 +1,126 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock& block, BlockValidationState& state, const Consensus::Params& params, bool check_pow, bool check_merkle_root) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1084283397",
      "id" : 1084283397,
      "in_reply_to_id" : 1084094778,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AoNoF",
      "original_commit_id" : "1136999e0ce7b13e209ac3c3153ed698938b6f6e",
      "original_line" : 34,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : null,
      "pull_request_review_id" : 1265941453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084283397/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-23T16:34:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084283397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke addressed all your comments. CI failures seem unrelated (restarted the failing jobs).",
      "created_at" : "2023-01-23T17:18:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#issuecomment-1400703339",
      "id" : 1400703339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26898",
      "node_id" : "IC_kwDOABII585TfQlr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1400703339/reactions"
      },
      "updated_at" : "2023-01-23T17:18:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1400703339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1085160437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085160437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Could move to a common header file?",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-24T11:33:25Z",
      "diff_hunk" : "@@ -0,0 +1,142 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock&, BlockValidationState& state, const Consensus::Params&, bool, bool) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_extra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_extra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    // Whether we skipped a transaction that should be included in `missing`.\n+    // FillBlock should never return READ_STATUS_OK if that is the case.\n+    bool skipped_missing{false};\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        // If init_status == READ_STATUS_OK then a available transaction in the\n+        // compact block (i.e. IsTxAvailable(i) == true) implies that we marked\n+        // that transaction as available above (i.e. available.count(i) > 0).\n+        // The reverse is not true, due to possible compact block short id\n+        // collisions (i.e. available.count(i) > 0 does not imply\n+        // IsTxAvailable(i) == true).\n+        if (init_status == READ_STATUS_OK) {\n+            assert(!pdb.IsTxAvailable(i) || available.count(i) > 0);\n+        }\n+\n+        bool skip{fuzzed_data_provider.ConsumeBool()};\n+        if (!pdb.IsTxAvailable(i) && !skip) {\n+            missing.push_back(block->vtx[i]);\n+        }\n+\n+        skipped_missing |= (!pdb.IsTxAvailable(i) && skip);\n+    }\n+\n+    // Mock CheckBlock\n+    bool fail_check_block{fuzzed_data_provider.ConsumeBool()};\n+    auto validation_result =\n+        fuzzed_data_provider.PickValueInArray(\n+            {BlockValidationResult::BLOCK_RESULT_UNSET,\n+             BlockValidationResult::BLOCK_CONSENSUS,\n+             BlockValidationResult::BLOCK_RECENT_CONSENSUS_CHANGE,\n+             BlockValidationResult::BLOCK_CACHED_INVALID,\n+             BlockValidationResult::BLOCK_INVALID_HEADER,\n+             BlockValidationResult::BLOCK_MUTATED,\n+             BlockValidationResult::BLOCK_MISSING_PREV,\n+             BlockValidationResult::BLOCK_INVALID_PREV,\n+             BlockValidationResult::BLOCK_TIME_FUTURE,\n+             BlockValidationResult::BLOCK_CHECKPOINT,\n+             BlockValidationResult::BLOCK_HEADER_LOW_WORK});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1085160437",
      "id" : 1085160437,
      "line" : 121,
      "node_id" : "PRRC_kwDOABII585Arjv1",
      "original_commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "original_line" : 121,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : 121,
      "pull_request_review_id" : 1267330529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085160437/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T11:34:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085160437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1086378266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086378266"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Could make sense to include some extraneous txs that are not in the block in the extra txn or mempool?",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-25T09:14:35Z",
      "diff_hunk" : "@@ -0,0 +1,142 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock&, BlockValidationState& state, const Consensus::Params&, bool, bool) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_extra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_extra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1086378266",
      "id" : 1086378266,
      "line" : 80,
      "node_id" : "PRRC_kwDOABII585AwNEa",
      "original_commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "original_line" : 80,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : 80,
      "pull_request_review_id" : 1268956916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086378266/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-25T09:33:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086378266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1086382332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086382332"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit:\r\n\r\n```cpp\r\n        if (init_status == READ_STATUS_OK && pdb.IsTxAvailable(i)) {\r\n            assert(available.count(i) > 0);\r\n```\r\n\r\nAlso, in the comment replace \"then\" with \"and\"?",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-25T09:18:26Z",
      "diff_hunk" : "@@ -0,0 +1,142 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock&, BlockValidationState& state, const Consensus::Params&, bool, bool) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_extra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_extra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    // Whether we skipped a transaction that should be included in `missing`.\n+    // FillBlock should never return READ_STATUS_OK if that is the case.\n+    bool skipped_missing{false};\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        // If init_status == READ_STATUS_OK then a available transaction in the\n+        // compact block (i.e. IsTxAvailable(i) == true) implies that we marked\n+        // that transaction as available above (i.e. available.count(i) > 0).\n+        // The reverse is not true, due to possible compact block short id\n+        // collisions (i.e. available.count(i) > 0 does not imply\n+        // IsTxAvailable(i) == true).\n+        if (init_status == READ_STATUS_OK) {\n+            assert(!pdb.IsTxAvailable(i) || available.count(i) > 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1086382332",
      "id" : 1086382332,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII585AwOD8",
      "original_commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "original_line" : 96,
      "original_position" : 96,
      "original_start_line" : 95,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : 96,
      "pull_request_review_id" : 1268956916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086382332/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 95,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-25T09:33:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086382332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1086386318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086386318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit:\r\n\r\n\r\n```cpp\r\n        if (!pdb.IsTxAvailable(i)) {\r\n            if (skip) { skipped_missing = true; }\r\n            else { missing.push_back(block->vtx[i]); }\r\n        }",
      "commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "created_at" : "2023-01-25T09:22:17Z",
      "diff_hunk" : "@@ -0,0 +1,142 @@\n+#include <blockencodings.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/mempool.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+#include <limits>\n+#include <memory>\n+#include <optional>\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+const TestingSetup* g_setup;\n+} // namespace\n+\n+void initialize_pdb()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n+    g_setup = testing_setup.get();\n+}\n+\n+PartiallyDownloadedBlock::CheckBlockFn FuzzedCheckBlock(std::optional<BlockValidationResult> result)\n+{\n+    return [result](const CBlock&, BlockValidationState& state, const Consensus::Params&, bool, bool) {\n+        if (result) {\n+            return state.Invalid(*result);\n+        }\n+\n+        return true;\n+    };\n+}\n+\n+FUZZ_TARGET_INIT(partially_downloaded_block, initialize_pdb)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    auto block{ConsumeDeserializable<CBlock>(fuzzed_data_provider)};\n+    if (!block || block->vtx.size() == 0 ||\n+        block->vtx.size() >= std::numeric_limits<uint16_t>::max()) {\n+        return;\n+    }\n+\n+    CBlockHeaderAndShortTxIDs cmpctblock{*block};\n+\n+    CTxMemPool pool{MemPoolOptionsForTest(g_setup->m_node)};\n+    PartiallyDownloadedBlock pdb{&pool};\n+\n+    // Set of available transactions (mempool or extra_txn)\n+    std::set<uint16_t> available;\n+    // The coinbase is always available\n+    available.insert(0);\n+\n+    std::vector<std::pair<uint256, CTransactionRef>> extra_txn;\n+    for (size_t i = 1; i < block->vtx.size(); ++i) {\n+        auto tx{block->vtx[i]};\n+\n+        bool add_to_extra_txn{fuzzed_data_provider.ConsumeBool()};\n+        bool add_to_mempool{fuzzed_data_provider.ConsumeBool()};\n+\n+        if (add_to_extra_txn) {\n+            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\n+            available.insert(i);\n+        }\n+\n+        if (add_to_mempool) {\n+            LOCK2(cs_main, pool.cs);\n+            pool.addUnchecked(ConsumeTxMemPoolEntry(fuzzed_data_provider, *tx));\n+            available.insert(i);\n+        }\n+    }\n+\n+    auto init_status{pdb.InitData(cmpctblock, extra_txn)};\n+\n+    std::vector<CTransactionRef> missing;\n+    // Whether we skipped a transaction that should be included in `missing`.\n+    // FillBlock should never return READ_STATUS_OK if that is the case.\n+    bool skipped_missing{false};\n+    for (size_t i = 0; i < cmpctblock.BlockTxCount(); i++) {\n+        // If init_status == READ_STATUS_OK then a available transaction in the\n+        // compact block (i.e. IsTxAvailable(i) == true) implies that we marked\n+        // that transaction as available above (i.e. available.count(i) > 0).\n+        // The reverse is not true, due to possible compact block short id\n+        // collisions (i.e. available.count(i) > 0 does not imply\n+        // IsTxAvailable(i) == true).\n+        if (init_status == READ_STATUS_OK) {\n+            assert(!pdb.IsTxAvailable(i) || available.count(i) > 0);\n+        }\n+\n+        bool skip{fuzzed_data_provider.ConsumeBool()};\n+        if (!pdb.IsTxAvailable(i) && !skip) {\n+            missing.push_back(block->vtx[i]);\n+        }\n+\n+        skipped_missing |= (!pdb.IsTxAvailable(i) && skip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26898#discussion_r1086386318",
      "id" : 1086386318,
      "line" : 104,
      "node_id" : "PRRC_kwDOABII585AwPCO",
      "original_commit_id" : "a1c36275b5a27ae685f49ff02dabff0adbf51aa1",
      "original_line" : 104,
      "original_position" : 104,
      "original_start_line" : 100,
      "path" : "src/test/fuzz/partially_downloaded_block.cpp",
      "position" : 104,
      "pull_request_review_id" : 1268956916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26898",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086386318/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 100,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-25T09:33:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086386318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
