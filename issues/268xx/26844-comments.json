[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [sipa](https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1409105351), [vasild](https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1410469072) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-01-07T19:09:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1374578364",
      "id" : 1374578364,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26844",
      "node_id" : "IC_kwDOABII585R7ma8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1374578364/reactions"
      },
      "updated_at" : "2023-01-31T14:35:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1374578364",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "At a first glance I would ask why we can't do what was suggested here: https://github.com/bitcoin/bitcoin/pull/12519#issuecomment-368118017, if that is preferable? At least back then, it sounded like we could just pick https://github.com/bitcoin/bitcoin/commit/77cee166e17e355306d2ca1a1d360e71c12d8350 without the more involved changes in https://github.com/bitcoin/bitcoin/pull/11227. (Not advocating against your change, just wondering why you have chosen to go with the less preferable version when both seem technically possible)\r\n\r\nAlso pinging @vasild who would likely be a good reviewer for this.",
      "created_at" : "2023-01-16T16:44:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1384310255",
      "id" : 1384310255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26844",
      "node_id" : "IC_kwDOABII585SguXv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384310255/reactions"
      },
      "updated_at" : "2023-01-16T16:44:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384310255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> just wondering why you have chosen to go with the less preferable version when both seem technically possible\r\n\r\nBecause my change is tiny, and that other change is involved. I want the change to actually be merged, not bike-shedded indefinitely. Smaller changes are easier to validate.",
      "created_at" : "2023-01-16T20:43:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1384532618",
      "id" : 1384532618,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26844",
      "node_id" : "IC_kwDOABII585ShkqK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384532618/reactions"
      },
      "updated_at" : "2023-01-16T20:43:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384532618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1090324464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090324464"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If this can't send the full message one of the two `break`s below will be executed which may result in this function returning with all `Send()` calls using `MSG_MORE`. For example: let there be 3 messages, 10 bytes each. `Send()` of the first one will use `MSG_MORE`, let it return 10 (full message sent). `Send()` of the second one will use `MSG_MORE`, let it return any number in [0..9]. Then this function will return, without ever calling `Send()` without `MSG_MORE` and the first message may remain buffered/unsent somewhere in the OS.\r\n\r\nI think this is unwanted effect, defeating `TCP_NODELAY` and the check `if (it + 1 != node.vSendMsg.end())`.\r\n\r\nI wonder if it is possible to tell the OS that we are done, without sending further data? Maybe `Send(nullptr, 0, MSG_NOSIGNAL | MSG_DONTWAIT); // without MSG_MORE` would do that?",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-01-30T08:51:45Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1090324464",
      "id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585A_Qfw",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1274703060,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090324464/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-30T08:59:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090324464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1090965155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090965155"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If not all of our pending outgoing messages can fit in the socket's transmit buffer, then we *want* all of our calls to `send` to specify `MSG_MORE`. The kernel will immediately (without delay) transmit as many full segments as it can assemble and that will fit in the congestion window. It will not immediately transmit a partial segment but instead will call back to us (via returning a writable status from `select`, `poll`, `epoll`, etc.) to fetch more data to transmit. If we have no more data to transmit, then yes, calling `send` with a zero length and without `MSG_MORE` will tell the kernel that we have nothing left to send, and it will transmit a partial segment as soon as such segment will fit in the congestion window.\r\n\r\nIn your example, if the second of the three 10-byte messages can only partially be copied to the socket transmit buffer, then it must be the case that the transmit buffer is now full. The transmit buffer is always larger than MSS, the maximum segment size, meaning the kernel can now assemble a full segment, which it will transmit as soon as the window allows. It will then indicate the socket is writable again, and we will be called again to write more of the second message.\r\n\r\nSo, in short, your concern that we will unnecessarily delay transmitting data is unwarranted. The kernel never delays transmitting a full segment if it fits in the congestion window. The kernel does delay transmitting a partial segment that fits in the congestion window if the last call to `send` on that socket specified `MSG_MORE`, but that's exactly what we want, as we want the opportunity to write more data into the transmit buffer so the kernel will potentially transmit fewer and larger segments.",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-01-30T17:58:35Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1090965155",
      "id" : 1090965155,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BBs6j",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1275670177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090965155/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-30T17:58:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090965155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Would be nice to demonstrate that this actually brings some benefit and is not just code clutter. Maybe compare `tcpdump` output with and without this patch?\r\n\r\n`tcpdump` is what originally alerted me to the presence of this anti-pattern in Bitcoin Core years ago. It was the reason I looked into the code and opened my original PR to address the problem.\r\n\r\nI'd like someone else with experience in low-level network I/O programming to comment before I'd go to the effort to produce \"proof\" of the merits of using `MSG_MORE`. That flag does exist for good reason.",
      "created_at" : "2023-01-30T18:09:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1409085758",
      "id" : 1409085758,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26844",
      "node_id" : "IC_kwDOABII585T_PE-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1409085758/reactions"
      },
      "updated_at" : "2023-01-30T18:09:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1409085758",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nUnless someone is actively pursuing a PR to switch to gathering writes, I don't see any reason not to start using `MSG_MORE` if it's known to be beneficial.\r\n\r\nI also find the justification that this will never do something undesirable fairly convincing.\r\n\r\n",
      "created_at" : "2023-01-30T18:21:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1409105351",
      "id" : 1409105351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26844",
      "node_id" : "IC_kwDOABII585T_T3H",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1409105351/reactions"
      },
      "updated_at" : "2023-01-30T18:21:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1409105351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1091828077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091828077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If `send(2)` writes less bytes than requested, does it follow that the transmit buffer is full? I am not sure about that. Is it documented somewhere? What about a signal interrupting the send midway (or even before it started)? Is that not a case where `send(2)` writes less bytes than requested, but the transmit buffer is not full?",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-01-31T12:00:24Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1091828077",
      "id" : 1091828077,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BE_lt",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1277036081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091828077/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-31T12:00:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091828077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nBelow is some basic demonstration of `MSG_MORE` (tldr - it works!). The logs show how `send(2)` is called and there is the relevant `tcpdump(1)` output. This is during the initial handshake up to and including `verack`.\r\n\r\nmaster\r\n---\r\n```\r\ncalling Send(24) without MSG_MORE\r\ncalling Send(103) without MSG_MORE\r\ncalling Send(24) without MSG_MORE\r\ncalling Send(24) without MSG_MORE\r\ncalling Send(24) without MSG_MORE\r\n```\r\n\r\ntcpdump:\r\n```\r\nIP master.17807 > random_node.8333: Flags [S], seq 950983330, win 64240, options [mss 1420,sackOK,TS val 4155972266 ecr 0,nop,wscale 7], length 0\r\nIP master.17807 > random_node.8333: Flags [.], ack 3334216285, win 502, options [nop,nop,TS val 4155972306 ecr 1548157682], length 0\r\n* IP master.17807 > random_node.8333: Flags [P.], seq 0:24, ack 1, win 502, options [nop,nop,TS val 4155972306 ecr 1548157682], length 24\r\n* IP master.17807 > random_node.8333: Flags [P.], seq 24:127, ack 1, win 502, options [nop,nop,TS val 4155972306 ecr 1548157682], length 103\r\nIP master.17807 > random_node.8333: Flags [.], ack 25, win 502, options [nop,nop,TS val 4155972356 ecr 1548157732], length 0\r\nIP master.17807 > random_node.8333: Flags [.], ack 128, win 502, options [nop,nop,TS val 4155972356 ecr 1548157732], length 0\r\nIP master.17807 > random_node.8333: Flags [.], ack 152, win 502, options [nop,nop,TS val 4155972356 ecr 1548157732], length 0\r\nIP master.17807 > random_node.8333: Flags [.], ack 176, win 502, options [nop,nop,TS val 4155972356 ecr 1548157732], length 0\r\nIP master.17807 > random_node.8333: Flags [P.], seq 127:151, ack 176, win 502, options [nop,nop,TS val 4155972356 ecr 1548157732], length 24\r\nIP master.17807 > random_node.8333: Flags [P.], seq 151:175, ack 176, win 502, options [nop,nop,TS val 4155972356 ecr 1548157732], length 24\r\nIP master.17807 > random_node.8333: Flags [P.], seq 175:199, ack 176, win 502, options [nop,nop,TS val 4155972357 ecr 1548157732], length 24\r\n```\r\n\r\nPR\r\n---\r\n```\r\n>>>> calling Send(24) with MSG_MORE\r\n>>>> calling Send(103) without MSG_MORE\r\n>>>> calling Send(24) without MSG_MORE\r\n>>>> calling Send(24) without MSG_MORE\r\n>>>> calling Send(24) without MSG_MORE\r\n```\r\n\r\ntcpdump:\r\n```\r\nIP pr.17827 > random_node.8333: Flags [S], seq 2038199236, win 64240, options [mss 1420,sackOK,TS val 4155323939 ecr 0,nop,wscale 7], length 0\r\nIP pr.17827 > random_node.8333: Flags [.], ack 3514299724, win 502, options [nop,nop,TS val 4155323980 ecr 4260101434], length 0\r\n* IP pr.17827 > random_node.8333: Flags [P.], seq 0:127, ack 1, win 502, options [nop,nop,TS val 4155324474 ecr 4260101434], length 127\r\nIP pr.17827 > random_node.8333: Flags [.], ack 128, win 502, options [nop,nop,TS val 4155324509 ecr 4260101964], length 0\r\nIP pr.17827 > random_node.8333: Flags [.], ack 152, win 502, options [nop,nop,TS val 4155324509 ecr 4260101964], length 0\r\nIP pr.17827 > random_node.8333: Flags [P.], seq 127:151, ack 152, win 502, options [nop,nop,TS val 4155324510 ecr 4260101964], length 24\r\nIP pr.17827 > random_node.8333: Flags [P.], seq 151:175, ack 176, win 502, options [nop,nop,TS val 4155324510 ecr 4260101964], length 24\r\nIP pr.17827 > random_node.8333: Flags [.], ack 200, win 502, options [nop,nop,TS val 4155324554 ecr 4260101974], length 0\r\nIP pr.17827 > random_node.8333: Flags [P.], seq 175:199, ack 200, win 502, options [nop,nop,TS val 4155324558 ecr 4260102014], length 24\r\n```\r\n\r\n(notice the `length` of the packets marked with *, at the end of each line).",
      "created_at" : "2023-01-31T14:35:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#issuecomment-1410469072",
      "id" : 1410469072,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26844",
      "node_id" : "IC_kwDOABII585UEgzQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1410469072/reactions"
      },
      "updated_at" : "2023-01-31T14:35:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1410469072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1092388167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1092388167"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> What about a signal interrupting the send midway (or even before it started)?\r\n\r\nI'm pretty sure that's only possible if the socket is in blocking mode. But regardless, if `send` returns a short write due to invoking a signal handler, then the socket is still writable, and the user code will call `send` again without delay (i.e., on the next iteration of the I/O loop).",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-01-31T19:31:22Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1092388167",
      "id" : 1092388167,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BHIVH",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1277887024,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1092388167/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-01-31T19:31:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1092388167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1094487011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094487011"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That would be after accepting new connections, sending, receiving and parsing messages from all other (possibly 100s) connections. I guess this would be rare and even when it happens would probably have no adverse effects on the communication, but I would feel more comfortable if this PR does not introduce that. If a dummy `Send()` without `MSG_MORE` before the two `break`s is a way to avoid that, then I think it should be added.",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-02T12:50:52Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1094487011",
      "id" : 1094487011,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BPIvj",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1280998131,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094487011/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-02T12:50:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094487011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1094996625"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094996625"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In no case will the kernel hold onto a partial segment in the socket's transmit buffer for longer than 250 ms if the segment fits in the congestion window, so that's the maximum latency that could be introduced by writing a complete message with `MSG_MORE`, maxing out the transmit buffer while writing a subsequent message also with `MSG_MORE`, and then going off to do other things for a nigh eternity before coming back around.\r\n\r\nAnyway, I don't want to add *more* syscall overhead. I'd prefer to rewrite this to do gathering writes rather than adding yet another `send` call. If that's the only way you'll let this move forward, then I'll do that work, but then I'd expect that to be bike shedded for ages while people debate the merits of stack allocation versus heap allocation of the `struct iovec` array, platform agnosticism, abstraction leakage, readability and maintainability of code, and scope creep.",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-02T19:31:41Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1094996625",
      "id" : 1094996625,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BRFKR",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1281771404,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094996625/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-02T19:31:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1094996625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101560639"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101560639"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> ... 250 ms ...\r\n\r\nThat seems like relying on an undocumented behavior (unless it is documented somewhere)? But anyway:\r\n\r\n> ... If that's the only way you'll let this move forward ...\r\n\r\nI am not blocking this. I did not NACK it. I guess if it gathers enough ACKs from other reviewers it will get merged. Actually, I do not think this is a blocker, it is more in the \"I would feel more comfortable\" category.\r\n\r\nI guess something like this would be nice:\r\n\r\n```diff\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -790,57 +790,67 @@ void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vec\r\n \r\n size_t CConnman::SocketSendData(CNode& node) const\r\n {\r\n     auto it = node.vSendMsg.begin();\r\n     size_t nSentSize = 0;\r\n \r\n     while (it != node.vSendMsg.end()) {\r\n         const auto& data = *it;\r\n         assert(data.size() > node.nSendOffset);\r\n         int nBytes = 0;\r\n+        int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\r\n         {\r\n             LOCK(node.cs_hSocket);\r\n             if (!node.m_sock) {\r\n                 break;\r\n             }\r\n-            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\r\n #ifdef MSG_MORE\r\n             if (it + 1 != node.vSendMsg.end()) {\r\n                 flags |= MSG_MORE;\r\n             }\r\n #endif\r\n             nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);\r\n         }\r\n         if (nBytes > 0) {\r\n             node.m_last_send = GetTime<std::chrono::seconds>();\r\n             node.nSendBytes += nBytes;\r\n             node.nSendOffset += nBytes;\r\n             nSentSize += nBytes;\r\n             if (node.nSendOffset == data.size()) {\r\n                 node.nSendOffset = 0;\r\n                 node.nSendSize -= data.size();\r\n                 node.fPauseSend = node.nSendSize > nSendBufferMaxSize;\r\n                 it++;\r\n             } else {\r\n                 // could not send full message; stop sending more\r\n+#ifdef MSG_MORE\r\n+                if (flags & MSG_MORE) {\r\n+                    node.m_sock->Send(nullptr, 0, flags & ~MSG_MORE);\r\n+                }\r\n+#endif\r\n                 break;\r\n             }\r\n         } else {\r\n             if (nBytes < 0) {\r\n                 // error\r\n                 int nErr = WSAGetLastError();\r\n                 if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS) {\r\n                     LogPrint(BCLog::NET, \"socket send error for peer=%d: %s\\n\", node.GetId(), NetworkErrorString(nErr));\r\n                     node.CloseSocketDisconnect();\r\n                 }\r\n             }\r\n             // couldn't send anything at all\r\n+#ifdef MSG_MORE\r\n+            if (flags & MSG_MORE) {\r\n+                node.m_sock->Send(nullptr, 0, flags & ~MSG_MORE);\r\n+            }\r\n+#endif\r\n             break;\r\n         }\r\n     }\r\n \r\n     if (it == node.vSendMsg.end()) {\r\n         assert(node.nSendOffset == 0);\r\n         assert(node.nSendSize == 0);\r\n     }\r\n     node.vSendMsg.erase(node.vSendMsg.begin(), it);\r\n     return nSentSize;\r\n```",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-09T14:39:04Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101560639",
      "id" : 1101560639,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BqHs_",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1291283955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101560639/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-09T14:39:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101560639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101938318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101938318"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> > ... 250 ms ...\r\n> \r\n> That seems like relying on an undocumented behavior (unless it is documented somewhere)?\r\n\r\nIt is documented. (It's actually 200 milliseconds. I misremembered.)\r\n\r\n[`sendmsg(2)`](https://linux.die.net/man/2/sendmsg) says:\r\n\r\n> **MSG_MORE** (Since Linux 2.4.4)\r\n> The caller has more data to send. This flag is used with TCP sockets to obtain the same effect as the **TCP_CORK** socket option (see `tcp(7)`), with the difference that this flag can be set on a per-call basis.\r\n\r\n[`tcp(7)`](https://linux.die.net/man/7/tcp) says:\r\n\r\n> **TCP_CORK** (since Linux 2.2)\r\n> If set, don't send out partial frames. All queued partial frames are sent when the option is cleared again. This is useful for prepending headers before calling `sendfile(2)`, or for throughput optimization. As currently implemented, there is a 200 millisecond ceiling on the time for which output is corked by **TCP_CORK**. If this ceiling is reached, then queued data is automatically transmitted.",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-09T19:38:59Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101938318",
      "id" : 1101938318,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585Brj6O",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1291873225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101938318/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-09T19:38:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101938318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101955787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101955787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I also can't imagine the timeout actually matters for us? The patch above (the one adding a send with empty non-`MSG_MORE`) only triggers in case a `send()` call managed to push fewer bytes than we tried to send. That must mean the send buffer is full, and thus there is no point why the kernel would need to wait anymore.",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-09T19:58:55Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101955787",
      "id" : 1101955787,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BroLL",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1291905330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101955787/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-09T19:58:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101955787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101965025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101965025"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The kernel will never wait to send full segments.  Vasil's concern is the case where we try to send a non-final message, run out of space in the kernel's transmit buffer (so only some of the message was copied in), then go off and do other things for a virtual eternity. If we haven't called `send` without `MSG_MORE`, then it is *possible* that there is a complete message sitting in the kernel's transmit buffer (ahead of the incomplete message that we failed to fully write) that will be delayed. That's true, but I'd say that's by design. If it's really taking us longer than 200 ms for the network I/O loop to make a full pass, we have much bigger problems!",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-09T20:07:44Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101965025",
      "id" : 1101965025,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585Brqbh",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1291918735,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101965025/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-09T20:07:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101965025",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101976386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101976386"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The (very reasonable) hope is that the network I/O loop comes back around to our socket to finish writing the incomplete message (and possibly more messages) before the kernel's transmit buffer has drained below the size of a full segment. In that case, there will be no artificial delay introduced to any message we've written to the socket.\r\n\r\nSo, basically, we want the network I/O loop to come back around to service our socket again in less time than the kernel's transmit buffer takes to drain.",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-09T20:17:44Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1101976386",
      "id" : 1101976386,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BrtNC",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1291930933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101976386/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-09T20:17:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1101976386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1102403592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102403592"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> It is documented\r\n\r\nEven better, thanks!",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-10T08:01:40Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1102403592",
      "id" : 1102403592,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BtVgI",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1292588274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102403592/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-10T08:01:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102403592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1102879526"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102879526"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, I understand now.\r\n\r\nFWIW, I switched my (public, well-connected) node to (a rebased version of) this PR, together with @vasild's proposed patch above + logging whenever these empty non-`MSG_MORE` message would be sent.\r\n\r\nOn this node with ~250 connections, in 16 hours time, having uploaded 7.2 GB and downloaded 1.2 GB, 221 times a `MSG_MORE` was interrupted (always after sending some bytes, usually at least a few kB; never with having sent nothing).\r\n\r\n",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-10T15:10:41Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1102879526",
      "id" : 1102879526,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585BvJsm",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1293355514,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102879526/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-10T15:10:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1102879526",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1103046589"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103046589"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> 221 times a `MSG_MORE` was interrupted\r\n\r\nI think what you may have meant was that a `send` call indicated that fewer bytes were copied than were requested, not that the call was interrupted (by a signal handler).\r\n\r\nThe real test would be querying the `SIOCOUTQ` ioctl on the socket the *next* time the network I/O loop gets around to servicing it. That's the number of untransmitted bytes sitting in the kernel's transmit buffer. If that number is smaller than the connection's MSS, then the kernel exhausted its transmit buffer and started to delay sending the remaining bytes due to `MSG_MORE`.",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-10T17:41:49Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1103046589",
      "id" : 1103046589,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585Bvye9",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1293694788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103046589/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-10T17:41:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103046589",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1103053051"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103053051"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> never with having sent nothing\r\n\r\n*N.B.:* It would be impossible for zero bytes to have been copied to a socket in non-blocking mode if that socket had indicated that it was writable and no other thread had written to it since such indication was made. Again, I'm pretty sure that even signal handlers won't interrupt a non-blocking write since the kernel only enters an interruptible wait state during a blocking write.\r\n\r\n(Edit: Actually, there may be an edge case where a socket indicates writable despite having no free space in its transmit buffer: specifically the case where the next write call would immediately return an error without copying any bytes. That would be a fatal error on the socket, though, such as \"connection reset.\")",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-10T17:49:26Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1103053051",
      "id" : 1103053051,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585Bv0D7",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1293710113,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103053051/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-10T17:54:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103053051",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/797782?v=4",
         "events_url" : "https://api.github.com/users/whitslack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/whitslack/followers",
         "following_url" : "https://api.github.com/users/whitslack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/whitslack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/whitslack",
         "id" : 797782,
         "login" : "whitslack",
         "node_id" : "MDQ6VXNlcjc5Nzc4Mg==",
         "organizations_url" : "https://api.github.com/users/whitslack/orgs",
         "received_events_url" : "https://api.github.com/users/whitslack/received_events",
         "repos_url" : "https://api.github.com/users/whitslack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/whitslack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/whitslack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1103065474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103065474"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I think what you may have meant was that a send call indicated that fewer bytes were copied than were requested, not that the call was interrupted (by a signal handler).\r\n\r\nYes, exactly - I tried to be succinct, but that may have been confusing. Specifically, it refers to fewer bytes being accepted by `send()` than handed to it, while `MSG_MORE` was set.\r\n\r\n> N.B.: It would be impossible for zero bytes to have been copied to a socket in non-blocking mode if that socket had indicated that it was writable and no other thread had written to it since such indication was made.\r\n\r\nIndeed, so that sounds very much expected that 0 never happened (except when the socket errorred and the connected closed, but in that case, there is obviously no point in adding a non-`MSG_MORE` padding either).",
      "commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "created_at" : "2023-02-10T18:03:54Z",
      "diff_hunk" : "@@ -802,7 +802,13 @@ size_t CConnman::SocketSendData(CNode& node) const\n             if (!node.m_sock) {\n                 break;\n             }\n-            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != node.vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = node.m_sock->Send(reinterpret_cast<const char*>(data.data()) + node.nSendOffset, data.size() - node.nSendOffset, flags);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26844#discussion_r1103065474",
      "id" : 1103065474,
      "in_reply_to_id" : 1090324464,
      "line" : 811,
      "node_id" : "PRRC_kwDOABII585Bv3GC",
      "original_commit_id" : "691eaf8873fe2f189153ca637506a0291504c97a",
      "original_line" : 811,
      "original_position" : 11,
      "original_start_line" : 807,
      "path" : "src/net.cpp",
      "position" : 11,
      "pull_request_review_id" : 1293740211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26844",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103065474/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 807,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-10T18:03:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1103065474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
