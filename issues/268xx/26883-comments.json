[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/26883#pullrequestreview-1305479641), [glozow](https://github.com/bitcoin/bitcoin/pull/26883#issuecomment-1436796938) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27018](https://github.com/bitcoin/bitcoin/pull/27018) (mempool / miner: regularly flush below-minrelayfeerate entries, mine everything in the mempool by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-01-12T13:38:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#issuecomment-1380369846",
      "id" : 1380369846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26883",
      "node_id" : "IC_kwDOABII585SRsW2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1380369846/reactions"
      },
      "updated_at" : "2023-02-20T11:27:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1380369846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068236546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068236546"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "could make that `const` by also adding:\r\n\r\n```c++\r\nstatic BlockAssembler::Options clamp_options(const BlockAssembler::Options& opt)\r\n{\r\n    Options clamped{opt};\r\n    clamped.nBlockMaxWeight = std::clamp<size_t>(clamped.nBlockMaxWeight, 4000, DEFAULT_BLOCK_MAX_WEIGHT);\r\n    return clamped;\r\n}\r\n```\r\n\r\nand setting `m_options{clamped(options)}` in the constructor.",
      "commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "created_at" : "2023-01-12T15:05:30Z",
      "diff_hunk" : "@@ -172,6 +167,8 @@ class BlockAssembler\n     inline static std::optional<int64_t> m_last_block_weight{};\n \n private:\n+    Options m_options;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068236546",
      "id" : 1068236546,
      "line" : 170,
      "node_id" : "PRRC_kwDOABII584_q_8C",
      "original_commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "original_line" : 170,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/node/miner.h",
      "position" : 42,
      "pull_request_review_id" : 1245781178,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068236546/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T15:14:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068236546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068247937"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068247937"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This (and below) is a potential behaviour change: if you call `ApplyArgsManOptions`, then change the arguments, and call `ApplyArgsManOptions` again on the same `options` object it won't reset values back to the defaults any more. Probably no big deal, but not really a refactor.\r\n",
      "commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "created_at" : "2023-01-12T15:13:38Z",
      "diff_hunk" : "@@ -56,34 +56,22 @@ void RegenerateCommitments(CBlock& block, ChainstateManager& chainman)\n     block.hashMerkleRoot = BlockMerkleRoot(block);\n }\n \n-BlockAssembler::Options::Options()\n-{\n-    blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n-    nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    test_block_validity = true;\n-}\n-\n BlockAssembler::BlockAssembler(Chainstate& chainstate, const CTxMemPool* mempool, const Options& options)\n-    : test_block_validity{options.test_block_validity},\n-      chainparams{chainstate.m_chainman.GetParams()},\n+    : chainparams{chainstate.m_chainman.GetParams()},\n       m_mempool(mempool),\n-      m_chainstate(chainstate)\n+      m_chainstate(chainstate),\n+      m_options(options)\n {\n-    blockMinFeeRate = options.blockMinFeeRate;\n-    // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n-    nBlockMaxWeight = std::max<size_t>(4000, std::min<size_t>(MAX_BLOCK_WEIGHT - 4000, options.nBlockMaxWeight));\n+    // Limit weight to between 4K and DEFAULT_BLOCK_MAX_WEIGHT for sanity:\n+    m_options.nBlockMaxWeight = std::clamp<size_t>(options.nBlockMaxWeight, 4000, DEFAULT_BLOCK_MAX_WEIGHT);\n }\n \n void ApplyArgsManOptions(const ArgsManager& args, BlockAssembler::Options& options)\n {\n     // Block resource limits\n-    // If -blockmaxweight is not given, limit to DEFAULT_BLOCK_MAX_WEIGHT\n-    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n-    if (args.IsArgSet(\"-blockmintxfee\")) {\n-        std::optional<CAmount> parsed = ParseMoney(args.GetArg(\"-blockmintxfee\", \"\"));\n-        options.blockMinFeeRate = CFeeRate{parsed.value_or(DEFAULT_BLOCK_MIN_TX_FEE)};\n-    } else {\n-        options.blockMinFeeRate = CFeeRate{DEFAULT_BLOCK_MIN_TX_FEE};\n+    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", options.nBlockMaxWeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068247937",
      "id" : 1068247937,
      "line" : 72,
      "node_id" : "PRRC_kwDOABII584_rCuB",
      "original_commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "original_line" : 72,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 37,
      "pull_request_review_id" : 1245781178,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068247937/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T15:14:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068247937",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068287751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068287751"
         }
      },
      "author_association" : "MEMBER",
      "body" : "True that there is a difference. I think this is better as it matches other `ApplyArgsManOptions` around the codebase - convention seems to be to default to the value passed in and not look at default constants. For example\r\nhttps://github.com/bitcoin/bitcoin/blob/7386da7a0b08cd2df8ba88dae1fab9d36424b15c/src/node/mempool_args.cpp#L29-L38\r\nhttps://github.com/bitcoin/bitcoin/blob/7386da7a0b08cd2df8ba88dae1fab9d36424b15c/src/node/validation_cache_args.cpp#L20-L32",
      "commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "created_at" : "2023-01-12T15:44:44Z",
      "diff_hunk" : "@@ -56,34 +56,22 @@ void RegenerateCommitments(CBlock& block, ChainstateManager& chainman)\n     block.hashMerkleRoot = BlockMerkleRoot(block);\n }\n \n-BlockAssembler::Options::Options()\n-{\n-    blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n-    nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    test_block_validity = true;\n-}\n-\n BlockAssembler::BlockAssembler(Chainstate& chainstate, const CTxMemPool* mempool, const Options& options)\n-    : test_block_validity{options.test_block_validity},\n-      chainparams{chainstate.m_chainman.GetParams()},\n+    : chainparams{chainstate.m_chainman.GetParams()},\n       m_mempool(mempool),\n-      m_chainstate(chainstate)\n+      m_chainstate(chainstate),\n+      m_options(options)\n {\n-    blockMinFeeRate = options.blockMinFeeRate;\n-    // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n-    nBlockMaxWeight = std::max<size_t>(4000, std::min<size_t>(MAX_BLOCK_WEIGHT - 4000, options.nBlockMaxWeight));\n+    // Limit weight to between 4K and DEFAULT_BLOCK_MAX_WEIGHT for sanity:\n+    m_options.nBlockMaxWeight = std::clamp<size_t>(options.nBlockMaxWeight, 4000, DEFAULT_BLOCK_MAX_WEIGHT);\n }\n \n void ApplyArgsManOptions(const ArgsManager& args, BlockAssembler::Options& options)\n {\n     // Block resource limits\n-    // If -blockmaxweight is not given, limit to DEFAULT_BLOCK_MAX_WEIGHT\n-    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n-    if (args.IsArgSet(\"-blockmintxfee\")) {\n-        std::optional<CAmount> parsed = ParseMoney(args.GetArg(\"-blockmintxfee\", \"\"));\n-        options.blockMinFeeRate = CFeeRate{parsed.value_or(DEFAULT_BLOCK_MIN_TX_FEE)};\n-    } else {\n-        options.blockMinFeeRate = CFeeRate{DEFAULT_BLOCK_MIN_TX_FEE};\n+    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", options.nBlockMaxWeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068287751",
      "id" : 1068287751,
      "in_reply_to_id" : 1068247937,
      "line" : 72,
      "node_id" : "PRRC_kwDOABII584_rMcH",
      "original_commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "original_line" : 72,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 37,
      "pull_request_review_id" : 1245866863,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068287751/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T15:44:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068287751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068332224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068332224"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That's a good observation, I hadn't considered that, thanks @ajtowns. I agree with @glozow that I'd prefer this behaviour (I intentionally brought it in line with existing `ApplyArgsManOptions()` functions and `Options` objects). In practice, there is no actual behaviour change in the current code as we never use `node::ApplyArgsManOptions()` in the way you describe here. However, I'm not quite sure if it would be inappropriate to label this commit and PR with `refactor: ` - what do you think?\r\n",
      "commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "created_at" : "2023-01-12T16:22:22Z",
      "diff_hunk" : "@@ -56,34 +56,22 @@ void RegenerateCommitments(CBlock& block, ChainstateManager& chainman)\n     block.hashMerkleRoot = BlockMerkleRoot(block);\n }\n \n-BlockAssembler::Options::Options()\n-{\n-    blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n-    nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    test_block_validity = true;\n-}\n-\n BlockAssembler::BlockAssembler(Chainstate& chainstate, const CTxMemPool* mempool, const Options& options)\n-    : test_block_validity{options.test_block_validity},\n-      chainparams{chainstate.m_chainman.GetParams()},\n+    : chainparams{chainstate.m_chainman.GetParams()},\n       m_mempool(mempool),\n-      m_chainstate(chainstate)\n+      m_chainstate(chainstate),\n+      m_options(options)\n {\n-    blockMinFeeRate = options.blockMinFeeRate;\n-    // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n-    nBlockMaxWeight = std::max<size_t>(4000, std::min<size_t>(MAX_BLOCK_WEIGHT - 4000, options.nBlockMaxWeight));\n+    // Limit weight to between 4K and DEFAULT_BLOCK_MAX_WEIGHT for sanity:\n+    m_options.nBlockMaxWeight = std::clamp<size_t>(options.nBlockMaxWeight, 4000, DEFAULT_BLOCK_MAX_WEIGHT);\n }\n \n void ApplyArgsManOptions(const ArgsManager& args, BlockAssembler::Options& options)\n {\n     // Block resource limits\n-    // If -blockmaxweight is not given, limit to DEFAULT_BLOCK_MAX_WEIGHT\n-    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n-    if (args.IsArgSet(\"-blockmintxfee\")) {\n-        std::optional<CAmount> parsed = ParseMoney(args.GetArg(\"-blockmintxfee\", \"\"));\n-        options.blockMinFeeRate = CFeeRate{parsed.value_or(DEFAULT_BLOCK_MIN_TX_FEE)};\n-    } else {\n-        options.blockMinFeeRate = CFeeRate{DEFAULT_BLOCK_MIN_TX_FEE};\n+    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", options.nBlockMaxWeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068332224",
      "id" : 1068332224,
      "in_reply_to_id" : 1068247937,
      "line" : 72,
      "node_id" : "PRRC_kwDOABII584_rXTA",
      "original_commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "original_line" : 72,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 37,
      "pull_request_review_id" : 1245939709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068332224/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T16:22:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068332224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068332941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068332941"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Doesn't it make more sense for `ApplyArgsManOptions(args, foo)` to consistently reset `foo` to the same thing you'd get if you'd just created `foo` as a new object? TBH, I think just having an `explicit Options(const ArgsManager& args);` constructor and writing `Options cache_sizes{gArgs}` would probably be a better api...",
      "commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "created_at" : "2023-01-12T16:22:58Z",
      "diff_hunk" : "@@ -56,34 +56,22 @@ void RegenerateCommitments(CBlock& block, ChainstateManager& chainman)\n     block.hashMerkleRoot = BlockMerkleRoot(block);\n }\n \n-BlockAssembler::Options::Options()\n-{\n-    blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n-    nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    test_block_validity = true;\n-}\n-\n BlockAssembler::BlockAssembler(Chainstate& chainstate, const CTxMemPool* mempool, const Options& options)\n-    : test_block_validity{options.test_block_validity},\n-      chainparams{chainstate.m_chainman.GetParams()},\n+    : chainparams{chainstate.m_chainman.GetParams()},\n       m_mempool(mempool),\n-      m_chainstate(chainstate)\n+      m_chainstate(chainstate),\n+      m_options(options)\n {\n-    blockMinFeeRate = options.blockMinFeeRate;\n-    // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n-    nBlockMaxWeight = std::max<size_t>(4000, std::min<size_t>(MAX_BLOCK_WEIGHT - 4000, options.nBlockMaxWeight));\n+    // Limit weight to between 4K and DEFAULT_BLOCK_MAX_WEIGHT for sanity:\n+    m_options.nBlockMaxWeight = std::clamp<size_t>(options.nBlockMaxWeight, 4000, DEFAULT_BLOCK_MAX_WEIGHT);\n }\n \n void ApplyArgsManOptions(const ArgsManager& args, BlockAssembler::Options& options)\n {\n     // Block resource limits\n-    // If -blockmaxweight is not given, limit to DEFAULT_BLOCK_MAX_WEIGHT\n-    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n-    if (args.IsArgSet(\"-blockmintxfee\")) {\n-        std::optional<CAmount> parsed = ParseMoney(args.GetArg(\"-blockmintxfee\", \"\"));\n-        options.blockMinFeeRate = CFeeRate{parsed.value_or(DEFAULT_BLOCK_MIN_TX_FEE)};\n-    } else {\n-        options.blockMinFeeRate = CFeeRate{DEFAULT_BLOCK_MIN_TX_FEE};\n+    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", options.nBlockMaxWeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068332941",
      "id" : 1068332941,
      "in_reply_to_id" : 1068247937,
      "line" : 72,
      "node_id" : "PRRC_kwDOABII584_rXeN",
      "original_commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "original_line" : 72,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 37,
      "pull_request_review_id" : 1245941327,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068332941/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T16:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068332941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068413801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068413801"
         }
      },
      "author_association" : "MEMBER",
      "body" : ">  TBH, I think just having an explicit Options(const ArgsManager& args); constructor and writing Options cache_sizes{gArgs} would probably be a better api...\r\n\r\nI'm mostly going with the idea from this commit message (https://github.com/bitcoin/bitcoin/commit/f1941e8bfd2eecc478c7660434b1ebf6a64095a0):\r\n\r\n> With this patch, most CTxMemPool construction are along the lines of:\r\n>\r\n>    MemPoolOptions mempool_opts{...default overrides...};\r\n>    ApplyArgsManOptions(argsman, mempool_opts);\r\n>    ...hard overrides...\r\n>    CTxMemPool pool{mempool_opts};\r\n>\r\n> This \"compositional\" style of building options means that we can omit\r\n> unnecessary/irrelevant steps wherever we want but also maintain full\r\n> customizability.\r\n>\r\n> For example:\r\n>\r\n> - For users of libbitcoinkernel, where we eventually want to remove\r\n>  ArgsManager, they simply won't call (or even know about)\r\n>  ApplyArgsManOptions.\r\n\r\nAs in, {mempool, block assembler, cache, etc.} `::Options` struct living in kernel/ shouldn't know about the `ArgsManager` which lives in node/. Otherwise I agree a ctor using argsman makes sense.",
      "commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "created_at" : "2023-01-12T17:36:18Z",
      "diff_hunk" : "@@ -56,34 +56,22 @@ void RegenerateCommitments(CBlock& block, ChainstateManager& chainman)\n     block.hashMerkleRoot = BlockMerkleRoot(block);\n }\n \n-BlockAssembler::Options::Options()\n-{\n-    blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n-    nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    test_block_validity = true;\n-}\n-\n BlockAssembler::BlockAssembler(Chainstate& chainstate, const CTxMemPool* mempool, const Options& options)\n-    : test_block_validity{options.test_block_validity},\n-      chainparams{chainstate.m_chainman.GetParams()},\n+    : chainparams{chainstate.m_chainman.GetParams()},\n       m_mempool(mempool),\n-      m_chainstate(chainstate)\n+      m_chainstate(chainstate),\n+      m_options(options)\n {\n-    blockMinFeeRate = options.blockMinFeeRate;\n-    // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n-    nBlockMaxWeight = std::max<size_t>(4000, std::min<size_t>(MAX_BLOCK_WEIGHT - 4000, options.nBlockMaxWeight));\n+    // Limit weight to between 4K and DEFAULT_BLOCK_MAX_WEIGHT for sanity:\n+    m_options.nBlockMaxWeight = std::clamp<size_t>(options.nBlockMaxWeight, 4000, DEFAULT_BLOCK_MAX_WEIGHT);\n }\n \n void ApplyArgsManOptions(const ArgsManager& args, BlockAssembler::Options& options)\n {\n     // Block resource limits\n-    // If -blockmaxweight is not given, limit to DEFAULT_BLOCK_MAX_WEIGHT\n-    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n-    if (args.IsArgSet(\"-blockmintxfee\")) {\n-        std::optional<CAmount> parsed = ParseMoney(args.GetArg(\"-blockmintxfee\", \"\"));\n-        options.blockMinFeeRate = CFeeRate{parsed.value_or(DEFAULT_BLOCK_MIN_TX_FEE)};\n-    } else {\n-        options.blockMinFeeRate = CFeeRate{DEFAULT_BLOCK_MIN_TX_FEE};\n+    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", options.nBlockMaxWeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1068413801",
      "id" : 1068413801,
      "in_reply_to_id" : 1068247937,
      "line" : 72,
      "node_id" : "PRRC_kwDOABII584_rrNp",
      "original_commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "original_line" : 72,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 37,
      "pull_request_review_id" : 1246123571,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068413801/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-12T17:36:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1068413801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1071520830"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1071520830"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks - I've adopted your suggestion, although I simplified it a bit by passing `Options` by value, I think that's equivalent to what you suggested?",
      "commit_id" : "6a5e88e5cf06a6b410486cc36aba7afece0d9da9",
      "created_at" : "2023-01-16T19:03:16Z",
      "diff_hunk" : "@@ -172,6 +167,8 @@ class BlockAssembler\n     inline static std::optional<int64_t> m_last_block_weight{};\n \n private:\n+    Options m_options;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1071520830",
      "id" : 1071520830,
      "in_reply_to_id" : 1068236546,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584_3hw-",
      "original_commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "original_line" : 170,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/node/miner.h",
      "position" : null,
      "pull_request_review_id" : 1250580740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1071520830/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-16T19:03:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1071520830",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1071525455"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1071525455"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "As @glozow commented, my understanding is that we're moving in the direction of separating `kernel/` and `node/` and the proposed (admittedly more elegant) constructor would go against that.\r\n\r\nSince I think the new behaviour of `ApplyArgsManOptions()` is preferable but I appreciate your concern about this not being a pure refactor commit, I've carved out this interface change into a separate non-refactor commit to make that more clear. I've also updated the PR description to reflect this.\r\n\r\n@ajtowns happy to reopen this if it doesn't properly address your concerns?",
      "commit_id" : "6a5e88e5cf06a6b410486cc36aba7afece0d9da9",
      "created_at" : "2023-01-16T19:11:53Z",
      "diff_hunk" : "@@ -56,34 +56,22 @@ void RegenerateCommitments(CBlock& block, ChainstateManager& chainman)\n     block.hashMerkleRoot = BlockMerkleRoot(block);\n }\n \n-BlockAssembler::Options::Options()\n-{\n-    blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n-    nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    test_block_validity = true;\n-}\n-\n BlockAssembler::BlockAssembler(Chainstate& chainstate, const CTxMemPool* mempool, const Options& options)\n-    : test_block_validity{options.test_block_validity},\n-      chainparams{chainstate.m_chainman.GetParams()},\n+    : chainparams{chainstate.m_chainman.GetParams()},\n       m_mempool(mempool),\n-      m_chainstate(chainstate)\n+      m_chainstate(chainstate),\n+      m_options(options)\n {\n-    blockMinFeeRate = options.blockMinFeeRate;\n-    // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n-    nBlockMaxWeight = std::max<size_t>(4000, std::min<size_t>(MAX_BLOCK_WEIGHT - 4000, options.nBlockMaxWeight));\n+    // Limit weight to between 4K and DEFAULT_BLOCK_MAX_WEIGHT for sanity:\n+    m_options.nBlockMaxWeight = std::clamp<size_t>(options.nBlockMaxWeight, 4000, DEFAULT_BLOCK_MAX_WEIGHT);\n }\n \n void ApplyArgsManOptions(const ArgsManager& args, BlockAssembler::Options& options)\n {\n     // Block resource limits\n-    // If -blockmaxweight is not given, limit to DEFAULT_BLOCK_MAX_WEIGHT\n-    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n-    if (args.IsArgSet(\"-blockmintxfee\")) {\n-        std::optional<CAmount> parsed = ParseMoney(args.GetArg(\"-blockmintxfee\", \"\"));\n-        options.blockMinFeeRate = CFeeRate{parsed.value_or(DEFAULT_BLOCK_MIN_TX_FEE)};\n-    } else {\n-        options.blockMinFeeRate = CFeeRate{DEFAULT_BLOCK_MIN_TX_FEE};\n+    options.nBlockMaxWeight = args.GetIntArg(\"-blockmaxweight\", options.nBlockMaxWeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1071525455",
      "id" : 1071525455,
      "in_reply_to_id" : 1068247937,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII584_3i5P",
      "original_commit_id" : "c14cf65ecde432c15c1e5334cfa4e5e6bdbeec92",
      "original_line" : 77,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/node/miner.cpp",
      "position" : 41,
      "pull_request_review_id" : 1250588358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1071525455/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-16T19:11:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1071525455",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force pushed to address review comments (thank you @ajtowns):\r\n- made `m_options` `const` by adding a `ClampOptions` helper function\r\n- carved out the `ApplyArgsManOptions()` (potential/unobserved) behaviour change into a separate commit",
      "created_at" : "2023-01-16T19:13:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#issuecomment-1384458400",
      "id" : 1384458400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26883",
      "node_id" : "IC_kwDOABII585ShSig",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384458400/reactions"
      },
      "updated_at" : "2023-01-16T19:13:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1384458400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1111745040"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1111745040"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: IWYU says you can now remove this include from `miner.cpp`",
      "commit_id" : "6a5e88e5cf06a6b410486cc36aba7afece0d9da9",
      "created_at" : "2023-02-20T10:19:14Z",
      "diff_hunk" : "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_NODE_MINER_H\n #define BITCOIN_NODE_MINER_H\n \n+#include <policy/policy.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#discussion_r1111745040",
      "id" : 1111745040,
      "line" : 9,
      "node_id" : "PRRC_kwDOABII585CQ-IQ",
      "original_commit_id" : "6a5e88e5cf06a6b410486cc36aba7afece0d9da9",
      "original_line" : 9,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/node/miner.h",
      "position" : 4,
      "pull_request_review_id" : 1305479641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26883",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1111745040/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-20T10:37:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1111745040",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 6a5e88e5cf",
      "created_at" : "2023-02-20T11:27:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26883#issuecomment-1436796938",
      "id" : 1436796938,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26883",
      "node_id" : "IC_kwDOABII585Vo8gK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1436796938/reactions"
      },
      "updated_at" : "2023-02-20T11:27:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1436796938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]
