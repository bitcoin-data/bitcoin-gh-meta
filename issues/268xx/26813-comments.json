[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the reason for this problem is: `listreceivedbyaddress` iterates through `CWallet::m_address_book` to get the items.\r\n\r\nBut an address is only added to `m_address_book` when it is generated via `getnewaddress`.\r\nSince this command has been run in the hot wallet, the watch-only has no way of knowing that this has been added to the `CWallet::m_address_book`.\r\n\r\nBut you reported it is working in a legacy watch-only wallet. How are you creating it ?",
      "created_at" : "2023-01-05T14:29:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26813#issuecomment-1372290985",
      "id" : 1372290985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26813",
      "node_id" : "IC_kwDOABII585Ry3-p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372290985/reactions"
      },
      "updated_at" : "2023-01-05T14:34:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372290985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94266259?v=4",
         "events_url" : "https://api.github.com/users/w0xlt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/w0xlt/followers",
         "following_url" : "https://api.github.com/users/w0xlt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/w0xlt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/w0xlt",
         "id" : 94266259,
         "login" : "w0xlt",
         "node_id" : "U_kgDOBZ5jkw",
         "organizations_url" : "https://api.github.com/users/w0xlt/orgs",
         "received_events_url" : "https://api.github.com/users/w0xlt/received_events",
         "repos_url" : "https://api.github.com/users/w0xlt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/w0xlt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/w0xlt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/w0xlt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "When loading the wallets, you can see what I described above.\r\n\r\n```bash\r\n2023-01-05T14:20:56Z [w1] Wallet completed loading in             528ms\r\n2023-01-05T14:20:56Z [w1] setKeyPool.size() = 8000\r\n2023-01-05T14:20:56Z [w1] mapWallet.size() = 1\r\n2023-01-05T14:20:56Z [w1] m_address_book.size() = 1\r\n...\r\n2023-01-05T14:20:58Z [w2] Wallet completed loading in              84ms\r\n2023-01-05T14:20:58Z [w2] setKeyPool.size() = 0\r\n2023-01-05T14:20:58Z [w2] mapWallet.size() = 1\r\n2023-01-05T14:20:58Z [w2] m_address_book.size() = 0\r\n```\r\n\r\nNote the difference between `m_address_book.size()` in `[w1]` and `[w2]`.",
      "created_at" : "2023-01-05T14:32:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26813#issuecomment-1372294553",
      "id" : 1372294553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26813",
      "node_id" : "IC_kwDOABII585Ry42Z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372294553/reactions"
      },
      "updated_at" : "2023-01-05T14:33:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372294553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94266259?v=4",
         "events_url" : "https://api.github.com/users/w0xlt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/w0xlt/followers",
         "following_url" : "https://api.github.com/users/w0xlt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/w0xlt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/w0xlt",
         "id" : 94266259,
         "login" : "w0xlt",
         "node_id" : "U_kgDOBZ5jkw",
         "organizations_url" : "https://api.github.com/users/w0xlt/orgs",
         "received_events_url" : "https://api.github.com/users/w0xlt/received_events",
         "repos_url" : "https://api.github.com/users/w0xlt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/w0xlt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/w0xlt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/w0xlt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "hmm yeah, it's a deeper problem. This make me remember to #25979, where I started heading towards a general solution for the change detection but.. it's still not ready (atm detects change from active descriptors only; IIRC, I should be able to expand it to non-active ones based on their derivation paths pretty easily, which will solve this issue. But still need to re-review the detection when a descriptor get removed -- which is basically achow101's comment there --).\r\n\r\nwill start reviving it, and probably decouple most of the base functionality tests into another PR, so 25979 is mostly focused on the new change detection functionality.",
      "created_at" : "2023-01-05T15:10:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26813#issuecomment-1372340673",
      "id" : 1372340673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26813",
      "node_id" : "IC_kwDOABII585RzEHB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372340673/reactions"
      },
      "updated_at" : "2023-01-05T15:12:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372340673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What's happening here is that with descriptor wallets, we do not add any address book entries for descriptors imported without a label. Ranged descriptors cannot have any labels applied because labels are per-address, and a ranged descriptor can produce (basically) infinite addresses. So any addresses for ranged descriptors do not get any address book entries, and so we would detect any coins sent to such addresses to be change.\r\n\r\nHowever, if the descriptor is an active descriptor, when we add a transaction to the wallet, we will additionally lookup whether the active descriptor is also an internal descriptor. If it is not, we will create an address book entry so that anything that needs to know whether the address is change can use the address book lookup mechanism to figure this out. This is how the active=true workaround works.\r\n\r\nThis is not an issue for legacy wallets because legacy wallets do not truly support ranged descriptors. It will expand the ranged descriptor and get all of the scriptPubKeys it produces, then import each one individually. When it does this, it can apply a label and add an address book entry for every single thing imported. Thus it avoids this problem.\r\n\r\n***\r\n\r\nI think the only real solution to this problem is to change how we detect change. Ideally we would have some system that can infer it intelligently, and also have change be explicitly marked rather, so the default is to assume everything is receiving, rather than everything is change.",
      "created_at" : "2023-01-05T16:40:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26813#issuecomment-1372456440",
      "id" : 1372456440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26813",
      "node_id" : "IC_kwDOABII585RzgX4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372456440/reactions"
      },
      "updated_at" : "2023-01-05T16:41:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372456440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> you reported it is working in a legacy watch-only wallet. How are you creating it ?\r\n\r\nI would have imported specific public items using one of importaddress, importmulti or importpubkey, rather than ranged descriptors (xpub/*). I would import the address or public key but not the private key. And listreceivedbyaddress would then always show what I expected. It was only when I switched to descriptor wallets and importdescriptor that I found that listreceivedbyaddress would produce an empty result.\r\n\r\nThinking back, it's likely that my legacy wallet experiments (and importing specific items) were only with an older bitcoind, e.g. whatever is currently in the docker hub image named: \"bitcoindevelopernetwork/bitcoind-regtest\"[0]. Otherwise, it would have created a descriptor wallet by default.\r\n\r\nMy guess is that the listreceivedbyaddress anomaly isn't to do with one version of bitcoind versus another, or even legacy wallets versus descriptor wallets, but in fact between importing specific public items and importing ranged public items.\r\n\r\nWith a ranged public descriptor, the wallet notices incoming payments, updates its balance, has listsinceblock answer what I'd expect, etc. So I'd never have predicted that a correct answer from listreceivedbyaddress would be the empty list. That led to my enquiry in IRC, which led to creating this GitHub issue. Updating listreceivedbyaddress's help text to say \"does not yet work with ranged public descriptors\" is also a great outcome if sorting out the underlying semantics is too hard or will only happen indefinitely far in the future.\r\n\r\n[0]:\r\ndocker image ID: 0a110218f3cb\r\nBitcoin Core Daemon version v0.17.1.0-gef70f9b52b851c7997a9f1a0834714e3eebc1fd8",
      "created_at" : "2023-01-05T21:01:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26813#issuecomment-1372747549",
      "id" : 1372747549,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26813",
      "node_id" : "IC_kwDOABII585R0ncd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372747549/reactions"
      },
      "updated_at" : "2023-01-05T21:08:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1372747549",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1073437?v=4",
         "events_url" : "https://api.github.com/users/vibs29/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vibs29/followers",
         "following_url" : "https://api.github.com/users/vibs29/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vibs29/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vibs29",
         "id" : 1073437,
         "login" : "vibs29",
         "node_id" : "MDQ6VXNlcjEwNzM0Mzc=",
         "organizations_url" : "https://api.github.com/users/vibs29/orgs",
         "received_events_url" : "https://api.github.com/users/vibs29/received_events",
         "repos_url" : "https://api.github.com/users/vibs29/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vibs29/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vibs29/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vibs29"
      }
   }
]
